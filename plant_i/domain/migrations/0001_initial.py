# Generated by Django 5.0.4 on 2025-01-14 16:47

import django.db.models.deletion
import domain.models.system
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='코드번호')),
                ('CodeGroupCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='코드그룹코드')),
                ('Code', models.CharField(max_length=50, verbose_name='코드')),
                ('Name', models.CharField(max_length=100, verbose_name='코드명')),
                ('Attr1', models.CharField(blank=True, max_length=100, null=True, verbose_name='속성1')),
                ('Attr2', models.CharField(blank=True, max_length=100, null=True, verbose_name='속성2')),
                ('Attr3', models.CharField(blank=True, max_length=100, null=True, verbose_name='속성3')),
                ('Remark', models.CharField(blank=True, max_length=500, null=True, verbose_name='비고')),
                ('DispOrder', models.IntegerField(blank=True, null=True, verbose_name='표시순서')),
                ('UseYn', models.CharField(default='Y', max_length=1, verbose_name='사용여부')),
                ('DelYn', models.CharField(blank=True, default='N', max_length=1, null=True, verbose_name='삭제여부')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modified')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '코드',
                'db_table': 'code',
            },
        ),
        migrations.CreateModel(
            name='CodeGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='코드그룹번호')),
                ('Code', models.CharField(max_length=50, verbose_name='코드그룹코드')),
                ('Name', models.CharField(blank=True, max_length=100, null=True, verbose_name='코드그룹명')),
                ('SystemYn', models.CharField(max_length=1, verbose_name='시스템여부')),
                ('Remark', models.CharField(blank=True, max_length=500, null=True, verbose_name='비고')),
                ('UseYn', models.CharField(default='Y', max_length=1, verbose_name='사용여부')),
                ('DelYn', models.CharField(blank=True, default='N', max_length=1, null=True, verbose_name='삭제여부')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modified')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '코드그룹',
                'db_table': 'code_group',
            },
        ),
        migrations.CreateModel(
            name='DBAdministration',
            fields=[
                ('admin_pk', models.AutoField(db_column='admin_pk', primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=200)),
                ('revision', models.CharField(max_length=200, null=True)),
                ('templateId', models.CharField(max_length=2000, null=True)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'db_table': 'administration',
            },
        ),
        migrations.CreateModel(
            name='DBAssetInformation',
            fields=[
                ('asset_pk', models.AutoField(db_column='asset_pk', primary_key=True, serialize=False)),
                ('asset_kind', models.SmallIntegerField(null=True)),
                ('asset_type', models.SmallIntegerField(null=True)),
                ('globalAssetId', models.CharField(max_length=2000, null=True)),
                ('path', models.CharField(max_length=2000, null=True)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'db_table': 'asset_info',
            },
        ),
        migrations.CreateModel(
            name='DBSubmodelElement',
            fields=[
                ('sme_pk', models.AutoField(db_column='sme_pk', primary_key=True, serialize=False)),
                ('id_short', models.CharField(max_length=200, null=True, unique=True)),
                ('category', models.CharField(max_length=50, null=True)),
                ('ModelKind', models.SmallIntegerField(null=True)),
                ('model_type', models.CharField(max_length=50)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'db_table': 'submodel_element',
            },
        ),
        migrations.CreateModel(
            name='DBDataSpecificationContent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=50)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'db_table': 'dataspec_content',
            },
        ),
        migrations.CreateModel(
            name='DBExtension',
            fields=[
                ('extension_pk', models.AutoField(db_column='ext_pk', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('SourceTableName', models.CharField(max_length=50, verbose_name='원인데이터테이블')),
                ('SourceDataPk', models.IntegerField(null=True, verbose_name='원인데이터PK')),
                ('valueType', models.CharField(max_length=50, null=True)),
                ('value', models.CharField(max_length=2000, null=True)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'db_table': 'extension',
            },
        ),
        migrations.CreateModel(
            name='DBReference',
            fields=[
                ('reference_pk', models.AutoField(db_column='ref_pk', primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('referredSemanticId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='reference_referredSemanticId', to='domain.dbreference')),
            ],
            options={
                'db_table': 'reference',
            },
        ),
        migrations.CreateModel(
            name='DBResource',
            fields=[
                ('resource_pk', models.AutoField(db_column='res_pk', primary_key=True, serialize=False)),
                ('content_type', models.CharField(max_length=50)),
                ('StringType', models.CharField(max_length=50)),
                ('path', models.CharField(max_length=2000)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'db_table': 'resource',
            },
        ),
        migrations.CreateModel(
            name='DBSubmodel',
            fields=[
                ('submodel_pk', models.AutoField(db_column='sm_pk', primary_key=True, serialize=False)),
                ('id', models.CharField(max_length=2000, unique=True)),
                ('id_short', models.CharField(max_length=200, null=True, unique=True)),
                ('kind', models.SmallIntegerField(null=True)),
                ('category', models.CharField(max_length=100, null=True)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'db_table': 'submodel',
            },
        ),
        migrations.CreateModel(
            name='DBSubModelElementCollection',
            fields=[
                ('sme_pk', models.IntegerField(db_column='sme_pk', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'submodel_element_collection',
            },
        ),
        migrations.CreateModel(
            name='Depart',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='부서번호')),
                ('Code', models.CharField(max_length=50, verbose_name='부서코드')),
                ('Name', models.CharField(max_length=100, verbose_name='부서명')),
                ('UpDept_id', models.IntegerField(blank=True, null=True, verbose_name='상위부서번호')),
                ('UpDeptCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='상위부서코드')),
                ('ReqDivCode', models.CharField(blank=True, max_length=20, null=True, verbose_name='의뢰구분코드')),
                ('LabYN', models.CharField(blank=True, default='N', max_length=1, null=True, verbose_name='실험실여부')),
                ('MfgYN', models.CharField(blank=True, default='N', max_length=1, null=True, verbose_name='제조부서여부')),
                ('RoleNo', models.IntegerField(blank=True, null=True, verbose_name='권한번호')),
                ('UseYN', models.CharField(default='Y', max_length=1, verbose_name='사용여부')),
                ('DelYN', models.CharField(default='N', max_length=1, verbose_name='삭제여부')),
                ('ApplyYN', models.CharField(blank=True, default='N', max_length=1, null=True, verbose_name='적용여부')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '부서',
                'db_table': 'dept',
            },
        ),
        migrations.CreateModel(
            name='DocumentFolder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=100)),
                ('Code', models.CharField(blank=True, max_length=50, null=True)),
                ('UpDocFold_id', models.IntegerField(blank=True, null=True)),
                ('DispOrder', models.IntegerField(blank=True, null=True)),
                ('UseYn', models.CharField(default='Y', max_length=1)),
                ('DelYn', models.CharField(default='N', max_length=1)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modified')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '문서폴더',
                'db_table': 'doc_fold',
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=50, verbose_name='공장코드')),
                ('Name', models.CharField(max_length=100, null=True, verbose_name='공장명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '공장',
                'db_table': 'factory',
            },
        ),
        migrations.CreateModel(
            name='IFMesEquipment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('equ_cd', models.CharField(max_length=20, verbose_name='설비코드')),
                ('equ_nm', models.CharField(max_length=200, verbose_name='설비명')),
                ('line_cd', models.CharField(max_length=20, verbose_name='라인코드')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'MES 설비정보 인터페이스',
                'db_table': 'if_mes_equ',
            },
        ),
        migrations.CreateModel(
            name='IFMesEquipmentTestResult',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sn', models.CharField(max_length=100, verbose_name='시리얼번호')),
                ('c_sn', models.CharField(max_length=100, verbose_name='변경시리얼번호')),
                ('test_item_cd', models.CharField(max_length=20, verbose_name='검사항목코드')),
                ('test_item_val', models.CharField(max_length=20, verbose_name='항목값')),
                ('min_val', models.CharField(max_length=20, verbose_name='관리기준하한')),
                ('max_val', models.CharField(max_length=20, verbose_name='관리기준상한')),
                ('unit', models.CharField(max_length=5, verbose_name='단위')),
                ('status', models.CharField(max_length=5, verbose_name='상태')),
                ('pcb_cn', models.CharField(max_length=20, verbose_name='PCB 번호')),
                ('equ_cd', models.CharField(max_length=20, verbose_name='설비코드')),
                ('mat_cd', models.CharField(max_length=20, verbose_name='품목코드')),
                ('mes_dt', models.DateField(verbose_name='MES일시')),
                ('proc_cd', models.CharField(max_length=20, verbose_name='실적공정코드')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'MES 설비측정데이터 인터페이스',
                'db_table': 'if_equ_test_result',
            },
        ),
        migrations.CreateModel(
            name='IFMesLine',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('line_cd', models.CharField(max_length=20, verbose_name='라인코드')),
                ('line_nm', models.CharField(max_length=200, verbose_name='라인명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'MES 라인정보 인터페이스',
                'db_table': 'if_mes_line',
            },
        ),
        migrations.CreateModel(
            name='IFMesProcess',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('proc_cd', models.CharField(max_length=20, verbose_name='공정코드')),
                ('proc_nm', models.CharField(max_length=200, verbose_name='공정명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'MES 공정정보 인터페이스',
                'db_table': 'if_mes_proc',
            },
        ),
        migrations.CreateModel(
            name='IFMesProductionPlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_date', models.DateField(verbose_name='계획일')),
                ('line_cd', models.CharField(max_length=20, verbose_name='라인코드')),
                ('order', models.IntegerField(verbose_name='순서')),
                ('mat_cd', models.CharField(max_length=20, verbose_name='품목코드')),
                ('plan_qty', models.DecimalField(decimal_places=3, max_digits=13, verbose_name='계획수량')),
                ('description', models.CharField(max_length=2000, verbose_name='비고')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'MES 생산계획 인터페이스',
                'db_table': 'if_mes_prod_plan',
            },
        ),
        migrations.CreateModel(
            name='IFMesProductionResult',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sn', models.CharField(max_length=100, verbose_name='시리얼번호')),
                ('c_sn', models.CharField(max_length=100, verbose_name='변경시리얼번호')),
                ('mat_cd', models.CharField(max_length=20, verbose_name='품목코드')),
                ('equ_cd', models.CharField(max_length=20, verbose_name='설비코드')),
                ('line_cd', models.CharField(max_length=20, verbose_name='라인코드')),
                ('proc_cd', models.CharField(max_length=20, verbose_name='실적공정코드')),
                ('wo_num', models.CharField(max_length=30, verbose_name='작업지시번호')),
                ('bom_ver', models.CharField(max_length=5, verbose_name='BOM버전')),
                ('status', models.CharField(max_length=1, verbose_name='상태')),
                ('mes_dt', models.DateField(verbose_name='MES일시')),
                ('array_num', models.CharField(max_length=20, verbose_name='배열번호')),
                ('pcb_cn', models.CharField(max_length=20, verbose_name='PCB 번호')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'MES 생산이력 인터페이스',
                'db_table': 'if_mes_prod_result',
            },
        ),
        migrations.CreateModel(
            name='IFQmsDefect',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qis_pk', models.IntegerField(verbose_name='QIS부적합테이블 PK')),
                ('a_date', models.DateField(verbose_name='분석일자')),
                ('o_date', models.DateField(verbose_name='발생일자')),
                ('w_shift', models.CharField(max_length=10, verbose_name='근무조')),
                ('step_class', models.CharField(max_length=20, verbose_name='단계')),
                ('line_cd', models.CharField(max_length=20, verbose_name='라인코드')),
                ('mat_cd', models.CharField(max_length=50, verbose_name='품목코드')),
                ('serial_no', models.CharField(max_length=50, verbose_name='시리얼번호')),
                ('hlk_part_no', models.CharField(max_length=50, verbose_name='파트번호')),
                ('de_proc_cd', models.CharField(max_length=20, verbose_name='검출공정')),
                ('oc_prod_cd', models.CharField(max_length=20, verbose_name='발생공정')),
                ('imput_cate', models.CharField(max_length=50, verbose_name='귀책구분')),
                ('defect_qty', models.DecimalField(decimal_places=3, max_digits=13, verbose_name='불량수량')),
                ('defect_type1', models.CharField(max_length=50, verbose_name='불량유형1')),
                ('defect_type2', models.CharField(max_length=50, verbose_name='불량유형2')),
                ('worker_name', models.CharField(max_length=50, verbose_name='생산라인작업자')),
                ('remark', models.CharField(max_length=2000, verbose_name='REMARK(내용)')),
                ('init_result', models.CharField(max_length=2000, verbose_name='초기분석결과')),
                ('complete_date', models.DateField(verbose_name='최종결론')),
                ('final_result', models.CharField(max_length=2000, verbose_name='최종결론내용')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'MES 설비측정데이터 인터페이스',
                'db_table': 'if_qms_defect',
            },
        ),
        migrations.CreateModel(
            name='IFSapBOM',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stab_werks', models.CharField(max_length=4, verbose_name='플랜트')),
                ('stab_matnr', models.CharField(max_length=18, verbose_name='상위자재')),
                ('stab_bmeng', models.DecimalField(decimal_places=3, max_digits=13, verbose_name='기준수량')),
                ('stab_idnrk', models.CharField(max_length=18, verbose_name='구성부품')),
                ('stab_mnglg', models.DecimalField(decimal_places=3, max_digits=13, verbose_name='구성부품수량')),
                ('stab_meins', models.CharField(max_length=4, verbose_name='단위')),
                ('stab_stufe', models.CharField(max_length=5, verbose_name='BOM레벨')),
                ('stab_datuv', models.CharField(max_length=8, verbose_name='효력시작일')),
                ('stab_datab', models.CharField(max_length=8, verbose_name='효력종료일')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'sap bom 인터페이스',
                'db_table': 'if_sap_bom',
            },
        ),
        migrations.CreateModel(
            name='IFSapMaterial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stab_werks', models.CharField(max_length=4, null=True, verbose_name='플랜트')),
                ('stab_matnr', models.CharField(max_length=18, null=True, verbose_name='자재')),
                ('stab_maktx', models.CharField(max_length=40, null=True, verbose_name='품명')),
                ('stab_groes', models.CharField(max_length=32, null=True, verbose_name='규격')),
                ('stab_matkl', models.CharField(max_length=9, null=True, verbose_name='자재그룹')),
                ('stab_mtart', models.CharField(max_length=15, null=True, verbose_name='자재유형')),
                ('stab_meins', models.CharField(max_length=4, null=True, verbose_name='기본단위')),
                ('stab_atype', models.CharField(max_length=15, null=True, verbose_name='품목유형')),
                ('cycle_time', models.CharField(max_length=10, null=True, verbose_name='c/t')),
                ('in_price', models.CharField(max_length=20, null=True, verbose_name='입고금액')),
                ('out_price', models.CharField(max_length=20, null=True, verbose_name='출고고금액')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'sap 품목정보 인터페이스',
                'db_table': 'if_sap_mat',
            },
        ),
        migrations.CreateModel(
            name='IFSapMaterialStock',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stab_werks', models.CharField(max_length=4, verbose_name='플랜트')),
                ('stab_matnr', models.CharField(max_length=18, verbose_name='자재')),
                ('stab_maktx', models.CharField(max_length=40, verbose_name='품명')),
                ('stab_lgort', models.CharField(max_length=4, verbose_name='저장위치')),
                ('stab_labst', models.DecimalField(decimal_places=3, max_digits=13, verbose_name='가용재고')),
                ('stab_insme', models.DecimalField(decimal_places=3, max_digits=13, verbose_name='품질재고')),
                ('stab_speme', models.DecimalField(decimal_places=3, max_digits=13, verbose_name='보류재고')),
                ('stab_meins', models.CharField(max_length=4, verbose_name='단위')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'sap 품목별 현재고 인터페이스',
                'db_table': 'if_sap_mat_stock',
            },
        ),
        migrations.CreateModel(
            name='IFVanLotHostory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('van_pk', models.CharField(max_length=20, verbose_name='VAN 입고식별번호')),
                ('po_number', models.CharField(max_length=20, verbose_name='구매오더')),
                ('sap_recv_num', models.CharField(max_length=20, verbose_name='SAP자재전표(입고번호)')),
                ('test_type', models.CharField(max_length=20, verbose_name='검사유무')),
                ('judg_result', models.CharField(max_length=20, verbose_name='판정결과')),
                ('mat_cd', models.CharField(max_length=20, verbose_name='품목코드')),
                ('mat_detail', models.CharField(max_length=200, verbose_name='품목내역')),
                ('sap_loc_cd', models.CharField(max_length=20, verbose_name='저장위치')),
                ('supp_cd', models.CharField(max_length=20, verbose_name='공급업체코드')),
                ('supp_nm', models.CharField(max_length=200, verbose_name='공급업체명')),
                ('unit', models.CharField(max_length=20, verbose_name='단위')),
                ('input_qty', models.DecimalField(decimal_places=3, max_digits=13, verbose_name='입고수량')),
                ('lot_no', models.CharField(max_length=20, verbose_name='LOT No')),
                ('recv_date', models.DateField(verbose_name='입고일자')),
                ('recv_time', models.TimeField(verbose_name='입고시간')),
                ('ju_date', models.DateField(verbose_name='검사판정일자')),
                ('ju_time', models.TimeField(verbose_name='검사판정시간')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'VAN 입고별 LOT발행이력',
                'db_table': 'if_van_lot_history',
            },
        ),
        migrations.CreateModel(
            name='IFVanReceivingInspectionResult',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('van_pk', models.CharField(max_length=20, verbose_name='van 검사고유식별번호')),
                ('status', models.CharField(max_length=20, verbose_name='데이터 상태')),
                ('is_pass', models.CharField(max_length=20, verbose_name='합격')),
                ('is_defect', models.CharField(max_length=20, verbose_name='불량')),
                ('is_4m', models.CharField(max_length=20, verbose_name='4M')),
                ('is_dev', models.CharField(max_length=20, verbose_name='DEV')),
                ('prod_grp', models.CharField(max_length=20, verbose_name='제품그룹')),
                ('mat_cd', models.CharField(max_length=20, verbose_name='품목코드')),
                ('mat_detail', models.CharField(max_length=200, verbose_name='품목내역')),
                ('factory', models.CharField(max_length=20, verbose_name='공장')),
                ('lot_no', models.CharField(max_length=20, verbose_name='LOT no')),
                ('lot_size', models.CharField(max_length=20, verbose_name='LOT size')),
                ('incom_test_cd', models.CharField(max_length=20, verbose_name='수입검사코드')),
                ('test_qty', models.DecimalField(decimal_places=3, max_digits=13, verbose_name='검사수량')),
                ('input_qty', models.DecimalField(decimal_places=3, max_digits=13, verbose_name='입고수량')),
                ('input_status', models.CharField(max_length=20, verbose_name='입고여부')),
                ('stage', models.CharField(max_length=20, verbose_name='주기단계')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'VAN PCB 수입검사결과 인터페이스',
                'db_table': 'if_recv_inst_result',
            },
        ),
        migrations.CreateModel(
            name='LanguageItem',
            fields=[
                ('lang_item_pk', models.AutoField(db_column='lang_item_pk', primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=50)),
                ('StringType', models.CharField(max_length=50)),
                ('SourceTableName', models.CharField(max_length=50, null=True, verbose_name='원인데이터테이블')),
                ('SourceDataPk', models.IntegerField(null=True, verbose_name='원인데이터PK')),
                ('name', models.CharField(max_length=200)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'db_table': 'lang_item',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=75)),
                ('Code', models.CharField(blank=True, max_length=10, null=True)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '사이트',
                'db_table': 'site',
            },
        ),
        migrations.CreateModel(
            name='StoryboardItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('MenuCode', models.CharField(max_length=50, verbose_name='메뉴코드')),
                ('Duration', models.SmallIntegerField(verbose_name='전환시간(초)')),
                ('BoardType', models.CharField(default='menu', max_length=30, verbose_name='타입')),
                ('ParameterData', models.CharField(max_length=100, null=True, verbose_name='파라미터데이터')),
                ('Url', models.CharField(max_length=200, null=True, verbose_name='URL')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '스토리보드항목',
                'db_table': 'storyboard_item',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=90)),
                ('Code', models.CharField(blank=True, max_length=30, null=True)),
                ('Remark', models.CharField(blank=True, max_length=300, null=True)),
                ('DispOrder', models.IntegerField(blank=True, null=True)),
                ('UseYn', models.CharField(default='Y', max_length=1)),
                ('DelYn', models.CharField(default='N', max_length=1)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '단위',
                'db_table': 'unit',
            },
        ),
        migrations.CreateModel(
            name='ActionData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('DataPk', models.IntegerField(verbose_name='데이터pk')),
                ('TableName', models.CharField(max_length=50, verbose_name='테이블명')),
                ('Code', models.CharField(max_length=50, verbose_name='액션코드')),
                ('Type', models.CharField(max_length=50, null=True, verbose_name='액션유형')),
                ('ActorPk', models.IntegerField(null=True, verbose_name='행위자')),
                ('ActionDateTime', models.DateTimeField(auto_now_add=True, verbose_name='행위일시')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='비고')),
                ('ActorTableName', models.CharField(max_length=50, null=True, verbose_name='행위자테이블명')),
                ('ActorName', models.CharField(max_length=50, null=True, verbose_name='행위자명')),
                ('Char1', models.CharField(max_length=200, null=True, verbose_name='문자1')),
                ('Char2', models.CharField(max_length=200, null=True, verbose_name='문자2')),
                ('Char3', models.CharField(max_length=200, null=True, verbose_name='문자3')),
                ('StartDate', models.DateField(null=True, verbose_name='시작일')),
                ('EndDate', models.DateField(null=True, verbose_name='마침일')),
                ('DataPk2', models.IntegerField(null=True, verbose_name='데이터2pk')),
                ('TableName2', models.CharField(max_length=50, null=True, verbose_name='테이블2명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '액션데이터',
                'db_table': 'action_data',
                'index_together': {('DataPk', 'TableName', 'ActionDateTime'), ('DataPk2', 'TableName2')},
            },
        ),
        migrations.CreateModel(
            name='ActionMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('TableName', models.CharField(max_length=50, verbose_name='테이블명')),
                ('Code', models.CharField(max_length=50, verbose_name='액션코드')),
                ('Type', models.CharField(max_length=50, null=True, verbose_name='액션유형')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='액션설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '액션정의',
                'db_table': 'action_master',
                'unique_together': {('TableName', 'Code')},
            },
        ),
        migrations.CreateModel(
            name='AttachFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('TableName', models.CharField(max_length=50, verbose_name='테이블명')),
                ('DataPk', models.IntegerField(verbose_name='데이터pk')),
                ('AttachName', models.CharField(max_length=50, verbose_name='첨부명')),
                ('FileIndex', models.IntegerField(verbose_name='파일인덱스')),
                ('FileName', models.CharField(max_length=100, verbose_name='파일명')),
                ('PhysicFileName', models.CharField(max_length=100, verbose_name='물리파일명')),
                ('ExtName', models.CharField(max_length=10, null=True, verbose_name='확장자')),
                ('FilePath', models.CharField(max_length=500, null=True, verbose_name='파일경로')),
                ('FileSize', models.IntegerField(null=True, verbose_name='파일사이즈')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '첨부파일',
                'db_table': 'attach_file',
                'index_together': {('DataPk', 'TableName')},
            },
        ),
        migrations.CreateModel(
            name='AttachMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('TableName', models.CharField(max_length=50, verbose_name='테이블명')),
                ('AttachName', models.CharField(max_length=50, verbose_name='첨부명')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('FilePath', models.CharField(max_length=500, null=True, verbose_name='파일경로')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '첨부파일정의',
                'db_table': 'attach_master',
                'index_together': {('TableName',)},
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('BoardGroup', models.CharField(max_length=50, verbose_name='게시판명')),
                ('WriteDateTime', models.DateTimeField(null=True, verbose_name='작성일')),
                ('Title', models.CharField(max_length=100, verbose_name='제목')),
                ('Content', models.TextField(null=True, verbose_name='내용')),
                ('NoticeYN', models.CharField(max_length=1, verbose_name='공지글')),
                ('NoticeEndDate', models.DateField(null=True, verbose_name='공지종료일')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '게시판',
                'db_table': 'board',
                'index_together': {('BoardGroup', 'NoticeYN', 'NoticeEndDate'), ('BoardGroup', 'WriteDateTime')},
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('DataDate', models.DateField(verbose_name='일자')),
                ('StartTime', models.TimeField(null=True, verbose_name='시작시간')),
                ('EndTime', models.TimeField(null=True, verbose_name='종료시간')),
                ('Title', models.CharField(max_length=100, verbose_name='제목')),
                ('Color', models.CharField(max_length=100, null=True, verbose_name='색깔')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '일정달력',
                'db_table': 'calendar',
                'index_together': {('DataDate',), ('Title', 'DataDate')},
            },
        ),
        migrations.CreateModel(
            name='CheckMaster',
            fields=[
                ('check_pk', models.AutoField(db_column='chk_pk', primary_key=True, serialize=False)),
                ('check_no', models.CharField(db_column='chk_no', max_length=20, verbose_name='점검번호')),
                ('CheckName', models.CharField(db_column='chk_name', max_length=100, verbose_name='점검명')),
                ('CheckYN', models.CharField(db_column='chk_yn', default='N', max_length=1, verbose_name='점검여부')),
                ('CycleType', models.CharField(db_column='cycle_type', max_length=100, null=True, verbose_name='주기유형')),
                ('CyclePerNumber', models.IntegerField(db_column='per_number', null=True, verbose_name='점검주기별번호')),
                ('ScheduleStartDate', models.DateField(db_column='sch_start_dt', null=True, verbose_name='주기시작일')),
                ('FirstWorkDate', models.DateField(db_column='first_work_dt', null=True, verbose_name='최초점검생성일')),
                ('LasttWorkDate', models.DateField(db_column='last_work_dt', null=True, verbose_name='최종점검생성일')),
                ('NexttCheckDate', models.DateField(db_column='next_chk_date', null=True, verbose_name='다음주기일')),
                ('WorkText', models.CharField(db_column='work_text', max_length=2000, verbose_name='작업지침')),
                ('WorkExpectHour', models.IntegerField(db_column='work_expect_hr', null=True, verbose_name='정비예상시간')),
                ('CheckType', models.CharField(db_column='check_type', max_length=20, verbose_name='점검유형')),
                ('UseYN', models.CharField(db_column='use_yn', default='Y', verbose_name='사용여부')),
                ('DeleteYN', models.CharField(db_column='del_yn', default='N', verbose_name='삭제여부')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
                ('CheckUser', models.ForeignKey(db_column='chk_user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='점검담당자')),
                ('Depart', models.ForeignKey(db_column='dept_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.depart', verbose_name='점검부서')),
            ],
            options={
                'verbose_name': '점검마스터',
                'db_table': 'chk_mst',
                'index_together': {('check_no',)},
            },
        ),
        migrations.CreateModel(
            name='CheckItem',
            fields=[
                ('check_item_pk', models.AutoField(db_column='check_item_pk', primary_key=True, serialize=False)),
                ('ItemIndex', models.SmallIntegerField(db_column='item_index', verbose_name='점검항목순번')),
                ('ItemName', models.CharField(db_column='item_name', max_length=100, verbose_name='점검항목명')),
                ('LCL', models.DecimalField(db_column='lcl', decimal_places=3, max_digits=13, null=True, verbose_name='하한값')),
                ('UCL', models.DecimalField(db_column='ucl', decimal_places=3, max_digits=13, null=True, verbose_name='상한값')),
                ('Method', models.CharField(db_column='method', max_length=100, null=True, verbose_name='점검방법')),
                ('Guide', models.CharField(db_column='guide', max_length=2000, null=True, verbose_name='점검가이드')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
                ('CheckMaster', models.ForeignKey(db_column='chk_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.checkmaster', verbose_name='점검마스터')),
                ('Unit', models.ForeignKey(db_column='unit_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.unit', verbose_name='단위')),
            ],
            options={
                'verbose_name': '점검항목',
                'db_table': 'chk_item',
                'index_together': {('CheckMaster',)},
            },
        ),
        migrations.CreateModel(
            name='CheckSchedule',
            fields=[
                ('check_sch_pk', models.AutoField(db_column='chk_sch_pk', primary_key=True, serialize=False)),
                ('check_sch_no', models.IntegerField(db_column='chk_sch_no', verbose_name='점검일정번호')),
                ('CheckScheduleDate', models.DateField(db_column='chk_sch_dt', verbose_name='점검예정일')),
                ('CheckStatus', models.CharField(db_column='chk_status', default='N', max_length=1, verbose_name='점검상태')),
                ('CheckDate', models.DateField(db_column='chk_dt', null=True, verbose_name='점검일')),
                ('FileGroupCode', models.CharField(db_column='file_grp_cd', max_length=20, null=True, verbose_name='파일그룹코드')),
                ('CheckRequestType', models.CharField(db_column='chk_req_type', max_length=20, null=True, verbose_name='점검생성유형')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
                ('CheckMaster', models.ForeignKey(db_column='chk_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.checkmaster', verbose_name='점검마스터')),
                ('CheckUser', models.ForeignKey(db_column='chk_user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='점검담당자')),
                ('Depart', models.ForeignKey(db_column='dept_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.depart', verbose_name='점검부서')),
            ],
            options={
                'verbose_name': '점검일정',
                'db_table': 'chk_sch',
                'unique_together': {('check_sch_no',)},
            },
        ),
        migrations.CreateModel(
            name='DASServer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=50, validators=[domain.models.system.space_check], verbose_name='서버코드')),
                ('Name', models.CharField(default='None', max_length=100, verbose_name='서버명')),
                ('IPAddress', models.CharField(max_length=100, null=True, verbose_name='IP주소')),
                ('Type', models.CharField(max_length=30, null=True, verbose_name='타입')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': 'DAS서버',
                'db_table': 'das_server',
                'unique_together': {('Code',), ('Name',)},
            },
        ),
        migrations.CreateModel(
            name='DBAssetAdministrationShell',
            fields=[
                ('aas_pk', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.CharField(max_length=2000, unique=True)),
                ('category', models.CharField(max_length=50, null=True)),
                ('id_short', models.CharField(max_length=200, null=True, unique=True)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Administration', models.ForeignKey(db_column='admin_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbadministration')),
                ('derivedFrom', models.ForeignKey(db_column='base_aas_pk', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aas_derivedFrom', to='domain.dbassetadministrationshell')),
                ('AssetInformation', models.ForeignKey(db_column='asset_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbassetinformation')),
            ],
            options={
                'db_table': 'aas',
            },
        ),
        migrations.CreateModel(
            name='AASExtensions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('aas_pk', models.ForeignKey(db_column='aas_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbassetadministrationshell')),
                ('extension_pk', models.ForeignKey(db_column='extension_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbextension')),
            ],
            options={
                'db_table': 'aas_extensions',
            },
        ),
        migrations.CreateModel(
            name='AASDataSpecification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('aas_pk', models.ForeignKey(db_column='aas_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbassetadministrationshell')),
            ],
            options={
                'db_table': 'aas_dataspecs',
            },
        ),
        migrations.CreateModel(
            name='DBBlobElement',
            fields=[
                ('SubmodelElement', models.OneToOneField(db_column='sme_pk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='domain.dbsubmodelelement')),
                ('value', models.TextField(max_length=2000)),
                ('mimeType', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'blob_element',
            },
        ),
        migrations.CreateModel(
            name='DBCapabilityElement',
            fields=[
                ('dbsubmodelelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='domain.dbsubmodelelement')),
            ],
            options={
                'db_table': 'capa_element',
            },
            bases=('domain.dbsubmodelelement',),
        ),
        migrations.CreateModel(
            name='DBFileElement',
            fields=[
                ('SubmodelElement', models.OneToOneField(db_column='sme_pk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='domain.dbsubmodelelement')),
                ('value', models.CharField(max_length=2000)),
                ('content_type', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'file_element',
            },
        ),
        migrations.CreateModel(
            name='DBRangeElement',
            fields=[
                ('SubmodelElement', models.OneToOneField(db_column='sme_pk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='domain.dbsubmodelelement')),
                ('valueType', models.CharField(max_length=200)),
                ('max', models.CharField(max_length=2000)),
                ('min', models.CharField(max_length=2000)),
            ],
            options={
                'db_table': 'range_element',
            },
        ),
        migrations.CreateModel(
            name='DBEmbeddedDataSpecification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('dataSpecificationContent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbdataspecificationcontent')),
                ('dataSpecification', models.ForeignKey(db_column='ref_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbreference')),
            ],
            options={
                'db_table': 'embedded_dataspec',
            },
        ),
        migrations.AddField(
            model_name='dbassetadministrationshell',
            name='embeddedDataSpecifications',
            field=models.ManyToManyField(related_name='aas_dataspecs', related_query_name='aas_dataspecs', through='domain.AASDataSpecification', to='domain.dbembeddeddataspecification'),
        ),
        migrations.AddField(
            model_name='aasdataspecification',
            name='dataspec_pk',
            field=models.ForeignKey(db_column='dataspec_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbembeddeddataspecification'),
        ),
        migrations.AddField(
            model_name='dbassetadministrationshell',
            name='Extensions',
            field=models.ManyToManyField(related_name='aas_extensions', related_query_name='aas_extensions', through='domain.AASExtensions', to='domain.dbextension'),
        ),
        migrations.AddField(
            model_name='dbsubmodelelement',
            name='semancticId',
            field=models.ForeignKey(db_column='semanctic_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='submodelelement_semancticId', to='domain.dbreference'),
        ),
        migrations.CreateModel(
            name='DBQualifier',
            fields=[
                ('qaulifier_pk', models.AutoField(db_column='qaulifier_pk', primary_key=True, serialize=False)),
                ('kind', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=200)),
                ('value_type', models.CharField(max_length=200)),
                ('value', models.CharField(max_length=2000)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('semanticId', models.ForeignKey(db_column='semantic_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='qualifier_semanticId', to='domain.dbreference')),
                ('value_id', models.ForeignKey(db_column='value_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='qualifier_valueId', to='domain.dbreference')),
            ],
            options={
                'db_table': 'qualifier',
            },
        ),
        migrations.CreateModel(
            name='DBExtensionSupplementalSemanticId',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Extension', models.ForeignKey(db_column='ext_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbextension')),
                ('Reference', models.ForeignKey(db_column='ref_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbreference')),
            ],
            options={
                'db_table': 'extension_supplementalSemanticId',
            },
        ),
        migrations.AddField(
            model_name='dbextension',
            name='referTo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='extension_referTo', to='domain.dbreference'),
        ),
        migrations.AddField(
            model_name='dbextension',
            name='semanticId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='extension_semanticsId', to='domain.dbreference'),
        ),
        migrations.AddField(
            model_name='dbextension',
            name='supplementalSemanticIds',
            field=models.ManyToManyField(related_name='extension_supplementalSemanticId', related_query_name='extension_supplementalSemanticId', through='domain.DBExtensionSupplementalSemanticId', to='domain.dbreference'),
        ),
        migrations.CreateModel(
            name='DBDataSpecificationIEC61360',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=200)),
                ('sourceOfDefinition', models.CharField(max_length=2000, null=True)),
                ('symbol', models.CharField(max_length=2000, null=True)),
                ('dataType', models.CharField(max_length=50, null=True)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('unitId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='data_spec_unitId', to='domain.dbreference')),
            ],
            options={
                'db_table': 'dataspec_iec61360',
            },
        ),
        migrations.AddField(
            model_name='dbadministration',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbreference'),
        ),
        migrations.CreateModel(
            name='DBReferenceKey',
            fields=[
                ('key_pk', models.AutoField(db_column='key_pk', primary_key=True, serialize=False)),
                ('type', models.SmallIntegerField(null=True)),
                ('value', models.CharField(max_length=2000)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Reference', models.ForeignKey(db_column='ref_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbreference')),
            ],
            options={
                'db_table': 'keys',
            },
        ),
        migrations.AddField(
            model_name='dbassetinformation',
            name='defaultThumbnail',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbresource'),
        ),
        migrations.CreateModel(
            name='DBSpecificAssetId',
            fields=[
                ('spec_asset_pk', models.AutoField(db_column='spec_asset_pk', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=2000)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('externalSubject', models.ForeignKey(db_column='external_subject_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='specificAssetId_externalSubject', to='domain.dbreference')),
                ('semanticId', models.ForeignKey(db_column='semantic_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='specificAssetId_semanticId', to='domain.dbreference')),
            ],
            options={
                'db_table': 'specific_asset',
            },
        ),
        migrations.CreateModel(
            name='DBAssetSpecificassetIds',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('asset_info_pk', models.ForeignKey(db_column='asset_info_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbassetinformation')),
                ('spec_asset_pk', models.ForeignKey(db_column='spec_asset_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbspecificassetid')),
            ],
            options={
                'db_table': 'asset_specificassetids',
            },
        ),
        migrations.AddField(
            model_name='dbassetinformation',
            name='SpecificAssetIds',
            field=models.ManyToManyField(related_name='asset_specificassetids', related_query_name='asset_specificassetids', through='domain.DBAssetSpecificassetIds', to='domain.dbspecificassetid'),
        ),
        migrations.AddField(
            model_name='dbsubmodelelement',
            name='Submodel',
            field=models.ForeignKey(db_column='sm_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbsubmodel'),
        ),
        migrations.AddField(
            model_name='dbsubmodel',
            name='assetAdministrationShell',
            field=models.ForeignKey(db_column='aas_pk', null=True, on_delete=django.db.models.deletion.CASCADE, to='domain.dbassetadministrationshell'),
        ),
        migrations.AddField(
            model_name='dbsubmodel',
            name='semanticId',
            field=models.ForeignKey(db_column='semantic_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submodel_semanticId', to='domain.dbreference'),
        ),
        migrations.CreateModel(
            name='Docuemnt',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=100)),
                ('Title', models.CharField(max_length=300, null=True)),
                ('Content', models.CharField(max_length=4000, null=True)),
                ('Version', models.IntegerField()),
                ('DelYn', models.CharField(default='N', max_length=1)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modified')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('DocumentFolder', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.documentfolder')),
            ],
            options={
                'verbose_name': '문서',
                'db_table': 'doc',
            },
        ),
        migrations.CreateModel(
            name='DocumentForm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('FormType', models.CharField(max_length=20, verbose_name='문서유형')),
                ('FormGroup', models.CharField(max_length=20, verbose_name='양식종류')),
                ('FormName', models.CharField(max_length=200, verbose_name='양식명')),
                ('Content', models.TextField(null=True, verbose_name='내용')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('State', models.CharField(max_length=20, null=True, verbose_name='상태')),
                ('StartDate', models.DateTimeField(null=True, verbose_name='적용시작일')),
                ('EndDate', models.DateTimeField(null=True, verbose_name='적용종료일')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '문서양식',
                'db_table': 'doc_form',
                'index_together': {('FormType',)},
            },
        ),
        migrations.CreateModel(
            name='ElecMeterData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tag_code', models.CharField(max_length=50, verbose_name='태그코드')),
                ('data_date', models.DateTimeField(default=None, verbose_name='일시')),
                ('data_value', models.FloatField(verbose_name='데이터값')),
                ('data_char', models.CharField(max_length=2000, null=True, verbose_name='문자데이터')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
            ],
            options={
                'verbose_name': '전력량계태그데이터',
                'db_table': 'em_tag_dat',
                'unique_together': {('tag_code', 'data_date')},
                'index_together': {('data_date',), ('tag_code', 'data_date', 'data_value'), ('tag_code', 'data_value', 'data_date')},
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=50, validators=[domain.models.system.space_check], verbose_name='설비코드')),
                ('MESCode', models.CharField(max_length=50, null=True, verbose_name='MES설비코드')),
                ('SAPCode', models.CharField(max_length=50, null=True, verbose_name='SAP설비코드')),
                ('Name', models.CharField(max_length=100, verbose_name='설비명')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('Maker', models.CharField(max_length=50, null=True, verbose_name='제조사')),
                ('Model', models.CharField(max_length=50, null=True, verbose_name='모델')),
                ('Standard', models.CharField(max_length=50, null=True, verbose_name='규격')),
                ('Usage', models.CharField(max_length=50, null=True, verbose_name='용도')),
                ('ManageNumber', models.CharField(max_length=50, null=True, verbose_name='관리번호')),
                ('SerialNumber', models.CharField(max_length=50, null=True, verbose_name='시리얼넘버')),
                ('ProductionYear', models.SmallIntegerField(null=True, verbose_name='제작연도')),
                ('AssetYN', models.CharField(max_length=1, null=True, verbose_name='자산성여부')),
                ('DurableYears', models.SmallIntegerField(null=True, verbose_name='내용연수')),
                ('PowerWatt', models.FloatField(null=True, verbose_name='소비전력(W)')),
                ('Voltage', models.CharField(max_length=50, null=True, verbose_name='사용전압')),
                ('Manager', models.CharField(max_length=100, null=True, verbose_name='관리책임자')),
                ('SupplierName', models.CharField(max_length=50, null=True, verbose_name='공급업체')),
                ('PurchaseDate', models.DateField(null=True, verbose_name='구매일')),
                ('PurchaseCost', models.FloatField(null=True, verbose_name='구매가')),
                ('ServiceCharger', models.CharField(max_length=100, null=True, verbose_name='서비스담당자')),
                ('ASTelNumber', models.CharField(max_length=50, null=True, verbose_name='AS전화번호')),
                ('AttentionRemark', models.CharField(max_length=2000, null=True, verbose_name='주의사항')),
                ('Inputdate', models.CharField(max_length=12, null=True, verbose_name='입고일')),
                ('InstallDate', models.DateField(null=True, verbose_name='설치일')),
                ('DisposalDate', models.DateField(null=True, verbose_name='폐기일')),
                ('DisposalReason', models.CharField(max_length=100, null=True, verbose_name='폐기사유')),
                ('OperationRateYN', models.CharField(max_length=1, null=True, verbose_name='가동률표시YN')),
                ('Status', models.CharField(default='normal', max_length=10, null=True, verbose_name='설비상태')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Depart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.depart')),
            ],
            options={
                'verbose_name': '설비',
                'verbose_name_plural': 'Equipments',
                'db_table': 'equ',
                'default_related_name': 'Equipments',
            },
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=100, unique=True, verbose_name='데이터소스명')),
                ('SourceType', models.CharField(max_length=100, null=True, verbose_name='소스유형')),
                ('IPAddress', models.CharField(max_length=100, null=True, verbose_name='대상IP')),
                ('Port', models.IntegerField(null=True, verbose_name='대상포트')),
                ('Location', models.CharField(max_length=500, null=True, verbose_name='위치')),
                ('Description', models.CharField(max_length=2000, null=True, verbose_name='비고')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Equipment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.equipment')),
            ],
            options={
                'verbose_name': '데이터 소스',
                'db_table': 'data_src',
                'index_together': {('SourceType',)},
            },
        ),
        migrations.CreateModel(
            name='DASConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(default='None', max_length=100, verbose_name='설정명')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('Configuration', models.TextField(null=True, verbose_name='설정')),
                ('Handler', models.CharField(max_length=100, null=True, verbose_name='Handler')),
                ('Topic', models.CharField(max_length=100, null=True, verbose_name='토픽')),
                ('DeviceType', models.CharField(default='xgt', max_length=100, null=True, verbose_name='수집방법')),
                ('ConfigFileName', models.CharField(max_length=200, null=True, verbose_name='설정파일명')),
                ('is_active', models.CharField(default='Y', max_length=1, null=True, verbose_name='active')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Server', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='domain.dasserver')),
                ('Equipment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='domain.equipment')),
            ],
            options={
                'verbose_name': 'DAS설정',
                'db_table': 'das_config',
                'index_together': {('Equipment',)},
            },
        ),
        migrations.CreateModel(
            name='CheckResult',
            fields=[
                ('check_result_pk', models.AutoField(db_column='chk_rslt_pk', primary_key=True, serialize=False)),
                ('Result', models.CharField(db_column='result', max_length=1, null=True, verbose_name='결과')),
                ('Description', models.CharField(db_column='description', max_length=2000, null=True, verbose_name='비고')),
                ('CheckRequestType', models.CharField(db_column='chk_req_type', max_length=20, null=True, verbose_name='점검생성유형')),
                ('CheckItemTotal', models.SmallIntegerField(db_column='chk_item_tot', null=True, verbose_name='점검항목총수')),
                ('AbnormalItemCount', models.SmallIntegerField(db_column='abn_item_cnt', null=True, verbose_name='이상항목수')),
                ('FileGroupCode', models.CharField(db_column='file_grp_cd', max_length=20, null=True, verbose_name='파일그룹코드')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
                ('CheckSchedule', models.ForeignKey(db_column='chk_sch_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.checkschedule', verbose_name='점검일정')),
                ('Equipment', models.ForeignKey(db_column='equ_id', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.equipment', verbose_name='설비')),
            ],
            options={
                'verbose_name': '점검결과',
                'db_table': 'chk_result',
                'index_together': {('CheckSchedule', 'Equipment'), ('CheckSchedule',), ('Equipment',)},
            },
        ),
        migrations.CreateModel(
            name='EquipmentGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=50, validators=[domain.models.system.space_check], verbose_name='설비그룹코드')),
                ('Name', models.CharField(default='None', max_length=100, verbose_name='설비그룹명')),
                ('EquipmentType', models.CharField(default='manufacturing', max_length=50, verbose_name='설비유형')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '설비그룹',
                'db_table': 'equ_grp',
                'unique_together': {('Code',), ('Name',)},
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='EquipmentGroup',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.equipmentgroup'),
        ),
        migrations.CreateModel(
            name='ExtraSourceCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('TaskName', models.CharField(max_length=50, verbose_name='업무명')),
                ('AccessKey', models.CharField(max_length=50, verbose_name='키')),
                ('Source', models.CharField(max_length=2000, null=True, verbose_name='소스')),
                ('UseYN', models.CharField(default='Y', max_length=1, verbose_name='사용유무')),
                ('Description', models.CharField(max_length=200, null=True, verbose_name='설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '사용자정의소스코드',
                'db_table': 'ext_src',
                'unique_together': {('TaskName', 'AccessKey')},
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nation_cd', models.CharField(max_length=10, verbose_name='국가코드')),
                ('name_val', models.CharField(max_length=100, verbose_name='사용자정의휴일명')),
                ('repeat_yn', models.CharField(default='N', max_length=1, verbose_name='매년반복여부')),
                ('holidate', models.CharField(max_length=10, verbose_name='사용자정의휴일일자')),
            ],
            options={
                'db_table': 'holiday_custom',
                'unique_together': {('nation_cd', 'holidate', 'name_val')},
            },
        ),
        migrations.CreateModel(
            name='JobClass',
            fields=[
                ('job_class_pk', models.AutoField(db_column='job_class_pk', primary_key=True, serialize=False)),
                ('Code', models.CharField(db_column='cd', max_length=20, verbose_name='직종코드')),
                ('Name', models.CharField(db_column='nm', max_length=100, verbose_name='직종명')),
                ('WageCost', models.DecimalField(db_column='wage_cost', decimal_places=3, max_digits=10, null=True, verbose_name='인건비단가')),
                ('UseYN', models.CharField(db_column='use_yn', default='Y', max_length=1, verbose_name='사용여부')),
                ('DeleteYN', models.CharField(db_column='del_yn', default='N', max_length=1, verbose_name='삭제여부')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
            ],
            options={
                'verbose_name': '직종',
                'db_table': 'job_class',
                'unique_together': {('Code',)},
            },
        ),
        migrations.CreateModel(
            name='LabelCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ModuleName', models.CharField(max_length=100, verbose_name='화면명')),
                ('TemplateKey', models.CharField(max_length=100, verbose_name='템플릿명')),
                ('LabelCode', models.CharField(max_length=200, verbose_name='라벨코드')),
                ('Description', models.CharField(max_length=200, null=True, verbose_name='설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '라벨코드',
                'db_table': 'label_code',
                'unique_together': {('ModuleName', 'TemplateKey', 'LabelCode')},
            },
        ),
        migrations.AddField(
            model_name='dbsubmodelelement',
            name='description',
            field=models.ForeignKey(db_column='desc_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='submodelelement_description', to='domain.languageitem'),
        ),
        migrations.AddField(
            model_name='dbsubmodelelement',
            name='displayName',
            field=models.ForeignKey(db_column='disp_name_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='submodelelement_displayName', to='domain.languageitem'),
        ),
        migrations.AddField(
            model_name='dbsubmodel',
            name='description',
            field=models.ForeignKey(db_column='desc_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='submodel_description', to='domain.languageitem'),
        ),
        migrations.AddField(
            model_name='dbsubmodel',
            name='displayName',
            field=models.ForeignKey(db_column='disp_name_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='submodel_displayName', to='domain.languageitem'),
        ),
        migrations.AddField(
            model_name='dbassetadministrationshell',
            name='description',
            field=models.ForeignKey(db_column='desc_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='aas_description', to='domain.languageitem'),
        ),
        migrations.AddField(
            model_name='dbassetadministrationshell',
            name='displayName',
            field=models.ForeignKey(db_column='disp_name_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='aas_displayName', to='domain.languageitem'),
        ),
        migrations.CreateModel(
            name='LanguageText',
            fields=[
                ('lang_text_pk', models.AutoField(db_column='lang_text_pk', primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=10)),
                ('text', models.CharField(max_length=2000)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('LanguageItem', models.ForeignKey(db_column='lang_item_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.languageitem')),
            ],
            options={
                'db_table': 'lang_text',
            },
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=50, verbose_name='라인코드')),
                ('Name', models.CharField(max_length=100, null=True, verbose_name='라인명')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '라인',
                'db_table': 'line',
                'unique_together': {('Code',), ('Name',)},
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='Line',
            field=models.ForeignKey(db_column='line_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.line'),
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=50, validators=[domain.models.system.space_check], verbose_name='품목코드')),
                ('Name', models.CharField(max_length=100, verbose_name='품목명')),
                ('Standard', models.CharField(max_length=1000, verbose_name='규격')),
                ('ItemGroup', models.CharField(max_length=9, null=True, verbose_name='자재그룹')),
                ('BasicUnit', models.CharField(max_length=3, null=True, verbose_name='기본단위')),
                ('ItemType', models.CharField(max_length=15, null=True, verbose_name='품목유형')),
                ('CycleTime', models.DecimalField(decimal_places=3, max_digits=10, null=True, verbose_name='c/t')),
                ('in_price', models.DecimalField(decimal_places=3, max_digits=10, null=True, verbose_name='입고금액')),
                ('out_price', models.DecimalField(decimal_places=3, max_digits=10, null=True, verbose_name='출고금액')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Factory', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='domain.factory')),
            ],
            options={
                'verbose_name': '품목정보',
                'db_table': 'material',
                'unique_together': {('Code',), ('Name',)},
            },
        ),
        migrations.CreateModel(
            name='BOM',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=200, null=True, verbose_name='제목')),
                ('BOMType', models.CharField(default='manufacturing', max_length=20, verbose_name='BOM종류')),
                ('OutputAmount', models.FloatField(default=1, verbose_name='산출량')),
                ('Version', models.CharField(default='1', max_length=10, null=True, verbose_name='버전')),
                ('StartDate', models.DateTimeField(null=True, verbose_name='적용시작일')),
                ('EndDate', models.DateTimeField(default='2100-12-31', null=True, verbose_name='적용종료일')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Material', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='domain.material')),
            ],
            options={
                'verbose_name': 'BOM헤더',
                'db_table': 'bom',
                'unique_together': {('Material', 'BOMType', 'StartDate'), ('Material', 'BOMType', 'Version')},
                'index_together': {('EndDate', 'StartDate')},
            },
        ),
        migrations.CreateModel(
            name='MenuFolder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('FolderName', models.CharField(max_length=50, verbose_name='폴더명')),
                ('IconCSS', models.CharField(max_length=50, null=True, verbose_name='아이콘스타일')),
                ('_order', models.IntegerField(default=0, null=True, verbose_name='순서')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Children', to='domain.menufolder', verbose_name='부모폴더')),
            ],
            options={
                'verbose_name': '메뉴폴더',
                'db_table': 'menu_folder',
                'index_together': {('Parent',)},
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('MenuCode', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='메뉴코드')),
                ('MenuName', models.CharField(max_length=50, verbose_name='메뉴명')),
                ('IconCSS', models.CharField(max_length=50, null=True, verbose_name='아이콘스타일')),
                ('Url', models.CharField(max_length=100, null=True, verbose_name='Url')),
                ('Popup', models.CharField(default='N', max_length=1, null=True, verbose_name='화면PopupYN')),
                ('_order', models.IntegerField(default=0, null=True, verbose_name='순서')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('MenuFolder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.menufolder')),
            ],
            options={
                'verbose_name': '메뉴항목',
                'db_table': 'menu_item',
            },
        ),
        migrations.CreateModel(
            name='PreventiveMaintenace',
            fields=[
                ('pm_pk', models.AutoField(db_column='pm_pk', primary_key=True, serialize=False)),
                ('pm_no', models.CharField(db_column='pm_no', max_length=20, verbose_name='PM번호')),
                ('Name', models.CharField(db_column='pm_name', max_length=100, verbose_name='PM명')),
                ('PMSortNo', models.SmallIntegerField(db_column='pm_sort_no', null=True, verbose_name='PM번호소팅')),
                ('CycleType', models.CharField(db_column='cycle_type', max_length=100, null=True, verbose_name='주기단위')),
                ('CyclePerNumber', models.IntegerField(db_column='per_number', null=True, verbose_name='PM주기별번호')),
                ('ScheduleStartDate', models.DateField(db_column='sch_start_dt', null=True, verbose_name='주기시작일')),
                ('FirstWorkDate', models.DateField(db_column='first_work_dt', null=True, verbose_name='최초PM생성일')),
                ('LasttWorkDate', models.DateField(db_column='last_work_dt', null=True, verbose_name='최종PM생성일')),
                ('NexttCheckDate', models.DateField(db_column='next_chk_date', null=True, verbose_name='다음주기일')),
                ('WorkText', models.CharField(db_column='work_text', max_length=2000, verbose_name='작업지침')),
                ('WorkExpectHour', models.IntegerField(db_column='work_expect_hr', null=True, verbose_name='정비예상시간')),
                ('PMType', models.CharField(db_column='pm_type', max_length=20, verbose_name='PM유형')),
                ('UseYN', models.CharField(db_column='use_yn', default='Y', verbose_name='사용여부')),
                ('DeleteYN', models.CharField(db_column='del_yn', default='N', verbose_name='삭제여부')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
                ('Depart', models.ForeignKey(db_column='dept_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.depart')),
                ('Equipment', models.ForeignKey(db_column='equ_id', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.equipment')),
                ('PMUser', models.ForeignKey(db_column='pm_user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PM마스터',
                'db_table': 'pm',
                'unique_together': {('Name',), ('pm_no',)},
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=50, verbose_name='공정코드')),
                ('Name', models.CharField(max_length=100, null=True, verbose_name='공정명')),
                ('ProcessType', models.CharField(max_length=100, null=True, verbose_name='공정유형')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '공정',
                'db_table': 'process',
                'unique_together': {('Code',), ('Name',)},
            },
        ),
        migrations.CreateModel(
            name='BOMProcessComponent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Amount', models.FloatField(null=True, verbose_name='소요량')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('BOM', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.bom')),
                ('Material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ConsumedBomProcess', to='domain.material')),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ProducedBomProcess', to='domain.material')),
                ('Process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.process')),
            ],
            options={
                'verbose_name': 'BOM공정구성',
                'db_table': 'bom_proc_comp',
            },
        ),
        migrations.CreateModel(
            name='PropertyData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('DataPk', models.IntegerField(verbose_name='데이터pk')),
                ('TableName', models.CharField(max_length=50, verbose_name='테이블명')),
                ('Code', models.CharField(max_length=50, verbose_name='속성코드')),
                ('Type', models.CharField(max_length=50, null=True, verbose_name='속성유형')),
                ('Char1', models.CharField(max_length=200, null=True, verbose_name='문자값1')),
                ('Number1', models.FloatField(null=True, verbose_name='수치값1')),
                ('Date1', models.DateTimeField(null=True, verbose_name='일시값1')),
                ('Text1', models.TextField(null=True, verbose_name='텍스트값1')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '속성데이터',
                'db_table': 'prop_data',
                'unique_together': {('DataPk', 'TableName', 'Code')},
            },
        ),
        migrations.CreateModel(
            name='PropertyMaster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('TableName', models.CharField(max_length=50, verbose_name='테이블명')),
                ('Code', models.CharField(max_length=50, verbose_name='속성코드')),
                ('Type', models.CharField(max_length=50, null=True, verbose_name='속성유형')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='속성설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '속성정의',
                'db_table': 'prop_master',
                'unique_together': {('TableName', 'Code')},
            },
        ),
        migrations.CreateModel(
            name='QualifierSupplementalSemanticIds',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('qualifier_pk', models.ForeignKey(db_column='qualifier_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbqualifier')),
                ('reference_pk', models.ForeignKey(db_column='ref_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbreference')),
            ],
            options={
                'db_table': 'qualifier_supplementalSemanticIds',
            },
        ),
        migrations.AddField(
            model_name='dbqualifier',
            name='supplementalSemanticIds',
            field=models.ManyToManyField(related_name='qualifier_supplementalSemanticIds', through='domain.QualifierSupplementalSemanticIds', to='domain.dbreference'),
        ),
        migrations.CreateModel(
            name='Relation3Data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('DataPk1', models.IntegerField(verbose_name='데이터1pk')),
                ('TableName1', models.CharField(max_length=50, verbose_name='테이블1명')),
                ('DataPk2', models.IntegerField(verbose_name='데이터2pk')),
                ('TableName2', models.CharField(max_length=50, verbose_name='테이블2명')),
                ('DataPk3', models.IntegerField(verbose_name='데이터3pk')),
                ('TableName3', models.CharField(max_length=50, verbose_name='테이블3명')),
                ('RelationName', models.CharField(max_length=50, verbose_name='관계명')),
                ('Char1', models.CharField(max_length=200, null=True, verbose_name='문자값1')),
                ('Number1', models.FloatField(null=True, verbose_name='수치값1')),
                ('Date1', models.DateTimeField(null=True, verbose_name='일시값1')),
                ('Text1', models.TextField(null=True, verbose_name='텍스트값1')),
                ('StartDate', models.DateField(null=True, verbose_name='적용시작일')),
                ('EndDate', models.DateField(null=True, verbose_name='적용종료일')),
                ('_order', models.IntegerField(default=0, null=True, verbose_name='순서')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '관계3데이터',
                'db_table': 'rela3_data',
                'unique_together': {('DataPk1', 'TableName1', 'DataPk2', 'TableName2', 'DataPk3', 'TableName3', 'RelationName')},
                'index_together': {('DataPk1', 'TableName1', 'TableName2'), ('DataPk2', 'TableName2', 'TableName1')},
            },
        ),
        migrations.CreateModel(
            name='RelationCodeData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code1', models.CharField(max_length=50, verbose_name='코드값1')),
                ('TableName1', models.CharField(max_length=50, verbose_name='테이블1명')),
                ('DataPk2', models.IntegerField(verbose_name='데이터2pk')),
                ('TableName2', models.CharField(max_length=50, verbose_name='테이블2명')),
                ('RelationName', models.CharField(max_length=50, verbose_name='관계명')),
                ('Char1', models.CharField(max_length=200, null=True, verbose_name='문자값1')),
                ('Number1', models.FloatField(null=True, verbose_name='수치값1')),
                ('Date1', models.DateTimeField(null=True, verbose_name='일시값1')),
                ('Text1', models.TextField(null=True, verbose_name='텍스트값1')),
                ('StartDate', models.DateField(null=True, verbose_name='적용시작일')),
                ('EndDate', models.DateField(null=True, verbose_name='적용종료일')),
                ('_order', models.IntegerField(default=0, null=True, verbose_name='순서')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '관계코드데이터',
                'db_table': 'rela_code_data',
                'unique_together': {('Code1', 'TableName1', 'DataPk2', 'TableName2', 'RelationName')},
                'index_together': {('Code1', 'TableName1', 'TableName2'), ('DataPk2', 'TableName2', 'TableName1')},
            },
        ),
        migrations.CreateModel(
            name='RelationData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('DataPk1', models.IntegerField(verbose_name='데이터1pk')),
                ('TableName1', models.CharField(max_length=50, verbose_name='테이블1명')),
                ('DataPk2', models.IntegerField(verbose_name='데이터2pk')),
                ('TableName2', models.CharField(max_length=50, verbose_name='테이블2명')),
                ('RelationName', models.CharField(max_length=50, verbose_name='관계명')),
                ('Char1', models.CharField(max_length=200, null=True, verbose_name='문자값1')),
                ('Number1', models.FloatField(null=True, verbose_name='수치값1')),
                ('Date1', models.DateTimeField(null=True, verbose_name='일시값1')),
                ('Text1', models.TextField(null=True, verbose_name='텍스트값1')),
                ('StartDate', models.DateField(null=True, verbose_name='적용시작일')),
                ('EndDate', models.DateField(null=True, verbose_name='적용종료일')),
                ('_order', models.IntegerField(default=0, null=True, verbose_name='순서')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '관계데이터',
                'db_table': 'rela_data',
                'unique_together': {('DataPk1', 'TableName1', 'DataPk2', 'TableName2', 'RelationName')},
                'index_together': {('DataPk1', 'TableName1', 'TableName2'), ('DataPk2', 'TableName2', 'TableName1')},
            },
        ),
        migrations.CreateModel(
            name='SFLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('logDt', models.DateTimeField(auto_now_add=True, verbose_name='로그일시')),
                ('useSe', models.CharField(max_length=20, verbose_name='사용구분(접속/종료/변경/조회)')),
                ('sysUser', models.IntegerField(verbose_name='사용자id')),
                ('conectIp', models.CharField(max_length=50, verbose_name='IP주소')),
                ('dataUsgqty', models.IntegerField(verbose_name='사용량')),
                ('SendYN', models.CharField(default='N', max_length=1, verbose_name='송신YN')),
            ],
            options={
                'verbose_name': '스마트팩토리전송로그',
                'db_table': 'sf_log',
                'index_together': {('SendYN', 'logDt'), ('conectIp', 'logDt'), ('logDt',), ('sysUser', 'logDt')},
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=30, verbose_name='근무조코드')),
                ('Name', models.CharField(max_length=30, verbose_name='근무조명')),
                ('StartTime', models.CharField(max_length=5, null=True, verbose_name='시작시간')),
                ('EndTime', models.CharField(max_length=5, null=True, verbose_name='종료시간')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '근무조',
                'db_table': 'shift',
                'unique_together': {('Code',)},
            },
        ),
        migrations.AddField(
            model_name='factory',
            name='Site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.site'),
        ),
        migrations.AddField(
            model_name='documentfolder',
            name='Site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.site'),
        ),
        migrations.AddField(
            model_name='depart',
            name='Site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.site'),
        ),
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Type', models.CharField(max_length=50)),
                ('Name', models.CharField(max_length=100)),
                ('Code', models.CharField(blank=True, max_length=400, null=True)),
                ('StartDate', models.DateField(null=True)),
                ('StartTime', models.CharField(blank=True, max_length=20, null=True)),
                ('Remark', models.CharField(blank=True, max_length=500, null=True)),
                ('UseYn', models.CharField(default='Y', max_length=1)),
                ('DelYn', models.CharField(default='N', max_length=1)),
                ('HolidayYn', models.CharField(default='N', max_length=1)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modified')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.site')),
            ],
            options={
                'verbose_name': '주기',
                'db_table': 'cycle',
            },
        ),
        migrations.CreateModel(
            name='CustCol',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('TableName', models.CharField(max_length=50, null=True)),
                ('Name', models.CharField(max_length=50, null=True)),
                ('DataType', models.CharField(max_length=50, null=True)),
                ('DataFormat', models.CharField(max_length=50, null=True)),
                ('CodeGrpName', models.CharField(max_length=1, null=True)),
                ('UseYn', models.CharField(default='Y', max_length=1)),
                ('RequiredYn', models.CharField(default='N', max_length=1)),
                ('DispOrder', models.IntegerField(blank=True, null=True)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modified')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.site')),
            ],
            options={
                'verbose_name': '사용자 정의 컬럼',
                'db_table': 'cust_col',
            },
        ),
        migrations.CreateModel(
            name='SpecificAssetIdSupplementalSemanticId',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Reference', models.ForeignKey(db_column='ref_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbreference')),
                ('SpecificAssetId', models.ForeignKey(db_column='spec_asset_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbspecificassetid')),
            ],
            options={
                'db_table': 'specificassetid_supplementalSemanticId',
            },
        ),
        migrations.AddField(
            model_name='dbspecificassetid',
            name='supplementalSemanticIds',
            field=models.ManyToManyField(related_name='specificAssetId_supplementalSemanticId', related_query_name='specificAssetId_supplementalSemanticId', through='domain.SpecificAssetIdSupplementalSemanticId', to='domain.dbreference'),
        ),
        migrations.CreateModel(
            name='SubmodelElementCollectionValues',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('element_pk', models.ForeignKey(db_column='collection_element_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbsubmodelelementcollection')),
                ('value_pk', models.ForeignKey(db_column='value_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbsubmodelelement')),
            ],
            options={
                'db_table': 'submodelelementcollection_values',
            },
        ),
        migrations.AddField(
            model_name='dbsubmodelelementcollection',
            name='values',
            field=models.ManyToManyField(related_name='submodelelementcollection_values', related_query_name='submodelelementcollection_values', through='domain.SubmodelElementCollectionValues', to='domain.dbsubmodelelement'),
        ),
        migrations.CreateModel(
            name='SubmodelelementEmbeddedDataSpecifications',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('SubmodelElement', models.ForeignKey(db_column='sme_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbsubmodelelement')),
                ('embedded_data_specification_pk', models.ForeignKey(db_column='embedded_data_specification_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbembeddeddataspecification')),
            ],
            options={
                'db_table': 'submodelelement_embeddedDataSpecifications',
            },
        ),
        migrations.AddField(
            model_name='dbsubmodelelement',
            name='embeddedDataSpecifications',
            field=models.ManyToManyField(related_name='submodelelement_embeddedDataSpecifications', related_query_name='submodelelement_embeddedDataSpecifications', through='domain.SubmodelelementEmbeddedDataSpecifications', to='domain.dbembeddeddataspecification'),
        ),
        migrations.CreateModel(
            name='SubmodelElementExtensions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('SubmodelElement', models.ForeignKey(db_column='sme_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbsubmodelelement')),
                ('extension_pk', models.ForeignKey(db_column='extension_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbextension')),
            ],
            options={
                'db_table': 'submodelelement_extensions',
            },
        ),
        migrations.AddField(
            model_name='dbsubmodelelement',
            name='Extensions',
            field=models.ManyToManyField(related_name='submodelelement_extensions', related_query_name='submodelelement_extensions', through='domain.SubmodelElementExtensions', to='domain.dbextension'),
        ),
        migrations.CreateModel(
            name='SubmodelEmbeddedDataSpecifications',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('DataSpecification', models.ForeignKey(db_column='data_spec_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbembeddeddataspecification')),
                ('submodel_pk', models.ForeignKey(db_column='submodel_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbsubmodel')),
            ],
            options={
                'db_table': 'submodel_embeddedDataSpecifications',
            },
        ),
        migrations.AddField(
            model_name='dbsubmodel',
            name='EmbeddedDataSpecifications',
            field=models.ManyToManyField(related_name='submodel_embeddedDataSpecifications', related_query_name='submodel_dataspecs', through='domain.SubmodelEmbeddedDataSpecifications', to='domain.dbembeddeddataspecification'),
        ),
        migrations.CreateModel(
            name='SubmodelExtensions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('extension_pk', models.ForeignKey(db_column='extension_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbextension')),
                ('submodel_pk', models.ForeignKey(db_column='submodel_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbsubmodel')),
            ],
            options={
                'db_table': 'submodel_extensions',
            },
        ),
        migrations.AddField(
            model_name='dbsubmodel',
            name='Extensions',
            field=models.ManyToManyField(related_name='submodel_extensions', related_query_name='submodel_extensions', through='domain.SubmodelExtensions', to='domain.dbextension'),
        ),
        migrations.CreateModel(
            name='SubmodelQualifiers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('qualifier_pk', models.ForeignKey(db_column='qualifier_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbqualifier')),
                ('submodel_pk', models.ForeignKey(db_column='submodel_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbsubmodel')),
            ],
            options={
                'db_table': 'submodel_qualifiers',
            },
        ),
        migrations.AddField(
            model_name='dbsubmodel',
            name='Qualifiers',
            field=models.ManyToManyField(related_name='submodel_qualifiers', related_query_name='submodel_qualifiers', through='domain.SubmodelQualifiers', to='domain.dbqualifier'),
        ),
        migrations.CreateModel(
            name='SystemCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('CodeType', models.CharField(max_length=30, verbose_name='코드유형')),
                ('Code', models.CharField(max_length=30, verbose_name='코드')),
                ('Value', models.CharField(max_length=30, verbose_name='디코드값')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('_ordering', models.IntegerField(default=0, null=True, verbose_name='_순서')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '시스템코드',
                'db_table': 'sys_code',
                'unique_together': {('CodeType', 'Code')},
                'index_together': {('CodeType', 'Code', 'Value')},
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Type', models.CharField(max_length=20, null=True, verbose_name='로그유형')),
                ('Source', models.CharField(max_length=100, null=True, verbose_name='소스')),
                ('Message', models.TextField(null=True, verbose_name='메시지')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
            ],
            options={
                'verbose_name': '시스템로그',
                'db_table': 'sys_log',
                'index_together': {('Source', '_created'), ('Type', '_created'), ('_created',)},
            },
        ),
        migrations.CreateModel(
            name='SystemOption',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=50, verbose_name='코드')),
                ('Value', models.TextField(null=True, verbose_name='값')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '시스템옵션',
                'db_table': 'sys_option',
                'unique_together': {('Code',)},
            },
        ),
        migrations.CreateModel(
            name='TagData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tag_code', models.CharField(max_length=50, verbose_name='태그코드')),
                ('data_date', models.DateTimeField(default=None, verbose_name='일시')),
                ('data_value', models.FloatField(verbose_name='데이터값')),
                ('data_char', models.CharField(max_length=2000, null=True, verbose_name='문자데이터')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
            ],
            options={
                'verbose_name': '태그데이터',
                'db_table': 'tag_dat',
                'unique_together': {('tag_code', 'data_date')},
                'index_together': {('data_date',), ('tag_code', 'data_date', 'data_value'), ('tag_code', 'data_value', 'data_date')},
            },
        ),
        migrations.CreateModel(
            name='TagGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=50, verbose_name='태그그룹코드')),
                ('Name', models.CharField(max_length=50, verbose_name='태그그룹명')),
                ('Description', models.CharField(max_length=100, null=True, verbose_name='설명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '태그그룹',
                'db_table': 'tag_grp',
                'unique_together': {('Code',), ('Name',)},
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('Code', models.CharField(max_length=50, verbose_name='코드')),
                ('Name', models.CharField(default='None', max_length=100, verbose_name='사용자그룹명')),
                ('Disabled', models.BooleanField(default=False, null=True, verbose_name='사용안함')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='비고')),
                ('ShiftYn', models.CharField(max_length=1, null=True, verbose_name='교대조여부')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.site')),
            ],
            options={
                'verbose_name': '사용자그룹',
                'verbose_name_plural': 'User Groups',
                'db_table': 'user_group',
                'default_related_name': 'UserGroup',
                'unique_together': {('Code',)},
            },
        ),
        migrations.CreateModel(
            name='UserGroupUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('UserGroup_id', models.IntegerField(verbose_name='사용자그룹id')),
                ('User_id', models.IntegerField(verbose_name='사용자id')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modified')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '사용자그룹별사용자',
                'db_table': 'user_group_user',
                'unique_together': {('UserGroup_id', 'User_id')},
            },
        ),
        migrations.CreateModel(
            name='WorkCalendar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('DataDate', models.DateField(verbose_name='일자')),
                ('StartTime', models.TimeField(null=True, verbose_name='근무시작시간')),
                ('EndTime', models.TimeField(null=True, verbose_name='근무종료시간')),
                ('WorkHr', models.FloatField(null=True, verbose_name='실근무시간')),
                ('HolidayYN', models.CharField(default='N', max_length=1, null=True, verbose_name='휴일YN')),
                ('DataPk', models.IntegerField(null=True, verbose_name='데이터pk')),
                ('TableName', models.CharField(max_length=50, null=True, verbose_name='테이블명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
            ],
            options={
                'verbose_name': '작업달력',
                'db_table': 'work_calendar',
                'unique_together': {('DataDate', 'DataPk', 'TableName')},
                'index_together': {('DataPk', 'TableName', 'DataDate')},
            },
        ),
        migrations.CreateModel(
            name='BoardReply',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Reply', models.CharField(max_length=500, verbose_name='댓글')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.board')),
            ],
            options={
                'verbose_name': '게시판댓글',
                'db_table': 'board_reply',
                'index_together': {('Board',)},
            },
        ),
        migrations.CreateModel(
            name='CheckResultItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Result', models.CharField(db_column='result', max_length=1, null=True, verbose_name='결과')),
                ('Description', models.CharField(db_column='description', max_length=2000, null=True, verbose_name='비고')),
                ('CheckDate', models.DateField(db_column='chk_dt', null=True, verbose_name='점검일')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
                ('CheckItem', models.ForeignKey(db_column='chk_item_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.checkitem', verbose_name='점검항목')),
                ('CheckResult', models.ForeignKey(db_column='chk_rslt_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.checkresult', verbose_name='점검결과')),
                ('CheckUser', models.ForeignKey(db_column='chk_user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='점검담당자')),
                ('CheckSchedule', models.ForeignKey(db_column='chk_sch_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.checkschedule', verbose_name='점검일정')),
            ],
            options={
                'verbose_name': '점검결과별 항목결과',
                'db_table': 'chk_item_result',
                'unique_together': {('CheckSchedule', 'CheckItem')},
                'index_together': {('CheckResult', 'CheckSchedule')},
            },
        ),
        migrations.CreateModel(
            name='DBEntityElement',
            fields=[
                ('SubmodelElement', models.OneToOneField(db_column='sme_pk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='domain.dbsubmodelelement')),
                ('entityType', models.CharField(max_length=200)),
                ('globalAssetId', models.CharField(max_length=2000)),
                ('specificAssetId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dbspecificassetid')),
                ('statements', models.ManyToManyField(related_name='entityelement_statements', related_query_name='entityelement_statements', to='domain.dbsubmodelelement')),
            ],
            options={
                'db_table': 'entity_element',
            },
        ),
        migrations.CreateModel(
            name='DBMultiLanguageProperty',
            fields=[
                ('SubmodelElement', models.OneToOneField(db_column='sme_pk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='domain.dbsubmodelelement')),
                ('value', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='multiLanguageProperty_value_languageItem', to='domain.languageitem')),
                ('valueId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='multiLanguageProperty_valueId_reference', to='domain.dbreference')),
            ],
            options={
                'db_table': 'multilang_prpt_element',
            },
        ),
        migrations.CreateModel(
            name='DBPropertyElement',
            fields=[
                ('SubmodelElement', models.OneToOneField(db_column='sme_pk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='domain.dbsubmodelelement')),
                ('contentType', models.CharField(max_length=500)),
                ('valueType', models.CharField(max_length=200)),
                ('value', models.CharField(max_length=2000)),
                ('valueId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='propertyElement_valueId_reference', to='domain.dbreference')),
            ],
            options={
                'db_table': 'property_element',
            },
        ),
        migrations.CreateModel(
            name='DBReferenceElement',
            fields=[
                ('SubmodelElement', models.OneToOneField(db_column='sme_pk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='domain.dbsubmodelelement')),
                ('value', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='referenceelement_value', related_query_name='referenceelement_value', to='domain.dbreference')),
            ],
            options={
                'db_table': 'reference_element',
            },
        ),
        migrations.CreateModel(
            name='DocumentResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('DocumentDate', models.DateField(verbose_name='일자')),
                ('DocumentName', models.CharField(max_length=200, verbose_name='문서명')),
                ('Content', models.TextField(null=True, verbose_name='내용')),
                ('Description', models.CharField(max_length=2000, null=True, verbose_name='설명')),
                ('Number1', models.FloatField(null=True, verbose_name='수치값1')),
                ('Number2', models.FloatField(null=True, verbose_name='수치값2')),
                ('Number3', models.FloatField(null=True, verbose_name='수치값3')),
                ('Text1', models.CharField(max_length=2000, null=True, verbose_name='문자값1')),
                ('Text2', models.CharField(max_length=2000, null=True, verbose_name='문자값2')),
                ('Text3', models.CharField(max_length=2000, null=True, verbose_name='문자값3')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('DocumentForm', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.documentform')),
            ],
            options={
                'verbose_name': '문서결과',
                'db_table': 'doc_result',
                'index_together': {('DocumentDate',), ('DocumentForm', 'DocumentDate')},
            },
        ),
        migrations.CreateModel(
            name='LabelCodeLanguage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('LangCode', models.CharField(max_length=30, verbose_name='언어코드')),
                ('DispText', models.CharField(max_length=500, verbose_name='표시문자')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('LabelCode', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='domain.labelcode')),
            ],
            options={
                'verbose_name': '라벨다국어설정',
                'db_table': 'label_code_lang',
                'unique_together': {('LabelCode', 'LangCode')},
                'index_together': {('LabelCode', 'LangCode', 'DispText')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='equipment',
            unique_together={('Code',), ('Name',)},
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Type', models.CharField(max_length=50, verbose_name='로그인/아웃 구분')),
                ('IPAddress', models.GenericIPAddressField(null=True, verbose_name='IP주소')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '로그인로그',
                'db_table': 'login_log',
                'index_together': {('IPAddress', '_created'), ('User', '_created'), ('_created',)},
            },
        ),
        migrations.CreateModel(
            name='BOMComponent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('_order', models.SmallIntegerField(default=0, null=True, verbose_name='순서')),
                ('Amount', models.FloatField(verbose_name='소요량')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='비고')),
                ('Portion', models.FloatField(null=True, verbose_name='배합비%')),
                ('DesignAmount', models.FloatField(null=True, verbose_name='설계소요량')),
                ('LossPro', models.FloatField(null=True, verbose_name='로스율%')),
                ('AutoConsuYN', models.CharField(max_length=1, null=True, verbose_name='자동투입YN')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('BOM', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.bom')),
                ('Material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.material')),
            ],
            options={
                'verbose_name': 'BOM구성',
                'db_table': 'bom_comp',
                'unique_together': {('BOM', 'Material')},
                'index_together': {('Material',)},
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('MenuItem', models.ForeignKey(db_column='MenuCode', on_delete=django.db.models.deletion.CASCADE, to='domain.menuitem')),
            ],
            options={
                'verbose_name': '바로가기메뉴',
                'db_table': 'bookmark',
                'unique_together': {('User', 'MenuItem')},
            },
        ),
        migrations.CreateModel(
            name='MenuUseLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('MenuCode', models.CharField(max_length=50, verbose_name='메뉴코드')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '메뉴사용로그',
                'db_table': 'menu_use_log',
                'index_together': {('MenuCode', '_created'), ('User', 'MenuCode', '_created'), ('User', '_created'), ('_created',)},
            },
        ),
        migrations.CreateModel(
            name='PMWorker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('WorkHour', models.DecimalField(db_column='work_hr', decimal_places=2, max_digits=7, null=True, verbose_name='작업시간')),
                ('DisplayOrder', models.SmallIntegerField(db_column='disp_order', null=True, verbose_name='표시순서')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
                ('JobClass', models.ForeignKey(db_column='job_class_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.jobclass')),
                ('PreventiveMaintenace', models.ForeignKey(db_column='pm_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.preventivemaintenace')),
            ],
            options={
                'verbose_name': 'PM인력',
                'db_table': 'pm_worker',
                'index_together': {('PreventiveMaintenace',)},
            },
        ),
        migrations.CreateModel(
            name='PMMaterial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Amount', models.DecimalField(db_column='amt', decimal_places=3, max_digits=13, verbose_name='소요량')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
                ('Material', models.ForeignKey(db_column='mat_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.material')),
                ('PreventiveMaintenace', models.ForeignKey(db_column='pm_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.preventivemaintenace')),
            ],
            options={
                'verbose_name': 'PM자재',
                'db_table': 'pm_mat',
                'unique_together': {('PreventiveMaintenace', 'Material')},
                'index_together': {('PreventiveMaintenace',)},
            },
        ),
        migrations.AlterUniqueTogether(
            name='factory',
            unique_together={('Code',), ('Name',), ('Site',)},
        ),
        migrations.AlterUniqueTogether(
            name='depart',
            unique_together={('Code',), ('Name',)},
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=75, verbose_name='업체명')),
                ('Code', models.CharField(max_length=50, null=True, verbose_name='업체코드')),
                ('Country', models.CharField(max_length=50, null=True, verbose_name='국가')),
                ('Local', models.CharField(max_length=50, null=True, verbose_name='지역명')),
                ('CompanyType', models.CharField(max_length=30, null=True, verbose_name='업체유형')),
                ('CEOName', models.CharField(max_length=50, null=True, verbose_name='대표이사')),
                ('Email', models.EmailField(max_length=254, null=True, verbose_name='이메일')),
                ('ZipCode', models.CharField(max_length=50, null=True, verbose_name='우편번호')),
                ('Address', models.CharField(db_column='addr', max_length=1000, null=True, verbose_name='주소')),
                ('TelNumber', models.CharField(max_length=100, null=True, verbose_name='전화번호')),
                ('FaxNumber', models.CharField(max_length=100, null=True, verbose_name='팩스번호')),
                ('BusinessType', models.CharField(max_length=50, null=True, verbose_name='업태')),
                ('BusinessItem', models.CharField(max_length=50, null=True, verbose_name='종목')),
                ('Homepage', models.CharField(max_length=100, null=True, verbose_name='홈페이지')),
                ('Description', models.CharField(max_length=500, null=True, verbose_name='비고')),
                ('Manager', models.CharField(max_length=50, null=True, verbose_name='담당자1')),
                ('ManagerPhone', models.CharField(max_length=50, null=True, verbose_name='담당자2전화번호')),
                ('Manager2', models.CharField(max_length=50, null=True, verbose_name='담당자2')),
                ('Manager2Phone', models.CharField(max_length=50, null=True, verbose_name='담당자2전화번호')),
                ('UseYn', models.CharField(default='Y', max_length=1)),
                ('DelYn', models.CharField(default='N', max_length=1)),
                ('UserText1', models.CharField(blank=True, max_length=200, null=True)),
                ('UserText2', models.CharField(blank=True, max_length=200, null=True)),
                ('UserText3', models.CharField(blank=True, max_length=200, null=True)),
                ('UserText4', models.CharField(blank=True, max_length=200, null=True)),
                ('UserText5', models.CharField(blank=True, max_length=200, null=True)),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
                ('Site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.site')),
            ],
            options={
                'verbose_name': '업체',
                'db_table': 'company',
                'unique_together': {('Code', 'Site')},
            },
        ),
        migrations.CreateModel(
            name='TagMaster',
            fields=[
                ('tag_code', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='태그코드')),
                ('tag_name', models.CharField(max_length=100, verbose_name='태그명')),
                ('RoundDigit', models.IntegerField(default=3, null=True, verbose_name='소숫점자릿수')),
                ('DisplayFormat', models.CharField(max_length=200, null=True, verbose_name='화면표시포맷')),
                ('LSL', models.FloatField(null=True, verbose_name='하한값')),
                ('USL', models.FloatField(null=True, verbose_name='상한값')),
                ('LastValue', models.CharField(max_length=50, null=True, verbose_name='최종값')),
                ('LastDate', models.DateTimeField(null=True, verbose_name='최종데이터일시')),
                ('LastStatus', models.CharField(max_length=10, null=True, verbose_name='가동상태')),
                ('Address', models.CharField(max_length=50, null=True, verbose_name='리딩어드레스')),
                ('VariableName', models.CharField(max_length=50, null=True, verbose_name='변수명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('DASConfig', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.dasconfig')),
                ('DataSource', models.ForeignKey(db_column='data_src_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.datasource')),
                ('Equipment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.equipment')),
                ('tag_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.taggroup')),
                ('Unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.unit')),
            ],
            options={
                'verbose_name': '태그마스터',
                'db_table': 'tag',
                'unique_together': {('tag_name',)},
            },
        ),
        migrations.CreateModel(
            name='CheckScheduleItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ItemName', models.CharField(db_column='item_name', max_length=100, verbose_name='점검항목명')),
                ('ItemIndex', models.SmallIntegerField(db_column='item_index', verbose_name='점검항목순번')),
                ('LCL', models.DecimalField(db_column='lcl', decimal_places=3, max_digits=13, null=True, verbose_name='하한값')),
                ('UCL', models.DecimalField(db_column='ucl', decimal_places=3, max_digits=13, null=True, verbose_name='상한값')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=10, null=True, verbose_name='작성자명')),
                ('_modifier_nm', models.CharField(max_length=10, null=True, verbose_name='변경자명')),
                ('CheckItem', models.ForeignKey(db_column='chk_item_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.checkitem', verbose_name='점검항목')),
                ('CheckSchedule', models.ForeignKey(db_column='chk_sch_pk', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.checkschedule', verbose_name='점검일정')),
                ('Unit', models.ForeignKey(db_column='unit_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.unit', verbose_name='단위')),
            ],
            options={
                'verbose_name': '점검일정',
                'db_table': 'chk_sch_item',
                'unique_together': {('CheckSchedule', 'CheckItem')},
                'index_together': {('CheckSchedule',)},
            },
        ),
        migrations.CreateModel(
            name='UserGroupMenu',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('MenuCode', models.CharField(max_length=50, verbose_name='메뉴코드')),
                ('AuthCode', models.CharField(max_length=10, verbose_name='권한코드')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('UserGroup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.usergroup')),
            ],
            options={
                'verbose_name': '사용자그룹메뉴',
                'db_table': 'user_group_menu',
                'unique_together': {('MenuCode', 'UserGroup')},
                'index_together': {('UserGroup',)},
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('password_changed', models.DateTimeField(null=True, verbose_name='패스워드변경일')),
                ('lang_code', models.CharField(default='ko-KR', max_length=30, verbose_name='사용언어코드')),
                ('token', models.CharField(max_length=512, null=True)),
                ('Name', models.CharField(max_length=100, null=True, verbose_name='사용자명')),
                ('_status', models.CharField(max_length=10, null=True, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='_modfied')),
                ('_creater_id', models.IntegerField(null=True, verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(null=True, verbose_name='_modifier_id')),
                ('Depart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.depart')),
                ('UserGroup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.usergroup')),
            ],
            options={
                'verbose_name': '사용자프로필',
                'db_table': 'user_profile',
                'index_together': {('UserGroup',)},
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('work_order_pk', models.AutoField(db_column='work_order_pk', primary_key=True, serialize=False)),
                ('work_order_no', models.CharField(db_column='work_order_no', max_length=40, verbose_name='작업지시서번호')),
                ('wo_status', models.CharField(db_column='wo_status', max_length=20, verbose_name='작업상태')),
                ('work_title', models.CharField(db_column='work_title', max_length=200, verbose_name='작업제목')),
                ('wo_type', models.CharField(db_column='wo_type', max_length=20, null=True, verbose_name='작업유형')),
                ('MaintenanceTypeCode', models.CharField(db_column='maint_type_cd', default='CM', max_length=20, null=True, verbose_name='보전유형')),
                ('RequestInfo', models.TextField(db_column='req_info', null=True, verbose_name='요청내역')),
                ('RequestFileGroupCode', models.CharField(db_column='req_file_grp_cd', max_length=50, null=True, verbose_name='요청내역사진파일코드')),
                ('WantDate', models.DateField(db_column='want_dt', null=True, verbose_name='희망일')),
                ('BreakdownDate', models.DateField(db_column='breakdown_dt', null=True, verbose_name='고장일시')),
                ('BreakdownHour', models.DecimalField(db_column='breakdown_hr', decimal_places=2, max_digits=10, null=True, verbose_name='고장시간')),
                ('ProblemCode', models.CharField(db_column='problem_cd', max_length=8, null=True, verbose_name='현상코드')),
                ('CauseCode', models.CharField(db_column='cause_cd', max_length=8, null=True, verbose_name='원인코드')),
                ('RemedyCode', models.CharField(db_column='remedy_cd', max_length=8, null=True, verbose_name='조치코드')),
                ('plan_start_dt', models.DateField(db_column='plan_start_dt', null=True, verbose_name='계획시작일')),
                ('plan_end_dt', models.DateField(db_column='plan_end_dt', null=True, verbose_name='계획완료일')),
                ('start_dt', models.DateField(db_column='start_dt', null=True, verbose_name='작업시작일시')),
                ('end_dt', models.DateField(db_column='end_dt', null=True, verbose_name='작업종료일시')),
                ('WorkText', models.TextField(db_column='work_text', null=True, verbose_name='작업내역')),
                ('WorkFileGroupCoded', models.CharField(db_column='work_file_grp_cd', max_length=50, null=True, verbose_name='작업내역사진파일코드')),
                ('WorkSourcingCode', models.CharField(db_column='work_src_cd', default='WS01', max_length=20, null=True, verbose_name='작업소싱 코드')),
                ('TotalCost', models.DecimalField(db_column='tot_cost', decimal_places=2, max_digits=10, null=True, verbose_name='총작업비용')),
                ('MaterialCost', models.DecimalField(db_column='mtrl_cost', decimal_places=2, max_digits=10, null=True, verbose_name='자재비')),
                ('LaborCost', models.DecimalField(db_column='labor_cost', decimal_places=2, max_digits=10, null=True, verbose_name='인건비')),
                ('OutSourcingCost', models.DecimalField(db_column='outsourcing_cost', decimal_places=2, max_digits=10, null=True, verbose_name='외주비')),
                ('EtcCost', models.DecimalField(db_column='etc_cost', decimal_places=2, max_digits=10, null=True, verbose_name='기타비용')),
                ('PMRequestType', models.CharField(db_column='pm_req_type', default='A', max_length=1, verbose_name='PM의뢰유형')),
                ('RorkOrderSort', models.IntegerField(db_column='work_order_sort', null=True, verbose_name='작업지시번호소팅용')),
                ('rqst_insp_yn', models.CharField(db_column='rqst_insp_yn', default='N', max_length=1, verbose_name='점검WO 여부')),
                ('rqst_dpr_yn', models.CharField(db_column='rqst_dpr_yn', default='N', max_length=1, verbose_name='일보WO 여부')),
                ('WorkFileGroupCode', models.CharField(db_column='wo_file_grp_cd', max_length=50, null=True, verbose_name='첨부파일그룹코드')),
                ('_status', models.CharField(max_length=10, verbose_name='_status')),
                ('_created', models.DateTimeField(auto_now_add=True, verbose_name='_created')),
                ('_modified', models.DateTimeField(auto_now=True, verbose_name='_modified')),
                ('_creater_id', models.IntegerField(verbose_name='_creater_id')),
                ('_modifier_id', models.IntegerField(verbose_name='_modifier_id')),
                ('_creater_nm', models.CharField(max_length=50, verbose_name='_creater_nm')),
                ('_modifier_nm', models.CharField(max_length=50, verbose_name='_modifier_nm')),
                ('CheckResult', models.ForeignKey(db_column='chk_result_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.checkresult', verbose_name='점검결과')),
                ('Equipment', models.ForeignKey(db_column='equ_id', on_delete=django.db.models.deletion.DO_NOTHING, to='domain.equipment')),
                ('PreventiveMaintenace', models.ForeignKey(db_column='pm_pk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domain.preventivemaintenace', verbose_name='PM ID')),
                ('RequestDepart', models.ForeignKey(db_column='req_dept_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='workorder_request_depart', to='domain.depart', verbose_name='요청부서')),
                ('WorkCharger', models.ForeignKey(db_column='work_charger_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='작업담당자')),
                ('WorkDepart', models.ForeignKey(db_column='work_dept_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='workorder_work_depart', to='domain.depart', verbose_name='작업부서')),
            ],
            options={
                'verbose_name': '작업지시',
                'db_table': 'work_order',
                'unique_together': {('work_order_no',)},
                'index_together': {('Equipment',)},
            },
        ),
    ]
