{"version":3,"sources":["raw-js/kendo.multicolumncombobox.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendomulticolumncombobox","js","this","$","undefined$1","kendo","window","ui","ComboBox","Select","percentageUnitsRegex","MultiColumnComboBox","extend","init","element","options","fn","call","list","parent","addClass","_allColumnsWidthsAreSet","width","_calculateDropDownWidth","dropDownWidth","name","ns","columns","filterFields","setOptions","_popup","popup","removeClass","length","i","currentWidth","isNaN","parseInt","test","totalWidth","support","scrollbar","_wrapper","wrapper","plugin","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","jQuery"],"mappings":";;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,EAAAG,QAAA,sBACA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,sBAAAJ,KACAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,yBAAAT,EAAAS,0BAAA,CAAA,EAAAT,EAAAS,yBAAAC,GAAAT,IACA,CAJA,CAIAU,MAAA,WA6GA,OAzFA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAE,GACAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,OACAC,EAAA,kBAIAC,EAAAH,EAAAI,OAAA,CACAC,KAAA,SAAAC,EAAAC,GACAP,EAAAQ,GAAAH,KAAAI,KAAAf,KAAAY,EAAAC,GACAb,KAAAgB,KAAAC,SAAAC,SALA,wBAOAlB,KAAAmB,wBAAAnB,KAAAa,SACAb,KAAAgB,KAAAC,SAAAG,MAAApB,KAAAqB,wBAAArB,KAAAa,UACAb,KAAAa,QAAAS,eACAtB,KAAAgB,KAAAC,SAAAG,MAAApB,KAAAa,QAAAS,cAEA,EAEAT,QAAA,CACAU,KAAA,sBACAC,GAAA,4BACAC,QAAA,GACAH,cAAA,KACAI,aAAA,IAGAC,WAAA,SAAAd,GACAP,EAAAQ,GAAAa,WAAAZ,KAAAf,KAAAa,GACAb,KAAAmB,wBAAAN,GACAb,KAAAgB,KAAAC,SAAAG,MAAApB,KAAAqB,wBAAAR,IACAb,KAAAa,QAAAS,eACAtB,KAAAgB,KAAAC,SAAAG,MAAApB,KAAAa,QAAAS,cAEA,EAEAM,OAAA,WACArB,EAAAO,GAAAc,OAAAb,KAAAf,MACAA,KAAA6B,MAAAjB,QAAAkB,YAAA,mBACA,EAEAX,wBAAA,SAAAN,GACA,IAAAY,EAAAZ,EAAAY,QAEA,IAAAA,IAAAA,EAAAM,OACA,OAAA,EAGA,IAAA,IAAAC,EAAA,EAAAA,EAAAP,EAAAM,OAAAC,IAAA,CACA,IAAAC,EAAAR,EAAAO,GAAAZ,MACA,IAAAa,GAAAC,MAAAC,SAAAF,EAAA,MAAAzB,EAAA4B,KAAAH,GACA,OAAA,CAEA,CAEA,OAAA,CACA,EAEAZ,wBAAA,SAAAR,GAIA,IAHA,IAAAY,EAAAZ,EAAAY,QACAY,EAAAlC,EAAAmC,QAAAC,YAEAP,EAAA,EAAAA,EAAAP,EAAAM,OAAAC,IAAA,CACA,IAAAC,EAAAR,EAAAO,GAAAZ,MACAiB,GAAAF,SAAAF,EAAA,GACA,CAEA,OAAAI,CACA,EAEAG,SAAA,WACAlC,EAAAQ,GAAA0B,SAAAzB,KAAAf,MACAA,KAAAyC,QAAAvB,SApEA,iBAqEA,IAGAb,EAAAqC,OAAAjC,GAEAN,EAAAwC,cAAAC,eAAA,sBAAA,YAEAzC,EAAAwC,cAAAE,eAAA,sBAAA,CAAA,CACAC,KAAA,UACAC,OAAA5C,EAAAwC,cAAAK,cAAAC,OAAA,CAAA,CAAA,OAAA,YAEA,CAtFA,CAsFA7C,OAAAD,MAAA+C,QACA/C,KAIA","file":"kendo.multicolumncombobox.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.combobox.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.combobox'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendomulticolumncombobox = global.kendomulticolumncombobox || {}, global.kendomulticolumncombobox.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"multicolumncombobox\",\n        name: \"MultiColumnComboBox\",\n        category: \"web\",\n        description: \"The MultiColumnComboBox widget allows the selection from pre-defined values or entering a new value where the list popup is rendered in table layout.\",\n        depends: [ \"combobox\" ],\n        features: [ {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }, {\n            id: \"virtualization\",\n            name: \"VirtualList\",\n            description: \"Support for virtualization\",\n            depends: [ \"virtuallist\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            ComboBox = ui.ComboBox,\n            Select = ui.Select,\n            percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n            MCCOMBOBOX = \"k-dropdowngrid\",\n            POPUPCLASS = \"k-dropdowngrid-popup\";\n\n        var MultiColumnComboBox = ComboBox.extend({\n            init: function(element, options) {\n                ComboBox.fn.init.call(this, element, options);\n                this.list.parent().addClass(POPUPCLASS);\n\n                if (this._allColumnsWidthsAreSet(this.options)) {\n                    this.list.parent().width(this._calculateDropDownWidth(this.options));\n                } else if (this.options.dropDownWidth) {\n                    this.list.parent().width(this.options.dropDownWidth);\n                }\n            },\n\n            options: {\n                name: \"MultiColumnComboBox\",\n                ns: \".kendoMultiColumnComboBox\",\n                columns: [],\n                dropDownWidth: null,\n                filterFields: []\n            },\n\n            setOptions: function(options) {\n                ComboBox.fn.setOptions.call(this, options);\n                if (this._allColumnsWidthsAreSet(options)) {\n                    this.list.parent().width(this._calculateDropDownWidth(options));\n                } else if (this.options.dropDownWidth) {\n                    this.list.parent().width(this.options.dropDownWidth);\n                }\n            },\n\n            _popup: function() {\n                Select.fn._popup.call(this);\n                this.popup.element.removeClass(\"k-list-container\");\n            },\n\n            _allColumnsWidthsAreSet: function(options) {\n                var columns = options.columns;\n\n                if (!columns || !columns.length) {\n                    return false;\n                }\n\n                for (var i = 0; i < columns.length; i++) {\n                    var currentWidth = columns[i].width;\n                    if (!currentWidth || isNaN(parseInt(currentWidth, 10)) || percentageUnitsRegex.test(currentWidth)) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _calculateDropDownWidth: function(options) {\n                var columns = options.columns;\n                var totalWidth = kendo.support.scrollbar();\n\n                for (var i = 0; i < columns.length; i++) {\n                    var currentWidth = columns[i].width;\n                    totalWidth = totalWidth + parseInt(currentWidth, 10);\n                }\n\n                return totalWidth;\n            },\n\n            _wrapper: function() {\n                ComboBox.fn._wrapper.call(this);\n                this.wrapper.addClass(MCCOMBOBOX);\n            }\n        });\n\n        ui.plugin(MultiColumnComboBox);\n\n        kendo.cssProperties.registerPrefix(\"MultiColumnComboBox\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"MultiColumnComboBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}