{"version":3,"sources":["raw-js/kendo.editor.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoeditor","js","this","$","editorNS","Command","GenericCommand","registerTool","Tool","RestorePoint","extend","InsertHtmlCommand","InsertHtmlTool","kendo","UndoRedoStack","Observable","init","options","fn","call","clear","events","push","command","stack","slice","currentCommandIndex","undo","canUndo","trigger","redo","canRedo","length","deepExtend","util","undefined$1","window","Class","Widget","ui","os","support","mobileOS","browser","keys","outerWidth","_outerWidth","outerHeight","_outerHeight","FORMATTING_MARKS_STYLE_ID","FORMATTING_MARKS_OVERLAY_ID","FORMATTING_MARKS_OVERLAY_WRAPPER_ID","SELECT","PLACEHOLDER_CLASS","PLACEHOLDER_TAG_ID","NATIVE_TOOLS","EditorUtils","editorWrapperTemplate","formatByName","name","format","i","inArray","tags","getToolCssClass","icon","cssClass","superscript","subscript","justifyLeft","justifyCenter","justifyRight","justifyFull","insertUnorderedList","insertOrderedList","insertUpperRomanList","insertLowerRomanList","import","indent","outdent","createLink","unlink","insertImage","insertFile","viewHtml","foreColor","backColor","createTable","addColumnLeft","addColumnRight","addRowAbove","addRowBelow","deleteRow","deleteColumn","mergeCellsHorizontally","mergeCellsVertically","splitCellHorizontally","splitCellVertically","tableProperties","tableCellProperties","tableWizardInsert","tableAlignLeft","tableAlignCenter","tableAlignRight","cleanFormatting","copyFormat","applyFormat","pdf","nameToKebab","replace","toLowerCase","toolName","tool","Editor","defaultTools","registerFormat","formatName","formats","cacheComments","content","comments","index","retrieveComments","supportedContentEditable","document","documentElement","toolGroups","basic","scripts","alignment","lines","symbols","links","lists","dent","tablesWizard","tablesInsert","tablesAddDelete","tablesMerge","tablesPosition","formatPainter","element","toolbarContainer","type","domElement","that","editor","dom","Dom","_registerHandler","closest","update","bind","_setupType","_initToolbar","_setupHeight","_resizable","_initializeContentElement","_setupKeyboard","clipboard","Clipboard","undoRedoStack","_populateValue","mousedown","_endTyping","mouseup","e","_mouseup","_handleSpaceAndNewLines","_initializeImmutables","_ariaLabel","wrapper","find","toolbar","resize","notify","_showWatermarkOverlay","messages","auto","bold","italic","underline","strikethrough","fitToCell","lineHeight","formattingMarks","insertHtml","fontName","fontNameInherit","fontSize","fontSizeInherit","formatBlock","formatting","style","emptyFolder","editAreaTitle","uploadFile","overflowAnchor","orderBy","orderBySize","orderByName","invalidFileType","deleteFile","overwriteFile","directoryNotFound","imageWebAddress","imageAltText","imageWidth","imageHeight","fileWebAddress","fileTitle","fileText","linkWebAddress","linkText","linkToolTip","linkOpenInNewWindow","dialogUpdate","dialogInsert","dialogOk","dialogCancel","createTableHint","tableWizard","tableTab","cellTab","accessibilityTab","caption","summary","width","height","units","cellSpacing","cellPadding","topPadding","leftPadding","bottomPadding","rightPadding","independentCellPaddings","cellMargin","captionAlignment","position","background","tableBackground","id","border","borderStyle","borderWidth","borderColor","collapseBorders","wrapText","associateCellsWithHeaders","alignLeft","alignCenter","alignRight","alignLeftTop","alignCenterTop","alignRightTop","alignLeftMiddle","alignCenterMiddle","alignRightMiddle","alignLeftBottom","alignCenterBottom","alignRightBottom","alignRemove","columns","rows","selectAllCells","applyToColumn","applyToRow","exportAs","print","headerRows","headerColumns","tableSummaryPlaceholder","associateNone","associateScope","associateIds","borderNone","placeholder","nonce","unsafeInline","encoded","formattingMarksRefreshDelay","domain","resizable","deserialization","custom","serialization","entities","semantic","optimizeTags","keepEOL","pasteCleanup","all","css","keepNewLines","msAllFormatting","msConvertLists","msTags","none","span","stylesheets","dialogOptions","modal","draggable","animation","imageBrowser","fileBrowser","navigateOnTab","text","value","tools","destroy","_deregisterHandlers","clearTimeout","_spellCorrectTimeout","_focusOutside","windowInstance","tablePopup","_destroyUploadWidget","resizeObserver","disconnect","_destroyResizings","_destroyFormattingMarksOverlay","setOptions","_setOptionsTools","_initializePlaceholder","createRange","RangeUtils","encodedValue","encode","exec","params","range","Error","body","getAttribute","keyboard","isTypingInProgress","_focusBody","selectRange","_range","getRange","Object","map","key","immutables","test","execCommand","async","change","_selectionChange","managesUndoRedo","focus","restoreSelection","selection","getSelection","rangeCount","getRangeAt","doc","startContainer","endContainer","startOffset","endOffset","setStart","collapse","SelectionUtils","selectionFromDocument","paste","html","refresh","textarea","val","remove","selectionRestorePoint","toRange","saveSelection","container","commonAncestorContainer","contains","selectedHtml","Serializer","domToXhtml","cloneContents","removeAllRanges","addRange","state","textNodes","finder","collapsed","getFormat","isFormatted","_togglePlaceholder","trim","_oldValue","currentHtml","htmlToDom","_refreshTools","_bindTools","unbind","filter","el","each","initialize","_blur","old","_containsRange","isAncestorOrSelf","_createContentElement","iframe","wnd","lang","specifiedDomain","domainScript","src","hide","title","frameBorder","addClass","attr","tabIndex","insertBefore","location","hostname","contentWindow","contentDocument","one","_decorateFormatting","getElementsByTagName","open","write","isRtl","ios","edge","chrome","href","join","close","_deleteSavedRange","component","dataSource","items","tag","className","formattingElement","getKendoDropDownList","data","list","getEffectiveBackground","inlineStyle","_appendFormattingMarksStyles","$head","head","append","_appendFormattingMarksOverlay","_formattingMarksOverlay","handlers","_handlers","h","off","handler","_uploadWidget","endTyping","scrollTop","activeElement","_activeElement","scrollHeight","clientHeight","msie","left","top","opacity","appendTo","_handleToolbarClick","target","_immutablesContext","Immutables","immutablesContext","editableTextNodes","blurTrigger","mousedownTrigger","createElement","setAttribute","appendChild","interval","setInterval","last","clearInterval","setTimeout","_mousedown","touch","keydown","_spellCorrect","parentElement","nodeName","_cachedHeight","restoreHeight","keyCode","BACKSPACE","DELETE","F10","first","preventPopupHide","preventDefault","LEFT","RIGHT","offset","next","nextChar","nodeType","nodeValue","toolFromShortcut","toolOptions","keyPressCommand","_runPostContentKeyCommands","keypress","_showElementResizeHandles","keyup","selectionCodes","TAB","PAGEUP","PAGEDOWN","END","HOME","UP","DOWN","INSERT","ctrlKey","altKey","shiftKey","_refreshInterval","click","selectNode","focusin","hasAttribute","_showWindow","focusout","active","popup","toolbarContainerElement","get","_toolbarFocused","hasClass","removeClass","_hideWindow","_initializeColumnResizing","_initializeRowResizing","_initializeElementResizing","defaults","toolbarOptions","_processToolbarItems","_setNativeTools","parentMessages","toggle","evaluateTemplates","ToolBar","on","is","_initToolbarWindow","toolbarEl","wrap","parent","prepend","kendoWindow","dragHandle","effects","minHeight","visible","autoFocus","actions","dragend","_moved","_selectionStarted","parents","stopPropagation","gecko","which","tagName","defaultValue","deserializedRoot","getAllComments","innerHTML","_resetGroups","current","result","optionsTools","j","t","guidGroupName","flatDefaultTools","processedObject","currentGroups","Array","isArray","guid","_processToolOptions","gr","includes","values","group","g","to","_processDefaultTool","isPlainObject","view","shortcuts","uiOptions","originalOptions","palette","template","showText","showIcon","tooltip","attributes","ColorTool","componentOptions","views","preview","input","buttons","_shortcutSequence","nodes","filterBy","htmlIndentSpace","_updateImmutablesState","eventNames","NS","hasOwnProperty","applyEventMap","split","toolsFromShortcut","o","changesContent","refreshDelay","applyFormattingMarks","clearFormattingMarksOverlay","_toggledFormattingMarks","children","_formattingMarksTimeout","empty","heightStyle","expectedHeight","parseInt","actualHeight","indexOf","isNaN","Keyboard","BackspaceHandler","TypingHandler","SystemHandler","SelectAllHandler","_wrapTextarea","res","ctrl","shift","alt","beforeCorrection","falseTrigger","contextmenu","mozilla","_finishUpdate","show","$body","toggleClass","overflowPopup","uiElement","trackImmutables","toolsToBeUpdated","w","editorWrap","editArea","isResizable","resizableMin","min","resizableMax","max","maxHeight","minWidth","maxWidth","ResizeObserver","_resizeTimeOut","observe","_destroyElementResizing","ElementResizingFactory","dispose","_destroyRowResizing","RowResizing","_destroyColumnResizing","ColumnResizing","create","_showElementResizeHandlesProxy","elementResizing","parentNode","showResizeHandles","columnResizing","rowResizing","_getWindowWidth","editorElement","_overlapsWindow","box","toolbarWrapper","toolbarWrapperOffset","toolbarWrapperLeft","toolbarWrapperTop","boxOffset","boxOffsetLeft","boxOffsetTop","editorOffset","Math","plugin","commandArguments","noop","UndoTool","enable","removeAttr","emptyElementContent","emptyTableCellContent","PDFMixin","prototype","_drawPDF","drawing","drawDOM","saveAsPDF","progress","Deferred","promise","args","then","root","exportPDF","done","dataURI","saveAs","fileName","proxyURL","proxyTarget","forceProxy","resolve","fail","err","reject","jQuery","STYLE","FLOAT","CSSFLOAT","STYLEFLOAT","CLASS","KMARKER","makeMap","len","obj","nonListBlockElements","blockElements","concat","block","selfClosing","inlineElements","inline","fillAttrs","nonEmptyNonTextContentElements","normalize","node","version","firstChild","prev","nextSibling","persistedScrollTop","whitespace","emptyspace","rgb","bom","whitespaceOrBom","cssAttributes","htmlRe","entityRe","entityTable","findNodeIndex","skipText","previousSibling","isDataNode","isAncestorOf","findClosestAncestor","rootElem","iterator","createNodeIterator","NodeFilter","SHOW_COMMENT","FILTER_ACCEPT","curNode","nextNode","getNodeLength","childNodes","splitDataNode","temp","newNode","cloneNode","denormalizedText","deleteData","insertAfter","attrEquals","cssFloat","blockParentOrBody","parentOfType","ownerDocument","blockParents","blocks","windowFromDocument","defaultView","parentWindow","nodeTypes","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","toHex","color","matches","x","toString","encodableChars","c","charCode","charCodeAt","entity","isBom","stripBom","stripBomNode","removeChild","insignificant","_moz_dirty","_moz_editor_bogus_node","tableCell","significantNodes","grep","child","emptyTextNode","emptyNode","significantChildNodes","isWhitespace","getTextNodes","lastTextNode","lastChild","isMarker","allowsTextContent","every","allWhitespaceContent","isEmptyspace","sibling","direction","isBlock","isPrevBlock","isNextBlock","isSelfClosing","isEmpty","isInline","isImg","isBr","scrollContainer","compatMode","scrollingElement","scrollTo","toStart","elementTop","elementHeight","marker","windowHeight","innerHeight","offsetHeight","ceil","persistScrollTop","offsetParent","offsetTop","offsetLeft","restoreScrollTop","undefined","insertAt","newElement","referenceElement","removeChildren","removeTextSiblings","closestBy","condition","rootCondition","ofType","changeTag","skipAttributes","attribute","specified","cssText","editableParent","contentEditable","unwrap","isChildOfBaseContainer","createEmptyNode","removeAttribute","mergeAttributes","origin","traverseCss","unstyle","backgroundStyle","innerText","classNames","classes","commonAncestor","ancestors","count","arguments","paths","minPathLength","Infinity","output","reverse","closestSplittableParent","apply","editableParents","editableAncestor","closestEditable","types","editable","closestEditableOfType","invert","match","ensureTrailingBreaks","elements","ensureTrailingBreak","removeTrailingBreak","br","reMapTableColumns","table","colAttr","_mapColIndices","clearTableMappings","registeredColumns","rowIndex","cells","colIndex","cellIndex","cell","rowSpan","_mapColspan","colSpan","ci","ri","associateWithIds","theadRows","numberOfTheadRows","tableRows","numberOfTableRows","theadMatrix","tbodyMatrix","tHead","_getNumberOfHeaderRows","_generateIdsForColumns","_generateIdsForRows","_assignIds","col","colspan","rowspan","k","l","timestamp","Date","getTime","row","headers","pushHeaderId","forEach","_onlyUnique","_getNumberOfColumns","currentIndex","numberOfCols","Number","_getNumberOfHeaderColumns","numberOfHeaderRows","number","fontSizeMappings","quoteRe","brRe","pixelRe","emptyPRe","cssDeclaration","sizzleAttr","scriptAttr","onerrorRe","bomSpan","div","supportsLeadingWhitespace","isFunction","toEditableHtml","_toEditableImmutables","immutable","prependTo","_fillEmptyElements","p","_removeSystemElements","_resetOrderedLists","ol","originalStart","ols","_preventScriptExecution","attributesToRemove","deserialize","semanticFilter","mapStart","tagMap","start","end","skipEncoding","canOptimize","semanticAttributes","specifiedAttributes","textDecoration","font","fontFamily","size","inlineStyles","ignoredStylePrefixes","prop","startsWith","strong","em","b","u","item","styleObj","splice","face","styleAttr","properties","property","lastIndex","cssProperties","$node","htmlEncode","skip","childNode","mapper","previous","jqNode","serialize","shouldOptimize","isEmptyBomNode","runCustom","script","childrenCount","textOnly","selectionFromWindow","W3CSelection","selectionFromRange","rangeDocument","documentFromRange","W3CRange","updateRangeProperties","fixIvalidRange","setEnd","setStartBefore","setStartAfter","setEndBefore","setEndAfter","selectNodeContents","deleteContents","cloneRange","deleteSubtree","hasPartialSubtree","getSubtreeIterator","RangeIterator","cloneSubtree","frag","createDocumentFragment","extractContents","extractSubtree","originalRange","insertNode","startNodeName","endNodeName","startAncestor","endAncestor","compareBoundaries","ex","isInvalidRange","fromNode","_current","_next","_end","hasNext","traverse","callback","delta","inStartContainer","inEndContainer","nodeIndex","getSubRange","subRange","textRange","createTextRange","adoptContainer","select","duplicate","right","textRangeContainer","adoptEndPoint","compareEndPoints","movedStart","movedEnd","cursorNode","textOffset","isData","anchorNode","anchorParent","cursor","moveToElementText","setEndPoint","comparison","appended","RangeEnumerator","enumerate","visit","ImmutablesRangeIterator","ImmutablesRangeEnumerator","rootNode","getEditable","nodeToPath","serializedImmutables","removeImmutables","restoreImmutables","lastType","restoreHtml","path","toRangePoint","denormalizedOffset","Marker","caret","addCaret","removeCaret","containerIndex","textNode","add","expand","isExpandable","rangeBoundary","_removeDeadMarkers","createTextNode","_normalizedIndex","pointer","shouldNormalizeStart","shouldNormalizeEnd","isBomSelected","charAt","collapsedToStart","startParent","endParent","startIndex","endIndex","boundary","immutableParent","image","stringify","partition","partitionRange","contents","mapAll","mapped","getAll","predicate","selector","getMarkers","isStartOf","isEndOf","wrapSelectedElements","startEditable","endEditable","isEnd","beforeCaret","afterCaret","search","substring","complexBlocks","IMMUTABALE","IMMUTABALE_MARKER_SELECTOR","randomId","chars","round","random","updateToolOptions","_initOptions","_toHtml","replaceWith","isDeleting","_cancelDeleting","_cancelTyping","typingInProgress","isTypingKey","backspace","del","cancelDeleting","nextImmutable","closestSelectionLi","closestImmutableLi","_removeImmutable","forwards","commonContainer","_nextNode","startRestorePoint","expandImmutablesIn","startImmutableParent","endImmutableParent","serialized","restorePoint","formatter","lockRange","releaseRange","point","createDialog","_actionButtonsTemplate","insertButtonIcon","cancelButtonIcon","renderButton","themeColor","endRestorePoint","ViewHtmlCommand","cmd","dialog","_footerTemplate","_footerMessages","center","FormatCommand","FormatTool","getKendoToolBar","getKendoToggleButton","MOUSEDOWN_NS","InlineFormatFinder","numberOfSiblings","referenceNode","textNodesCount","elementNodesCount","markerCount","findSuitable","sourceNode","findFormat","InlineFormatter","activate","formatNode","formatNodes","consolidate","outerMostInline","pop","GreedyInlineFormatFinder","greedyProperty","fontAttr","getInlineCssValue","attributeValue","pair","cssIndex","propertyAndValue","getFormatInner","parentsUntil","addBack","toArray","GreedyInlineFormatter","toCamelCase","action","InlineFormatTool","DelayedExecutionTool","FontTool","cssAttr","domAttr","widget","setDataSource","sender","newRange","ENTER","_widget","getKendoColorPicker","storedRange","_inputFocused","_popup","unselectable","_value","toCssRgba","fontWeight","togglable","fontStyle","overflow","toolIcon","commandOn","closeOnSelect","dataValueField","dataTextField","valuePrimitive","HTTP_PROTOCOL","protocolRegExp","endLinkCharsRegExp","LinkFormatFinder","LinkFormatter","markers","a","ref","UnlinkCommand","LinkCommand","url","_initialText","img","_close","_form","_createForm","_apply","_keydown","linkUrl","_dialog","formElement","form","kendoForm","renderButtons","field","label","editorOptions","after","ESC","textInput","anchor","AutoLinkCommand","detectedLink","detectLink","linkMarker","linkRange","_ensureWebProtocol","startNode","traverser","LeftDomTextTraverser","cancelAtNode","DomTextLinkDetection","_hasProtocolPrefix","_prefixWithWebProtocol","UnlinkTool","isLink","DomPos","_detectEnd","blank","clone","_detectStart","_isLinkDetected","puntuationOptions","extendOptions","RightDomTextTraverser","_skipStartPuntuation","lastIndexOfRegExp","ii","r","str","DomTextTraverser","cancel","_traverse","edgeNode","subText","splitIndex","SPACEBAR","BlockFormatFinder","candidate","suitable","f","_resolveListsItems","until","ImmutablesNS","BlockFormatter","ancestor","_handleImmutables","images","imageAttributes","nonImages","applyFormatting","immutableFormat","namedFormat","GreedyBlockFormatter","formatTag","ListFormatter","blockFormatter","BlockFormatTool","listElements","textAlign","float","display","marginLeft","marginRight","listStylePosition","ListFormatFinder","altAttr","matchesType","isList","unwrapTag","li","isImmutable","containsAny","_parentLists","merge","breakable","findSuitableNode","applyOnSection","section","pushAncestor","listStyleType","lastSection","lastNodes","sections","addLastSection","ul","fragment","ListCommand","ListTool","FormattingTool","toFormattingItem","dot","context","decorate","optionLabel","dataItem","toJSON","dataBound","getFormattingValue","n","selectBox","_ancestor","operator","CleanFormatCommand","tagsToClean","clean","listFormatter","unwrapListItem","highlightFirst","autoWidth","KEDITORIMAGEURL","KEDITORIMAGETITLE","KEDITORIMAGEWIDTH","KEDITORIMAGEHEIGHT","ImageCommand","removeIEAttributes","onload","onerror","applied","isIE","showBrowser","ImageBrowser","transport","read","_imageBrowser","ev","selected","dialogHeight","loadingOverlay","ImportCommand","_initializeUploadWidget","importOptions","upload","kendoUpload","success","_onUploadSuccess","_onUploadProgress","_onUploadSelect","error","_onUploadError","complete","_onUploadComplete","showFileList","multiple","saveUrl","autoUpload","saveField","validation","allowedExtensions","maxFileSize","getKendoUpload","_trigger","clearAllFiles","_removeLoadingOverlay","response","files","validationErrors","_initLoadingOverlay","eventType","uploadEvent","_iframeWrapper","_container","postProcess","genericCommand","initialValue","autoSize","ExportAsCommand","exportType","postToProxy","generateForm","submit","exportAsOptions","method","valueInput","exportTypeInput","fileNameInput","antiForgeryInput","csrf_param","ExportAsTool","changeHandler","_exec","itemTemplate","valueTemplate","iconClass","indentDirection","IndentFormatter","parentList","targets","mapImmutables","siblingList","nestedList","getListTypeAttr","targetIndex","styleType","targetNode","listParent","siblings","nextAll","IndentCommand","indentFormatter","OutdentCommand","OutdentTool","isOutdentable","listParentsCount","suitableNodes","ParagraphCommand","_insertMarker","_moveFocus","focusNode","shouldTrim","startInBlock","endInBlock","_blankAfter","paragraph","heading","tableNode","rng","emptyParagraphContent","parentChildrenLength","_insertParagraphAfter","NewLineCommand","filler","kbrParent","oldIE","KEDITORFILEURL","KEDITORFILETEXT","KEDITORFILETITLE","FileCommand","file","FileBrowser","_fileBrowser","ACTIVESTATE","SELECTEDSTATE","SCOPE","ROW","COL","ROWGROUP","COLGROUP","COLSPAN","ROWSPAN","TABLE","THEAD","TBODY","TR","TD","TH","getTouches","columnTemplate","tableFormatFinder","TableCommand","skipCleaners","_tableHtml","columnHtml","rowHeight","insertedTable","PopupTool","btn","popupTemplate","kendoPopup","copyAnchorStyles","_open","_activate","_toggle","_editor","TableWizardTool","TableWizardCommand","insertNewTable","kendoButton","_setTableSize","InsertTableTool","cols","cellWidth","cellHeight","firstCell","eq","lastCell","getOffset","tableFromLocation","floor","clientY","clientX","scrollLeft","offsetWidth","autoApplyNS","_valid","status","initiallyVisible","button","selectedRows","selectedColumns","changed","tableSize","stopImmediatePropagation","TableModificationCommand","_clearColIndexAttr","_findRowSpanCell","_resetElementResizing","_findNextTdInRow","td","lastTd","_adjustColgroups","colgroup","colElements","colgroupElements","numberOfCells","_associateHeaderIds","InsertRowCommand","cellCount","newRow","createdCell","_appendCell","newCell","InsertColumnCommand","columnIndex","_processForColSpan","_resizeCells","selectedCell","colSpanEffect","parsedWidth","unit","calculatedWidth","parseFloat","DeleteRowCommand","focusElement","rowParent","_focusElement","_handleRowSpanCells","adjacentCell","nextRow","firstRow","before","_reduceRowSpan","rowSpanValue","DeleteColumnCommand","columnCount","_handleColSpanCells","_reduceColSpan","colSpanValue","MergeCellsHorizontallyCommand","nextTd","_getColspan","MergeCellsVerticallyCommand","tr","targetRow","bottomTd","_getRowspan","SplitCellCommand","emptyTd","_splitCellHorizontally","_splitCellVertically","_getRowspanValue","_getColspanValue","tdToAdd","colSpanResult","rowSpanResult","TableModificationTool","commandsMap","insert","delete","column","TableFormatCommand","_showResizeHandles","TableFormatTool","isTable","align","nonSplittableTagsOnPaste","cleaners","ScriptCleaner","TabCleaner","MSWordFormatCleaner","WebkitFormatCleaner","HtmlTagsCleaner","HtmlAttrCleaner","HtmlContentCleaner","CustomCleaner","htmlToFragment","_startModification","_inProgress","_endModification","modificationInfo","_contentModification","_removeBomNodes","_onBeforeCopy","oncopy","oncut","_fileToDataURL","blob","deferred","reader","FileReader","File","getAsFile","readAsDataURL","_triggerPaste","_handleImagePaste","clipboardData","originalEvent","_insertImages","when","results","onpaste","clipboardNode","_decoreateClipboardNode","webkit","_moveToCaretPosition","clipboardRange","containers","ondragover","ondrop","dataTransfer","margin","padding","fontVariant","lineSpacing","nodeOffset","caretOffset","_caretOffset","translate","transform","rangeChanged","isStartTextNode","prevLength","bomNode","splittableParent","preventSplit","unwrapPasted","applicable","splitter","splittable","fragmentsHtml","elm","rangeEnd","focusedTable","siblingNodes","lastSiblingIndex","lastSibling","Cleaner","replacements","customReplacements","junkReplacements","convertFontMatch","$0","$1","closing","family","stripEmptyAnchors","listType","listData","startingSymbol","matchSymbol","symbol","isNumber","trimStartText","_guessUnorderedListStyle","_guessOrderedListStyle","_convertToLi","_checkForBullet","_getHtmlNoBullet","extractListLevels","level","_createList","rootMargin","rootIndex","lastRootLi","isLastRootLi","rootList","blockChildren","lastMargin","levels","acceptedNameTags","listIndex","levelType","removeAttributes","significantStyles","addSignificantStyles","isSignificantCss","removeAttributeNode","createColGroup","convertHeaders","boldedCells","removeParagraphs","paragraphs","removeTextNodes","trs","currentNode","tables","longestRow","titles","removeFormatting","filters","DomCleaner","cleanDom","collectTags","collectAttr","TextContainer","HtmlTextLines","separators","line","inlineBlockText","resetLine","appendText","textContainer","appendInlineBlockText","flashInlineBlockText","endLine","il","il1","jl","jl1","DomEnumerator","preventDown","hasText","enumerator","buildText","getDefaultSeparators","htmlLines","thead","tbody","cleaner","cellText","PREVIOUS_SIBLING","getSibling","tableCells","tableCellsWrappers","tableElements","inTable","RemoveTableContent","cellsTypes","startCell","endCell","_removeContent","getNext","evt","Event","isDefaultPrevented","deleteSelection","startTyping","_removeBomSpan","textContent","_addCaret","_restoreCaret","_handleDelete","caretPlaceholder","_merge","_cleanBomBefore","_handleBackspace","startAtLi","liIndex","startAtNonFirstLi","rangeStartNode","previousNode","_handleSelection","parentElementOrNode","_surroundFullyContent","_surroundFullySelectedAnchor","toLocaleLowerCase","_join","startImmutable","endImmutable","_moveMarker","_root","dest","_mergeWithTextNode","appendedNode","_isCaret","systemCommandIsInProgress","createUndoCommand","isModifierKey","isSystem","_toSelectableImmutables","_selectEditorBody","isCharacter","String","fromCharCode","modifier","_getShortcutModifier","navigator","platform","toUpperCase","metaKey","found","matchKey","toolKey","onEndTyping","stopTyping","force","timeout","what","ExportPdfCommand","PrintCommand","CopyFormatCommand","blockStyles","collectStyles","rangeNodes","populateStyles","destination","styleValue","styleKey","attributeKey","styles","nodeStyles","ApplyFormatCommand","removeEmptyElementsFromRange","cleanInlineParents","applyBlockStyles","applyInlineStyles","emptyElements","blockParent","outerWrapper","previousNodes","nextNodes","prevWrapper","nextWrapper","listItems","currentStyle","createdNode","topNode","CopyFormatTool","ApplyFormatTool","LineHeightCommand","LineHeightFormatTool","getKendoComboBox","prefixOptions","DOM","createMark","character","clonedRange","domRect","y","getBoundingClientRect","createElementNS","setAttributeNS","appendSvgMarks","overlay","FormattingMarksCommand","math","REGEX_NUMBER_IN_PERCENTAGES","REGEX_NUMBER_IN_PIXELS","STRING","inPercentages","ResizingUtils","constrain","lowerBound","upperBound","getScrollBarWidth","scrollbar","calculatePercentageRatio","total","inPixels","toPercentages","toPixels","KEY_DOWN","MOUSE_LEAVE","MOUSE_UP","TableElementResizing","_attachEventHandlers","eventNamespace","rootElement","_destroyResizeHandle","rtl","handle","dataAttribute","detectElementBorderHovering","resizingInProgress","resizing","handleOptions","tableElement","currentTarget","resizeHandle","elementBorderHovered","showResizeHandle","_initResizeHandle","setResizeHandlePosition","setResizeHandleDimensions","setResizeHandleDataAttributes","_attachResizeHandleEventHandlers","_initResizable","_hideResizeMarker","markerClass","_destroyResizable","Resizable","draggableElement","onResizeStart","onResize","resizeend","onResizeEnd","_disableKeyboard","setResizeHandleDragPosition","_enableKeyboard","_forceResizing","userEvents","ResizingFactory","resizingName","_destroyResizing","_initResizing","parentTable","resizingType","abs","RESIZE_HANDLE_CLASS","RESIZE_MARKER_CLASS","BODY","COLATTR","COMMA","WIDTH","handleWidth","borderOffset","mousePosition","tableInnerElement","tBodies","scrollTopOffset","scrollLeftOffset","columnWidthOffset","scrollBarWidth","columnOffsetLeft","innerElementOffsetTop","tableHead","tableBody","fullHeight","columnWidth","columnLeftOffset","adjacentColumnWidth","resizeHandleOffsetLeft","handleOffset","newWidth","initialAdjacentColumnWidth","initialColumnWidth","nextColumn","rtlModifier","initialDeltaX","initialDelta","_setTableComputedWidth","_setColumnsComputedWidth","_resizeColumn","_resizeTopAndBottomColumns","_resizeAdjacentColumns","innerElementWidth","currentColumnsWidths","topAndBottomColumns","innerTableElement","deltaWidth","adjacentColumns","_resizeAdjacentColumn","adjacentColumn","HEIGHT","handleHeight","rowOffsetLeft","rowOffsetTop","topInnerTableElement","$row","tableTopOffset","resizeHandleOffsetTop","currentRowHeight","initialTableHeight","tableHeadHeight","tableBodyHeight","initialStyleHeight","newRowHeight","_setRowsHeightInPixels","_setTableHeight","_setRowsHeightInPercentages","currentRowsHeights","newHeight","Draggable","DRAG_START","DRAG","DRAG_END","HALF_INSIDE","MOUSE_OVER","MOUSE_OUT","EAST","NORTH","NORTHEAST","NORTHWEST","SOUTH","SOUTHEAST","SOUTHWEST","WEST","ElementResizeHandle","_addStyles","_initDraggable","_initPositioningStrategy","_initDraggingStrategy","resizableElement","_destroyDraggable","_setPosition","_positioningStrategy","getPosition","_onMouseOver","_onMouseOut","HandlePositioningStrategy","_draggable","dragstart","_onDragStart","drag","_onDrag","_onDragEnd","_draggingStrategy","adjustDragDelta","deltaX","deltaY","initialDeltaY","HandleDraggingStrategy","StrategyFactory","_items","register","itemsLength","PositioningStrategyFactory","calculatePosition","handleOffsetPosition","applyHandleOffset","applyScrollOffset","rootLeft","EastPositioningStrategy","NorthPositioningStrategy","NortheastPositioningStrategy","NorthwestPositioningStrategy","SouthPositioningStrategy","SoutheastPositioningStrategy","SouthwestPositioningStrategy","WestPositioningStrategy","DraggingStrategyFactory","adjustment","deltas","xAxisAdjustment","yAxisAdjustment","HorizontalDraggingStrategy","EastDraggingStrategy","WestDraggingStrategy","VerticalDraggingStrategy","NorthDraggingStrategy","SouthDraggingStrategy","HorizontalAndVerticalDraggingStrategy","NorthEastDraggingStrategy","NorthWestDraggingStrategy","SouthEastDraggingStrategy","SouthWestDraggingStrategy","RESIZE_HANDLE_WRAPPER_CLASS","ELEMENT_RESIZING_CLASS","MOUSE_DOWN","ELEMENT_TYPES","isUndefined","ElementResizing","handles","_destroyResizeHandles","appendHandlesTo","_resizeWidth","_resizeHeight","_getMaxDimensionValue","dimension","dimensionLowercase","parentDimension","parentScrollOffset","_initResizeHandles","_bindToResizeHandlesEvents","_onResizeHandleDragStart","_initialElementHeight","_initialElementWidth","_onResizeHandleDrag","_onResizeHandleDragEnd","TableResizing","_hasRowsInPixels","ratioValue","ratioTotalValue","constrainedWidth","styleWidth","currentWidth","parentWidth","_setColumnsWidth","constrainedHeight","styleHeight","currentHeight","parentHeight","hasRowsInPixels","parentColumn","columnsLength","isWidthInPercentages","ImageResizing","_onResizeHandleDragVertical","_onResizeHandleDragHorizontal","_onResizeHandleDragLocked","_getDeltas","initialWidth","initialHeight","MAX_SAFE_INTEGER","hasImg","eventTarget","eventCurrentTarget","isResizeHandleOrChild","tableResizing","cellsFormatFinder","reUnit","COL_INDEX","isTableCellWizard","tableCellWizard","selectedTable","_sourceTable","_selectedTable","selectedCells","_selectedTableCells","_selectedCells","closeCallback","onDialogClose","parseTable","TableWizardDialog","insertTable","createNewTable","updateTable","_ensureFocusableAfterTable","lastSelectedRow","cellProp","tableProp","_lastInCollection","_deleteTableRows","_addRows","_updateColumns","_updateTableProperties","cellProperties","_updateCellProperties","_updateCaption","_updateHeadersWithThead","_updateHeadersNoThead","_updateHeaderAssociates","_isHeadingRow","_isHeadingCell","cellsWithHeadersAssociated","headingIds","checkHeader","header","headersArray","headersAttr","some","_insertCells","insertCell","createTHead","_createTableRows","createTBody","cellsWithHeaders","_addScopes","initialIndex","insertRow","cellsLength","newRowsCount","firstRowLastCell","numberOfColumns","lastCurrentCell","rowColumns","deleteCell","_getStylesData","topCellPadding","_getNumericValue","leftCellPadding","bottomCellPadding","rightCellPadding","tableData","paddingTop","paddingLeft","paddingBottom","paddingRight","captionContent","deleteCaption","createCaption","_getAlignmentData","verticalAlign","_swapToHeaderCells","deleteTHead","_removeScopes","_removeAssociates","headerCols","whiteSpace","widthUnit","heightUnit","backgroundColor","bgColor","borderCollapse","_getTablePositionData","tStyle","captionClone","tableAlignment","_getAlignment","tablePosition","_getTablePosition","numberOfHeaderColumns","tableJson","_getUnit","parseTableRows","rowData","cellData","parseCell","cStyle","horizontalOnly","hAlign","vAlign","collection","TableWizardEditTool","TableCellWizardEditTool","FORM_FIELD_CLASS","INVISIBLE_CLASS","DOT","numericTextBoxSettings","borderStyles","textWrapDropDownSettings","tablePositionDropDownSettings","tableAlignmentDropDownSettings","cellAlignmentDropDownSettings","accessibilityAlignmentDropDownSettings","tablePropertiesDialogTemplate","cellPropertiesDialogTemplate","_openTablePropertiesDialog","closeHandler","_dialogTemplate","collectTableDialogValues","components","_initTabStripComponent","_tablePropertiesForm","_createTablePropertiesForm","_accessibilityPropertiesForm","_createAccessibilityPropertiesForm","_openCellPropertiesDialog","collectCellDialogValues","_cellPropertiesForm","_createCellPropertiesForm","isCellProperties","tabStrip","kendoTabStrip","_collectTableViewValues","_collectAccessibilityViewValues","_collectCellViewValues","tableView","check","cellView","wrapTextValue","accessibilityView","_addUnit","_initNumericTextbox","storage","settings","kendoNumericTextBox","_initDropDownList","kendoDropDownList","_setComponentValue","_initBorderStyleDropDown","_initTablePositionDropDown","_initPositionDropDown","_initTableAlignmentDropDown","_initAlignmentDropDown","_initCellAlignmentDropDown","_initAccessibilityAlignmentDropDown","_initTextWrapDropDown","_initAssociationDropDown","_initColorPicker","kendoColorPicker","clearButton","_initInput","kendoTextBox","_initCheckbox","kendoCheckBox","_initTextArea","kendoTextArea","_destroyComponents","dialogTemplate","_onPaddingTopChange","viewType","topCellPaddingNumeric","topCellPaddingValue","leftCellPaddingNumeric","bottomCellPaddingNumeric","rightCellPaddingNumeric","_cachedPadding","_onPaddingCheckChange","checked","bottomCellPaddingValue","leftCellPaddingValue","rightCellPaddingValue","_onColumnsNumberChange","headerColumnsNumeric","currentNumberOfColumnsHeaders","_onRowsNumberChange","headerRowsNumeric","currentNumberOfRowHeaders","numberOfRows","layout","grid","gutter","layoutWrapper","hint","optional"],"mappings":"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","file":"kendo.editor.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.combobox.js'), require('kendo.dropdownlist.js'), require('kendo.resizable.js'), require('kendo.window.js'), require('kendo.colorpicker.js'), require('kendo.imagebrowser.js'), require('kendo.numerictextbox.js'), require('kendo.textarea.js'), require('kendo.core.js'), require('kendo.toolbar.js'), require('kendo.icons.js'), require('kendo.form.js'), require('kendo.filebrowser.js'), require('kendo.draganddrop.js'), require('kendo.html.button.js'), require('kendo.tabstrip.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.combobox', 'kendo.dropdownlist', 'kendo.resizable', 'kendo.window', 'kendo.colorpicker', 'kendo.imagebrowser', 'kendo.numerictextbox', 'kendo.textarea', 'kendo.core', 'kendo.toolbar', 'kendo.icons', 'kendo.form', 'kendo.filebrowser', 'kendo.draganddrop', 'kendo.html.button', 'kendo.tabstrip'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoeditor = global.kendoeditor || {}, global.kendoeditor.js = factory()));\n})(this, (function () {\n    (function(kendo) {\n        var UndoRedoStack = kendo.Observable.extend({\n            init: function(options) {\n                kendo.Observable.fn.init.call(this, options);\n                this.clear();\n            },\n            events: [ \"undo\", \"redo\" ],\n            push: function (command) {\n                this.stack = this.stack.slice(0, this.currentCommandIndex + 1);\n                this.currentCommandIndex = this.stack.push(command) - 1;\n            },\n            undo: function () {\n                if (this.canUndo()) {\n                    var command = this.stack[this.currentCommandIndex--];\n                    command.undo();\n                    this.trigger(\"undo\", { command: command });\n                }\n            },\n            redo: function () {\n                if (this.canRedo()) {\n                    var command = this.stack[++this.currentCommandIndex];\n                    command.redo();\n                    this.trigger(\"redo\", { command: command });\n                }\n            },\n            clear: function() {\n                this.stack = [];\n                this.currentCommandIndex = -1;\n            },\n            canUndo: function () {\n                return this.currentCommandIndex >= 0;\n            },\n            canRedo: function () {\n                return this.currentCommandIndex != this.stack.length - 1;\n            }\n        });\n\n        kendo.deepExtend(kendo, {\n            util: {\n                UndoRedoStack: UndoRedoStack\n            }\n        });\n    })(kendo);\n\n    (function($,undefined$1) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            Widget = kendo.ui.Widget,\n            os = kendo.support.mobileOS,\n            browser = kendo.support.browser,\n            extend = $.extend,\n            deepExtend = kendo.deepExtend,\n            keys = kendo.keys,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            NS = \".kendoEditor\";\n\n        const FORMATTING_MARKS_STYLE_ID = \"formatting-marks-style\",\n              FORMATTING_MARKS_OVERLAY_ID = \"formatting-marks-overlay\",\n              FORMATTING_MARKS_OVERLAY_WRAPPER_ID = \"formatting-marks-overlay-wrapper\";\n\n        var SELECT = \"select\";\n        var SELECT_OVERLAY_SELECTOR = \"select.k-select-overlay\";\n        var PLACEHOLDER_CLASS = \"k-placeholder\";\n        var PLACEHOLDER_TAG_ID = \"placeholder\";\n        var REFRESH_INTERVAL = 200;\n        var DEFAULT_LANGUAGE = \"en\";\n\n        var NATIVE_TOOLS = [\n            \"insertLineBreak\",\n            \"insertParagraph\",\n            \"redo\",\n            \"undo\",\n            \"autoLink\"\n        ];\n\n        var EditorUtils = {\n            editorWrapperTemplate: () =>\n                '<div class=\"k-editor\">' +\n                    '<div class=\"k-editor-toolbar\" role=\"toolbar\"></div>' +\n                    '<div class=\"k-editable-area k-editor-content\"></div>' +\n                '</div>',\n\n            formatByName: function(name, format) {\n                for (var i = 0; i < format.length; i++) {\n                    if ($.inArray(name, format[i].tags) >= 0) {\n                        return format[i];\n                    }\n                }\n            },\n\n            getToolCssClass: function(name, icon) {\n                var toolCssClassNames = {\n                    superscript: \"supscript\",\n                    subscript: \"subscript\",\n                    justifyLeft: \"align-left\",\n                    justifyCenter: \"align-center\",\n                    justifyRight: \"align-right\",\n                    justifyFull: \"align-justify\",\n                    insertUnorderedList: \"list-unordered\",\n                    insertOrderedList: \"list-ordered\",\n                    insertUpperRomanList: \"list-roman-upper\",\n                    insertLowerRomanList: \"list-roman-lower\",\n                    \"import\": \"import\",\n                    indent: \"indent\",\n                    outdent: \"outdent\",\n                    createLink: \"link\",\n                    unlink: \"unlink\",\n                    insertImage: \"image\",\n                    insertFile: \"file-add\",\n                    viewHtml: \"code\",\n                    foreColor: \"foreground-color\",\n                    backColor: \"droplet\",\n                    createTable: \"table-add\",\n                    addColumnLeft: \"table-column-insert-left\",\n                    addColumnRight: \"table-column-insert-right\",\n                    addRowAbove: \"table-row-insert-above\",\n                    addRowBelow: \"table-row-insert-below\",\n                    deleteRow: \"table-row-delete\",\n                    deleteColumn: \"table-column-delete\",\n                    mergeCellsHorizontally: \"cells-merge-horizontally\",\n                    mergeCellsVertically: \"cells-merge-vertically\",\n                    splitCellHorizontally: \"cell-split-horizontally\",\n                    splitCellVertically: \"cell-split-vertically\",\n                    tableProperties: \"table-properties\",\n                    tableCellProperties: \"table-cell-properties\",\n                    tableWizardInsert: \"table-wizard\",\n                    tableAlignLeft: \"table-position-start\",\n                    tableAlignCenter: \"table-position-center\",\n                    tableAlignRight: \"table-position-end\",\n                    cleanFormatting: \"clear-css\",\n                    copyFormat: \"copy-format\",\n                    applyFormat: \"apply-format\",\n                    pdf: \"file-pdf\"\n                };\n\n                var cssClass = toolCssClassNames[name];\n\n                if (cssClass) {\n                    return cssClass;\n                }\n\n                if (icon) {\n                    return icon;\n                }\n\n                return EditorUtils.nameToKebab(name);\n            },\n\n            nameToKebab: function(name) {\n                return name.replace(/([a-z])([A-Z])/g, \"$1-$2\")\n                    .replace(/[\\s_]+/g, '-')\n                    .toLowerCase();\n            },\n\n            registerTool: function(toolName, tool) {\n                if (!tool.name) {\n                    tool.options.name = toolName;\n                    tool.name = toolName.toLowerCase();\n                }\n\n                if (!tool.options.ui) {\n                    tool.options.ui = {};\n                }\n\n                tool.options.ui.command = toolName;\n\n                Editor.defaultTools[toolName] = tool;\n            },\n\n            registerFormat: function(formatName, format) {\n                Editor.fn.options.formats[formatName] = format;\n            },\n\n            cacheComments: function(content, comments) {\n                for (var index in comments) {\n                    content = content.replace(comments[index], \"{\" + index + \"}\");\n                }\n                return content;\n            },\n\n            retrieveComments: function(content, comments) {\n                for (var index in comments) {\n                    content = content.replace(\"{\" + index + \"}\", comments[index]);\n                }\n                return content;\n            }\n        };\n\n        var messages = {\n            auto: \"Auto\",\n            bold: \"Bold\",\n            italic: \"Italic\",\n            underline: \"Underline\",\n            strikethrough: \"Strikethrough\",\n            superscript: \"Superscript\",\n            subscript: \"Subscript\",\n            fitToCell: \"Fit to cell\",\n            justifyCenter: \"Center text\",\n            justifyLeft: \"Align text left\",\n            justifyRight: \"Align text right\",\n            justifyFull: \"Justify\",\n            insertUnorderedList: \"Insert unordered list\",\n            insertOrderedList: \"Insert ordered list\",\n            lineHeight: \"Set line height\",\n            formattingMarks: \"Toggle formatting marks\",\n            indent: \"Indent\",\n            outdent: \"Outdent\",\n            createLink: \"Insert hyperlink\",\n            unlink: \"Remove hyperlink\",\n            insertImage: \"Insert image\",\n            insertFile: \"Insert file\",\n            insertHtml: \"Insert HTML\",\n            viewHtml: \"View HTML\",\n            fontName: \"Select font family\",\n            fontNameInherit: \"(inherited font)\",\n            fontSize: \"Select font size\",\n            fontSizeInherit: \"(inherited size)\",\n            formatBlock: \"Format\",\n            formatting: \"Format\",\n            foreColor: \"Color\",\n            backColor: \"Background color\",\n            style: \"Styles\",\n            emptyFolder: \"Empty Folder\",\n            editAreaTitle: \"Editable area. Press F10 for toolbar.\",\n            uploadFile: \"Upload\",\n            overflowAnchor: \"More tools\",\n            orderBy: \"Arrange by:\",\n            orderBySize: \"Size\",\n            orderByName: \"Name\",\n            invalidFileType: \"The selected file \\\"{0}\\\" is not valid. Supported file types are {1}.\",\n            deleteFile: 'Are you sure you want to delete \"{0}\"?',\n            overwriteFile: 'A file with name \"{0}\" already exists in the current directory. Do you want to overwrite it?',\n            directoryNotFound: \"A directory with this name was not found.\",\n            imageWebAddress: \"Web address\",\n            imageAltText: \"Alternate text\",\n            imageWidth: \"Width (px)\",\n            imageHeight: \"Height (px)\",\n            fileWebAddress: \"Web address\",\n            fileTitle: \"Title\",\n            fileText: \"Text\",\n            linkWebAddress: \"Web address\",\n            linkText: \"Text\",\n            linkToolTip: \"ToolTip\",\n            linkOpenInNewWindow: \"Open link in new window\",\n            dialogUpdate: \"Update\",\n            dialogInsert: \"Insert\",\n            dialogOk: \"Confirm\",\n            dialogCancel: \"Cancel\",\n            cleanFormatting: \"Clean formatting\",\n            createTable: \"Create a table\",\n            createTableHint: \"Create a {0} x {1} table\",\n            addColumnLeft: \"Add column on the left\",\n            addColumnRight: \"Add column on the right\",\n            addRowAbove: \"Add row above\",\n            addRowBelow: \"Add row below\",\n            deleteRow: \"Delete row\",\n            deleteColumn: \"Delete column\",\n            mergeCellsHorizontally: \"Merge cells horizontally\",\n            mergeCellsVertically: \"Merge cells vertically\",\n            splitCellHorizontally: \"Split cells horizontally\",\n            splitCellVertically: \"Split cells vertically\",\n            tableAlignLeft: \"Table Align Left\",\n            tableAlignCenter: \"Table Align Center\",\n            tableAlignRight: \"Table Align Right\",\n            tableWizard: \"Table Wizard\",\n            tableProperties: \"Table Properties\",\n            tableCellProperties: \"Cell Properties\",\n            tableTab: \"General\",\n            cellTab: \"Cell\",\n            accessibilityTab: \"Advanced\",\n            caption: \"Caption\",\n            summary: \"Summary\",\n            width: \"Width\",\n            height: \"Height\",\n            units: \"Units\",\n            cellSpacing: \"Cell Spacing\",\n            cellPadding: \"Cell Padding\",\n            topPadding: \"Top\",\n            leftPadding: \"Left\",\n            bottomPadding: \"Bottom\",\n            rightPadding: \"Right\",\n            independentCellPaddings: \"Independent Cell Paddings\",\n            cellMargin: \"Cell Margin\",\n            alignment: \"Alignment\",\n            captionAlignment: \"Caption alignment\",\n            position: \"Position\",\n            background: \"Background\",\n            tableBackground: \"Table background\",\n            cssClass: \"CSS Class\",\n            id: \"ID\",\n            border: \"Border\",\n            borderStyle: \"Border Style\",\n            borderWidth: \"Border Width\",\n            borderColor: \"Border Color\",\n            collapseBorders: \"Collapse borders\",\n            wrapText: \"Wrap text\",\n            associateCellsWithHeaders: \"Associate headers\",\n            alignLeft: \"Align Left\",\n            alignCenter: \"Align Center\",\n            alignRight: \"Align Right\",\n            alignLeftTop: \"Align Left Top\",\n            alignCenterTop: \"Align Center Top\",\n            alignRightTop: \"Align Right Top\",\n            alignLeftMiddle: \"Align Left Middle\",\n            alignCenterMiddle: \"Align Center Middle\",\n            alignRightMiddle: \"Align Right Middle\",\n            alignLeftBottom: \"Align Left Bottom\",\n            alignCenterBottom: \"Align Center Bottom\",\n            alignRightBottom: \"Align Right Bottom\",\n            alignRemove: \"Remove Alignment\",\n            columns: \"Columns\",\n            rows: \"Rows\",\n            selectAllCells: \"Apply to all cells\",\n            applyToColumn: \"apply to column\",\n            applyToRow: \"apply to row\",\n            exportAs: \"Export As\",\n            \"import\": \"Import\",\n            print: \"Print\",\n            headerRows: \"Header Rows\",\n            headerColumns: \"Header Cols\",\n            tableSummaryPlaceholder: \"Summary attribute is not HTML5 compatible.\",\n            associateNone: \"None\",\n            associateScope: \"Associate using 'scope' attribute\",\n            associateIds: \"Associate using Ids\",\n            copyFormat: \"Copy format\",\n            applyFormat: \"Apply format\",\n            borderNone: \"None\",\n            undo: \"Undo\",\n            redo: \"Redo\"\n        };\n\n        var supportedContentEditable = typeof(document.documentElement.contentEditable) != 'undefined';\n\n        var toolGroups = {\n            basic: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n            undo: [\"undo\", \"redo\"],\n            scripts: [\"subscript\", \"superscript\" ],\n            alignment: [\"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\" ],\n            lines: [\"lineHeight\"],\n            symbols: [\"formattingMarks\"],\n            links: [\"insertImage\", \"insertFile\", \"createLink\", \"unlink\"],\n            lists: [\"insertUnorderedList\", \"insertOrderedList\", \"insertUpperRomanList\", \"insertLowerRomanList\",],\n            dent: [\"indent\", \"outdent\"],\n            tablesWizard: [\"tableProperties\", \"tableCellProperties\"],\n            tablesInsert: [\"createTable\"],\n            tablesAddDelete: [ \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\" ],\n            tablesMerge: [ \"mergeCellsHorizontally\", \"mergeCellsVertically\", \"splitCellHorizontally\", \"splitCellVertically\" ],\n            tablesPosition: [ \"tableAlignLeft\", \"tableAlignCenter\", \"tableAlignRight\" ],\n            formatPainter: [ \"copyFormat\", \"applyFormat\" ]\n        };\n\n        var Editor = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    editorNS = kendo.ui.editor,\n                    dom = editorNS.Dom,\n                    toolbarContainer,\n                    type, domElement;\n\n                /* suppress initialization in devices w/o proper contenteditable support */\n                if (!supportedContentEditable) {\n                    return;\n                }\n\n                Widget.fn.init.call(that, element, options);\n\n                that.options = deepExtend({}, that.options, options);\n\n                element = that.element;\n                domElement = element[0];\n                type = dom.name(domElement);\n\n                this._registerHandler(\n                    element.closest(\"form\"), \"submit\", that.update.bind(that, undefined$1)\n                );\n\n                toolbarContainer = that._setupType(element);\n\n                that._initToolbar(toolbarContainer);\n                that._setupHeight(type);\n                that._resizable();\n                that._initializeContentElement(that);\n                that._setupKeyboard();\n\n                that.clipboard = new editorNS.Clipboard(this);\n                that.undoRedoStack = new kendo.util.UndoRedoStack();\n\n                that._populateValue(options, domElement);\n\n                that._registerHandler(document, {\n                    \"mousedown\": function() { that._endTyping(); },\n                    \"mouseup\": function(e) { that._mouseup(e); }\n                });\n\n                that._registerHandler(window, \"resize\", that._handleSpaceAndNewLines.bind(that));\n\n                that._initializeImmutables();\n\n                if (type == \"textarea\") {\n                    that._ariaLabel(that.wrapper.find(\"iframe\"));\n                }\n\n                that.toolbar.resize();\n\n                kendo.notify(that);\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay((that.wrapper && that.wrapper[0]) || that.element[0]);\n                }\n            },\n\n            events: [\n                \"select\",\n                \"change\",\n                \"execute\",\n                \"error\",\n                \"paste\",\n                \"keydown\",\n                \"keyup\"\n            ],\n\n            options: {\n                name: \"Editor\",\n                messages: messages,\n                placeholder: \"\",\n                nonce: \"\",\n                unsafeInline: true,\n                formats: {},\n                encoded: true,\n                formattingMarksRefreshDelay: 250,\n                domain: null,\n                resizable: false,\n                deserialization: {\n                    custom: null\n                },\n                serialization: {\n                    entities: true,\n                    semantic: true,\n                    scripts: false,\n                    optimizeTags: false,\n                    keepEOL: false\n                },\n                pasteCleanup: {\n                    all: false,\n                    css: false,\n                    custom: null,\n                    keepNewLines: false,\n                    msAllFormatting: false,\n                    msConvertLists: true,\n                    msTags: true,\n                    none: false,\n                    span: false\n                },\n                stylesheets: [],\n                dialogOptions: {\n                    modal: true, resizable: false, draggable: true,\n                    animation: false\n                },\n                imageBrowser: null,\n                fileBrowser: null,\n                navigateOnTab: false,\n                fontName: [\n                    { text: \"Arial\", value: \"Arial, Helvetica, sans-serif\" },\n                    { text: \"Courier New\", value: \"\\\"Courier New\\\", Courier, monospace\" },\n                    { text: \"Georgia\", value: \"Georgia, serif\" },\n                    { text: \"Impact\", value: \"Impact, Charcoal, sans-serif\" },\n                    { text: \"Lucida Console\", value: \"\\\"Lucida Console\\\", Monaco, monospace\" },\n                    { text: \"Tahoma\", value: \"Tahoma, Geneva, sans-serif\" },\n                    { text: \"Times New Roman\", value: \"\\\"Times New Roman\\\", Times, serif\" },\n                    { text: \"Trebuchet MS\", value: \"\\\"Trebuchet MS\\\", Helvetica, sans-serif\" },\n                    { text: \"Verdana\", value: \"Verdana, Geneva, sans-serif\" }\n                ],\n                fontSize: [\n                    { text: \"1 (8pt)\", value: \"xx-small\" },\n                    { text: \"2 (10pt)\", value: \"x-small\" },\n                    { text: \"3 (12pt)\", value: \"small\" },\n                    { text: \"4 (14pt)\", value: \"medium\" },\n                    { text: \"5 (18pt)\", value: \"large\" },\n                    { text: \"6 (24pt)\", value: \"x-large\" },\n                    { text: \"7 (36pt)\", value: \"xx-large\" }\n                ],\n                formatBlock: [\n                    { text: \"Paragraph\", value: \"p\" },\n                    { text: \"Quotation\", value: \"blockquote\" },\n                    { text: \"Heading 1\", value: \"h1\" },\n                    { text: \"Heading 2\", value: \"h2\" },\n                    { text: \"Heading 3\", value: \"h3\" },\n                    { text: \"Heading 4\", value: \"h4\" },\n                    { text: \"Heading 5\", value: \"h5\" },\n                    { text: \"Heading 6\", value: \"h6\" }\n                ],\n                tools: [\n                    \"formatting\",\n                    \"bold\",\n                    \"italic\",\n                    \"underline\",\n                    \"undo\",\n                    \"redo\",\n                    \"justifyLeft\",\n                    \"justifyCenter\",\n                    \"justifyRight\",\n                    \"copyFormat\",\n                    \"applyFormat\",\n                    \"insertUnorderedList\",\n                    \"insertOrderedList\",\n                    \"indent\",\n                    \"outdent\",\n                    \"createLink\",\n                    \"unlink\",\n                    \"insertImage\",\n                    \"tableProperties\",\n                    \"tableCellProperties\",\n                    \"createTable\",\n                    \"addRowAbove\",\n                    \"addRowBelow\",\n                    \"addColumnLeft\",\n                    \"addColumnRight\",\n                    \"deleteRow\",\n                    \"deleteColumn\",\n                    \"mergeCellsHorizontally\",\n                    \"mergeCellsVertically\",\n                    \"splitCellHorizontally\",\n                    \"splitCellVertically\",\n                    \"tableAlignLeft\",\n                    \"tableAlignCenter\",\n                    \"tableAlignRight\"\n                ]\n            },\n\n            destroy: function() {\n                var editor = this;\n\n                Widget.fn.destroy.call(this);\n\n                this._endTyping(true);\n\n                this._deregisterHandlers();\n\n                clearTimeout(this._spellCorrectTimeout);\n\n                this._focusOutside();\n\n                this.toolbar.destroy();\n\n                if (this.windowInstance) {\n                    this.windowInstance.destroy();\n                }\n                if (this.tablePopup) {\n                    this.tablePopup.destroy();\n                }\n\n                editor._destroyUploadWidget();\n\n                if (this.resizeObserver) {\n                    this.resizeObserver.disconnect();\n                    this.resizeObserver = null;\n                    this.wrapper.css(\"min-height\", \"\");\n                    this.wrapper.css(\"max-height\", \"\");\n                }\n\n                editor._destroyResizings();\n\n                editor._destroyFormattingMarksOverlay();\n\n                kendo.destroy(this.wrapper);\n            },\n\n            setOptions: function(options) {\n                var editor = this;\n\n                Widget.fn.setOptions.call(editor, options);\n\n                if (options.tools) {\n                    this._setOptionsTools(options.tools);\n                }\n\n                this._initializePlaceholder();\n            },\n\n            createRange: function(document) {\n                return kendo.ui.editor.RangeUtils.createRange(document || this.document);\n            },\n\n            encodedValue: function() {\n                return kendo.ui.editor.Dom.encode(this.value());\n            },\n\n            exec: function(name, params) {\n                var that = this;\n                var command = null;\n                var defaultTools = kendo.ui.Editor.defaultTools;\n                var range, tool, prevented;\n\n                if (!name) {\n                    throw new Error(\"kendoEditor.exec(): `name` parameter cannot be empty\");\n                }\n\n                if (that.body.getAttribute(\"contenteditable\") !== \"true\" &&\n                    name !== \"print\" &&\n                    name !== \"pdf\" &&\n                    name !== \"exportAs\") {\n                    return false;\n                }\n\n                if (!that.keyboard.isTypingInProgress()) {\n                    that._focusBody();\n                    that.selectRange(that._range || that.getRange());\n                }\n\n                tool = that.tools[name] || defaultTools[name];\n\n                if (!tool) {\n                    Object.keys(defaultTools).map(key => {\n                        if (key.toLowerCase() === name) {\n                            tool = defaultTools[key];\n                        }\n                    });\n                }\n\n                if (tool) {\n                    range = that.getRange();\n\n                    if (tool.command) {\n                        command = tool.command(extend({ range: range, body: that.body, immutables: !!that.immutables }, params));\n                    }\n\n                    prevented = that.trigger(\"execute\", { name: name, command: command });\n\n                    if (prevented) {\n                        return;\n                    }\n\n                    if (/^(undo|redo)$/i.test(name)) {\n                        that.undoRedoStack[name]();\n                    } else if (command) {\n                        that.execCommand(command);\n\n                        if (command.async) {\n                            command.change = that._selectionChange.bind(that);\n                            return;\n                        }\n                    }\n\n                    that._handleSpaceAndNewLines();\n                    that._selectionChange();\n                }\n            },\n\n            execCommand: function(command) {\n                if (!command.managesUndoRedo) {\n                    this.undoRedoStack.push(command);\n                }\n\n                command.editor = this;\n                command.exec();\n            },\n\n            focus: function() {\n                this.restoreSelection();\n            },\n\n            getRange: function() {\n                var selection = this.getSelection(),\n                    range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : this.createRange(),\n                    doc = this.document;\n\n                if (range.startContainer == doc && range.endContainer == doc && !range.startOffset && !range.endOffset) {\n                    range.setStart(this.body, 0);\n                    range.collapse(true);\n                }\n\n                return range;\n            },\n\n            getSelection: function() {\n                return kendo.ui.editor.SelectionUtils.selectionFromDocument(this.document);\n            },\n\n            paste: function(html, options) {\n                this.focus();\n\n                var command = new kendo.ui.editor.InsertHtmlCommand($.extend({\n                    range: this.getRange(),\n                    html: html\n                }, options));\n\n                command.editor = this;\n\n                command.exec();\n            },\n\n            refresh: function() {\n                var that = this;\n\n                if (that.textarea) {\n                    that._destroyResizings();\n                    // preserve updated value before re-initializing\n                    // don't use update() to prevent the editor from encoding the content too early\n                    var value = that.value();\n                    that.textarea.val(value);\n                    that.wrapper.find(\"iframe\").remove();\n                    that._initializeContentElement(that);\n                    that.value(value);\n                }\n            },\n\n            restoreSelection: function() {\n                this._focusBody();\n\n                if (this.selectionRestorePoint) {\n                    this.selectRange(this.selectionRestorePoint.toRange());\n                }\n            },\n\n            saveSelection: function(range) {\n                range = range || this.getRange();\n                var container = range.commonAncestorContainer,\n                    body = this.body;\n\n                if (container == body || $.contains(body, container)) {\n                    this.selectionRestorePoint = new kendo.ui.editor.RestorePoint(range, body);\n                }\n            },\n\n            selectedHtml: function() {\n                return kendo.ui.editor.Serializer.domToXhtml(this.getRange().cloneContents());\n            },\n\n            selectRange: function(range) {\n                this._focusBody();\n                var selection = this.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n                this.saveSelection(range);\n            },\n\n            state: function(toolName) {\n                var tool = kendo.ui.Editor.defaultTools[toolName];\n                var finder = tool && (tool.options.finder || tool.finder);\n                var RangeUtils = kendo.ui.editor.RangeUtils;\n                var range, textNodes;\n\n                if (finder) {\n                    range = this.getRange();\n\n                    textNodes = RangeUtils.textNodes(range);\n\n                    if (!textNodes.length && range.collapsed) {\n                        textNodes = [range.startContainer];\n                    }\n\n                    return finder.getFormat ? finder.getFormat(textNodes) : finder.isFormatted(textNodes);\n                }\n\n                return false;\n            },\n\n            update: function(value) {\n                value = value || this.options.encoded ? this.encodedValue() : this.value();\n\n                if (this.textarea) {\n                    this.textarea.val(value);\n                    this._togglePlaceholder(!value.trim());\n                } else {\n                    this._oldValue = value;\n                }\n            },\n\n            value: function(html) {\n                var body = this.body,\n                    editorNS = kendo.ui.editor,\n                    options = this.options,\n                    currentHtml = editorNS.Serializer.domToXhtml(body, options.serialization);\n\n                if (html === undefined$1) {\n                    return currentHtml;\n                }\n\n                if (html == currentHtml) {\n                    return;\n                }\n\n                editorNS.Serializer.htmlToDom(html, body, options.deserialization);\n\n                this.selectionRestorePoint = null;\n                this.update();\n                this._refreshTools();\n            },\n\n            _bindTools: function() {\n                var that = this,\n                    defaultTools = this.tools;\n\n                that.unbind(\"select\", that.toolbar.resize.bind(that.toolbar));\n\n                that.toolbar.element.find(\"[data-command]\")\n                    .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                    .each((i, el) => {\n                        var toolName = el.getAttribute(\"data-command\"),\n                            tool = defaultTools[toolName];\n\n                        if (tool && tool.initialize) {\n                            tool.initialize($(el), that);\n                        }\n                    });\n\n                that.bind(\"select\", that.toolbar.resize.bind(that.toolbar));\n            },\n\n            _blur: function() {\n                var textarea = this.textarea;\n                var old = textarea ? textarea.val() : this._oldValue;\n                var value = this.options.encoded ? this.encodedValue() : this.value();\n\n                this.update();\n\n                if (textarea) {\n                    textarea.trigger(\"blur\");\n                }\n\n                if (value != old) {\n                    this.trigger(\"change\");\n                    if (textarea) {\n                        textarea.trigger(\"change\");\n                    }\n                }\n            },\n\n            _containsRange: function(range) {\n                var dom = kendo.ui.editor.Dom;\n                var body = this.body;\n                return range && dom.isAncestorOrSelf(body, range.startContainer) &&\n                    dom.isAncestorOrSelf(body, range.endContainer);\n            },\n\n            _createContentElement: function(stylesheets) {\n                var editor = this;\n                var iframe, wnd, doc;\n                var textarea = editor.textarea;\n                var specifiedDomain = editor.options.domain;\n                var domain = specifiedDomain || document.domain;\n                var domainScript = \"\";\n                var src = 'javascript:\"\"';\n                var lang = \"\";\n\n                textarea.hide();\n\n                iframe = $(\"<iframe />\", { title: editor.options.messages.editAreaTitle, frameBorder: \"0\" })[0];\n\n                $(iframe)\n                    .css(\"display\", \"\")\n                    .addClass(\"k-content k-iframe\")\n                    .attr(\"tabindex\", textarea[0].tabIndex)\n                    .insertBefore(textarea);\n\n                // automatically relax same-origin policy if document.domain != location.hostname,\n                // or forcefully relax if options.domain is specified (for document.domain = document.domain scenario)\n                if (specifiedDomain || domain != location.hostname) {\n                    // relax same-origin policy\n                    domainScript = `<script ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>document.domain=\"${domain}\"</script>`;\n                    src = \"javascript:document.write('\" + domainScript + \"')\";\n                    iframe.src = src;\n                }\n\n                if (!iframe.src) {\n                    iframe.src = \"\";\n                }\n\n                wnd = iframe.contentWindow || iframe;\n                doc = wnd.document || iframe.contentDocument;\n\n                $(iframe).one(\"load\", function() {\n                    editor._decorateFormatting(doc.body);\n                });\n\n                lang = document.getElementsByTagName(\"html\")[0].getAttribute(\"lang\") || DEFAULT_LANGUAGE;\n\n                doc.open();\n                doc.write(\n                    \"<!DOCTYPE html><html lang='\" + lang + \"'><head>\" +\n                    \"<meta charset='utf-8' />\" +\n                    \"<title>Kendo UI Editor content</title>\" +\n                    `<style ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>` +\n                        \"html{padding:0;margin:0;height:100%;min-height:100%;cursor:text;}\" +\n                        \"body{padding:0;margin:0;}\" +\n                        \"body{box-sizing:border-box;font-size:12px;font-family:Verdana,Geneva,sans-serif;margin-top:-1px;padding:5px .4em 0;\" +\n                        \"word-wrap: break-word;-webkit-nbsp-mode: space;-webkit-line-break: after-white-space;\" +\n                        (kendo.support.isRtl(textarea) ? \"direction:rtl;\" : \"\") +\n                        (os.ios ? \"word-break:keep-all;\" : \"\") +\n                        (browser.edge || browser.chrome ? \"height:100%;\" : \"\") +\n                        \"}\" +\n                        \"h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}\" +\n                        \"p{margin:0 0 1em;}.k-marker{display:none;}.k-paste-container,.Apple-style-span{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}\" +\n                        \"ul,ol{padding-left:2.5em}\" +\n                        \"span{-ms-high-contrast-adjust:none;}\" +\n                        \"a{color:#00a}\" +\n                        \"code{font-size:1.23em}\" +\n                        \"telerik\\\\3Ascript{display: none;}\" +\n                        \".k-table{width:100%;border-spacing:0;margin: 0 0 1em;}\" +\n                        \".k-table td{min-width:1px;padding:.2em .3em;}\" +\n                        \".k-table,.k-table td{outline:0;border: 1px dotted #ccc;}\" +\n                        \".k-table th{outline:0;border: 1px dotted #999;}\" +\n                        \".k-table p{margin:0;padding:0;}\" +\n                        \".k-column-resize-handle-wrapper {position: absolute; height: 10px; width:10px; cursor: col-resize; z-index: 2;}\" +\n                        \".k-column-resize-handle {width: 100%; height: 100%;}\" +\n                        \".k-column-resize-handle > .k-column-resize-marker {width:2px; height:100%; margin:0 auto; background-color:#00b0ff; display:none; opacity:0.8;}\" +\n                        \".k-row-resize-handle-wrapper {position: absolute; cursor: row-resize; z-index:2; width: 10px; height: 10px;}\" +\n                        \".k-row-resize-handle {display: table; width: 100%; height: 100%;}\" +\n                        \".k-row-resize-marker-wrapper{display: table-cell; height:100%; width:100%; margin:0; padding:0; vertical-align: middle;}\" +\n                        \".k-row-resize-marker{margin: 0; padding:0; width:100%; height:2px; background-color: #00b0ff; opacity:0.8; display:none;}\" +\n                        \".k-element-resize-handle-wrapper {position: absolute; background-color: #fff; border: 1px solid #000; z-index: 100; width: 5px; height: 5px;}\" +\n                        \".k-element-resize-handle {width: 100%; height: 100%;}\" +\n                        \".k-element-resize-handle.k-resize-east{cursor:e-resize;}\" +\n                        \".k-element-resize-handle.k-resize-north{cursor:n-resize;}\" +\n                        \".k-element-resize-handle.k-resize-northeast{cursor:ne-resize;}\" +\n                        \".k-element-resize-handle.k-resize-northwest{cursor:nw-resize;}\" +\n                        \".k-element-resize-handle.k-resize-south{cursor:s-resize;}\" +\n                        \".k-element-resize-handle.k-resize-southeast{cursor:se-resize;}\" +\n                        \".k-element-resize-handle.k-resize-southwest{cursor:sw-resize;}\" +\n                        \".k-element-resize-handle.k-resize-west{cursor:w-resize;}\" +\n                        \".k-table.k-element-resizing{opacity:0.6;}\" +\n                        \".k-placeholder{color:grey}\" +\n                        \"k\\\\:script{display:none;}\" +\n                    \"</style>\" +\n                    domainScript +\n                    $.map(stylesheets, function(href) {\n                        return `<link rel='stylesheet' href='${href}' ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>`;\n                    }).join(\"\") +\n                    \"</head><body autocorrect='off' contenteditable='true'></body></html>\"\n                );\n                doc.close();\n\n                return wnd;\n            },\n\n            _deleteSavedRange: function() {\n                if (\"_range\" in this) {\n                    delete this._range;\n                }\n            },\n\n            _decorateFormatting: function(body) {\n                var formattingElement = this.toolbar.element.find(\"input[data-command=formatting]\"),\n                    dom = kendo.ui.editor.Dom,\n                    component, dataSource, items, i, tag, className, style;\n\n                if (formattingElement.length) {\n                    component = formattingElement.getKendoDropDownList();\n                    if (!component) {\n                        return;\n                    }\n                    dataSource = component.dataSource;\n                    items = dataSource.data();\n\n                    if (body) {\n                        component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n                    }\n\n                    if (this.options.unsafeInline !== false) {\n\n                        for (i = 0; i < items.length; i++) {\n                            tag = items[i].tag || \"span\";\n                            className = items[i].className;\n\n                            style = dom.inlineStyle(body, tag, { className: className });\n                            style = style.replace(/\"/g, \"'\");\n\n                            items[i].style = style + \";display:inline-block\";\n                        }\n                    }\n\n                    dataSource.trigger(\"change\");\n                }\n            },\n\n            _appendFormattingMarksStyles: function() {\n                const that = this;\n\n                let style, $head;\n\n                style = `<style id='${FORMATTING_MARKS_STYLE_ID}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\" } >\n                p::after,li::after,h1::after,h2::after,h3::after,h4::after,h5::after,h6::after {content: '\\\\00B6'; color: #6098f2;}\n                #${FORMATTING_MARKS_OVERLAY_WRAPPER_ID} {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    height: 99%;\n                    z-index: 9999;\n                    pointer-events: none;\n                }\n                #${FORMATTING_MARKS_OVERLAY_ID} {\n                    width: 100%;\n                    height: 99%;\n                    overflow: visible;\n                  }\n            </style>`;\n\n                $head = $(that.document.head);\n                $head.find(\"#\" + FORMATTING_MARKS_STYLE_ID).remove();\n                $head.append(style);\n            },\n\n            _appendFormattingMarksOverlay: function() {\n                const that = this;\n\n                that._formattingMarksOverlay = $(that.document)\n                .find(\"html\")\n                .append(`<div id='${FORMATTING_MARKS_OVERLAY_WRAPPER_ID}'><svg id='${FORMATTING_MARKS_OVERLAY_ID}'></svg><div>`)\n                .find(\"#\" + FORMATTING_MARKS_OVERLAY_ID);\n            },\n\n            _destroyFormattingMarksOverlay: function() {\n                const that = this;\n\n                $(that.document).find(\"#\" + FORMATTING_MARKS_OVERLAY_ID).remove();\n                $(that.document.head).find(\"#\" + FORMATTING_MARKS_STYLE_ID).remove();\n            },\n\n            _deregisterHandlers: function() {\n                var handlers = this._handlers;\n\n                for (var i = 0; i < handlers.length; i++) {\n                    var h = handlers[i];\n                    h.element.off(h.type, h.handler);\n                }\n\n                this._handlers = [];\n            },\n\n            _destroyUploadWidget: function() {\n                var editor = this;\n                if (editor._uploadWidget) {\n                    editor._uploadWidget.destroy();\n                    editor._uploadWidget = null;\n                }\n            },\n\n            _endTyping: function() {\n                var keyboard = this.keyboard;\n\n                try {\n                    if (keyboard.isTypingInProgress()) {\n                        keyboard.endTyping(true);\n                        this.saveSelection();\n                    }\n                } catch (e) { }\n            },\n\n            _focusBody: function() {\n                var body = this.body;\n                var iframe = this.wrapper && this.wrapper.find(\"iframe\")[0];\n                var documentElement = this.document.documentElement;\n                var activeElement = kendo._activeElement();\n                var scrollTop;\n\n\n                if (!iframe && body.scrollHeight > body.clientHeight) {\n                    scrollTop = body.scrollTop;\n                    body.focus();\n                    body.scrollTop = scrollTop;\n\n                } else if (activeElement != body && activeElement != iframe) {\n                    scrollTop = documentElement.scrollTop;\n                    body.focus();\n                    documentElement.scrollTop = scrollTop;\n                }\n            },\n\n            _focusOutside: function() {\n                // move focus outside the Editor, see https://github.com/telerik/kendo/issues/3673\n                if (kendo.support.browser.msie && this.textarea) {\n                    var tempInput = $(\"<input />\")\n                        .css({\n                            position: \"fixed\",\n                            left: \"1px\",\n                            top: \"1px\",\n                            width: \"1px\",\n                            height: \"1px\",\n                            \"font-size\": \"0\",\n                            border: \"0\",\n                            opacity: \"0\"\n                    })\n                    .appendTo(document.body).trigger(\"focus\");\n                    tempInput.trigger(\"blur\").remove();\n                }\n            },\n\n            _handleToolbarClick: function(e) {\n                var toolName = e.target.data(\"command\");\n\n                if (toolName && toolName !== \"createTable\") {\n                    this.exec(toolName);\n                }\n            },\n\n            _immutablesContext: function(range) {\n                var editorNS = kendo.ui.editor;\n\n                if (this.options.immutables) {\n                    if (range.collapsed) {\n                        return editorNS.Immutables.immutablesContext(range);\n                    } else {\n                        return editorNS.RangeUtils.editableTextNodes(range).length === 0;\n                    }\n                }\n            },\n\n            _initializeContentElement: function() {\n                var editor = this;\n                var doc;\n                var blurTrigger;\n                var mousedownTrigger;\n\n                if (editor.textarea) {\n                    editor.window = editor._createContentElement(editor.options.stylesheets);\n                    doc = editor.document = editor.window.contentDocument || editor.window.document;\n\n                    // Ensure that body exists as various Firefox plugins can cause a delay of the body creation\n                    // https://github.com/telerik/kendo-ui-core/issues/3515\n                    if (!doc.body) {\n                        var body = doc.createElement(\"body\");\n                        body.setAttribute(\"contenteditable\", \"true\");\n                        body.setAttribute(\"autocorrect\", \"off\");\n                        doc.getElementsByTagName(\"html\")[0].appendChild(body);\n\n                        var interval = setInterval(function() {\n                            if ($(editor.document).find(\"body\").length > 1) {\n                                $(editor.document).find(\"body\").last().remove();\n                                window.clearInterval(interval);\n                            }\n                        },10);\n                    }\n\n                    editor.body = doc.body;\n\n                    blurTrigger = editor.window;\n                    mousedownTrigger = doc;\n\n                    this._registerHandler(doc, \"mouseup\", this._mouseup.bind(this));\n                } else {\n                    editor.window = window;\n                    doc = editor.document = document;\n                    editor.body = editor.element[0];\n\n                    blurTrigger = editor.body;\n                    mousedownTrigger = editor.body;\n\n                    setTimeout(() => {\n                        editor._decorateFormatting(editor.body);\n                    });\n                }\n\n                this._registerHandler(blurTrigger, \"blur\", this._blur.bind(this));\n                editor._registerHandler(mousedownTrigger, \"down\", editor._mousedown.bind(editor));\n\n                try {\n                    doc.execCommand(\"enableInlineTableEditing\", null, false);\n                } catch (e) { }\n\n                if (kendo.support.touch) {\n                    this._registerHandler(doc, {\n                        \"keydown\": function() {\n                            // necessary in iOS when touch events are bound to the page\n                            if (kendo._activeElement() != doc.body) {\n                                editor.window.focus();\n                            }\n                        }\n                    });\n                }\n\n                this._initializePlaceholder();\n\n                this._spellCorrect(editor);\n\n                this._registerHandler(editor.document, {\n                    \"mouseover dragenter\": function(e) {\n                        var height = $(editor.body).height();\n                        var htmlHeight = $(editor.body.parentElement).height();\n\n                        if (htmlHeight > height && e.target.nodeName.toLowerCase() === \"html\") {\n                            editor._cachedHeight = \"\" + editor.body.style.height;\n                            editor.body.style.height = \"100%\";\n                        }\n                    },\n                    \"mouseout dragleave drop contextmenu\": function(e) {\n                        var restoreHeight = function() {\n                            if (editor._cachedHeight !== undefined$1 && e.target === editor.body) {\n                                editor.body.style.height = editor._cachedHeight;\n                                delete editor._cachedHeight;\n                            }\n                        };\n\n                        if (e.type === \"contextmenu\") {\n                            setTimeout(function() {\n                                restoreHeight();\n                            }, 10);\n                        } else {\n                            restoreHeight();\n                        }\n\n                    }\n                });\n\n                this._registerHandler(editor.body, {\n                    \"keydown\": function(e) {\n                        var range;\n\n                        if ((e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) && editor.body.getAttribute(\"contenteditable\") !== \"true\") {\n                            return false;\n                        }\n\n                        if (e.keyCode === keys.F10) {\n                            editor.toolbar.element.find(\"[tabindex=0]\").first().trigger(\"focus\");\n                            editor.toolbar.preventPopupHide = true;\n                            e.preventDefault();\n                            return;\n                        } else if (e.keyCode == keys.LEFT || e.keyCode == keys.RIGHT) {\n                            // skip bom nodes when navigating with arrows\n                            range = editor.getRange();\n                            var left = e.keyCode == keys.LEFT;\n                            var container = range[left ? \"startContainer\" : \"endContainer\"];\n                            var offset = range[left ? \"startOffset\" : \"endOffset\"];\n                            var direction = left ? -1 : 1;\n\n                            var next = offset + direction;\n                            var nextChar = left ? next : offset;\n\n                            if (container.nodeType == 3 && container.nodeValue[nextChar] == \"\\ufeff\") {\n                                range.setStart(container, next);\n                                range.collapse(true);\n                                editor.selectRange(range);\n                            }\n                        }\n\n                        var tools = editor.tools;\n                        var toolName = editor.keyboard.toolFromShortcut(tools, e);\n                        var toolOptions = toolName ? tools[toolName].options : {};\n\n                        if (toolName && !toolOptions.keyPressCommand) {\n                            e.preventDefault();\n\n                            if (!/^(undo|redo)$/.test(toolName)) {\n                                editor.keyboard.endTyping(true);\n                            }\n\n                            editor.trigger(\"keydown\", e);\n                            editor.exec(toolName);\n                            editor._runPostContentKeyCommands(e);\n\n                            return false;\n                        }\n\n                        editor.keyboard.clearTimeout();\n\n                        editor.keyboard.keydown(e);\n                    },\n                    \"keypress\": function(e) {\n                        setTimeout(function() {\n                            editor._runPostContentKeyCommands(e);\n                            editor._showElementResizeHandles();\n                        }, 0);\n                    },\n                    \"keyup\": function(e) {\n                        var selectionCodes = [\n                           keys.BACKSPACE,\n                           keys.TAB,\n                           keys.PAGEUP,\n                           keys.PAGEDOWN,\n                           keys.END,\n                           keys.HOME,\n                           keys.LEFT,\n                           keys.UP,\n                           keys.RIGHT,\n                           keys.DOWN,\n                           keys.INSERT,\n                           keys.DELETE\n                        ];\n\n                        if ($.inArray(e.keyCode, selectionCodes) > -1 || (e.keyCode == 65 && e.ctrlKey && !e.altKey && !e.shiftKey)) {\n                            window.clearTimeout(this._refreshInterval);\n                            this._refreshInterval = window.setTimeout(function() {\n                                editor._selectionChange();\n                            }, REFRESH_INTERVAL);\n                        }\n\n                        if (e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) {\n                            editor._handleSpaceAndNewLines();\n                        }\n\n                        editor.keyboard.keyup(e);\n                    },\n                    \"click\": function(e) {\n                        var dom = kendo.ui.editor.Dom, range;\n\n                        if (dom.name(e.target) === \"img\") {\n                            range = editor.createRange();\n                            range.selectNode(e.target);\n                            editor.selectRange(range);\n                        }\n                    },\n                    \"cut copy paste drop dragover\": function(e) {\n                        editor.clipboard[\"on\" + e.type](e);\n                    },\n                    \"focusin\": function() {\n                        if (editor.body.hasAttribute(\"contenteditable\")) {\n                            $(this).addClass(\"k-active\");\n                            // To be moved to the Editor\n                            editor._showWindow();\n                            editor._togglePlaceholder(false);\n                        }\n                    },\n                    \"focusout\": function() {\n                        setTimeout(function() {\n                            var active = kendo._activeElement();\n                            var body = editor.body;\n                            // All below to be moved to the Editor\n                            var toolbar = editor.toolbar;\n\n                            if (toolbar.options.popup) {\n                                var toolbarContainerElement = editor.windowInstance.element.get(0);\n                                if (toolbarContainerElement && !($.contains(toolbarContainerElement, active) || toolbarContainerElement == active)) {\n                                    toolbar.preventPopupHide = false;\n                                }\n                            }\n\n                            if (active != body && !$.contains(body, active) && !editor._toolbarFocused() && !toolbar.preventPopupHide && !$(active).hasClass(\"k-context-menu\")) {\n                                $(body).removeClass(\"k-active\");\n                                editor._hideWindow();\n                            }\n\n                            editor._togglePlaceholder(!editor.value().trim());\n                        }, 10);\n                    }\n                });\n\n                editor._initializeColumnResizing();\n                editor._initializeRowResizing();\n                editor._initializeElementResizing();\n            },\n\n            _initializeImmutables: function() {\n                var that = this,\n                    editorNS = kendo.ui.editor;\n\n                if (that.options.immutables) {\n                    that.immutables = new editorNS.Immutables(that);\n                }\n            },\n\n            _initializePlaceholder: function() {\n                var that = this,\n                    placeholder = that.options.placeholder,\n                    style, $head;\n\n                if (!that.textarea || !placeholder) {\n                    return;\n                }\n\n                style = `<style id='${PLACEHOLDER_TAG_ID}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\" } >.` +\n                            PLACEHOLDER_CLASS + \":before { content: '\" + placeholder + \"'; }\" +\n                        \"</style>\";\n\n                $head = $(that.document.head);\n                $head.find(\"#\" + PLACEHOLDER_TAG_ID).remove();\n                $head.append(style);\n\n                that._togglePlaceholder(!that.value().trim());\n            },\n\n            _initToolbar: function(toolbarContainer) {\n                var that = this,\n                    tools, defaults, toolbarOptions;\n\n                that.tools = [];\n                [tools, defaults] = that._processToolbarItems(that.options.tools);\n                that._setNativeTools();\n\n                toolbarOptions = {\n                    tools: tools,\n                    defaultTools: defaults,\n                    parentMessages: that.options.messages,\n                    resizable: that.options.resizable && that.options.resizable.toolbar,\n                    toggle: that._handleToolbarClick.bind(this),\n                    click: that._handleToolbarClick.bind(this),\n                    navigateOnTab: that.options.navigateOnTab,\n                    evaluateTemplates: true\n                };\n\n                that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n                that._bindTools();\n                that.bind(\"select\", that._refreshTools.bind(that));\n\n                toolbarContainer.on(\"mousedown\" + NS, \".k-toolbar-tool\", function(e) {\n                    if (!$(e.target).is(\"input\")) {\n                        e.preventDefault();\n                    }\n                });\n\n                if (!that.textarea) {\n                    that._initToolbarWindow(toolbarContainer);\n                }\n            },\n\n            _initToolbarWindow: function(toolbarEl) {\n                var that = this;\n\n                this.windowInstance = toolbarEl\n                    .wrap(\"<div class='editorToolbarWindow k-editor-window' />\")\n                    .parent()\n                    .prepend(\"<span class='k-editortoolbar-dragHandle'>\" + kendo.ui.icon(\"handle-drag\") + \"</span>\")\n                    .kendoWindow({\n                        title: false,\n                        resizable: false,\n                        draggable: {\n                            dragHandle: \".k-editortoolbar-dragHandle\"\n                        },\n                        animation: {\n                            open: { effects: \"fade:in\" },\n                            close: { effects: \"fade:out\" }\n                        },\n                        minHeight: 42,\n                        visible: false,\n                        autoFocus: false,\n                        actions: [],\n                        dragend: function() {\n                            this._moved = true;\n                        }\n                    })\n                    .on(\"mousedown\", function(e) {\n                        if (!$(e.target).is(\".k-icon,.k-svg-icon,svg\")) {\n                            that.toolbar.preventPopupHide = true;\n                        }\n                    })\n                    .on(\"focusout\", function() {\n                        that.element.focusout();\n                    })\n                    .data(\"kendoWindow\");\n            },\n\n            _mousedown: function(e) {\n                var editor = this;\n                editor._selectionStarted = true;\n\n                if ($(editor.body).parents('.k-window').length) {\n                    e.stopPropagation();\n                }\n\n                // handle middle-click and ctrl-click on links\n                if (browser.gecko) {\n                    return;\n                }\n\n                var target = $(e.target).closest(\"a[href]\");\n\n                if ((e.which == 2 || (e.which == 1 && e.ctrlKey)) && target && target.is(\"a[href]\")) {\n                    window.open(target.attr(\"href\"), \"_new\");\n                }\n\n                if (e.target.tagName && e.target.tagName.toLowerCase() === \"html\") {\n                    setTimeout(function() {\n                        editor.body.focus();\n                    }, 0);\n                }\n            },\n\n            _mouseup: function(e) {\n                var that = this;\n\n                if (kendo.support.mobileOS.ios && e && $(e.target).is(SELECT_OVERLAY_SELECTOR)) {\n                    return;\n                }\n\n                if (that._selectionStarted) {\n                    setTimeout(function() {\n                        that._selectionChange();\n                    }, 1);\n                }\n            },\n\n            _populateValue: function(options, domElement) {\n                var that = this,\n                    editorNS = kendo.ui.editor,\n                    dom = editorNS.Dom,\n                    value, comments;\n\n                if (options && options.value) {\n                    value = options.value;\n                } else if (that.textarea) {\n                    // indented HTML introduces problematic ranges in IE\n                    value = domElement.value;\n\n                    if (!value.replace(/\\s/g, '').length) {\n                        value = value.replace(/\\s/g, '');\n                    }\n\n                    // revert encoding of value when content is fetched from cache\n                    if (that.options.encoded && domElement.defaultValue && domElement.defaultValue.trim().length) {\n                        value = domElement.defaultValue;\n                    }\n\n                    var deserializedRoot = editorNS.Serializer.htmlToDom(value, $(\"<div></div>\")[0], that.options.deserialization);\n                    comments = dom.getAllComments(deserializedRoot);\n                    value = EditorUtils.cacheComments(value, comments);\n                    value = value.replace(/[\\r\\n\\v\\f\\t ]+/ig, \" \");\n                    value = EditorUtils.retrieveComments(value, comments);\n                } else {\n                    value = domElement.innerHTML;\n                }\n\n                that.value(value || '\\ufeff');\n            },\n\n            _resetGroups: function(current) {\n                var result = {};\n\n                Object.keys(current).map(key => {\n                    result[key + \"_\"] = current[key];\n                });\n\n                return result;\n            },\n\n            _processToolbarItems: function(optionsTools) {\n                var flatDefaultTools = {},\n                    processedObject = {},\n                    tools = [],\n                    currentGroups = $.extend(true, {}, toolGroups),\n                    i, j, t, name, guidGroupName;\n\n                for (i = 0; i < optionsTools.length; i++) {\n                    t = optionsTools[i];\n\n                    if (Array.isArray(t)) {\n                        guidGroupName = kendo.guid();\n\n                        for (j = 0; j < t.length; j++) {\n                            [flatDefaultTools, name] = this._processToolOptions(t[j], flatDefaultTools);\n\n                            if (!name) {\n                                continue;\n                            }\n\n                            flatDefaultTools[name].gr = guidGroupName;\n                        }\n                    } else {\n                        [flatDefaultTools, name] = this._processToolOptions(t, flatDefaultTools);\n\n                        if (!name) {\n                            continue;\n                        } else if (name === \"separator\") {\n                            currentGroups = this._resetGroups(currentGroups);\n                        }\n\n                        Object.keys(currentGroups).map(key => {\n                            var group = currentGroups[key];\n\n                            if (group.includes(name)) {\n                                flatDefaultTools[name].gr = key;\n                            }\n                        });\n                    }\n                }\n\n                Object.values(flatDefaultTools).map((tool) => {\n                    var group = tool.gr;\n\n                    delete tool.gr;\n\n                    if (group === undefined$1) {\n                        processedObject[tool.name] = tool;\n                    } else {\n                        if (!processedObject[group]) {\n                            processedObject[group] = [];\n                        }\n\n                        processedObject[group].push(tool);\n                    }\n                });\n\n                tools = Object.values(processedObject).map((g) => {\n                    var result;\n\n                    if (g.length) {\n                        result = g.map((to) => to.name);\n                    } else {\n                        result = g.name;\n                    }\n\n                    if (result.length === 1) {\n                        result = result[0];\n                    }\n\n                    return result;\n                });\n\n                return [tools, flatDefaultTools];\n            },\n\n            _processDefaultTool: function(tool, defaultTools) {\n                var name = tool.name,\n                    result = {},\n                    options;\n\n                if ($.isPlainObject(tool)) {\n                    if (name && defaultTools[name]) {\n                        // configured tool\n                        result = extend({}, defaultTools[name]);\n                        extend(result.options, tool);\n                    } else {\n                        // custom tool\n                        options = extend({ icon: \"gear\", type: \"button\" }, tool);\n\n                        if (!options.name) {\n                            options.name = \"custom\";\n                        }\n\n                        options.cssClass = \"k-\" + options.name;\n\n                        result = {\n                            options: options\n                        };\n\n                        name = options.name;\n                    }\n                } else if (defaultTools[tool]) {\n                    name = tool;\n                    result = defaultTools[name];\n                } else {\n                    return null;\n                }\n\n                this.tools[name] = result;\n\n                return result;\n            },\n\n            _processToolOptions: function(t, flatDefaultTools) {\n                var that = this,\n                    defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                    tool, name, view, shortcuts, options, uiOptions, icon, toolOptions, originalOptions, palette;\n\n                tool = this._processDefaultTool(t, defaultTools);\n\n                if (!tool) {\n                    return [flatDefaultTools, null];\n                }\n\n                options = tool.options;\n                name = options.name;\n                uiOptions = options.ui || {};\n                icon = EditorUtils.getToolCssClass(options.name, options.icon);\n\n                // We want to preserve any custom properties from the original tool object.\n                originalOptions = $.isPlainObject(t) ? $.extend({}, t) : {};\n                delete originalOptions.items;\n\n                toolOptions = $.extend({\n                    name: options.name,\n                    command: options.command,\n                    template: options.template,\n                    type: \"button\",\n                    icon: icon,\n                    showText: \"overflow\",\n                    showIcon: \"both\"\n                }, uiOptions, originalOptions);\n\n                if (options.tooltip) {\n                    if (!toolOptions.attributes) {\n                        toolOptions.attributes = {};\n                    }\n\n                    toolOptions.attributes.title = options.tooltip;\n                }\n                if (options.exec) {\n                    toolOptions.click = options.exec.bind(that);\n                    delete toolOptions.exec;\n                }\n\n                if (toolOptions.component === \"ColorPicker\") {\n                    if (options.palette !== undefined$1 || uiOptions.palette !== kendo.ui.editor.ColorTool.fn.options.palette) {\n                        palette = options.palette || kendo.ui.editor.ColorTool.fn.options.palette;\n                        view = options.palette !== undefined$1 && !options.palette ? \"gradient\" : \"palette\";\n                        toolOptions.componentOptions.palette = view === \"palette\" ? palette : undefined$1;\n                        toolOptions.componentOptions.views = [view];\n                        toolOptions.componentOptions.preview = view === \"gradient\";\n                        toolOptions.componentOptions.input = view === \"gradient\";\n                        toolOptions.componentOptions.buttons = view === \"gradient\";\n\n                        if (view === \"gradient\") {\n                            delete toolOptions.componentOptions.columns;\n                        }\n                    }\n                    if (view === \"palette\" && options.columns) {\n                        toolOptions.componentOptions.columns = options.columns;\n                    }\n                }\n\n                if (toolOptions.component === \"DropDownList\" || toolOptions.component === \"ComboBox\") {\n                    if (!toolOptions.componentOptions) {\n                        toolOptions.componentOptions = {};\n                    }\n\n                    if (!toolOptions.componentOptions.dataSource) {\n                        if (that.options[name] && Array.isArray(that.options[name])) {\n                            toolOptions.componentOptions.dataSource = that.options[name];\n                        } else {\n                            toolOptions.componentOptions.dataSource = options.items;\n                        }\n                    }\n                }\n                if (toolOptions.template) {\n                    delete toolOptions.type;\n                }\n\n                shortcuts = this._shortcutSequence(name);\n\n                if (shortcuts !== \"\") {\n                    if (!toolOptions.attributes) {\n                        toolOptions.attributes = {};\n                    }\n\n                    toolOptions.attributes[\"aria-keyshortcuts\"] = shortcuts;\n                }\n\n                flatDefaultTools[name] = toolOptions;\n\n                return [flatDefaultTools, name];\n            },\n\n            _refreshTools: function() {\n                var that = this,\n                    range = that.getRange(),\n                    editorNS = kendo.ui.editor,\n                    rangeUtils = editorNS.RangeUtils,\n                    nodes = rangeUtils.textNodes(range),\n                    immutables = that.options.immutables,\n                    immutablesContext = that._immutablesContext(range),\n                    defaultTools = that.tools;\n\n                nodes = editorNS.Dom.filterBy(nodes, editorNS.Dom.htmlIndentSpace, true);\n\n                if (!nodes.length) {\n                    nodes = [range.startContainer];\n                }\n\n                that.toolbar.element.find(\"[data-command]\")\n                    .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                    .each(function() {\n                        var toolName = this.getAttribute(\"data-command\"),\n                            tool = defaultTools[toolName],\n                            ui;\n\n                        if (tool) {\n                            ui = $(this);\n\n                            if (tool.update) {\n                                tool.update(ui, nodes, that.undoRedoStack);\n                            }\n\n                            if (immutables) {\n                                that._updateImmutablesState(tool, ui, immutablesContext);\n                            }\n                        }\n                    });\n            },\n\n            _registerHandler: function(element, type, handler) {\n                var editor = this;\n                var NS = \".kendoEditor\";\n                var eventNames;\n                var i;\n\n                element = $(element);\n\n                if (!this._handlers) {\n                    this._handlers = [];\n                }\n\n                if (element.length) {\n                    if ($.isPlainObject(type)) {\n                        for (var t in type) {\n                            if (type.hasOwnProperty(t)) {\n                                this._registerHandler(element, t, type[t]);\n                            }\n                        }\n                    } else {\n                        //map the original event to handle interaction on mobile platforms\n                        eventNames = kendo.applyEventMap(type).split(\" \");\n\n                        for (i = 0; i < eventNames.length; i++) {\n                            editor._handlers.push({\n                                element: element,\n                                type: eventNames[i] + NS,\n                                handler: handler\n                            });\n\n                            element.on(eventNames[i] + NS, handler);\n                        }\n                    }\n                }\n            },\n\n            _runPostContentKeyCommands: function(e) {\n                var range = this.getRange();\n                var tools = this.keyboard.toolsFromShortcut(this.tools, e);\n\n                for (var i = 0; i < tools.length; i++) {\n                    var tool = tools[i];\n                    var o = tool.options;\n                    if (!o.keyPressCommand) {\n                        continue;\n                    }\n\n                    var cmd = new o.command({ range: range });\n                    if (cmd.changesContent()) {\n                        this.keyboard.endTyping(true);\n                        this.exec(tool.name);\n                    }\n                }\n\n                this._handleSpaceAndNewLines();\n            },\n\n            _handleSpaceAndNewLines: function() {\n                const that = this,\n                    refreshDelay = that.options.formattingMarksRefreshDelay,\n                    editorNS = kendo.ui.editor,\n                    applyFormattingMarks = editorNS.applyFormattingMarks,\n                    clearFormattingMarksOverlay = editorNS.clearFormattingMarksOverlay;\n\n                if (that._toggledFormattingMarks) {\n                    if (that._formattingMarksOverlay.children().length) {\n                        clearFormattingMarksOverlay(that);\n                    }\n\n                    if (refreshDelay) {\n                        clearTimeout(that._formattingMarksTimeout);\n                        that._formattingMarksTimeout = setTimeout(() => applyFormattingMarks(that), refreshDelay);\n                    } else {\n                        applyFormattingMarks(that);\n                    }\n\n                }\n            },\n\n            _selectionChange: function() {\n                this._selectionStarted = false;\n                this.saveSelection();\n                this.trigger(\"select\", {});\n            },\n\n            _setOptionsTools: function(optionsTools) {\n                var that = this,\n                    toolbar = that.toolbar,\n                    toolbarContainer = toolbar.element,\n                    tools, defaults, toolbarOptions;\n\n                toolbar.destroy();\n                toolbarContainer.empty();\n\n                that.tools = [];\n                [tools, defaults] = that._processToolbarItems(optionsTools);\n                that._setNativeTools();\n\n                toolbarOptions = {\n                    tools: tools,\n                    defaultTools: defaults,\n                    parentMessages: that.options.messages,\n                    resizable: that.options.resizable && that.options.resizable.toolbar,\n                    toggle: that._handleToolbarClick.bind(this),\n                    click: that._handleToolbarClick.bind(this)\n                };\n\n                that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n                that._bindTools();\n            },\n\n            _setNativeTools: function() {\n                var defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                    i;\n\n                for (i = 0; i < NATIVE_TOOLS.length; i++) {\n                    if (!this.tools[NATIVE_TOOLS[i]]) {\n                        this.tools[NATIVE_TOOLS[i]] = defaultTools[NATIVE_TOOLS[i]];\n                    }\n                }\n            },\n\n            _setupHeight: function(type) {\n                var that = this;\n\n                if (type == \"textarea\") {\n                    setTimeout(function() {\n                        var heightStyle = that.wrapper[0].style.height;\n                        var expectedHeight = parseInt(heightStyle, 10);\n                        var actualHeight = that.wrapper.height();\n                        if (heightStyle.indexOf(\"px\") > 0 && !isNaN(expectedHeight) && actualHeight > expectedHeight) {\n                            that.wrapper.height(expectedHeight - (actualHeight - expectedHeight));\n                        }\n                    });\n                }\n            },\n\n            _setupKeyboard: function() {\n                var that = this,\n                    editorNS = kendo.ui.editor;\n\n                that.keyboard = new editorNS.Keyboard([\n                    new editorNS.BackspaceHandler(that),\n                    new editorNS.TypingHandler(that),\n                    new editorNS.SystemHandler(that),\n                    new editorNS.SelectAllHandler(that)\n                ]);\n            },\n\n            _setupType: function(element) {\n                var domElement = element[0],\n                    type = kendo.ui.editor.Dom.name(domElement),\n                    id = domElement.id,\n                    toolbarContainer;\n\n                if (type == \"textarea\") {\n                    this._wrapTextarea();\n\n                    toolbarContainer = this.wrapper.find(\".k-editor-toolbar\");\n\n                    if (!id) {\n                        id = kendo.guid();\n                        domElement.setAttribute(\"id\", id);\n                    }\n\n                    toolbarContainer.attr(\"aria-controls\", id);\n                } else {\n                    this.element.attr(\"contenteditable\", true).addClass(\"k-editor k-editor-inline\");\n                    toolbarContainer = $('<div class=\"k-editor-toolbar\"/>').insertBefore(element);\n                }\n\n                return toolbarContainer;\n            },\n\n            _shortcutSequence: function(name) {\n                var tool = kendo.ui.Editor.defaultTools[name],\n                    res = \"\",\n                    options;\n\n                if (!tool || !tool.options) {\n                    return res;\n                }\n\n                options = tool.options;\n\n                if (options.ctrl) {\n                    res += \"Ctrl+\";\n                }\n\n                if (options.shift) {\n                    res += \"Shift+\";\n                }\n\n                if (options.alt) {\n                    res += \"Alt+\";\n                }\n\n                if (options.key) {\n                    res += options.key;\n                }\n\n                return res;\n            },\n\n            _spellCorrect: function(editor) {\n                var beforeCorrection;\n                var falseTrigger = false;\n\n                this._registerHandler(editor.body, {\n                    \"contextmenu\": function() {\n                        editor.one(\"select\", function() {\n                            beforeCorrection = null;\n                        });\n\n                        editor._spellCorrectTimeout = setTimeout(function() {\n                            beforeCorrection = new kendo.ui.editor.RestorePoint(editor.getRange(), editor.body);\n                            falseTrigger = false;\n                        }, 10);\n                    },\n                    \"input\": function() {\n                        if (!beforeCorrection) {\n                            return;\n                        }\n\n                        if (kendo.support.browser.mozilla && !falseTrigger) {\n                            falseTrigger = true;\n                            return;\n                        }\n\n                        kendo.ui.editor._finishUpdate(editor, beforeCorrection);\n                    }\n                });\n            },\n\n            _togglePlaceholder: function(show) {\n                var that = this,\n                    body = that.body,\n                    $body = $(body),\n                    placeholder = that.options.placeholder;\n\n                if (!that.textarea || !placeholder) {\n                    return;\n                }\n\n                $body.attr('aria-label', function() {\n                    return show ? placeholder : \"\";\n                });\n\n                $body.toggleClass(PLACEHOLDER_CLASS, show);\n            },\n\n            _toolbarFocused: function() {\n                var active = kendo._activeElement(),\n                    popup = this.windowInstance,\n                    overflowPopup = this.overflowPopup;\n\n                return (popup && $(active).closest(popup.wrapper).length) ||\n                    (overflowPopup && overflowPopup.visible());\n            },\n\n            _updateImmutablesState: function(tool, ui, immutablesContext) {\n                var toolbar = this.toolbar,\n                    name = tool.name,\n                    uiElement = ui.closest(\".k-toolbar-tool\"),\n                    trackImmutables = tool.options.trackImmutables,\n                    editorNS = kendo.ui.editor;\n\n                if (trackImmutables === undefined$1) {\n                    trackImmutables = $.inArray(name, editorNS.Immutables.toolsToBeUpdated) > -1;\n                }\n\n                if (trackImmutables) {\n                    if (immutablesContext) {\n                        toolbar.hide(uiElement);\n                    } else {\n                        toolbar.show(uiElement);\n                    }\n                }\n            },\n\n            _wrapTextarea: function() {\n                var that = this,\n                    textarea = that.element,\n                    w = textarea[0].style.width,\n                    h = textarea[0].style.height,\n                    template = EditorUtils.editorWrapperTemplate(),\n                    editorWrap = $(template).insertBefore(textarea),\n                    editArea = editorWrap.find(\".k-editable-area\");\n\n                editorWrap.css({\n                    \"width\": w,\n                    \"height\": h\n                });\n\n                textarea.attr(\"autocomplete\", \"off\")\n                    .appendTo(editArea).addClass(\"k-content k-raw-content\").css(\"display\", \"none\");\n\n                that.textarea = textarea;\n                that.wrapper = editorWrap;\n            },\n\n            // Resizing methods\n            _resizable: function() {\n                let that = this;\n                let resizable = this.options.resizable;\n                let isResizable = $.isPlainObject(resizable) ? (resizable.content === undefined$1 || resizable.content === true) : resizable;\n                let resizableMin = $.isPlainObject(resizable.min) ? resizable.min : { minHeight: resizable.min };\n                let resizableMax = $.isPlainObject(resizable.max) ? resizable.max : { maxHeight: resizable.max };\n\n                if (isResizable && this.textarea) {\n                    that.wrapper.addClass('k-editor-resizable');\n\n                    if (resizableMin.minHeight) {\n                        that.wrapper.css(\"min-height\", resizableMin.minHeight);\n                    }\n\n                    if (resizableMax.maxHeight) {\n                        that.wrapper.css(\"max-height\", resizableMax.maxHeight);\n                    }\n\n                    if (resizableMin.minWidth) {\n                        that.wrapper.css(\"min-width\", resizableMin.minWidth);\n                    }\n\n                    if (resizableMax.maxWidth) {\n                        that.wrapper.css(\"max-width\", resizableMax.maxWidth);\n                    }\n\n                    that.resizeObserver = new ResizeObserver(() => {\n                        clearTimeout(that._resizeTimeOut);\n\n                        that._resizeTimeOut = setTimeout(function() {\n                            that.toolbar.resize();\n                        }, 50);\n\n                    });\n                    that.resizeObserver.observe(that.wrapper[0]);\n                }\n            },\n\n            _destroyResizings: function() {\n                var editor = this;\n\n                editor._destroyElementResizing();\n                kendo.ui.editor.ElementResizingFactory.current.dispose(editor);\n                editor._destroyRowResizing();\n                kendo.ui.editor.RowResizing.dispose(editor);\n                editor._destroyColumnResizing();\n                kendo.ui.editor.ColumnResizing.dispose(editor);\n            },\n\n            _initializeElementResizing: function() {\n                var editor = this;\n\n                kendo.ui.editor.ElementResizingFactory.current.create(editor);\n\n                editor._showElementResizeHandlesProxy = editor._showElementResizeHandles.bind(editor);\n                editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n            },\n\n            _destroyElementResizing: function() {\n                var editor = this;\n                var elementResizing = editor.elementResizing;\n\n                if (elementResizing) {\n                    elementResizing.destroy();\n                    editor.elementResizing = null;\n                }\n\n                if (editor._showElementResizeHandlesProxy) {\n                    editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n                }\n            },\n\n            _showElementResizeHandles: function() {\n                var editor = this;\n                var elementResizing = editor.elementResizing;\n\n                if (elementResizing && elementResizing.element && elementResizing.element.parentNode) {\n                    elementResizing.showResizeHandles();\n                } else if (elementResizing && (!elementResizing.element || !elementResizing.element.parentNode)) {\n                    editor._destroyElementResizing();\n                }\n            },\n\n            _initializeColumnResizing: function() {\n                kendo.ui.editor.ColumnResizing.create(this);\n            },\n\n            _destroyColumnResizing: function() {\n                var editor = this;\n\n                if (editor.columnResizing) {\n                    editor.columnResizing.destroy();\n                    editor.columnResizing = null;\n                }\n            },\n\n            _initializeRowResizing: function() {\n                kendo.ui.editor.RowResizing.create(this);\n            },\n\n            _destroyRowResizing: function() {\n                var editor = this;\n\n                if (editor.rowResizing) {\n                    editor.rowResizing.destroy();\n                    editor.rowResizing = null;\n                }\n            },\n\n            // ToolBar Window methods\n            _getWindowWidth: function() {\n                var that = this,\n                    wrapper = that.windowInstance.wrapper,\n                    editorElement = that.element;\n\n                return outerWidth(editorElement) - parseInt(wrapper.css(\"border-left-width\"), 10) - parseInt(wrapper.css(\"border-right-width\"), 10);\n            },\n\n            _hideWindow: function() {\n                if (this.windowInstance) {\n                    this.windowInstance.close();\n                }\n            },\n\n            _overlapsWindow: function(box) {\n                var toolbarWrapper = this.windowInstance.wrapper,\n                    toolbarWrapperOffset = toolbarWrapper.offset(),\n                    toolbarWrapperLeft = toolbarWrapperOffset.left,\n                    toolbarWrapperTop = toolbarWrapperOffset.top,\n                    boxOffset = box.offset(),\n                    boxOffsetLeft = boxOffset.left,\n                    boxOffsetTop = boxOffset.top;\n\n                return !(boxOffsetLeft + box.width() < toolbarWrapperLeft ||\n                        boxOffsetLeft > toolbarWrapperLeft + toolbarWrapper.width() ||\n                        boxOffsetTop + box.height() < toolbarWrapperTop ||\n                        boxOffsetTop > toolbarWrapperTop + toolbarWrapper.height());\n            },\n\n            _showWindow: function() {\n                var that = this,\n                    windowInstance = that.windowInstance,\n                    wrapper, editorElement, editorOffset,\n                    browser = kendo.support.browser;\n\n                if (windowInstance) {\n                    wrapper = windowInstance.wrapper;\n                    editorElement = that.element;\n\n                    if (!wrapper.is(\":visible\") || !that.windowInstance.options.visible) {\n\n                        if (!wrapper[0].style.width) {\n                            wrapper.width(this._getWindowWidth());\n                        }\n\n                        // track content position when other parts of page change\n                        if (!windowInstance._moved) {\n                            editorOffset = editorElement.offset();\n                            wrapper.css({\n                                top: Math.max(0, parseInt(editorOffset.top, 10) - outerHeight(wrapper) - parseInt(that.windowInstance.element.css(\"padding-bottom\"), 10)),\n                                left: Math.max(0, parseInt(editorOffset.left, 10))\n                            });\n                        }\n\n                        if ((browser.msie || browser.edge) && that._overlapsWindow(editorElement)) {\n                            setTimeout(function() {\n                                windowInstance.open();\n                            }, 0);\n                        } else {\n                            windowInstance.open();\n                        }\n                    }\n                }\n            }\n        });\n\n        Editor.defaultTools = {};\n\n        kendo.ui.plugin(Editor);\n\n        var Tool = Class.extend({\n            init: function(options) {\n                this.options = options;\n            },\n\n            command: function(commandArguments) {\n                return new this.options.command(commandArguments);\n            },\n\n            update: $.noop\n        });\n\n        Tool.exec = function(editor, name, value) {\n            editor.exec(name, { value: value });\n        };\n\n        var UndoTool = Tool.extend({\n            command: $.noop,\n            update: function(ui, nodes, undoRedoStack) {\n                var that = this,\n                    name = that.options.name,\n                    toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n                switch (name) {\n                    case \"undo\":\n                        toolbar.enable(ui, undoRedoStack.canUndo());\n                        break;\n                    case \"redo\":\n                        toolbar.enable(ui, undoRedoStack.canRedo());\n                        break;\n                    default:\n                        break;\n                }\n\n                ui.removeAttr(\"disabled\");\n            }\n        });\n\n        EditorUtils.registerTool(\"separator\", new Tool({ ui: { type: \"separator\" } }));\n        EditorUtils.registerTool(\"undo\", new UndoTool({ key: \"Z\", ctrl: true }));\n        EditorUtils.registerTool(\"redo\", new UndoTool({ key: \"Y\", ctrl: true }));\n\n        // Exports ================================================================\n\n        var emptyElementContent = '\\ufeff';\n        var emptyTableCellContent = emptyElementContent;\n\n        if (browser.msie || browser.edge) {\n            emptyTableCellContent = emptyElementContent = \"&nbsp;\";\n        }\n\n        extend(kendo.ui, {\n            editor: {\n                EditorUtils: EditorUtils,\n                Tool: Tool,\n                emptyElementContent: emptyElementContent,\n                emptyTableCellContent: emptyTableCellContent\n            }\n        });\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Editor.prototype);\n            Editor.prototype._drawPDF = function() {\n                return kendo.drawing.drawDOM(this.body, this.options.pdf);\n            };\n            Editor.prototype.saveAsPDF = function() {\n                var progress = new $.Deferred();\n                var promise = progress.promise();\n                var args = { promise: promise };\n\n                if (this.trigger(\"pdfExport\", args)) {\n                    return;\n                }\n\n                var options = this.options.pdf;\n\n                this._drawPDF(progress)\n                .then(function(root) {\n                    return kendo.drawing.exportPDF(root, options);\n                })\n                .done(function(dataURI) {\n                    kendo.saveAs({\n                        dataURI: dataURI,\n                        fileName: options.fileName,\n                        proxyURL: options.proxyURL,\n                        proxyTarget: options.proxyTarget,\n                        forceProxy: options.forceProxy\n                    });\n                    progress.resolve();\n                })\n                .fail(function(err) {\n                    progress.reject(err);\n                });\n\n                return promise;\n            };\n        }\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        map = $.map,\n        extend = $.extend,\n        browser = kendo.support.browser,\n        STYLE = \"style\",\n        FLOAT = \"float\",\n        CSSFLOAT = \"cssFloat\",\n        STYLEFLOAT = \"styleFloat\",\n        CLASS = \"class\",\n        KMARKER = \"k-marker\";\n\n    function makeMap(items) {\n        var obj = {},\n            i, len;\n\n        for (i = 0, len = items.length; i < len; i++) {\n            obj[items[i]] = true;\n        }\n        return obj;\n    }\n\n    var empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\".split(\",\")),\n        nonListBlockElements = \"p,div,h1,h2,h3,h4,h5,h6,address,applet,blockquote,button,center,dd,dir,dl,dt,fieldset,form,frameset,hr,iframe,isindex,map,menu,noframes,noscript,object,pre,script,table,tbody,td,tfoot,th,thead,tr,header,article,nav,footer,section,aside,main,figure,figcaption\".split(\",\"),\n        blockElements = nonListBlockElements.concat([\"ul\",\"ol\",\"li\"]),\n        block = makeMap(blockElements),\n        selfClosing = makeMap(\"area,base,br,col,command,embed,hr,img,input,keygen,link,menuitem,meta,param,source,track,wbr\".split(\",\")),\n        inlineElements = \"span,em,a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,strike,strong,sub,sup,textarea,tt,u,var,data,time,mark,ruby\".split(\",\"),\n        inline = makeMap(inlineElements),\n        fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\".split(\",\")),\n        nonEmptyNonTextContentElements = [\"hgroup\",\"ol\",\"ul\",\"dl\",\"object\",\"video\",\"audio\",\"table\",\"colgroup\",\"tbody\",\"thead\",\"tfoot\",\"tr\",\"select\",\"optgroup\"];\n\n    var normalize = function(node) {\n        if (node.nodeType == 1) {\n            node.normalize();\n        }\n    };\n\n    if (browser.msie && browser.version >= 8) {\n        normalize = function(parent) {\n            if (parent.nodeType == 1 && parent.firstChild) {\n                var prev = parent.firstChild,\n                    node = prev;\n\n                normalize(node);\n\n                while (true) {\n                    node = node.nextSibling;\n\n                    if (!node) {\n                        break;\n                    }\n\n                    normalize(node);\n\n                    if (node.nodeType == 3 && prev.nodeType == 3) {\n                        node.nodeValue = prev.nodeValue + node.nodeValue;\n                        Dom.remove(prev);\n                    }\n\n                    prev = node;\n                }\n            }\n        };\n    }\n\n    var whitespace = /^\\s+$/,\n        emptyspace = /^[\\n\\r\\t]+$/,\n        rgb = /rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i,\n        bom = /\\ufeff/g,\n        whitespaceOrBom = /^(\\s+|\\ufeff)$/,\n        persistedScrollTop,\n        cssAttributes =\n               (\"color,padding-left,padding-right,padding-top,padding-bottom,\" +\n                \"background-color,background-attachment,background-image,background-position,background-repeat,\" +\n                \"border-top-style,border-top-width,border-top-color,\" +\n                \"border-bottom-style,border-bottom-width,border-bottom-color,\" +\n                \"border-left-style,border-left-width,border-left-color,\" +\n                \"border-right-style,border-right-width,border-right-color,\" +\n                \"font-family,font-size,font-style,font-variant,font-weight,line-height\"\n               ).split(\",\"),\n        htmlRe = /[<>\\&]/g,\n        entityRe = /[\\u00A0-\\u2666<>\\&]/g,\n        entityTable = {\n                34: 'quot', 38: 'amp', 39: 'apos', 60: 'lt', 62: 'gt',\n                160: 'nbsp', 161: 'iexcl', 162: 'cent', 163: 'pound', 164: 'curren',\n                165: 'yen', 166: 'brvbar', 167: 'sect', 168: 'uml', 169: 'copy',\n                170: 'ordf', 171: 'laquo', 172: 'not', 173: 'shy', 174: 'reg',\n                175: 'macr', 176: 'deg', 177: 'plusmn', 178: 'sup2', 179: 'sup3',\n                180: 'acute', 181: 'micro', 182: 'para', 183: 'middot', 184: 'cedil',\n                185: 'sup1', 186: 'ordm', 187: 'raquo', 188: 'frac14', 189: 'frac12',\n                190: 'frac34', 191: 'iquest', 192: 'Agrave', 193: 'Aacute', 194: 'Acirc',\n                195: 'Atilde', 196: 'Auml', 197: 'Aring', 198: 'AElig', 199: 'Ccedil',\n                200: 'Egrave', 201: 'Eacute', 202: 'Ecirc', 203: 'Euml', 204: 'Igrave',\n                205: 'Iacute', 206: 'Icirc', 207: 'Iuml', 208: 'ETH', 209: 'Ntilde',\n                210: 'Ograve', 211: 'Oacute', 212: 'Ocirc', 213: 'Otilde', 214: 'Ouml',\n                215: 'times', 216: 'Oslash', 217: 'Ugrave', 218: 'Uacute', 219: 'Ucirc',\n                220: 'Uuml', 221: 'Yacute', 222: 'THORN', 223: 'szlig', 224: 'agrave',\n                225: 'aacute', 226: 'acirc', 227: 'atilde', 228: 'auml', 229: 'aring',\n                230: 'aelig', 231: 'ccedil', 232: 'egrave', 233: 'eacute', 234: 'ecirc',\n                235: 'euml', 236: 'igrave', 237: 'iacute', 238: 'icirc', 239: 'iuml',\n                240: 'eth', 241: 'ntilde', 242: 'ograve', 243: 'oacute', 244: 'ocirc',\n                245: 'otilde', 246: 'ouml', 247: 'divide', 248: 'oslash', 249: 'ugrave',\n                250: 'uacute', 251: 'ucirc', 252: 'uuml', 253: 'yacute', 254: 'thorn',\n                255: 'yuml', 402: 'fnof', 913: 'Alpha', 914: 'Beta', 915: 'Gamma',\n                916: 'Delta', 917: 'Epsilon', 918: 'Zeta', 919: 'Eta', 920: 'Theta',\n                921: 'Iota', 922: 'Kappa', 923: 'Lambda', 924: 'Mu', 925: 'Nu',\n                926: 'Xi', 927: 'Omicron', 928: 'Pi', 929: 'Rho', 931: 'Sigma',\n                932: 'Tau', 933: 'Upsilon', 934: 'Phi', 935: 'Chi', 936: 'Psi',\n                937: 'Omega', 945: 'alpha', 946: 'beta', 947: 'gamma', 948: 'delta',\n                949: 'epsilon', 950: 'zeta', 951: 'eta', 952: 'theta', 953: 'iota',\n                954: 'kappa', 955: 'lambda', 956: 'mu', 957: 'nu', 958: 'xi',\n                959: 'omicron', 960: 'pi', 961: 'rho', 962: 'sigmaf', 963: 'sigma',\n                964: 'tau', 965: 'upsilon', 966: 'phi', 967: 'chi', 968: 'psi',\n                969: 'omega', 977: 'thetasym', 978: 'upsih', 982: 'piv', 8226: 'bull',\n                8230: 'hellip', 8242: 'prime', 8243: 'Prime', 8254: 'oline', 8260: 'frasl',\n                8472: 'weierp', 8465: 'image', 8476: 'real', 8482: 'trade', 8501: 'alefsym',\n                8592: 'larr', 8593: 'uarr', 8594: 'rarr', 8595: 'darr', 8596: 'harr',\n                8629: 'crarr', 8656: 'lArr', 8657: 'uArr', 8658: 'rArr', 8659: 'dArr',\n                8660: 'hArr', 8704: 'forall', 8706: 'part', 8707: 'exist', 8709: 'empty',\n                8711: 'nabla', 8712: 'isin', 8713: 'notin', 8715: 'ni', 8719: 'prod',\n                8721: 'sum', 8722: 'minus', 8727: 'lowast', 8730: 'radic', 8733: 'prop',\n                8734: 'infin', 8736: 'ang', 8743: 'and', 8744: 'or', 8745: 'cap',\n                8746: 'cup', 8747: 'int', 8756: 'there4', 8764: 'sim', 8773: 'cong',\n                8776: 'asymp', 8800: 'ne', 8801: 'equiv', 8804: 'le', 8805: 'ge',\n                8834: 'sub', 8835: 'sup', 8836: 'nsub', 8838: 'sube', 8839: 'supe',\n                8853: 'oplus', 8855: 'otimes', 8869: 'perp', 8901: 'sdot', 8968: 'lceil',\n                8969: 'rceil', 8970: 'lfloor', 8971: 'rfloor', 9001: 'lang', 9002: 'rang',\n                9674: 'loz', 9824: 'spades', 9827: 'clubs', 9829: 'hearts', 9830: 'diams',\n                338: 'OElig', 339: 'oelig', 352: 'Scaron', 353: 'scaron', 376: 'Yuml',\n                710: 'circ', 732: 'tilde', 8194: 'ensp', 8195: 'emsp', 8201: 'thinsp',\n                8204: 'zwnj', 8205: 'zwj', 8206: 'lrm', 8207: 'rlm', 8211: 'ndash',\n                8212: 'mdash', 8216: 'lsquo', 8217: 'rsquo', 8218: 'sbquo', 8220: 'ldquo',\n                8221: 'rdquo', 8222: 'bdquo', 8224: 'dagger', 8225: 'Dagger', 8240: 'permil',\n                8249: 'lsaquo', 8250: 'rsaquo', 8364: 'euro'\n            };\n\n    var Dom = {\n        block: block,\n        inline: inline,\n\n        findNodeIndex: function(node, skipText) {\n            var i = 0;\n\n            if (!node) {\n                return -1;\n            }\n\n            while (true) {\n                node = node.previousSibling;\n\n                if (!node) {\n                    break;\n                }\n\n                if (!(skipText && node.nodeType == 3)) {\n                    i++;\n                }\n            }\n\n            return i;\n        },\n\n        isDataNode: function(node) {\n            return node && node.nodeValue !== null && node.data !== null;\n        },\n\n        isAncestorOf: function(parent, node) {\n            try {\n                return !Dom.isDataNode(parent) && ($.contains(parent, Dom.isDataNode(node) ? node.parentNode : node) || node.parentNode == parent);\n            } catch (e) {\n                return false;\n            }\n        },\n\n        isAncestorOrSelf: function(root, node) {\n            return Dom.isAncestorOf(root, node) || root == node;\n        },\n\n        findClosestAncestor: function(root, node) {\n            if (Dom.isAncestorOf(root, node)) {\n                while (node && node.parentNode != root) {\n                    node = node.parentNode;\n                }\n            }\n\n            return node;\n        },\n\n        getAllComments: function(rootElem) {\n            var comments = [];\n            // Fourth argument, which is actually obsolete according to the DOM4 standard, is required in IE 11\n            var iterator = document.createNodeIterator(rootElem,\n                NodeFilter.SHOW_COMMENT,\n                function() {\n                    return NodeFilter.FILTER_ACCEPT;\n                }, false);\n\n            var curNode = iterator.nextNode();\n            while (curNode) {\n                comments.push(curNode.nodeValue);\n                curNode = iterator.nextNode();\n            }\n            return comments;\n        },\n\n        getNodeLength: function(node) {\n            return Dom.isDataNode(node) ? node.length : node.childNodes.length;\n        },\n\n        splitDataNode: function(node, offset) {\n            var newNode = node.cloneNode(false);\n            var denormalizedText = \"\";\n            var iterator = node.nextSibling;\n            var temp;\n\n            while (iterator && iterator.nodeType == 3 && iterator.nodeValue) {\n                denormalizedText += iterator.nodeValue;\n                temp = iterator;\n                iterator = iterator.nextSibling;\n                Dom.remove(temp);\n            }\n\n            node.deleteData(offset, node.length);\n            newNode.deleteData(0, offset);\n            newNode.nodeValue += denormalizedText;\n            Dom.insertAfter(newNode, node);\n        },\n\n        attrEquals: function(node, attributes) {\n            for (var key in attributes) {\n                var value = node[key];\n\n                if (key == FLOAT) {\n                    value = node[kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT];\n                }\n\n                if (typeof value == \"object\") {\n                    if (!Dom.attrEquals(value, attributes[key])) {\n                        return false;\n                    }\n                } else if (value != attributes[key]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        blockParentOrBody: function(node) {\n            return Dom.parentOfType(node, blockElements) || node.ownerDocument.body;\n        },\n\n        blockParents: function(nodes) {\n            var blocks = [],\n                i, len;\n\n            for (i = 0, len = nodes.length; i < len; i++) {\n                var block = Dom.parentOfType(nodes[i], Dom.blockElements);\n                if (block && $.inArray(block, blocks) < 0) {\n                    blocks.push(block);\n                }\n            }\n\n            return blocks;\n        },\n\n        windowFromDocument: function(document) {\n            return document.defaultView || document.parentWindow;\n        },\n\n        normalize: normalize,\n        blockElements: blockElements,\n        nonListBlockElements: nonListBlockElements,\n        inlineElements: inlineElements,\n        empty: empty,\n        fillAttrs: fillAttrs,\n        nodeTypes: {\n            ELEMENT_NODE: 1,\n            ATTRIBUTE_NODE: 2,\n            TEXT_NODE: 3,\n            CDATA_SECTION_NODE: 4,\n            ENTITY_REFERENCE_NODE: 5,\n            ENTITY_NODE: 6,\n            PROCESSING_INSTRUCTION_NODE: 7,\n            COMMENT_NODE: 8,\n            DOCUMENT_NODE: 9,\n            DOCUMENT_TYPE_NODE: 10,\n            DOCUMENT_FRAGMENT_NODE: 11,\n            NOTATION_NODE: 12\n        },\n\n        toHex: function(color) {\n            var matches = rgb.exec(color);\n\n            if (!matches) {\n                return color;\n            }\n\n            return \"#\" + map(matches.slice(1), function(x) {\n                x = parseInt(x, 10).toString(16);\n                return x.length > 1 ? x : \"0\" + x;\n            }).join(\"\");\n        },\n\n        encode: function(value, options) {\n            var encodableChars = (!options || options.entities) ? entityRe : htmlRe;\n            return value.replace(encodableChars, function(c) {\n                var charCode = c.charCodeAt(0);\n                var entity = entityTable[charCode];\n                return entity ? '&' + entity + ';' : c;\n            });\n        },\n        isBom: function(node) {\n            return node && node.nodeType === 3 && /^[\\ufeff]+$/.test(node.nodeValue);\n        },\n        stripBom: function(text) {\n            return (text || \"\").replace(bom, \"\");\n        },\n\n        stripBomNode: function(node) {\n            if (Dom.isBom(node)) {\n                node.parentNode.removeChild(node);\n            }\n        },\n\n        insignificant: function(node) {\n            var attr = node.attributes;\n\n            return node.className == \"k-marker\" || (Dom.is(node, 'br') && (node.className == \"k-br\" || attr._moz_dirty || attr._moz_editor_bogus_node)) || (Dom.is(node, 'span') && (node.className == \"k-br\"));\n        },\n        tableCell: function(node) {\n            return Dom.is(node, \"td\") || Dom.is(node, \"th\");\n        },\n        significantNodes: function(nodes) {\n            return $.grep(nodes, function(child) {\n                var name = Dom.name(child);\n\n                if (name == 'br') {\n                    return false;\n                } else if (Dom.insignificant(child)) {\n                    return false;\n                } else if (Dom.emptyTextNode(child)) {\n                    return false;\n                } else if (child.nodeType == 1 && !empty[name] && Dom.emptyNode(child)) {\n                    return false;\n                }\n\n                return true;\n            });\n        },\n\n        emptyTextNode: function(node) {\n            return node && node.nodeType == 3 && whitespaceOrBom.test(node.nodeValue);\n        },\n\n        emptyNode: function(node) {\n            return node.nodeType == 1 && !Dom.significantNodes(node.childNodes).length;\n        },\n\n        name: function(node) {\n            return node.nodeName.toLowerCase();\n        },\n\n        significantChildNodes: function(node) {\n            return $.grep(node.childNodes, function(child) {\n                return child.nodeType != 3 || !Dom.isWhitespace(child);\n            });\n        },\n\n        getTextNodes: function(body, nodes) {\n            const childNodes = body.childNodes;\n            nodes = nodes || [];\n\n            for (const node of childNodes) {\n                if (node.nodeType === this.nodeTypes.TEXT_NODE &&\n                    (blockElements.includes(Dom.name(node.parentNode)) ||\n                    inlineElements.includes(Dom.name(node.parentNode)))) {\n                    nodes.push(node);\n                } else if (node.nodeType === this.nodeTypes.ELEMENT_NODE) {\n                    this.getTextNodes(node, nodes);\n                }\n            }\n\n            return nodes;\n        },\n\n        lastTextNode: function(node) {\n            var result = null;\n\n            if (node.nodeType == 3) {\n                return node;\n            }\n\n            for (var child = node.lastChild; child; child = child.previousSibling) {\n                result = Dom.lastTextNode(child);\n\n                if (result) {\n                    return result;\n                }\n            }\n\n            return result;\n        },\n\n        is: function(node, nodeName) {\n            return node && Dom.name(node) == nodeName;\n        },\n\n        isMarker: function(node) {\n            return node.className == KMARKER;\n        },\n\n        isWhitespace: function(node) {\n            return whitespace.test(node.nodeValue);\n        },\n\n        allowsTextContent: function(node) {\n            var result = true;\n\n            nonEmptyNonTextContentElements.every(function(name) {\n                if (Dom.is(node, name)) {\n                    result = false;\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n\n            return result;\n        },\n\n        allWhitespaceContent: function(node) {\n            var child = node.firstChild;\n            while (child && Dom.isWhitespace(child)) {\n                child = child.nextSibling;\n            }\n\n            return !child;\n        },\n\n        isEmptyspace: function(node) {\n            return emptyspace.test(node.nodeValue);\n        },\n\n        htmlIndentSpace: function(node) {\n            if (!(Dom.isDataNode(node) && Dom.isWhitespace(node))) {\n                return false;\n            }\n\n            if (emptyspace.test(node.nodeValue)) {\n                return true;\n            }\n\n            var sibling = function(el, direction) {\n                while (el[direction]) {\n                    el = el[direction];\n                    if (Dom.significantNodes([el]).length > 0) {\n                        return el;\n                    }\n                }\n            };\n\n            var parent = node.parentNode;\n            var prev = sibling(node, \"previousSibling\");\n            var next = sibling(node, \"nextSibling\");\n\n            if (bom.test(node.nodeValue)) {\n                return !!(prev || next);\n            }\n\n            if ($(parent).is(\"tr,tbody,thead,tfoot,table,ol,ul\")) {\n                return true;\n            }\n\n            if (Dom.isBlock(parent) || Dom.is(parent, \"body\")) {\n                var isPrevBlock = prev && Dom.isBlock(prev);\n                var isNextBlock = next && Dom.isBlock(next);\n                if ((!next && isPrevBlock) || (!prev && isNextBlock) || (isPrevBlock && isNextBlock)) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        isBlock: function(node) {\n            return block[Dom.name(node)];\n        },\n\n        isSelfClosing: function(node) {\n            return selfClosing[Dom.name(node)];\n        },\n\n        isEmpty: function(node) {\n            return empty[Dom.name(node)];\n        },\n\n        isInline: function(node) {\n            return inline[Dom.name(node)];\n        },\n\n        isImg: function(node) {\n            return Dom.name(node) == \"img\";\n        },\n\n        isBr: function(node) {\n            return Dom.name(node) == \"br\";\n        },\n\n        list: function(node) {\n            var name = node ? Dom.name(node) : \"\";\n            return name == \"ul\" || name == \"ol\" || name == \"dl\";\n        },\n\n        scrollContainer: function(doc) {\n            var wnd = Dom.windowFromDocument(doc),\n                scrollContainer = (wnd.contentWindow || wnd).document || wnd.ownerDocument || wnd;\n\n            if (scrollContainer.compatMode == 'BackCompat') {\n                scrollContainer = scrollContainer.body;\n            } else {\n                scrollContainer = scrollContainer.scrollingElement || scrollContainer.documentElement;\n            }\n\n            return scrollContainer;\n        },\n\n        scrollTo: function(node, toStart) {\n            var doc = node.ownerDocument;\n            var wnd = Dom.windowFromDocument(doc);\n            var windowHeight = wnd.innerHeight;\n            var scrollContainer = Dom.scrollContainer(doc);\n            var element, elementTop, elementHeight, marker;\n\n            if (Dom.isDataNode(node)) {\n                if (toStart) {\n                    marker = Dom.create(doc, \"span\", { \"innerHTML\": \"&#xfeff;\" });\n                    Dom.insertBefore(marker, node);\n                    element = $(marker);\n                } else {\n                    element = $(node.parentNode);\n                }\n            } else {\n                element = $(node);\n            }\n\n            elementTop = element.offset().top;\n            elementHeight = element[0].offsetHeight;\n\n            if (toStart || !elementHeight) {\n                elementHeight = parseInt(element.css(\"line-height\"), 10) ||\n                                Math.ceil(1.2 * parseInt(element.css(\"font-size\"), 10)) ||\n                                15;\n            }\n\n            if (marker) {\n                Dom.remove(marker);\n            }\n\n            if (elementHeight + elementTop > scrollContainer.scrollTop + windowHeight) {\n                scrollContainer.scrollTop = elementHeight + elementTop - windowHeight;\n            }\n        },\n\n        persistScrollTop: function(doc) {\n            persistedScrollTop = Dom.scrollContainer(doc).scrollTop;\n        },\n\n        offset: function(target, offsetParent) {\n            var result = { top: target.offsetTop, left: target.offsetLeft };\n            var parent = target.offsetParent;\n\n            while (parent && (!offsetParent || Dom.isAncestorOf(offsetParent, parent))) {\n                result.top += parent.offsetTop;\n                result.left += parent.offsetLeft;\n                parent = parent.offsetParent;\n            }\n\n            return result;\n        },\n\n        restoreScrollTop: function(doc) {\n            if (typeof persistedScrollTop == \"number\") {\n                Dom.scrollContainer(doc).scrollTop = persistedScrollTop;\n                persistedScrollTop = undefined;\n            }\n        },\n\n        insertAt: function(parent, newElement, position) {\n            parent.insertBefore(newElement, parent.childNodes[position] || null);\n        },\n\n        insertBefore: function(newElement, referenceElement) {\n            if (referenceElement.parentNode) {\n                return referenceElement.parentNode.insertBefore(newElement, referenceElement);\n            } else {\n                return referenceElement;\n            }\n        },\n\n        insertAfter: function(newElement, referenceElement) {\n            return referenceElement.parentNode.insertBefore(newElement, referenceElement.nextSibling);\n        },\n\n        remove: function(node) {\n            if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        },\n\n        removeChildren: function(node) {\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n        },\n\n        removeTextSiblings: function(node) {\n            var parentNode = node.parentNode;\n\n            while (node.nextSibling && node.nextSibling.nodeType == 3) {\n                parentNode.removeChild(node.nextSibling);\n            }\n\n            while (node.previousSibling && node.previousSibling.nodeType == 3) {\n                parentNode.removeChild(node.previousSibling);\n            }\n        },\n\n        trim: function(parent) {\n            for (var i = parent.childNodes.length - 1; i >= 0; i--) {\n                var node = parent.childNodes[i];\n                if (Dom.isDataNode(node)) {\n                    if (!Dom.stripBom(node.nodeValue).length) {\n                        Dom.remove(node);\n                    }\n                } else if (node.className != KMARKER) {\n                    Dom.trim(node);\n\n                    if ((!Dom.isEmpty(node) && node.childNodes.length === 0) ||\n                        (Dom.isBlock(node) && Dom.allWhitespaceContent(node))) {\n                        Dom.remove(node);\n                    }\n                }\n            }\n\n            return parent;\n        },\n\n        closest: function(node, tags) {\n            if (typeof tags === \"string\") {\n                tags = [tags];\n            }\n\n            while (node && tags.indexOf(Dom.name(node)) < 0) {\n                node = node.parentNode;\n            }\n\n            return node;\n        },\n\n        closestBy: function(node, condition, rootCondition) {\n            while (node && !condition(node)) {\n                if (rootCondition && rootCondition(node)) {\n                    return null;\n                }\n                node = node.parentNode;\n            }\n            return node;\n        },\n\n        sibling: function(node, direction) {\n            do {\n                node = node[direction];\n            } while (node && node.nodeType != 1);\n\n            return node;\n        },\n\n        next: function(node) {\n            return Dom.sibling(node, \"nextSibling\");\n        },\n\n        prev: function(node) {\n            return Dom.sibling(node, \"previousSibling\");\n        },\n\n        parentOfType: function(node, tags) {\n            do {\n                node = node.parentNode;\n            } while (node && !(Dom.ofType(node, tags)));\n\n            return node;\n        },\n\n        ofType: function(node, tags) {\n            return $.inArray(Dom.name(node), tags) >= 0;\n        },\n\n        changeTag: function(referenceElement, tagName, skipAttributes) {\n            var newElement = Dom.create(referenceElement.ownerDocument, tagName),\n                attributes = referenceElement.attributes,\n                i, len, name, value, attribute;\n\n            if (!skipAttributes) {\n                for (i = 0, len = attributes.length; i < len; i++) {\n                    attribute = attributes[i];\n                    if (attribute.specified) {\n                        // IE < 8 cannot set class or style via setAttribute\n                        name = attribute.nodeName;\n                        value = attribute.nodeValue;\n                        if (name == CLASS) {\n                            newElement.className = value;\n                        } else if (name == STYLE) {\n                            newElement.style.cssText = referenceElement.style.cssText;\n                        } else {\n                            newElement.setAttribute(name, value);\n                        }\n                    }\n                }\n            }\n\n            while (referenceElement.firstChild) {\n                newElement.appendChild(referenceElement.firstChild);\n            }\n\n            Dom.insertBefore(newElement, referenceElement);\n            Dom.remove(referenceElement);\n            return newElement;\n        },\n\n        editableParent: function(node) {\n            while (node && (node.nodeType == 3 || node.contentEditable !== 'true')) {\n                node = node.parentNode;\n            }\n\n            return node;\n        },\n\n        wrap: function(node, wrapper) {\n            Dom.insertBefore(wrapper, node);\n            wrapper.appendChild(node);\n            return wrapper;\n        },\n\n        unwrap: function(node) {\n            var parent = node.parentNode;\n            while (node.firstChild) {\n                parent.insertBefore(node.firstChild, node);\n            }\n\n            parent.removeChild(node);\n        },\n\n        wrapper: function(node) {\n            var wrapper = Dom.closestBy(node, function(el) {\n                return el.parentNode && Dom.significantNodes(el.parentNode.childNodes).length > 1;\n            });\n\n            return $(wrapper).is(\"body,.k-editor\") ? undefined : wrapper;\n        },\n\n        isChildOfBaseContainer: function(node) {\n            return $(node).parent().is(\"body,.k-editor\");\n        },\n\n        create: function(document, tagName, attributes) {\n            return Dom.attr(document.createElement(tagName), attributes);\n        },\n\n        createEmptyNode: function(document, tagName, attributes) {\n            var node = Dom.attr(document.createElement(tagName), attributes);\n            node.innerHTML = \"\\ufeff\";\n            return node;\n        },\n\n        attr: function(element, attributes) {\n            attributes = extend({}, attributes);\n\n            if (attributes && STYLE in attributes) {\n                Dom.style(element, attributes.style);\n                delete attributes.style;\n            }\n\n            for (var attr in attributes) {\n                if (attributes[attr] === null) {\n                    element.removeAttribute(attr);\n                    delete attributes[attr];\n                } else if (attr == \"className\") {\n                    element[attr] = attributes[attr];\n                }\n            }\n\n            return extend(element, attributes);\n        },\n\n        mergeAttributes: function(origin, target, traverseCss) {\n            if (!origin.attributes.length) {\n                return;\n            }\n\n            $.each(origin.attributes, function() {\n                if (this.name !== \"contenteditable\" && (!traverseCss || this.name !== STYLE)) {\n                    $(target).attr(this.name, this.value);\n                }\n\n                if (traverseCss && this.name === STYLE) {\n                    $.each(origin.style, function() {\n                        target.style[this] = origin.style[this];\n                    });\n                }\n            });\n        },\n\n        style: function(node, value) {\n            $(node).css(value || {});\n        },\n\n        unstyle: function(node, value) {\n            for (var key in value) {\n                if (key == FLOAT) {\n                    key = kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT;\n                }\n\n                node.style[key] = \"\";\n            }\n\n            if (node.style.cssText === \"\") {\n                node.removeAttribute(STYLE);\n            }\n        },\n\n        inlineStyle: function(body, name, attributes) {\n            var span = $(Dom.create(body.ownerDocument, name, attributes)),\n                style;\n\n            body.appendChild(span[0]);\n\n            style = map(cssAttributes, function(value) {\n                if (browser.msie && value == \"line-height\" && span.css(value) == \"1px\") {\n                    return \"line-height:1.5\";\n                } else {\n                    return value + \":\" + span.css(value);\n                }\n            }).join(\";\");\n\n            span.remove();\n\n            return style;\n        },\n\n        getEffectiveBackground: function(element) {\n            var backgroundStyle = element.css(\"background-color\") || \"\";\n\n            if (backgroundStyle.indexOf(\"rgba(0, 0, 0, 0\") < 0 && backgroundStyle !== \"transparent\") {\n                return backgroundStyle;\n            } else if (element[0].tagName.toLowerCase() === \"html\") {\n                return \"Window\";\n            } else {\n                return Dom.getEffectiveBackground(element.parent());\n            }\n        },\n\n        innerText: function(node) {\n            var text = node.innerHTML;\n            text = text.replace(/<!--(.|\\s)*?-->/gi, \"\");\n            text = text.replace(/<\\/?[^>]+?\\/?>/gm, \"\");\n\n            return text;\n        },\n\n        removeClass: function(node, classNames) {\n            var className = \" \" + node.className + \" \",\n                classes = classNames.split(\" \"),\n                i, len;\n\n            for (i = 0, len = classes.length; i < len; i++) {\n                className = className.replace(\" \" + classes[i] + \" \", \" \");\n            }\n\n            className = kendo.trim(className);\n\n            if (className.length) {\n                node.className = className;\n            } else {\n                node.removeAttribute(CLASS);\n            }\n        },\n\n        commonAncestor: function() {\n            var count = arguments.length,\n                paths = [],\n                minPathLength = Infinity,\n                output = null,\n                i, ancestors, node, first, j;\n\n            if (!count) {\n                return null;\n            }\n\n            if (count == 1) {\n                return arguments[0];\n            }\n\n            for (i = 0; i < count; i++) {\n                ancestors = [];\n                node = arguments[i];\n                while (node) {\n                    ancestors.push(node);\n                    node = node.parentNode;\n                }\n                paths.push(ancestors.reverse());\n                minPathLength = Math.min(minPathLength, ancestors.length);\n            }\n\n            if (count == 1) {\n                return paths[0][0];\n            }\n\n            for (i = 0; i < minPathLength; i++) {\n                first = paths[0][i];\n\n                for (j = 1; j < count; j++) {\n                    if (first != paths[j][i]) {\n                        return output;\n                    }\n                }\n\n                output = first;\n            }\n            return output;\n        },\n\n        closestSplittableParent: function(nodes) {\n            var result;\n\n            if (nodes.length == 1) {\n                result = Dom.parentOfType(nodes[0], [\"ul\",\"ol\"]);\n            } else {\n                result = Dom.commonAncestor.apply(null, nodes);\n            }\n\n            if (!result) {\n                result = Dom.parentOfType(nodes[0], [\"p\", \"td\"]) || nodes[0].ownerDocument.body;\n            }\n\n            if (Dom.isInline(result)) {\n                result = Dom.blockParentOrBody(result);\n            }\n\n            var editableParents = map(nodes, Dom.editableParent);\n            var editableAncestor = Dom.commonAncestor(editableParents)[0];\n\n            if ($.contains(result, editableAncestor)) {\n                result = editableAncestor;\n            }\n\n            return result;\n        },\n\n        closestEditable: function(node, types) {\n            var closest;\n            var editable = Dom.editableParent(node);\n\n            if (Dom.ofType(node, types)) {\n                closest = node;\n            } else {\n                closest = Dom.parentOfType(node, types);\n            }\n\n            if (closest && editable && $.contains(closest, editable)) {\n                closest = editable;\n            } else if (!closest && editable) {\n                closest = editable;\n            }\n\n            return closest;\n        },\n\n        closestEditableOfType: function(node, types) {\n            var editable = Dom.closestEditable(node, types);\n\n            if (editable && Dom.ofType(editable, types) && !$(editable).is(\".k-editor\")) {\n                return editable;\n            }\n        },\n\n        filter: function(tagName, nodes, invert) {\n            var filterFn = function(node) {\n                return Dom.name(node) == tagName;\n            };\n\n            return Dom.filterBy(nodes, filterFn, invert);\n        },\n\n        filterBy: function(nodes, condition, invert) {\n            var i = 0;\n            var len = nodes.length;\n            var result = [];\n            var match;\n\n            for (; i < len; i++) {\n                match = condition(nodes[i]);\n                if ((match && !invert) || (!match && invert)) {\n                    result.push(nodes[i]);\n                }\n            }\n\n            return result;\n        },\n\n        ensureTrailingBreaks: function(node) {\n            var elements = $(node).find(\"p,td,th\");\n            var length = elements.length;\n            var i = 0;\n\n            if (length) {\n                for (; i < length; i++) {\n                    Dom.ensureTrailingBreak(elements[i]);\n                }\n            } else {\n                Dom.ensureTrailingBreak(node);\n            }\n        },\n\n        removeTrailingBreak: function(node) {\n            $(node).find(\"br[type=_moz],.k-br\").remove();\n        },\n\n        ensureTrailingBreak: function(node) {\n            Dom.removeTrailingBreak(node);\n\n            var lastChild = node.lastChild;\n            var name = lastChild && Dom.name(lastChild);\n            var br;\n\n            if (!name ||\n                (name != \"br\" && name != \"img\") ||\n                (name == \"br\" && lastChild.className != \"k-br\")) {\n                br = node.ownerDocument.createElement(\"br\");\n                br.className = \"k-br\";\n                node.appendChild(br);\n            }\n        },\n\n        // Start: Table Utilities\n\n        reMapTableColumns: function(table, colAttr) {\n            Dom._mapColIndices(table, colAttr);\n        },\n\n        clearTableMappings: function(table, colAttr) {\n            $(table).find(\"[\" + colAttr + \"]\").removeAttr(colAttr);\n        },\n\n        _mapColIndices: function(table, colAttr) {\n            var registeredColumns = {};\n\n            for (var rowIndex = 0; rowIndex < table.rows.length; rowIndex++) {\n                var cells = table.rows[rowIndex].cells;\n                var colIndex = 0;\n                for (var cellIndex = 0; cellIndex < cells.length; cellIndex++, colIndex++) {\n                    var cell = cells[cellIndex];\n\n                    if (cell.rowSpan > 1) {\n                        this._mapColspan(cell, rowIndex, colIndex, registeredColumns);\n                    }\n\n                    if (registeredColumns[rowIndex]) {\n                        while (registeredColumns[rowIndex][colIndex]) {\n                            colIndex++;\n                        }\n                    }\n\n                    cell.setAttribute(colAttr, colIndex);\n\n                    if (cell.colSpan > 1) {\n                        colIndex = colIndex + cell.colSpan - 1;\n                    }\n                }\n            }\n        },\n\n        _mapColspan: function(cell, rowIndex, colIndex, registeredColumns) {\n            var rowSpan = cell.rowSpan,\n                colSpan = cell.colSpan,\n                index;\n\n            for (var ci = 0; ci < colSpan; ci++) {\n                index = colIndex + ci;\n\n                for (var ri = rowIndex + 1; ri < rowIndex + rowSpan; ri++) {\n\n                    if (!registeredColumns[ri]) {\n                        registeredColumns[ri] = {};\n                        registeredColumns[ri].length = 0;\n                    }\n\n                    if (registeredColumns[rowIndex]) {\n                        while (registeredColumns[rowIndex][index]) {\n                            index++;\n                        }\n                    }\n\n                    registeredColumns[ri][index] = true;\n                    registeredColumns[ri].length++;\n                }\n            }\n\n        },\n\n        associateWithIds: function(table) {\n            var that = this;\n            var numberOfTheadRows = 0;\n            var tableRows = table.rows;\n            var numberOfTableRows = tableRows.length;\n            var theadMatrix = [];\n            var tbodyMatrix = [];\n            var theadRows, i;\n\n            if (table.tHead) {\n                theadRows = table.tHead.rows;\n                numberOfTheadRows = theadRows.length;\n            } else {\n                numberOfTheadRows = that._getNumberOfHeaderRows(table);\n                theadRows = [];\n                for (i = 0; i < numberOfTheadRows; i++) {\n                    theadRows.push(tableRows[i]);\n                }\n            }\n            for (i = 0; i < numberOfTheadRows; i++) {\n                theadMatrix.push([]);\n            }\n            for (i = 0; i < numberOfTableRows; i++) {\n                tbodyMatrix.push([]);\n            }\n\n            that._generateIdsForColumns(theadMatrix, theadRows);\n            that._generateIdsForRows(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n            that._assignIds(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n        },\n\n        _generateIdsForColumns: function(theadMatrix, theadRows) {\n            var timestamp = new Date().getTime();\n            var numberOfTheadRows = theadRows ? theadRows.length : 0;\n            var row, cells, cell, col, id, colspan, rowspan, i, j, k, l;\n\n            for (i = 0; i < numberOfTheadRows; i++) {\n                row = theadRows[i];\n                cells = row.cells;\n                col = 0;\n\n                for (j = 0; j < cells.length; j++) {\n                    cell = cells[j];\n                    id = \"table\" + i + j + (++timestamp);\n                    cell.setAttribute(\"id\", id);\n                    colspan = cell.getAttribute(\"colspan\") || 1;\n                    rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                    while (theadMatrix[i][j + col]) {\n                        col += 1;\n                    }\n\n                    for (k = 0; k < rowspan; k++) {\n                        for (l = 0; l < colspan; l++) {\n                            theadMatrix[i + k][j + col + l] = id;\n                        }\n                    }\n                }\n            }\n        },\n\n        _generateIdsForRows: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n            var that = this;\n            var timestamp = new Date().getTime();\n            var numberOfTableRows = tableRows.length;\n            var row, cells, cell, col, id, colspan, rowspan, i, j, k, l, colIndex, headers;\n\n            var pushHeaderId = function(row) {\n                headers.push(row[colIndex]);\n            };\n\n            for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n                row = tableRows[i];\n                cells = $(row.cells).filter(\"th\");\n                col = 0;\n\n                for (j = 0; j < cells.length; j++) {\n                    cell = cells[j];\n                    id = \"table\" + i + j + (++timestamp);\n                    cell.setAttribute(\"id\", id);\n                    colspan = cell.getAttribute(\"colspan\") || 1;\n                    rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                    while (tbodyMatrix[i][j + col]) {\n                        col += 1;\n                    }\n\n                    for (k = 0; k < rowspan; k++) {\n                        for (l = 0; l < colspan; l++) {\n                            tbodyMatrix[i + k][j + col + l] = id;\n                        }\n                    }\n\n                    colIndex = cell.getAttribute(\"col-index\");\n                    headers = [];\n                    theadMatrix.forEach(pushHeaderId);\n                    headers = headers.filter(that._onlyUnique);\n                    cell.setAttribute(\"headers\", headers.join(\" \").trim());\n                }\n            }\n        },\n\n        _assignIds: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n            var that = this;\n            var numberOfTableRows = tableRows.length;\n            var row, cells, cell, i, j, colIndex, headers;\n\n            var pushHeaderId = function(row) {\n                headers.push(row[colIndex]);\n            };\n\n            for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n                row = tableRows[i];\n                cells = $(row.cells).filter(\"td\");\n\n                for (j = 0; j < cells.length; j++) {\n                    cell = cells[j];\n                    colIndex = cell.getAttribute(\"col-index\");\n                    headers = tbodyMatrix[i].slice();\n\n                    theadMatrix.forEach(pushHeaderId);\n                    headers = headers.filter(that._onlyUnique);\n                    cell.setAttribute(\"headers\", headers.join(\" \").trim());\n                }\n            }\n        },\n\n        _getNumberOfColumns: function(table) {\n            var cells = $(table).find(\"th, td\");\n            var numberOfCols = 0;\n            var cell, i, currentIndex;\n\n            for (i = 0; i < cells.length; i++) {\n                cell = cells[i];\n                currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n                if (currentIndex > numberOfCols) {\n                    numberOfCols = currentIndex;\n                }\n            }\n\n            return numberOfCols;\n        },\n\n        _getNumberOfHeaderColumns: function(table, numberOfHeaderRows) {\n            var rows = table.rows;\n            var numberOfCols = 0;\n            var currentIndex, row, i, j, cell;\n\n            for (i = numberOfHeaderRows; i < rows.length; i++) {\n                row = rows[i];\n\n                for (j = 0; j < row.cells.length; j++) {\n                    cell = row.cells[j];\n\n                    if (this.is(cell, \"th\")) {\n                        currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n                        if (currentIndex > numberOfCols) {\n                            numberOfCols = currentIndex;\n                        }\n                    }\n                }\n            }\n\n            return numberOfCols;\n        },\n\n        _getNumberOfHeaderRows: function(table) {\n            var rows = table.rows;\n            var thead = table.tHead;\n            var number = thead && table.tHead.rows ? table.tHead.rows.length : 0;\n            var j, row, cell, length;\n\n            if (number === 0) {\n                row = rows[0];\n                length = row.cells && row.cells.length;\n\n                while (row && length && this.is(row.cells[0], \"th\")) {\n                    for (j = 0; j < length; j++) {\n                        cell = row ? row.cells[j] : null;\n\n                        if (!this.is(cell, \"th\")) {\n                            row = null;\n                        }\n                    }\n\n                    if (row) {\n                        number += 1;\n                        row = this.next(row);\n                        length = row && row.cells && row.cells.length;\n                    }\n                }\n            }\n\n            return number;\n        },\n\n        // End: Table Utilities\n\n        _onlyUnique: function(value, index, self) {\n            return self.indexOf(value) === index;\n        }\n    };\n\n    kendo.ui.editor.Dom = Dom;\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    // Imports ================================================================\n    var kendo = window.kendo;\n    var Editor = kendo.ui.editor;\n    var dom = Editor.Dom;\n    var extend = $.extend;\n\n    var fontSizeMappings = 'xx-small,x-small,small,medium,large,x-large,xx-large'.split(',');\n    var quoteRe = /\"/g; //\"\n    var brRe = /<br[^>]*>/i;\n    var pixelRe = /^\\d+(\\.\\d*)?(px)?$/i;\n    var emptyPRe = /<p>(?:&nbsp;)?<\\/p>/i;\n    var cssDeclaration = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/g;\n    var sizzleAttr = /^sizzle-\\d+/i;\n    var scriptAttr = /^k-script-/i;\n    var onerrorRe = /\\s*onerror\\s*=\\s*(?:'|\")?([^'\">\\s]*)(?:'|\")?/i;\n    var br = '<br class=\"k-br\">';\n    var bomSpan = \"<span class='k-br'>\\ufeff</span>\";\n\n    var div = document.createElement(\"div\");\n    div.innerHTML = \" <hr>\";\n    var supportsLeadingWhitespace = div.firstChild.nodeType === 3;\n    div = null;\n    var isFunction = kendo.isFunction;\n\n    var TD = \"td\";\n\n    var Serializer = {\n        toEditableHtml: function(html) {\n            return (html || \"\")\n                .replace(/<!\\[CDATA\\[(.*)?\\]\\]>/g, \"<!--[CDATA[$1]]-->\")\n                .replace(/<(\\/?)script([^>]*)>/ig, \"<$1k:script$2>\")\n                .replace(/<img([^>]*)>/ig, function(match) {\n                    return match.replace(onerrorRe, \"\");\n                })\n                .replace(/(<\\/?img[^>]*>)[\\r\\n\\v\\f\\t ]+/ig, \"$1\")\n                .replace(/^<(table|blockquote)/i, br + '<$1')\n                .replace(/^[\\s]*(&nbsp;|\\u00a0)/i, '$1')\n                .replace(/<\\/(table|blockquote)>$/i, '</$1>' + br);\n        },\n\n        _toEditableImmutables: function(body) {\n            var immutable = Editor.Immutables.immutable,\n                emptyTextNode = dom.emptyTextNode,\n                first = body.firstChild,\n                last = body.lastChild;\n\n            while (emptyTextNode(first)) {\n                first = first.nextSibling;\n            }\n\n            while (emptyTextNode(last)) {\n                last = last.previousSibling;\n            }\n\n            if (first && immutable(first)) {\n                $(bomSpan).prependTo(body);\n            }\n\n            if (last && immutable(last)) {\n                $(bomSpan).appendTo(body);\n            }\n        },\n\n        _fillEmptyElements: function(body) {\n            // fills empty elements to allow them to be focused\n            $(body).find(\"p,td\").each(function() {\n                var p = $(this);\n                if (/^\\s*$/g.test(p.text()) && !p.find(\"img,input\").length) {\n                    var node = this;\n                    while (node.children[0] && node.children[0].nodeType != 3) {\n                        node = node.children[0];\n                    }\n\n                    if (node.nodeType == 1 && !dom.empty[dom.name(node)]) {\n                        if (dom.is(node, \"td\")) {\n                            node.innerHTML = kendo.ui.editor.emptyTableCellContent;\n                        }\n                        else {\n                            node.innerHTML = kendo.ui.editor.emptyElementContent;\n                        }\n                    }\n                }\n            });\n        },\n\n        _removeSystemElements: function(body) {\n            // removes persisted system elements\n            $(\".k-paste-container\", body).remove();\n        },\n\n        _resetOrderedLists: function(root) {\n            // fix for IE9 OL bug -- https://connect.microsoft.com/IE/feedback/details/657695/ordered-list-numbering-changes-from-correct-to-0-0\n            var ols = root.getElementsByTagName(\"ol\"), i, ol, originalStart;\n\n            for (i = 0; i < ols.length; i++) {\n                ol = ols[i];\n                originalStart = ol.getAttribute(\"start\");\n\n                ol.setAttribute(\"start\", 1);\n\n                if (originalStart) {\n                    ol.setAttribute(\"start\", originalStart);\n                } else {\n                    ol.removeAttribute(originalStart);\n                }\n            }\n        },\n\n        _preventScriptExecution: function(root) {\n            $(root).find(\"*\").each(function() {\n                var attributes = this.attributes;\n                var attribute, i, l, name;\n                var attributesToRemove = [];\n\n                for (i = 0, l = attributes.length; i < l; i++) {\n                    attribute = attributes[i];\n                    name = attribute.nodeName;\n\n                    if (attribute.specified && /^on/i.test(name)) {\n                        this.setAttribute(\"k-script-\" + name, attribute.value);\n                        attributesToRemove.push(name);\n                    }\n                }\n\n                for (i = 0, l = attributesToRemove.length; i < l; i++) {\n                    this.removeAttribute(attributesToRemove[i]);\n                }\n            });\n        },\n\n        htmlToDom: function(html, root, options) {\n            var browser = kendo.support.browser;\n            var msie = browser.msie;\n            var o = options || {};\n            var immutables = o.immutables;\n\n            html = Serializer.toEditableHtml(html);\n\n            if (isFunction(o.custom)) {\n                html = o.custom(html) || html;\n            }\n            root.innerHTML = html;\n\n            if (immutables) {\n                immutables.deserialize(root);\n            }\n\n            if (msie) {\n                // unicode characters denormalize the DOM tree in IE9\n                dom.normalize(root);\n\n                Serializer._resetOrderedLists(root);\n            }\n\n            Serializer._preventScriptExecution(root);\n\n            Serializer._fillEmptyElements(root);\n\n            Serializer._removeSystemElements(root);\n\n            Serializer._toEditableImmutables(root);\n\n            // add k-table class to all tables\n            $(\"table\", root).addClass(\"k-table\");\n\n            return root;\n        },\n\n        domToXhtml: function(root, options) {\n            var result = [];\n            var immutables = options && options.immutables;\n\n            function semanticFilter(attributes) {\n                return $.grep(attributes, function(attr) {\n                    return attr.name != \"style\";\n                });\n            }\n\n            function mapStart(node, tag) {\n                result.push('<' + tag);\n                attr(node);\n                result.push('>');\n            }\n\n            var tagMap = {\n                iframe: {\n                    start: function(node) { mapStart(node, \"iframe\"); },\n                    end: function() { result.push('</iframe>'); }\n                },\n                'k:script': {\n                    start: function(node) { mapStart(node, \"script\"); },\n                    end: function() { result.push('</script>'); },\n                    skipEncoding: true\n                },\n                span: {\n                    canOptimize: true,\n                    semantic: true,\n                    start: function(node) {\n                        var style = node.style;\n\n                        var attributes = specifiedAttributes(node);\n                        var semanticAttributes = semanticFilter(attributes);\n\n                        if (semanticAttributes.length) {\n                            result.push(\"<span\"); attr(node, semanticAttributes); result.push(\">\");\n                        }\n\n                        if (style.textDecoration == \"underline\") {\n                            result.push(\"<u>\");\n                        }\n\n                        var font = [];\n                        if (style.color) {\n                            font.push('color=\"' + dom.toHex(style.color) + '\"');\n                        }\n\n                        if (style.fontFamily) {\n                            font.push('face=\"' + style.fontFamily + '\"');\n                        }\n\n                        if (style.fontSize) {\n                            var size = $.inArray(style.fontSize, fontSizeMappings);\n                            font.push('size=\"' + size + '\"');\n                        }\n\n                        // Apply the rest of the inline styles back\n                        var inlineStyles = [];\n                        var ignoredStylePrefixes = [\"text-decoration\", \"color\", \"font\"];\n\n                        for (let i = 0; i < style.length; i++) {\n                            var inlineStyle = style[i];\n\n                            if (ignoredStylePrefixes.filter(prop => inlineStyle.startsWith(prop)).length <= 0) {\n                                inlineStyles.push(`${inlineStyle}: ${style[inlineStyle]}`);\n                            }\n                        }\n\n                        if (inlineStyles.length) {\n                            font.push('style=\"' + inlineStyles.join(\";\") + '\"');\n                        }\n\n                        if (font.length) {\n                            result.push(\"<font \" + font.join(\" \") + \">\");\n                        }\n                    },\n                    end: function(node) {\n                        var style = node.style;\n\n                        if (style.color || style.fontFamily || style.fontSize) {\n                            result.push(\"</font>\");\n                        }\n\n                        if (style.textDecoration == \"underline\") {\n                            result.push(\"</u>\");\n                        }\n\n                        if (semanticFilter(specifiedAttributes(node)).length) {\n                            result.push(\"</span>\");\n                        }\n                    }\n                },\n                strong: {\n                    semantic: true,\n                    start: function(node) { mapStart(node, \"b\"); },\n                    end: function() { result.push('</b>'); }\n                },\n                em: {\n                    semantic: true,\n                    start: function(node) { mapStart(node, \"i\"); },\n                    end: function() { result.push('</i>'); }\n                },\n                b: {\n                    semantic: false,\n                    start: function(node) { mapStart(node, \"strong\"); },\n                    end: function() { result.push('</strong>'); }\n                },\n                i: {\n                    semantic: false,\n                    start: function(node) { mapStart(node, \"em\"); },\n                    end: function() { result.push('</em>'); }\n                },\n                u: {\n                    semantic: false,\n                    start: function(node) {\n                        result.push('<span');\n\n                        var attributes = specifiedAttributes(node);\n                        var style = $(attributes).filter(function(i, item) { return item.name == \"style\"; })[0];\n                        var styleObj = { nodeName: \"style\", value: \"text-decoration:underline;\" };\n\n                        if (style) {\n                            styleObj.value = style.value;\n                            if (!/text-decoration/i.test(styleObj.value)) {\n                                styleObj.value = \"text-decoration:underline;\" + styleObj.value;\n                            }\n                            attributes.splice($.inArray(style, attributes), 1);\n                        }\n                        attributes.push(styleObj);\n\n                        attr(node, attributes);\n                        result.push('>');\n                    },\n                    end: function() { result.push('</span>'); }\n                },\n                font: {\n                    canOptimize: true,\n                    semantic: false,\n                    start: function(node) {\n                        result.push('<span style=\"');\n\n                        var color = node.getAttribute('color');\n                        var size = fontSizeMappings[node.getAttribute('size')];\n                        var face = node.getAttribute('face');\n\n                        if (color) {\n                            result.push('color:');\n                            result.push(dom.toHex(color));\n                            result.push(';');\n                        }\n\n                        if (face) {\n                            result.push('font-family:');\n                            result.push(face);\n                            result.push(';');\n                        }\n\n                        if (size) {\n                            result.push('font-size:');\n                            result.push(size);\n                            result.push(';');\n                        }\n\n                        result.push('\">');\n                    },\n                    end: function() {\n                        result.push('</span>');\n                    }\n                }\n            };\n\n            tagMap.script = tagMap[\"k:script\"];\n\n            options = options || {};\n\n            if (typeof options.semantic == \"undefined\") {\n                options.semantic = true;\n            }\n\n            function cssProperties(cssText) {\n                var trim = kendo.trim;\n                var css = trim(cssText);\n                var match;\n                var property, value;\n                var properties = [];\n\n                cssDeclaration.lastIndex = 0;\n\n                while (true) {\n                    match = cssDeclaration.exec(css);\n\n                    if (!match) {\n                        break;\n                    }\n\n                    property = trim(match[1].toLowerCase());\n                    value = trim(match[2]);\n\n                    if (property == \"font-size-adjust\" || property == \"font-stretch\") {\n                        continue;\n                    }\n\n                    if (property.indexOf('color') >= 0) {\n                        value = dom.toHex(value);\n                    } else if (property.indexOf('font') >= 0) {\n                        value = value.replace(quoteRe, \"'\");\n                    } else if (/\\burl\\(/g.test(value)) {\n                        value = value.replace(quoteRe, \"\");\n                    }\n\n                    properties.push({ property: property, value: value });\n                }\n\n                return properties;\n            }\n\n            function styleAttr(cssText) {\n                var properties = cssProperties(cssText);\n                var i;\n\n                for (i = 0; i < properties.length; i++) {\n                    result.push(properties[i].property);\n                    result.push(':');\n                    result.push(properties[i].value);\n                    result.push(';');\n                }\n            }\n\n            function specifiedAttributes(node) {\n                var result = [];\n                var attributes = node.attributes;\n                var attribute, i, l;\n                var name, value, specified;\n\n                for (i = 0, l = attributes.length; i < l; i++) {\n                    attribute = attributes[i];\n\n                    name = attribute.nodeName;\n                    value = attribute.value;\n                    specified = attribute.specified;\n\n                    // In IE < 8 the 'value' attribute is not returned as 'specified'. The same goes for type=\"text\"\n                    if (name == 'value' && 'value' in node && node.value) {\n                        specified = true;\n                    } else if (name == 'type' && value == 'text') {\n                        specified = true;\n                    } else if (name == \"class\" && !value) {\n                        specified = false;\n                    } else if (sizzleAttr.test(name)) {\n                        specified = false;\n                    } else if (name == 'complete') {\n                        specified = false;\n                    } else if (name == 'altHtml') {\n                        specified = false;\n                    } else if (name == 'start' && dom.is(node, \"ul\")) {\n                        specified = false;\n                    } else if (name == 'start' && dom.is(node, \"ol\") && value == \"1\") {\n                        specified = false;\n                    } else if (name.indexOf('_moz') >= 0) {\n                        specified = false;\n                    } else if (scriptAttr.test(name)) {\n                        specified = !!options.scripts;\n                    } else if (name == 'data-role' && value == 'resizable' && (dom.is(node, \"tr\") || dom.is(node, \"td\"))) {\n                        specified = false;\n                    }\n\n                    if (specified) {\n                        result.push(attribute);\n                    }\n                }\n\n                return result;\n            }\n\n            function attr(node, attributes) {\n                var i, l, attribute, name, value;\n\n                attributes = attributes || specifiedAttributes(node);\n\n                if (dom.is(node, 'img')) {\n                    var width = node.style.width,\n                        height = node.style.height,\n                        $node = $(node);\n\n                    if (width && pixelRe.test(width)) {\n                        $node.attr('width', parseInt(width, 10));\n                        dom.unstyle(node, { width: undefined$1 });\n                    }\n\n                    if (height && pixelRe.test(height)) {\n                        $node.attr('height', parseInt(height, 10));\n                        dom.unstyle(node, { height: undefined$1 });\n                    }\n                }\n\n                if (!attributes.length) {\n                    return;\n                }\n\n                // Remove the following if everything seems to be in order.\n                // https://github.com/telerik/kendo-ui-core/issues/3639\n                // attributes.sort(function (a, b) {\n                //     return a.nodeName > b.nodeName ? 1 : a.nodeName < b.nodeName ? -1 : 0;\n                // });\n\n                for (i = 0, l = attributes.length; i < l; i++) {\n                    attribute = attributes[i];\n                    name = attribute.nodeName;\n                    value = attribute.value;\n\n                    if (name == \"class\" && value == \"k-table\") {\n                        continue;\n                    }\n\n                    name = name.replace(scriptAttr, \"\");\n\n                    result.push(' ');\n                    result.push(name);\n                    result.push('=\"');\n\n                    if (name == 'style') {\n                        styleAttr(value || node.style.cssText);\n                    } else if (name == 'src' || name == 'href') {\n                        result.push(kendo.htmlEncode(node.getAttribute(name, 2)));\n                    } else {\n                        result.push(dom.fillAttrs[name] ? name : value);\n                    }\n\n                    result.push('\"');\n                }\n            }\n\n            function children(node, skip, skipEncoding) {\n                for (var childNode = node.firstChild; childNode; childNode = childNode.nextSibling) {\n                    child(childNode, skip, skipEncoding);\n                }\n            }\n\n            function text(node) {\n                return node.nodeValue.replace(/\\ufeff/g, \"\");\n            }\n\n            function isEmptyBomNode(node) {\n                if (dom.isBom(node)) {\n                    do {\n                        node = node.parentNode;\n\n                        if (dom.is(node, TD) && node.childNodes.length === 1) {\n                            return true;\n                        }\n\n                        if (node.childNodes.length !== 1) {\n                            return false;\n                        }\n                    } while (!dom.isBlock(node));\n\n                    return true;\n                }\n\n                return false;\n            }\n\n            function child(node, skip, skipEncoding) {\n                var nodeType = node.nodeType,\n                    tagName, mapper,\n                    parent, value, previous, jqNode;\n\n                if (immutables && Editor.Immutables.immutable(node)) {\n                    result.push(immutables.serialize(node));\n                } else if (nodeType == 1) {\n                    tagName = dom.name(node);\n                    jqNode = $(node);\n\n                    if (jqNode.hasClass(\"k-element-resize-handle-wrapper\") || jqNode.hasClass(\"k-column-resize-handle-wrapper\") || jqNode.hasClass(\"k-row-resize-handle-wrapper\")) {\n                        return;\n                    }\n\n                    if (!tagName || dom.insignificant(node)) {\n                        return;\n                    }\n\n                    if (!options.scripts && (tagName == \"script\" || tagName == \"k:script\")) {\n                        return;\n                    }\n\n                    mapper = tagMap[tagName];\n\n                    if (mapper) {\n                        if (mapper.canOptimize &&\n                            options.optimizeTags &&\n                            shouldOptimize(node)) {\n                                children(node, false, mapper.skipEncoding);\n                            return;\n                        }\n\n                        if (typeof mapper.semantic == \"undefined\" ||\n                            (options.semantic ^ mapper.semantic)) {\n                            mapper.start(node);\n                            children(node, false, mapper.skipEncoding);\n                            mapper.end(node);\n                            return;\n                        }\n                    }\n\n                    result.push('<');\n                    result.push(tagName);\n\n                    attr(node);\n\n                    if (dom.empty[tagName]) {\n                        result.push(' />');\n                    } else {\n                        result.push('>');\n                        children(node, skip || dom.is(node, 'pre'));\n                        result.push('</');\n                        result.push(tagName);\n                        result.push('>');\n                    }\n                } else if (nodeType == 3) {\n                    if (isEmptyBomNode(node)) {\n                        result.push('&nbsp;');\n                        return;\n                    }\n\n                    value = text(node);\n\n                    if (!skip && supportsLeadingWhitespace) {\n                        parent = node.parentNode;\n                        previous = node.previousSibling;\n\n                        if (!previous) {\n                             previous = (dom.isInline(parent) ? parent : node).previousSibling;\n                        }\n\n                        if (!previous || previous.innerHTML === \"\" || dom.isBlock(previous)) {\n                            if (options.keepEOL) {\n                                value = value.replace(/[\\r\\n\\v\\f\\t ]+/, ' ');\n                            } else {\n                                value = value.replace(/^[\\r\\n\\v\\f\\t ]+/, '');\n                            }\n                        }\n\n                        value = value.replace(/ +/, ' ');\n                    }\n\n                    result.push(skipEncoding ? value : dom.encode(value, options));\n\n                } else if (nodeType == 4) {\n                    result.push('<![CDATA[');\n                    result.push(node.data);\n                    result.push(']]>');\n                } else if (nodeType == 8) {\n                    if (node.data.indexOf('[CDATA[') < 0) {\n                        result.push('<!--');\n                        result.push(node.data);\n                        result.push('-->');\n                    } else {\n                        result.push('<!');\n                        result.push(node.data);\n                        result.push('>');\n                    }\n                }\n            }\n\n            function shouldOptimize(node) {\n                return node.attributes.length === 0;\n            }\n\n            function textOnly(root) {\n                var childrenCount = root.childNodes.length;\n                var textChild = childrenCount && root.firstChild.nodeType == 3;\n\n                return textChild && (childrenCount == 1 || (childrenCount == 2 && dom.insignificant(root.lastChild)));\n            }\n\n            function runCustom() {\n                if (kendo.isFunction(options.custom)) {\n                    result = options.custom(result) || result;\n                }\n            }\n\n            if (textOnly(root)) {\n                result = dom.encode(text(root.firstChild).replace(/[\\r\\n\\v\\f\\t ]+/, ' '), options);\n                runCustom();\n\n                return result;\n            }\n\n            children(root);\n            result = result.join('');\n            runCustom();\n\n            // if serialized dom contains only whitespace elements, consider it empty (required field validation)\n            if (result.replace(brRe, \"\").replace(emptyPRe, \"\") === \"\") {\n                return \"\";\n            }\n\n            return result;\n        }\n\n    };\n\n    extend(Editor, {\n        Serializer: Serializer\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            extend = $.extend,\n            Editor = kendo.ui.editor,\n            browser = kendo.support.browser,\n            dom = Editor.Dom,\n            findNodeIndex = dom.findNodeIndex,\n            isDataNode = dom.isDataNode,\n            findClosestAncestor = dom.findClosestAncestor,\n            getNodeLength = dom.getNodeLength,\n            normalize = dom.normalize;\n\n    var SelectionUtils = {\n        selectionFromWindow: function(window) {\n            if (!window) {\n                return;\n            }\n\n            if (!(\"getSelection\" in window)) {\n                return new W3CSelection(window.document);\n            }\n\n            return window.getSelection();\n        },\n\n        selectionFromRange: function(range) {\n            var rangeDocument = RangeUtils.documentFromRange(range);\n            return SelectionUtils.selectionFromDocument(rangeDocument);\n        },\n\n        selectionFromDocument: function(document) {\n            return SelectionUtils.selectionFromWindow(dom.windowFromDocument(document));\n        }\n    };\n\n    var W3CRange = Class.extend({\n        init: function(doc) {\n            $.extend(this, {\n                ownerDocument: doc, /* not part of the spec; used when cloning ranges, traversing the dom and creating fragments */\n                startContainer: doc,\n                endContainer: doc,\n                commonAncestorContainer: doc,\n                startOffset: 0,\n                endOffset: 0,\n                collapsed: true\n            });\n        },\n\n        // Positioning Methods\n        setStart: function(node, offset) {\n            this.startContainer = node;\n            this.startOffset = offset;\n            updateRangeProperties(this);\n            fixIvalidRange(this, true);\n        },\n\n        setEnd: function(node, offset) {\n            this.endContainer = node;\n            this.endOffset = offset;\n            updateRangeProperties(this);\n            fixIvalidRange(this, false);\n        },\n\n        setStartBefore: function(node) {\n            this.setStart(node.parentNode, findNodeIndex(node));\n        },\n\n        setStartAfter: function(node) {\n            this.setStart(node.parentNode, findNodeIndex(node) + 1);\n        },\n\n        setEndBefore: function(node) {\n            this.setEnd(node.parentNode, findNodeIndex(node));\n        },\n\n        setEndAfter: function(node) {\n            this.setEnd(node.parentNode, findNodeIndex(node) + 1);\n        },\n\n        selectNode: function(node) {\n            this.setStartBefore(node);\n            this.setEndAfter(node);\n        },\n\n        selectNodeContents: function(node) {\n            this.setStart(node, 0);\n            this.setEnd(node, node[node.nodeType === 1 ? 'childNodes' : 'nodeValue'].length);\n        },\n\n        collapse: function(toStart) {\n            var that = this;\n\n            if (toStart) {\n                that.setEnd(that.startContainer, that.startOffset);\n            } else {\n                that.setStart(that.endContainer, that.endOffset);\n            }\n        },\n\n        // Editing Methods\n\n        deleteContents: function() {\n            var that = this,\n                range = that.cloneRange();\n\n            if (that.startContainer != that.commonAncestorContainer) {\n                that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n            }\n\n            that.collapse(true);\n\n            (function deleteSubtree(iterator) {\n                while (iterator.next()) {\n                    if (iterator.hasPartialSubtree()) {\n                        deleteSubtree(iterator.getSubtreeIterator());\n                    } else {\n                        iterator.remove();\n                    }\n                }\n            })(new RangeIterator(range));\n        },\n\n        cloneContents: function() {\n            // clone subtree\n            var document = RangeUtils.documentFromRange(this);\n            return (function cloneSubtree(iterator) {\n                    var node, frag = document.createDocumentFragment();\n\n                    while (node = iterator.next()) {\n                        node = node.cloneNode(!iterator.hasPartialSubtree());\n\n                        if (iterator.hasPartialSubtree()) {\n                            node.appendChild(cloneSubtree(iterator.getSubtreeIterator()));\n                        }\n\n                        frag.appendChild(node);\n                    }\n\n                    return frag;\n            })(new RangeIterator(this));\n        },\n\n        extractContents: function() {\n            var that = this,\n                range = that.cloneRange();\n\n            if (that.startContainer != that.commonAncestorContainer) {\n                that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n            }\n\n            that.collapse(true);\n\n            var document = RangeUtils.documentFromRange(that);\n\n            return (function extractSubtree(iterator) {\n                var node, frag = document.createDocumentFragment();\n\n                while (node = iterator.next()) {\n                    if (iterator.hasPartialSubtree()) {\n                        node = node.cloneNode(false);\n                        node.appendChild(extractSubtree(iterator.getSubtreeIterator()));\n                    } else {\n                        iterator.remove(that.originalRange);\n                    }\n\n                    frag.appendChild(node);\n                }\n\n                return frag;\n            })(new RangeIterator(range));\n        },\n\n        insertNode: function(node) {\n            var that = this;\n\n            if (isDataNode(that.startContainer)) {\n                if (that.startOffset != that.startContainer.nodeValue.length) {\n                    dom.splitDataNode(that.startContainer, that.startOffset);\n                }\n\n                dom.insertAfter(node, that.startContainer);\n            } else {\n                dom.insertAt(that.startContainer, node, that.startOffset);\n            }\n\n            that.setStart(that.startContainer, that.startOffset);\n        },\n\n        cloneRange: function() {\n            // fast copy\n            return $.extend(new W3CRange(this.ownerDocument), {\n                startContainer: this.startContainer,\n                endContainer: this.endContainer,\n                commonAncestorContainer: this.commonAncestorContainer,\n                startOffset: this.startOffset,\n                endOffset: this.endOffset,\n                collapsed: this.collapsed,\n\n                originalRange: this /* not part of the spec; used to update the original range when calling extractContents() on clones */\n            });\n        },\n\n        // used for debug purposes\n        toString: function() {\n            var startNodeName = this.startContainer.nodeName,\n                endNodeName = this.endContainer.nodeName;\n\n            return [startNodeName == \"#text\" ? this.startContainer.nodeValue : startNodeName, '(', this.startOffset, ') : ',\n                    endNodeName == \"#text\" ? this.endContainer.nodeValue : endNodeName, '(', this.endOffset, ')'].join('');\n        }\n    });\n\n    W3CRange.fromNode = function(node) {\n        return new W3CRange(node.ownerDocument);\n    };\n\n    /* can be used in Range.compareBoundaryPoints if we need it one day */\n    function compareBoundaries(start, end, startOffset, endOffset) {\n        if (start == end) {\n            return endOffset - startOffset;\n        }\n\n        // end is child of start\n        var container = end;\n        while (container && container.parentNode != start) {\n            container = container.parentNode;\n        }\n\n        if (container) {\n            return findNodeIndex(container) - startOffset;\n        }\n\n        // start is child of end\n        container = start;\n        while (container && container.parentNode != end) {\n            container = container.parentNode;\n        }\n\n        if (container) {\n            return endOffset - findNodeIndex(container) - 1;\n        }\n\n        // deep traversal\n        var root = dom.commonAncestor(start, end);\n        var startAncestor = start;\n\n        while (startAncestor && startAncestor.parentNode != root) {\n            startAncestor = startAncestor.parentNode;\n        }\n\n        if (!startAncestor) {\n            startAncestor = root;\n        }\n\n        var endAncestor = end;\n        while (endAncestor && endAncestor.parentNode != root) {\n            endAncestor = endAncestor.parentNode;\n        }\n\n        if (!endAncestor) {\n            endAncestor = root;\n        }\n\n        if (startAncestor == endAncestor) {\n            return 0;\n        }\n\n        return findNodeIndex(endAncestor) - findNodeIndex(startAncestor);\n    }\n\n    function fixIvalidRange(range, toStart) {\n        function isInvalidRange(range) {\n            try {\n                return compareBoundaries(range.startContainer, range.endContainer, range.startOffset, range.endOffset) < 0;\n            } catch (ex) {\n                // range was initially invalid (e.g. when cloned from invalid range) - it must be fixed\n                return true;\n            }\n        }\n\n        if (isInvalidRange(range)) {\n            if (toStart) {\n                range.commonAncestorContainer = range.endContainer = range.startContainer;\n                range.endOffset = range.startOffset;\n            } else {\n                range.commonAncestorContainer = range.startContainer = range.endContainer;\n                range.startOffset = range.endOffset;\n            }\n\n            range.collapsed = true;\n        }\n    }\n\n    function updateRangeProperties(range) {\n        range.collapsed = range.startContainer == range.endContainer && range.startOffset == range.endOffset;\n\n        var node = range.startContainer;\n        while (node && node != range.endContainer && !dom.isAncestorOf(node, range.endContainer)) {\n            node = node.parentNode;\n        }\n\n        range.commonAncestorContainer = node;\n    }\n\n    var RangeIterator = Class.extend({\n        init: function(range) {\n            $.extend(this, {\n                range: range,\n                _current: null,\n                _next: null,\n                _end: null\n            });\n\n            if (range.collapsed) {\n                return;\n            }\n\n            var root = range.commonAncestorContainer;\n\n            this._next = range.startContainer == root && !isDataNode(range.startContainer) ?\n            range.startContainer.childNodes[range.startOffset] :\n            findClosestAncestor(root, range.startContainer);\n\n            this._end = range.endContainer == root && !isDataNode(range.endContainer) ?\n            range.endContainer.childNodes[range.endOffset] :\n            findClosestAncestor(root, range.endContainer).nextSibling;\n        },\n\n        hasNext: function() {\n            return !!this._next;\n        },\n\n        next: function() {\n            var that = this,\n                current = that._current = that._next;\n            that._next = that._current && that._current.nextSibling != that._end ?\n            that._current.nextSibling : null;\n\n            if (isDataNode(that._current)) {\n                if (that.range.endContainer == that._current) {\n                    current = current.cloneNode(true);\n                    current.deleteData(that.range.endOffset, current.length - that.range.endOffset);\n                }\n\n                if (that.range.startContainer == that._current) {\n                    current = current.cloneNode(true);\n                    current.deleteData(0, that.range.startOffset);\n                }\n            }\n\n            return current;\n        },\n\n        traverse: function(callback) {\n            var that = this,\n                current;\n\n            function next() {\n                that._current = that._next;\n                that._next = that._current && that._current.nextSibling != that._end ? that._current.nextSibling : null;\n                return that._current;\n            }\n\n            while (current = next()) {\n                if (that.hasPartialSubtree()) {\n                    that.getSubtreeIterator().traverse(callback);\n                } else {\n                    callback(current);\n                }\n            }\n\n            return current;\n        },\n\n        remove: function(originalRange) {\n            var that = this,\n                inStartContainer = that.range.startContainer == that._current,\n                inEndContainer = that.range.endContainer == that._current,\n                start, end, delta;\n\n            if (isDataNode(that._current) && (inStartContainer || inEndContainer)) {\n                start = inStartContainer ? that.range.startOffset : 0;\n                end = inEndContainer ? that.range.endOffset : that._current.length;\n                delta = end - start;\n\n                if (originalRange && (inStartContainer || inEndContainer)) {\n                    if (that._current == originalRange.startContainer && start <= originalRange.startOffset) {\n                        originalRange.startOffset -= delta;\n                    }\n\n                    if (that._current == originalRange.endContainer && end <= originalRange.endOffset) {\n                        originalRange.endOffset -= delta;\n                    }\n                }\n\n                that._current.deleteData(start, delta);\n            } else {\n                var parent = that._current.parentNode;\n\n                if (originalRange && (that.range.startContainer == parent || that.range.endContainer == parent)) {\n                    var nodeIndex = findNodeIndex(that._current);\n\n                    if (parent == originalRange.startContainer && nodeIndex <= originalRange.startOffset) {\n                        originalRange.startOffset -= 1;\n                    }\n\n                    if (parent == originalRange.endContainer && nodeIndex < originalRange.endOffset) {\n                        originalRange.endOffset -= 1;\n                    }\n                }\n\n                dom.remove(that._current);\n            }\n        },\n\n        hasPartialSubtree: function() {\n            return !isDataNode(this._current) &&\n            (dom.isAncestorOrSelf(this._current, this.range.startContainer) ||\n                dom.isAncestorOrSelf(this._current, this.range.endContainer));\n        },\n\n        getSubtreeIterator: function() {\n            return new RangeIterator(this.getSubRange());\n        },\n\n        getSubRange: function() {\n            var that = this,\n                subRange = that.range.cloneRange();\n            subRange.selectNodeContents(that._current);\n            if (dom.isAncestorOrSelf(that._current, that.range.startContainer)) {\n                subRange.setStart(that.range.startContainer, that.range.startOffset);\n            }\n            if (dom.isAncestorOrSelf(that._current, that.range.endContainer)) {\n                subRange.setEnd(that.range.endContainer, that.range.endOffset);\n            }\n\n            return subRange;\n        }\n    });\n\n    var W3CSelection = Class.extend({\n        init: function(doc) {\n            this.ownerDocument = doc;\n            this.rangeCount = 1;\n        },\n\n        addRange: function(range) {\n            var textRange = this.ownerDocument.body.createTextRange();\n\n            // end container should be adopted first in order to prevent selection with negative length\n            adoptContainer(textRange, range, false);\n            adoptContainer(textRange, range, true);\n\n            textRange.select();\n        },\n\n        removeAllRanges: function() {\n            var selection = this.ownerDocument.selection;\n\n            if (selection.type != \"None\") {\n                selection.empty();\n            }\n        },\n\n        getRangeAt: function() {\n            var textRange,\n                range = new W3CRange(this.ownerDocument),\n                selection = this.ownerDocument.selection,\n                element, commonAncestor;\n\n            try {\n                textRange = selection.createRange();\n                element = textRange.item ? textRange.item(0) : textRange.parentElement();\n                if (element.ownerDocument != this.ownerDocument) {\n                    return range;\n                }\n            } catch (ex) {\n                return range;\n            }\n\n            if (selection.type == \"Control\") {\n                range.selectNode(textRange.item(0));\n            } else {\n                commonAncestor = textRangeContainer(textRange);\n                adoptEndPoint(textRange, range, commonAncestor, true);\n                adoptEndPoint(textRange, range, commonAncestor, false);\n\n                if (range.startContainer.nodeType == 9) {\n                    range.setStart(range.endContainer, range.startOffset);\n                }\n\n                if (range.endContainer.nodeType == 9) {\n                    range.setEnd(range.startContainer, range.endOffset);\n                }\n\n                if (textRange.compareEndPoints(\"StartToEnd\", textRange) === 0) {\n                    range.collapse(false);\n                }\n\n                var startContainer = range.startContainer,\n                    endContainer = range.endContainer,\n                    body = this.ownerDocument.body;\n\n                if (!range.collapsed && range.startOffset === 0 && range.endOffset == getNodeLength(range.endContainer) && // check for full body selection\n                    !(startContainer == endContainer && isDataNode(startContainer) && startContainer.parentNode == body)) { // but not when single textnode is selected\n                    var movedStart = false,\n                        movedEnd = false;\n\n                    while (findNodeIndex(startContainer) === 0 && startContainer == startContainer.parentNode.firstChild && startContainer != body) {\n                        startContainer = startContainer.parentNode;\n                        movedStart = true;\n                    }\n\n                    while (findNodeIndex(endContainer) == getNodeLength(endContainer.parentNode) - 1 && endContainer == endContainer.parentNode.lastChild && endContainer != body) {\n                        endContainer = endContainer.parentNode;\n                        movedEnd = true;\n                    }\n\n                    if (startContainer == body && endContainer == body && movedStart && movedEnd) {\n                        range.setStart(startContainer, 0);\n                        range.setEnd(endContainer, getNodeLength(body));\n                    }\n                }\n            }\n\n            return range;\n        }\n    });\n\n    function textRangeContainer(textRange) {\n        var left = textRange.duplicate(),\n            right = textRange.duplicate();\n\n        left.collapse(true);\n        right.collapse(false);\n\n        return dom.commonAncestor(textRange.parentElement(), left.parentElement(), right.parentElement());\n    }\n\n    function adoptContainer(textRange, range, start) {\n        // find anchor node and offset\n        var container = range[start ? \"startContainer\" : \"endContainer\"],\n            offset = range[start ? \"startOffset\" : \"endOffset\"],\n            textOffset = 0,\n            isData = isDataNode(container),\n            anchorNode = isData ? container : container.childNodes[offset] || null,\n            anchorParent = isData ? container.parentNode : container,\n            doc = range.ownerDocument,\n            cursor = doc.body.createTextRange(),\n            cursorNode;\n\n        // visible data nodes need a text offset\n        if (container.nodeType == 3 || container.nodeType == 4) {\n            textOffset = offset;\n        }\n\n        if (!anchorParent) {\n            anchorParent = doc.body;\n        }\n\n        if (anchorParent.nodeName.toLowerCase() == \"img\") {\n            cursor.moveToElementText(anchorParent);\n            cursor.collapse(false);\n            textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n        } else {\n            // create a cursor element node to position range (since we can't select text nodes)\n            cursorNode = anchorParent.insertBefore(dom.create(doc, \"a\"), anchorNode);\n\n            cursor.moveToElementText(cursorNode);\n            dom.remove(cursorNode);\n            cursor[start ? \"moveStart\" : \"moveEnd\"](\"character\", textOffset);\n            cursor.collapse(false);\n            textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n        }\n    }\n\n    function adoptEndPoint(textRange, range, commonAncestor, start) {\n        var cursorNode = dom.create(range.ownerDocument, \"a\"),\n            cursor = textRange.duplicate(),\n            comparison = start ? \"StartToStart\" : \"StartToEnd\",\n            result, parent, target,\n            previous, next,\n            args, index,\n            appended = false;\n\n        cursorNode.innerHTML = \"\\ufeff\";\n        cursor.collapse(start);\n\n        parent = cursor.parentElement();\n\n        if (!dom.isAncestorOrSelf(commonAncestor, parent)) {\n            parent = commonAncestor;\n        }\n\n        // detect range end points\n        // insert cursorNode within the textRange parent and move the cursor until it gets outside of the textRange\n        do {\n            if (appended) {\n                parent.insertBefore(cursorNode, cursorNode.previousSibling);\n            } else {\n                parent.appendChild(cursorNode);\n                appended = true;\n            }\n            cursor.moveToElementText(cursorNode);\n        } while ((result = cursor.compareEndPoints(comparison, textRange)) > 0 && cursorNode.previousSibling);\n\n        target = cursorNode.nextSibling;\n\n        if (result == -1 && isDataNode(target)) {\n            cursor.setEndPoint(start ? \"EndToStart\" : \"EndToEnd\", textRange);\n\n            dom.remove(cursorNode);\n\n            args = [target, cursor.text.length];\n        } else {\n            previous = !start && cursorNode.previousSibling;\n            next = start && cursorNode.nextSibling;\n\n            if (isDataNode(next)) {\n                args = [next, 0];\n            } else if (isDataNode(previous)) {\n                args = [previous, previous.length];\n            } else {\n                index = findNodeIndex(cursorNode);\n\n                if (parent.nextSibling && index == parent.childNodes.length - 1) {\n                    args = [parent.nextSibling, 0];\n                } else {\n                    args = [parent, index];\n                }\n            }\n\n            dom.remove(cursorNode);\n        }\n\n        range[start ? \"setStart\" : \"setEnd\"].apply(range, args);\n    }\n\n    var RangeEnumerator = Class.extend({\n        init: function(range) {\n            this.enumerate = function() {\n                var nodes = [];\n\n                function visit(node) {\n                    if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                        nodes.push(node);\n                    } else {\n                        node = node.firstChild;\n                        while (node) {\n                            visit(node);\n                            node = node.nextSibling;\n                        }\n                    }\n                }\n\n                new RangeIterator(range).traverse(visit);\n\n                return nodes;\n            };\n        }\n    });\n\n    var ImmutablesRangeIterator = RangeIterator.extend({\n        hasPartialSubtree: function() {\n            var immutable = Editor.Immutables && Editor.Immutables.immutable;\n            return immutable && !immutable(this._current) && RangeIterator.fn.hasPartialSubtree.call(this);\n        },\n\n        getSubtreeIterator: function() {\n            return new ImmutablesRangeIterator(this.getSubRange());\n        }\n    });\n\n    var ImmutablesRangeEnumerator = Class.extend({\n        init: function(range) {\n            this.enumerate = function() {\n                var nodes = [];\n                var immutable = Editor.Immutables && Editor.Immutables.immutable;\n                function visit(node) {\n                    if (immutable && !immutable(node)) {\n                        if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                            nodes.push(node);\n                        } else {\n                            node = node.firstChild;\n                            while (node) {\n                                visit(node);\n                                node = node.nextSibling;\n                            }\n                        }\n                    }\n                }\n\n                new ImmutablesRangeIterator(range).traverse(visit);\n\n                return nodes;\n            };\n        }\n    });\n\n    var RestorePoint = Class.extend({\n        init: function(range, body, options) {\n            var that = this;\n            that.range = range;\n            that.rootNode = RangeUtils.documentFromRange(range);\n            that.body = body || that.getEditable(range);\n            if (dom.name(that.body) != \"body\") {\n                that.rootNode = that.body;\n            }\n\n            that.startContainer = that.nodeToPath(range.startContainer);\n            that.endContainer = that.nodeToPath(range.endContainer);\n            that.startOffset = that.offset(range.startContainer, range.startOffset);\n            that.endOffset = that.offset(range.endContainer, range.endOffset);\n\n            that.immutables = options && options.immutables;\n\n            if (that.immutables) {\n                that.serializedImmutables = Editor.Immutables.removeImmutables(that.body);\n            }\n\n            that.html = that.body.innerHTML;\n\n            if (that.immutables && !that.serializedImmutables.empty) {\n                Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n            }\n        },\n\n        index: function(node) {\n            var result = 0,\n                lastType = node.nodeType;\n\n            while (node = node.previousSibling) {\n                var nodeType = node.nodeType;\n\n                if (nodeType != 3 || lastType != nodeType) {\n                    result ++;\n                }\n\n                lastType = nodeType;\n            }\n\n            return result;\n        },\n\n        getEditable: function(range) {\n            var root = range.commonAncestorContainer;\n\n            while (root && (root.nodeType == 3 || root.attributes && (!root.attributes.contentEditable || root.attributes.contentEditable.nodeValue.toLowerCase() == \"false\"))) {\n                root = root.parentNode;\n            }\n\n            return root;\n        },\n\n        restoreHtml: function() {\n            var that = this;\n\n            dom.removeChildren(that.body);\n            that.body.innerHTML = that.html;\n            if (that.immutables && !that.serializedImmutables.empty) {\n                Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n            }\n        },\n\n        offset: function(node, value) {\n            if (node.nodeType == 3) {\n                while ((node = node.previousSibling) && node.nodeType == 3) {\n                    value += node.nodeValue.length;\n                }\n            }\n\n            return value;\n        },\n\n        nodeToPath: function(node) {\n            var path = [];\n\n            while (node != this.rootNode) {\n                path.push(this.index(node));\n                node = node.parentNode;\n            }\n\n            return path;\n        },\n\n        toRangePoint: function(range, start, path, denormalizedOffset) {\n            var node = this.rootNode,\n                length = path.length,\n                offset = denormalizedOffset;\n\n            while (length-- && node) {\n                node = node.childNodes[path[length]];\n            }\n\n            while (node && node.nodeType == 3 && node.nodeValue.length < offset) {\n                offset -= node.nodeValue.length;\n                node = node.nextSibling;\n            }\n\n            if (node && offset >= 0) {\n                range[start ? 'setStart' : 'setEnd'](node, offset);\n            }\n        },\n\n        toRange: function() {\n            var that = this,\n                result = that.range.cloneRange();\n\n            that.toRangePoint(result, true, that.startContainer, that.startOffset);\n            that.toRangePoint(result, false, that.endContainer, that.endOffset);\n\n            return result;\n        }\n\n    });\n\n    var Marker = Class.extend({\n        init: function() {\n            this.caret = null;\n        },\n\n        addCaret: function(range) {\n            var that = this;\n            var caret = that.caret = dom.create(RangeUtils.documentFromRange(range), 'span', { className: 'k-marker' });\n            range.insertNode(caret);\n\n            dom.stripBomNode(caret.previousSibling);\n            dom.stripBomNode(caret.nextSibling);\n\n            range.selectNode(caret);\n            return caret;\n        },\n\n        removeCaret: function(range) {\n            var that = this,\n                previous = that.caret.previousSibling,\n                startOffset = 0;\n\n            if (previous) {\n                startOffset = isDataNode(previous) ? previous.nodeValue.length : findNodeIndex(previous);\n            }\n\n            var container = that.caret.parentNode;\n            var containerIndex = previous ? findNodeIndex(previous) : 0;\n\n            dom.remove(that.caret);\n            normalize(container);\n\n            var node = container.childNodes[containerIndex];\n\n            if (isDataNode(node)) {\n                range.setStart(node, startOffset);\n            } else if (node) {\n                var textNode = dom.lastTextNode(node);\n                if (textNode) {\n                    range.setStart(textNode, textNode.nodeValue.length);\n                } else {\n                    range[previous ? 'setStartAfter' : 'setStartBefore'](node);\n                }\n            } else {\n                if (!browser.msie && !container.innerHTML) {\n                    container.innerHTML = '<br _moz_dirty=\"\" />';\n                }\n\n                range.selectNodeContents(container);\n            }\n            range.collapse(true);\n        },\n\n        add: function(range, expand) {\n            var that = this;\n\n            var collapsed = range.collapsed && !RangeUtils.isExpandable(range);\n            var doc = RangeUtils.documentFromRange(range);\n\n            if (expand && range.collapsed) {\n                that.addCaret(range);\n                range = RangeUtils.expand(range);\n            }\n\n            var rangeBoundary = range.cloneRange();\n\n            rangeBoundary.collapse(false);\n            that.end = dom.create(doc, 'span', { className: 'k-marker' });\n            rangeBoundary.insertNode(that.end);\n\n            rangeBoundary = range.cloneRange();\n            rangeBoundary.collapse(true);\n            that.start = that.end.cloneNode(true);\n            rangeBoundary.insertNode(that.start);\n\n            that._removeDeadMarkers(that.start, that.end);\n\n            if (collapsed) {\n                var bom = doc.createTextNode(\"\\ufeff\");\n                dom.insertAfter(bom.cloneNode(), that.start);\n                dom.insertBefore(bom, that.end);\n            }\n\n            normalize(range.commonAncestorContainer);\n\n            range.setStartBefore(that.start);\n            range.setEndAfter(that.end);\n\n            return range;\n        },\n\n        _removeDeadMarkers: function(start, end) {\n            if (start.previousSibling && start.previousSibling.nodeValue == \"\\ufeff\") {\n                dom.remove(start.previousSibling);\n            }\n\n            if (end.nextSibling && end.nextSibling.nodeValue == \"\\ufeff\") {\n                dom.remove(end.nextSibling);\n            }\n        },\n\n        _normalizedIndex: function(node) {\n            var index = findNodeIndex(node);\n            var pointer = node;\n\n            while (pointer.previousSibling) {\n                if (pointer.nodeType == 3 && pointer.previousSibling.nodeType == 3) {\n                    index--;\n                }\n\n                pointer = pointer.previousSibling;\n            }\n\n            return index;\n        },\n\n        remove: function(range) {\n            var that = this,\n                start = that.start,\n                end = that.end,\n                shouldNormalizeStart,\n                shouldNormalizeEnd,\n                shouldNormalize;\n\n            normalize(range.commonAncestorContainer);\n\n            while (!start.nextSibling && start.parentNode) {\n                start = start.parentNode;\n            }\n\n            while (!end.previousSibling && end.parentNode) {\n                end = end.parentNode;\n            }\n\n            // merely accessing the siblings will solve range issues in IE\n            shouldNormalizeStart = (start.previousSibling && start.previousSibling.nodeType == 3) &&\n                                   (start.nextSibling && start.nextSibling.nodeType == 3);\n\n            shouldNormalizeEnd = (end.previousSibling && end.previousSibling.nodeType == 3) &&\n                                 (end.nextSibling && end.nextSibling.nodeType == 3);\n\n            shouldNormalize = shouldNormalizeStart && shouldNormalizeEnd;\n\n            start = start.nextSibling;\n            end = end.previousSibling;\n\n            var isBomSelected = start === end && dom.isBom(start);\n            if (isBomSelected && start.length > 1) {\n                start.nodeValue = start.nodeValue.charAt(0);\n            }\n\n            var collapsed = isBomSelected;\n            var collapsedToStart = false;\n            // collapsed range\n            if (start == that.end) {\n                collapsedToStart = !!that.start.previousSibling;\n                start = end = that.start.previousSibling || that.end.nextSibling;\n                collapsed = true;\n            }\n\n            dom.remove(that.start);\n            dom.remove(that.end);\n\n            if (!start || !end) {\n                range.selectNodeContents(range.commonAncestorContainer);\n                range.collapse(true);\n                return;\n            }\n\n            var startOffset = collapsed ? isDataNode(start) ? start.nodeValue.length : start.childNodes.length : 0;\n            var endOffset = isDataNode(end) ? end.nodeValue.length : end.childNodes.length;\n\n            if (start.nodeType == 3) {\n                while (start.previousSibling && start.previousSibling.nodeType == 3) {\n                    start = start.previousSibling;\n                    startOffset += start.nodeValue.length;\n                }\n            }\n\n            if (end.nodeType == 3) {\n                while (end.previousSibling && end.previousSibling.nodeType == 3) {\n                    end = end.previousSibling;\n                    endOffset += end.nodeValue.length;\n                }\n            }\n\n            var startParent = start.parentNode;\n            var endParent = end.parentNode;\n            var startIndex = this._normalizedIndex(start);\n            var endIndex = this._normalizedIndex(end);\n\n            normalize(startParent);\n            if (start.nodeType == 3) {\n                start = startParent.childNodes[startIndex];\n            }\n\n            normalize(endParent);\n            if (end.nodeType == 3) {\n                end = endParent.childNodes[endIndex];\n            }\n\n            if (collapsed) {\n                if (start.nodeType == 3) {\n                    range.setStart(start, startOffset);\n                } else {\n                    range[collapsedToStart ? 'setStartAfter' : 'setStartBefore'](start);\n                }\n\n                range.collapse(true);\n\n            } else {\n                if (start.nodeType == 3) {\n                    range.setStart(start, startOffset);\n                } else {\n                    range.setStartBefore(start);\n                }\n\n                if (end.nodeType == 3) {\n                    range.setEnd(end, endOffset);\n                } else {\n                    range.setEndAfter(end);\n                }\n            }\n\n            if (that.caret) {\n                that.removeCaret(range);\n            }\n        }\n    });\n\n    var boundary = /[\\u0009-\\u000d]|\\u0020|\\u00a0|\\ufeff|\\.|,|;|:|!|\\(|\\)|\\?/;\n\n    var RangeUtils = {\n        nodes: function(range) {\n            var nodes = RangeUtils.textNodes(range);\n            if (!nodes.length) {\n                range.selectNodeContents(range.commonAncestorContainer);\n                nodes = RangeUtils.textNodes(range);\n                if (!nodes.length) {\n                    nodes = dom.significantChildNodes(range.commonAncestorContainer);\n                }\n            }\n            return nodes;\n        },\n\n        textNodes: function(range) {\n            var allNodes = new RangeEnumerator(range).enumerate(),\n                result = allNodes.filter(function(node) {\n                    return dom.allowsTextContent(node.parentElement);\n                });\n\n            return result;\n        },\n\n        editableTextNodes: function(range) {\n            var nodes = [],\n                immutableParent = Editor.Immutables && Editor.Immutables.immutableParent,\n                result = [];\n\n            if (immutableParent && !immutableParent(range.commonAncestorContainer)) {\n                nodes = new ImmutablesRangeEnumerator(range).enumerate();\n                result = nodes.filter(function(node) {\n                    return dom.allowsTextContent(node.parentElement);\n                });\n            }\n\n            return result;\n        },\n\n        documentFromRange: function(range) {\n            var startContainer = range.startContainer;\n            return startContainer.nodeType == 9 ? startContainer : startContainer.ownerDocument;\n        },\n\n        createRange: function(document) {\n            return document.createRange();\n        },\n\n        selectRange: function(range) {\n            var image = RangeUtils.image(range);\n            if (image) {\n                range.setStartAfter(image);\n                range.setEndAfter(image);\n            }\n            var selection = SelectionUtils.selectionFromRange(range);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        },\n\n        stringify: function(range) {\n            return kendo.format(\n                \"{0}:{1} - {2}:{3}\",\n                dom.name(range.startContainer), range.startOffset,\n                dom.name(range.endContainer), range.endOffset\n            );\n        },\n\n        split: function(range, node, trim) {\n            function partition(start) {\n                var partitionRange = range.cloneRange();\n                partitionRange.collapse(start);\n                partitionRange[start ? 'setStartBefore' : 'setEndAfter'](node);\n                var contents = partitionRange.extractContents();\n                if (trim) {\n                    contents = dom.trim(contents);\n                }\n                dom[start ? 'insertBefore' : 'insertAfter'](contents, node);\n            }\n            partition(true);\n            partition(false);\n        },\n\n        mapAll: function(range, map) {\n            var nodes = [];\n\n            new RangeIterator(range).traverse(function(node) {\n                var mapped = map(node);\n\n                if (mapped && $.inArray(mapped, nodes) < 0) {\n                    nodes.push(mapped);\n                }\n            });\n\n            return nodes;\n        },\n\n        getAll: function(range, predicate) {\n            var selector = predicate;\n\n            if (typeof predicate == \"string\") {\n                predicate = function(node) {\n                    return dom.is(node, selector);\n                };\n            }\n\n            return RangeUtils.mapAll(range, function(node) {\n                if (predicate(node)) {\n                    return node;\n                }\n            });\n        },\n\n        getMarkers: function(range) {\n            return RangeUtils.getAll(range, function(node) {\n                return node.className == 'k-marker';\n            });\n        },\n\n        image: function(range) {\n            var nodes = RangeUtils.getAll(range, \"img\");\n\n            if (nodes.length == 1) {\n                return nodes[0];\n            }\n        },\n\n        isStartOf: function(originalRange, node) {\n            if (originalRange.startOffset !== 0) {\n                return false;\n            }\n\n            var range = originalRange.cloneRange();\n\n            while (range.startOffset === 0 && range.startContainer != node) {\n                var index = dom.findNodeIndex(range.startContainer);\n                var parent = range.startContainer.parentNode;\n\n                while (index > 0 && parent[index - 1] && dom.insignificant(parent[index - 1])) {\n                    index--;\n                }\n\n                range.setStart(parent, index);\n            }\n\n            return range.startOffset === 0 && range.startContainer == node;\n        },\n\n        isEndOf: function(originalRange, node) {\n            var range = originalRange.cloneRange();\n\n            range.collapse(false);\n\n            var start = range.startContainer;\n\n            if (dom.isDataNode(start) && range.startOffset == dom.getNodeLength(start)) {\n                range.setStart(start.parentNode, dom.findNodeIndex(start) + 1);\n                range.collapse(true);\n            }\n\n            range.setEnd(node, dom.getNodeLength(node));\n\n            var nodes = [];\n\n            function visit(node) {\n                if (!dom.insignificant(node) && !(dom.isDataNode(node) && /^[\\ufeff]*$/.test(node.nodeValue))) {\n                    nodes.push(node);\n                }\n            }\n\n            new RangeIterator(range).traverse(visit);\n\n            return !nodes.length;\n        },\n\n        wrapSelectedElements: function(range) {\n            var startEditable = dom.editableParent(range.startContainer);\n            var endEditable = dom.editableParent(range.endContainer);\n\n            while (range.startOffset === 0 && range.startContainer != startEditable) {\n                range.setStart(range.startContainer.parentNode, dom.findNodeIndex(range.startContainer));\n            }\n\n            function isEnd(offset, container) {\n                var length = dom.getNodeLength(container);\n\n                if (offset == length) {\n                    return true;\n                }\n\n                for (var i = offset; i < length; i++) {\n                    if (!dom.insignificant(container.childNodes[i])) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n\n            while (isEnd(range.endOffset, range.endContainer) && range.endContainer != endEditable) {\n                range.setEnd(range.endContainer.parentNode, dom.findNodeIndex(range.endContainer) + 1);\n            }\n\n            return range;\n        },\n\n        expand: function(range) {\n            var result = range.cloneRange();\n\n            var startContainer = result.startContainer.childNodes[result.startOffset === 0 ? 0 : result.startOffset - 1];\n            var endContainer = result.endContainer.childNodes[result.endOffset];\n\n            if (!isDataNode(startContainer) || !isDataNode(endContainer)) {\n                return result;\n            }\n\n            var beforeCaret = startContainer.nodeValue;\n            var afterCaret = endContainer.nodeValue;\n\n            if (!beforeCaret || !afterCaret) {\n                return result;\n            }\n\n            var startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n            var endOffset = afterCaret.search(boundary);\n\n            if (!startOffset || !endOffset) {\n                return result;\n            }\n\n            endOffset = endOffset == -1 ? afterCaret.length : endOffset;\n            startOffset = startOffset == -1 ? 0 : beforeCaret.length - startOffset;\n\n            result.setStart(startContainer, startOffset);\n            result.setEnd(endContainer, endOffset);\n\n            return result;\n        },\n\n        isExpandable: function(range) {\n            var node = range.startContainer;\n            var rangeDocument = RangeUtils.documentFromRange(range);\n\n            if (node == rangeDocument || node == rangeDocument.body) {\n                return false;\n            }\n\n            var result = range.cloneRange();\n\n            var value = node.nodeValue;\n            if (!value) {\n                return false;\n            }\n\n            var beforeCaret = value.substring(0, result.startOffset);\n            var afterCaret = value.substring(result.startOffset);\n\n            var startOffset = 0, endOffset = 0;\n\n            if (beforeCaret) {\n                startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n            }\n\n            if (afterCaret) {\n                endOffset = afterCaret.search(boundary);\n            }\n\n            return startOffset && endOffset;\n        }\n    };\n\n    extend(Editor, {\n        SelectionUtils: SelectionUtils,\n        W3CRange: W3CRange,\n        RangeIterator: RangeIterator,\n        W3CSelection: W3CSelection,\n        RangeEnumerator: RangeEnumerator,\n        RestorePoint: RestorePoint,\n        Marker: Marker,\n        RangeUtils: RangeUtils\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            Editor = kendo.ui.editor,\n            dom = Editor.Dom,\n            template = kendo.template,\n            RangeUtils = Editor.RangeUtils,\n            complexBlocks = [\"ul\", \"ol\", \"tbody\", \"thead\", \"table\"],\n            toolsToBeUpdated = [\n                \"bold\",\n                \"italic\",\n                \"underline\",\n                \"strikethrough\",\n                \"superscript\",\n                \"subscript\",\n                \"forecolor\",\n                \"backcolor\",\n                \"fontname\",\n                \"fontsize\",\n                \"createlink\",\n                \"unlink\",\n                \"autolink\",\n                \"addcolumnleft\",\n                \"addcolumnright\",\n                \"addrowabove\",\n                \"addrowbelow\",\n                \"deleterow\",\n                \"deletecolumn\",\n                \"mergecells\",\n                \"formatting\",\n                \"cleanformatting\" ],\n            IMMUTABALE = \"k-immutable\",\n            IMMUTABALE_MARKER_SELECTOR = \"[\" + IMMUTABALE + \"]\",\n            IMMUTABLE_SELECTOR = \"[contenteditable='false']\";\n\n        var rootCondition = function(node) {\n            return $(node).is(\"body,.k-editor\");\n        };\n\n        var immutable = function(node) {\n            return node.getAttribute && node.getAttribute(\"contenteditable\") == \"false\";\n        };\n\n        var immutableParent = function(node) {\n            return dom.closestBy(node, immutable, rootCondition);\n        };\n\n        var expandImmutablesIn = function(range) {\n            var startImmutableParent = immutableParent(range.startContainer);\n            var endImmutableParent = immutableParent(range.endContainer);\n\n            if (startImmutableParent || endImmutableParent) {\n                if (startImmutableParent) {\n                    range.setStartBefore(startImmutableParent);\n                }\n                if (endImmutableParent) {\n                    range.setEndAfter(endImmutableParent);\n                }\n            }\n        };\n\n        var immutablesContext = function(range) {\n            if (immutableParent(range.commonAncestorContainer)) {\n                return true;\n            } else if (immutableParent(range.startContainer) || immutableParent(range.endContainer)) {\n                var editableNodes = RangeUtils.editableTextNodes(range);\n                if (editableNodes.length === 0) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        var randomId = function(length) {\n            var result = '';\n            var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            for (var i = length || 10; i > 0; --i) {\n                result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n            }\n            return result;\n        };\n\n        var removeImmutables = function(root) {\n            var serializedImmutables = { empty: true }, nodeName, id, serialized;\n             $(root).find(IMMUTABLE_SELECTOR).each(function(i, node) {\n                nodeName = dom.name(node);\n                id = randomId();\n                serialized = \"<\" + nodeName + \" \" + IMMUTABALE + \"='\" + id + \"'></\" + nodeName + \">\";\n                serializedImmutables[id] = { node: node, style: $(node).attr(\"style\") };\n                serializedImmutables.empty = false;\n                $(node).replaceWith(serialized);\n            });\n\n            return serializedImmutables;\n        };\n\n        var restoreImmutables = function(root, serializedImmutables) {\n            var id, immutable;\n            $(root).find(IMMUTABALE_MARKER_SELECTOR).each(function(i, node) {\n                id = node.getAttribute(IMMUTABALE);\n                immutable = serializedImmutables[id];\n                $(node).replaceWith(immutable.node);\n                if (immutable.style != $(immutable.node).attr(\"style\")) {\n                    $(immutable.node).removeAttr(\"style\").attr(\"style\", immutable.style);\n                }\n            });\n        };\n\n        var deletingKey = function(keyCode) {\n            var keys = kendo.keys;\n            return keyCode === keys.BACKSPACE || keyCode == keys.DELETE;\n        };\n        var updateToolOptions = function(tool) {\n            var options = tool ? tool.options : undefined$1;\n            if (options && options.finder) {\n                options.finder._initOptions({ immutables: true });\n            }\n        };\n\n        var Immutables = Class.extend({\n            init: function(editor) {\n                this.editor = editor;\n                this.serializedImmutables = {};\n                this.options = $.extend({}, editor && editor.options && editor.options.immutables);\n\n                var tools = kendo.ui.Editor.defaultTools;\n                updateToolOptions(tools.justifyLeft);\n                updateToolOptions(tools.justifyCenter);\n                updateToolOptions(tools.justifyRight);\n                updateToolOptions(tools.justifyFull);\n            },\n\n            serialize: function(node) {\n                var result = this._toHtml(node),\n                    id;\n\n                if (result.indexOf(IMMUTABALE) === -1) {\n                    id = this.randomId();\n                    result = result.replace(/>/, ' ' + IMMUTABALE + '=\"' + id + '\">');\n                } else {\n                    id = result.match(/k-immutable\\s*=\\s*['\"](.*)['\"]/)[1];\n                }\n\n                this.serializedImmutables[id] = node;\n                return result;\n            },\n\n            _toHtml: function(node) {\n                var serialization = this.options.serialization;\n                var serializationType = typeof serialization;\n                var nodeName;\n\n                switch (serializationType) {\n                    case \"string\":\n                        return template(serialization)(node);\n                    case \"function\":\n                        return serialization(node);\n                    default:\n                        nodeName = dom.name(node);\n                        return \"<\" + nodeName + \"></\" + nodeName + \">\";\n                }\n            },\n\n            deserialize: function(node) {\n                var that = this;\n                var deserialization = this.options.deserialization;\n\n                $(IMMUTABALE_MARKER_SELECTOR, node).each(function() {\n                    var id = this.getAttribute(IMMUTABALE);\n                    var immutable = that.serializedImmutables[id];\n                    if (kendo.isFunction(deserialization)) {\n                        deserialization(this, immutable);\n                    }\n                    $(this).replaceWith(immutable);\n                });\n\n                that.serializedImmutables = {};\n            },\n\n            randomId: function(length) {\n                return randomId(length);\n            },\n\n            keydown: function(e, range) {\n                var isDeleting = deletingKey(e.keyCode);\n                var shouldCancelEvent = (isDeleting && this._cancelDeleting(e, range)) ||\n                    (!isDeleting && this._cancelTyping(e, range));\n\n                if (shouldCancelEvent) {\n                    e.preventDefault();\n                    return true;\n                }\n            },\n\n            _cancelTyping: function(e, range) {\n                var editor = this.editor;\n                var keyboard = editor.keyboard;\n\n                return range.collapsed && !keyboard.typingInProgress &&\n                    keyboard.isTypingKey(e) && immutablesContext(range);\n            },\n\n            _cancelDeleting: function(e, range) {\n                var keys = kendo.keys;\n                var backspace = e.keyCode === keys.BACKSPACE;\n                var del = e.keyCode == keys.DELETE;\n\n                if (!backspace && !del) {\n                    return false;\n                }\n                var cancelDeleting = false;\n                if (range.collapsed) {\n                    if (immutablesContext(range)) {\n                        return true;\n                    }\n                    var immutable = this.nextImmutable(range, del);\n                    if (immutable && backspace) {\n                        var closestSelectionLi = dom.closest(range.commonAncestorContainer, \"li\");\n                        if (closestSelectionLi) {\n                            var closestImmutableLi = dom.closest(immutable, \"li\");\n                            if (closestImmutableLi && closestImmutableLi !== closestSelectionLi) {\n                                return cancelDeleting;\n                            }\n                        }\n                    }\n                    if (immutable && !dom.tableCell(immutable)) {\n                        if (dom.parentOfType(immutable, complexBlocks) === dom.parentOfType(range.commonAncestorContainer, complexBlocks)) {\n                            while (immutable && immutable.parentNode.childNodes.length == 1) {\n                                immutable = immutable.parentNode;\n                            }\n                            if (dom.tableCell(immutable)) {\n                                return cancelDeleting;\n                            }\n                            this._removeImmutable(immutable, range);\n                        }\n                        cancelDeleting = true;\n                    }\n                }\n                return cancelDeleting;\n            },\n\n            nextImmutable: function(range, forwards) {\n                var commonContainer = range.commonAncestorContainer;\n                if (dom.isBom(commonContainer) || ((forwards && RangeUtils.isEndOf(range, commonContainer)) || (!forwards && RangeUtils.isStartOf(range, commonContainer)))) {\n                    var next = this._nextNode(commonContainer, forwards);\n                    if (next && dom.isBlock(next) && !immutableParent(next)) {\n                        while (next && next.children && next.children[forwards ? 0 : next.children.length - 1]) {\n                            next = next.children[forwards ? 0 : next.children.length - 1];\n                        }\n                    }\n                    return immutableParent(next);\n                }\n            },\n\n            _removeImmutable: function(immutable, range) {\n                var editor = this.editor;\n                var startRestorePoint = new Editor.RestorePoint(range, editor.body);\n                dom.remove(immutable);\n                Editor._finishUpdate(editor, startRestorePoint);\n            },\n\n            _nextNode: function(node, forwards) {\n                var sibling = forwards ? \"nextSibling\" : \"previousSibling\";\n                var current = node, next;\n                while (current && !next && !dom.isChildOfBaseContainer(current)) {\n                    next = current[sibling];\n                    if (next && dom.isDataNode(next) && /^\\s|[\\ufeff]$/.test(next.nodeValue)) {\n                        current = next;\n                        next = current[sibling];\n                    }\n                    if (!next) {\n                        current = current.parentNode;\n                    }\n                }\n                return next;\n            }\n        });\n\n        Immutables.immutable = immutable;\n        Immutables.immutableParent = immutableParent;\n        Immutables.expandImmutablesIn = expandImmutablesIn;\n        Immutables.immutablesContext = immutablesContext;\n        Immutables.toolsToBeUpdated = toolsToBeUpdated;\n        Immutables.removeImmutables = removeImmutables;\n        Immutables.restoreImmutables = restoreImmutables;\n\n        Editor.Immutables = Immutables;\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            editorNS = kendo.ui.editor,\n            dom = editorNS.Dom,\n            RestorePoint = editorNS.RestorePoint,\n            Marker = editorNS.Marker,\n            extend = $.extend;\n\n    function finishUpdate(editor, startRestorePoint) {\n        var endRestorePoint = editor.selectionRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n        var command = new GenericCommand(startRestorePoint, endRestorePoint);\n        command.editor = editor;\n\n        editor.undoRedoStack.push(command);\n        editor._refreshTools();\n\n        return endRestorePoint;\n    }\n\n    var Command = Class.extend({\n        init: function(options) {\n            this.options = options;\n            this.restorePoint = new RestorePoint(options.range, options.body, { immutables: options.immutables });\n            this.marker = new Marker();\n            this.formatter = options.formatter;\n        },\n\n        getRange: function() {\n            return this.restorePoint.toRange();\n        },\n\n        lockRange: function(expand) {\n            return this.marker.add(this.getRange(), expand);\n        },\n\n        releaseRange: function(range) {\n            this.marker.remove(range);\n            this.editor.selectRange(range);\n        },\n\n        undo: function() {\n            var point = this.restorePoint;\n            point.restoreHtml();\n            this.editor.selectRange(point.toRange());\n        },\n\n        redo: function() {\n            this.exec();\n        },\n\n        createDialog: function(content, options) {\n            var editor = this.editor;\n\n            return $(content).appendTo(document.body)\n                .kendoWindow(extend({}, editor.options.dialogOptions, options))\n                .closest(\".k-window\")\n                .addClass(\"k-editor-window\")\n                .toggleClass(\"k-rtl\", kendo.support.isRtl(editor.wrapper)).end();\n        },\n\n        exec: function() {\n            var range = this.lockRange(true);\n            this.formatter.editor = this.editor;\n            this.formatter.toggle(range);\n            this.releaseRange(range);\n        },\n\n        immutables: function() {\n            return this.editor && this.editor.options.immutables;\n        },\n\n        expandImmutablesIn: function(range) {\n            if (this.immutables()) {\n                kendo.ui.editor.Immutables.expandImmutablesIn(range);\n                this.restorePoint = new RestorePoint(range, this.editor.body);\n            }\n        },\n\n        _actionButtonsTemplate: function({ messages, insertButtonIcon, cancelButtonIcon }) {\n            return '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n            kendo.html.renderButton(`<button class=\"k-dialog-insert\">${messages.dialogInsert}</button>`, { themeColor: \"primary\", icon: insertButtonIcon }) +\n            kendo.html.renderButton(`<button class=\"k-dialog-close\">${messages.dialogCancel}</button>`, { icon: cancelButtonIcon }) +\n        '</div>';\n        }\n    });\n\n    var GenericCommand = Class.extend({\n        init: function(startRestorePoint, endRestorePoint) {\n            this.body = startRestorePoint.body;\n            this.startRestorePoint = startRestorePoint;\n            this.endRestorePoint = endRestorePoint;\n        },\n\n        redo: function() {\n            dom.removeChildren(this.body);\n\n            this.body.innerHTML = this.endRestorePoint.html;\n            this.editor.selectRange(this.endRestorePoint.toRange());\n        },\n\n        undo: function() {\n            dom.removeChildren(this.body);\n\n            this.body.innerHTML = this.startRestorePoint.html;\n            this.editor.selectRange(this.startRestorePoint.toRange());\n        }\n    });\n\n    extend(editorNS, {\n        _finishUpdate: finishUpdate,\n        Command: Command,\n        GenericCommand: GenericCommand\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        Command = Editor.Command,\n        Tool = Editor.Tool,\n        dom = Editor.Dom;\n\n    var ViewHtmlCommand = Command.extend({\n        init: function(options) {\n            var cmd = this;\n            cmd.options = options;\n            Command.fn.init.call(cmd, options);\n            cmd.attributes = null;\n            cmd.async = true;\n        },\n\n        exec: function() {\n            var that = this,\n                editor = that.editor,\n                options = editor.options,\n                messages = editor.options.messages,\n                dialog = $(kendo.template(ViewHtmlCommand.template)(messages)).appendTo(document.body),\n                textarea = \".k-editor-textarea > textarea\",\n                content, comments;\n\n            options.serialization.immutables = editor.immutables;\n\n            comments = dom.getAllComments(editor.body);\n\n            content = EditorUtils.cacheComments(editor.value(), comments);\n            content = ViewHtmlCommand.indent(content);\n            content = EditorUtils.retrieveComments(content, comments);\n\n            options.serialization.immutables = undefined$1;\n\n            function apply(e) {\n                options.deserialization.immutables = editor.immutables;\n                editor.value(dialog.find(textarea).val());\n                options.deserialization.immutables = undefined$1;\n\n                close(e);\n\n                if (that.change) {\n                    that.change();\n                }\n\n                editor.trigger(\"change\");\n            }\n\n            function close(e) {\n                e.preventDefault();\n\n                dialog.data(\"kendoWindow\").destroy();\n\n                if (editor.immutables) {\n                    editor.immutables.serializedImmutables = {};\n                }\n\n                editor.focus();\n            }\n\n            let window = this.createDialog(dialog, {\n                title: messages.viewHtml,\n                _footerTemplate: ViewHtmlCommand._footerTemplate,\n                _footerMessages: messages,\n                width: 600,\n                height: 400,\n                resizable: true,\n                close: close,\n                visible: false\n            })\n                .find(textarea).val(content).end()\n                .data(\"kendoWindow\");\n\n                window.center().open();\n\n                window.wrapper.find(\".k-dialog-update\").on(\"click\", apply).end();\n                window.wrapper.find(\".k-dialog-close\").on(\"click\", close).end();\n            dialog.find(textarea).trigger(\"focus\");\n        }\n    });\n\n    extend(ViewHtmlCommand, {\n        template: () =>\n        '<div class=\"k-editor-dialog k-popup-edit-form k-viewhtml-dialog\">' +\n            '<span class=\"k-input k-textarea k-input-solid k-input-md k-rounded-md k-editor-textarea\"><textarea class=\"k-input-inner !k-overflow-auto !k-resize-none\"></textarea></span>' +\n        '</div>',\n        _footerTemplate: ({ dialogUpdate, dialogCancel }) =>\n        `<div class=\"k-actions k-actions-start k-actions-horizontal k-window-actions\">` +\n            kendo.html.renderButton(`<button class=\"k-dialog-update\">${kendo.htmlEncode(dialogUpdate)}</button>`, { themeColor: \"primary\", icon: \"check\" }) +\n            kendo.html.renderButton(`<button class=\"k-dialog-close\">${kendo.htmlEncode(dialogCancel)}</button>`, { icon: \"cancel-outline\" }) +\n        `</div>`,\n        indent: function(content) {\n            return content.replace(/<\\/(p|li|ul|ol|h[1-6]|table|tr|td|th)>/ig, \"</$1>\\n\")\n                          .replace(/<(ul|ol)([^>]*)><li/ig, \"<$1$2>\\n<li\")\n                          .replace(/<br \\/>/ig, \"<br />\\n\")\n                          .replace(/\\n$/, \"\");\n        }\n    });\n\n    kendo.ui.editor.ViewHtmlCommand = ViewHtmlCommand;\n\n    Editor.EditorUtils.registerTool(\"viewHtml\", new Tool({ command: ViewHtmlCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        Tool = Editor.Tool,\n        Command = Editor.Command,\n        EditorUtils = Editor.EditorUtils;\n\n    var FormatCommand = Command.extend({\n        init: function(options) {\n            options.formatter = options.formatter();\n            var finder = options.formatter.finder;\n            if (finder && EditorUtils.formatByName(\"immutable\", finder.format)) {\n                finder._initOptions({ immutables: options.immutables });\n            }\n            Command.fn.init.call(this, options);\n        }\n    });\n\n    var FormatTool = Tool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n        },\n\n        command: function(commandArguments) {\n            var that = this;\n\n            return new FormatCommand(extend(commandArguments, {\n                formatter: that.options.formatter\n            }));\n        },\n\n        update: function(ui, nodes) {\n            var isFormatted = this.options.finder.isFormatted(nodes),\n                toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n            if (toolbar && ui.getKendoToggleButton()) {\n                toolbar.toggle(ui, isFormatted);\n            }\n        }\n    });\n\n    $.extend(Editor, {\n        FormatCommand: FormatCommand,\n        FormatTool: FormatTool\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        Editor = kendo.ui.editor,\n        formats = kendo.ui.Editor.fn.options.formats,\n        Tool = Editor.Tool,\n        FormatTool = Editor.FormatTool,\n        dom = Editor.Dom,\n        RangeUtils = Editor.RangeUtils,\n        extend = $.extend,\n        registerTool = Editor.EditorUtils.registerTool,\n        registerFormat = Editor.EditorUtils.registerFormat,\n        MOUSEDOWN_NS = \"mousedown.kendoEditor\",\n        KEYDOWN_NS = \"keydown.kendoEditor\",\n        KMARKER = \"k-marker\";\n\n    var InlineFormatFinder = Class.extend({\n        init: function(format) {\n            this.format = format;\n        },\n\n        numberOfSiblings: function(referenceNode) {\n            var textNodesCount = 0,\n                elementNodesCount = 0,\n                markerCount = 0,\n                parentNode = referenceNode.parentNode,\n                node;\n\n            for (node = parentNode.firstChild; node; node = node.nextSibling) {\n                if (node != referenceNode) {\n                    if (node.className == KMARKER) {\n                        markerCount++;\n                    } else if (node.nodeType == 3) {\n                        textNodesCount++;\n                    } else {\n                        elementNodesCount++;\n                    }\n                }\n            }\n\n            if (markerCount > 1 && parentNode.firstChild.className == KMARKER && parentNode.lastChild.className == KMARKER) {\n                // full node selection\n                return 0;\n            } else {\n                return elementNodesCount + textNodesCount;\n            }\n        },\n\n        findSuitable: function(sourceNode, skip) {\n            if (!skip && this.numberOfSiblings(sourceNode) > 0) {\n                return null;\n            }\n\n            var node = sourceNode.parentNode;\n            var tags = this.format[0].tags;\n\n            while (!dom.ofType(node, tags)) {\n                if (this.numberOfSiblings(node) > 0) {\n                    return null;\n                }\n\n                node = node.parentNode;\n            }\n\n            return node;\n        },\n\n        findFormat: function(sourceNode) {\n            var format = this.format,\n                attrEquals = dom.attrEquals,\n                i, len, node, tags, attributes;\n\n            for (i = 0, len = format.length; i < len; i++) {\n                node = sourceNode;\n                tags = format[i].tags;\n                attributes = format[i].attr;\n\n                if (node && dom.ofType(node, tags) && attrEquals(node, attributes)) {\n                    return node;\n                }\n\n                while (node) {\n                    node = dom.parentOfType(node, tags);\n                    if (node && attrEquals(node, attributes)) {\n                        return node;\n                    }\n                }\n            }\n\n            return null;\n        },\n\n        isFormatted: function(nodes) {\n            var i, len;\n\n            for (i = 0, len = nodes.length; i < len; i++) {\n                if (this.findFormat(nodes[i])) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    });\n\n    var InlineFormatter = Class.extend({\n        init: function(format, values) {\n            this.finder = new InlineFormatFinder(format);\n            this.attributes = extend({}, format[0].attr, values);\n            this.tag = format[0].tags[0];\n        },\n\n        wrap: function(node) {\n            return dom.wrap(node, dom.create(node.ownerDocument, this.tag, this.attributes));\n        },\n\n        activate: function(range, nodes) {\n            if (this.finder.isFormatted(nodes)) {\n                this.split(range);\n                this.remove(nodes);\n            } else {\n                this.apply(nodes);\n            }\n        },\n\n        toggle: function(range) {\n            var textNodes = this.immutables() ? RangeUtils.editableTextNodes : RangeUtils.textNodes;\n            var nodes = textNodes(range);\n\n            if (nodes.length > 0) {\n                this.activate(range, nodes);\n            }\n        },\n\n        immutables: function() {\n            return this.editor && this.editor.options.immutables;\n        },\n\n        apply: function(nodes) {\n            var formatNodes = [];\n            var i, l, node, formatNode;\n\n            if (nodes.length > 1) {\n                for (i = 0, l = nodes.length; i < l; i++) {\n                    node = nodes[i];\n                    formatNode = this.format(node, true);\n                    formatNodes.push(formatNode);\n\n                }\n            } else {\n                node = nodes[0];\n                formatNode = this.format(node, false);\n            }\n\n            this.consolidate(formatNodes);\n        },\n\n        format: function(node, outerMostInline) {\n            var formatNode = this.finder.findSuitable(node);\n            var attributes = this.attributes;\n            var styleAttr = attributes ? attributes.style || {} : {};\n\n            if (formatNode) {\n                if (dom.is(formatNode, \"font\")) {\n                    if (styleAttr.color) {\n                        formatNode.removeAttribute(\"color\");\n                    }\n                    if (styleAttr.fontName) {\n                        formatNode.removeAttribute(\"face\");\n                    }\n                    if (styleAttr.fontSize) {\n                        formatNode.removeAttribute(\"size\");\n                    }\n                }\n                dom.attr(formatNode, attributes);\n            } else {\n                while (!dom.isBlock(node.parentNode) && node.parentNode.childNodes.length == 1 && node.parentNode.contentEditable !== 'true' && outerMostInline) {\n                    node = node.parentNode;\n                }\n\n                formatNode = this.wrap(node);\n            }\n\n            return formatNode;\n        },\n\n        remove: function(nodes) {\n            var i, l, formatNode;\n\n            for (i = 0, l = nodes.length; i < l; i++) {\n                formatNode = this.finder.findFormat(nodes[i]);\n                if (formatNode) {\n                    if (this.attributes && this.attributes.style) {\n                        dom.unstyle(formatNode, this.attributes.style);\n                        if (!formatNode.style.cssText && !formatNode.attributes[\"class\"]) {\n                            dom.unwrap(formatNode);\n                        }\n                    } else {\n                        dom.unwrap(formatNode);\n                    }\n                }\n            }\n        },\n\n        split: function(range) {\n            var nodes = RangeUtils.textNodes(range);\n            var l = nodes.length;\n            var i, formatNode;\n\n            if (l > 0) {\n                for (i = 0; i < l; i++) {\n                    formatNode = this.finder.findFormat(nodes[i]);\n                    if (formatNode) {\n                        RangeUtils.split(range, formatNode, true);\n                    }\n                }\n            }\n        },\n\n        consolidate: function(nodes) {\n            var node, last;\n\n            while (nodes.length > 1) {\n                node = nodes.pop();\n                last = nodes[nodes.length - 1];\n\n                if (node.previousSibling && node.previousSibling.className == KMARKER) {\n                    last.appendChild(node.previousSibling);\n                }\n\n                if (node.tagName == last.tagName &&\n                    node.previousSibling == last &&\n                    node.style.cssText == last.style.cssText &&\n                    node.className === last.className) {\n\n                    while (node.firstChild) {\n                        last.appendChild(node.firstChild);\n                    }\n\n                    dom.remove(node);\n                }\n            }\n        }\n    });\n\n    var GreedyInlineFormatFinder = InlineFormatFinder.extend({\n        init: function(format, greedyProperty, fontAttr, defaultValue) {\n            this.format = format;\n            this.greedyProperty = greedyProperty;\n            this.fontAttr = fontAttr;\n            this.defaultValue = defaultValue;\n            InlineFormatFinder.fn.init.call(this, format);\n        },\n\n        getInlineCssValue: function(node) {\n            var attributes = node.attributes;\n            var trim = kendo.trim;\n            var i, l, attribute, name, attributeValue, css, pair, cssIndex, len;\n            var propertyAndValue, property, value;\n\n            if (!attributes) {\n                return;\n            }\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n                attributeValue = attribute.nodeValue;\n\n                if (attribute.specified && name == \"style\") {\n\n                    css = trim(attributeValue || node.style.cssText).split(\";\");\n\n                    for (cssIndex = 0, len = css.length; cssIndex < len; cssIndex++) {\n                        pair = css[cssIndex];\n                        if (pair.length) {\n                            propertyAndValue = pair.split(\":\");\n                            property = trim(propertyAndValue[0].toLowerCase());\n                            value = trim(propertyAndValue[1]);\n\n                            if (property != this.greedyProperty) {\n                                continue;\n                            }\n\n                            return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n                        }\n                    }\n                }\n\n                if (this.fontAttr && attribute.specified && name == this.fontAttr) {\n                    property = attribute.nodeValue;\n                    value = attribute.nodeValue;\n\n                    return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n                }\n            }\n        },\n\n        getFormatInner: function(node) {\n            var $node = $(dom.isDataNode(node) ? node.parentNode : node);\n            var parents = $node.parentsUntil(\"[contentEditable]\").addBack().toArray().reverse();\n            var i, len, value;\n\n            for (i = 0, len = parents.length; i < len; i++) {\n                value = this.greedyProperty == \"className\" ? parents[i].className : this.getInlineCssValue(parents[i]);\n\n                if (value) {\n                    return value;\n                }\n            }\n\n            return this.defaultValue || \"inherit\";\n        },\n\n        getFormat: function(nodes) {\n            var result = this.getFormatInner(nodes[0]), i, len;\n\n            for (i = 1, len = nodes.length; i < len; i++) {\n                if (result != this.getFormatInner(nodes[i])) {\n                    return \"\";\n                }\n            }\n\n            return result;\n        },\n\n        isFormatted: function(nodes) {\n            return this.getFormat(nodes) !== \"\";\n        }\n    });\n\n    var GreedyInlineFormatter = InlineFormatter.extend({\n        init: function(format, values, greedyProperty) {\n            InlineFormatter.fn.init.call(this, format, values);\n\n            this.values = values;\n            this.finder = new GreedyInlineFormatFinder(format, greedyProperty);\n\n            if (greedyProperty) {\n                this.greedyProperty = kendo.toCamelCase(greedyProperty);\n            }\n\n        },\n\n        activate: function(range, nodes) {\n            var greedyProperty = this.greedyProperty;\n            var action = \"apply\";\n\n            this.split(range);\n\n            if (greedyProperty && this.values.style[greedyProperty] == \"inherit\") {\n                action = \"remove\";\n            }\n\n            this[action](nodes);\n        }\n    });\n\n    var InlineFormatTool = FormatTool.extend({\n        init: function(options) {\n            FormatTool.fn.init.call(this, extend(options, {\n                finder: new InlineFormatFinder(options.format),\n                formatter: function() { return new InlineFormatter(options.format); }\n            }));\n        }\n    });\n\n    var DelayedExecutionTool = Tool.extend({\n        update: function(ui, nodes) {\n            var list = ui.data(this.type);\n\n            list.close();\n            list.value(this.finder.getFormat(nodes));\n        }\n    });\n\n    var FontTool = DelayedExecutionTool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n\n            // IE has single selection hence we are using select box instead of combobox\n            this.type = \"kendoComboBox\";\n            this.format = [{ tags: [\"span\", \"font\"] }];\n            this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr);\n        },\n\n        command: function(commandArguments) {\n            var options = this.options,\n                format = this.format,\n                style = {};\n\n            return new Editor.FormatCommand(extend(commandArguments, {\n                formatter: function() {\n                    style[options.domAttr] = commandArguments.value;\n\n                    return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n                }\n            }));\n        },\n\n        initialize: function(ui, editor) {\n            var options = this.options,\n                toolName = options.name,\n                dataSource,\n                range,\n                widget = ui.data(\"kendoComboBox\"),\n                defaultValue = [];\n\n            if (!widget) {\n                return;\n            }\n\n            if (options.defaultValue) {\n               defaultValue = [{\n                    text: editor.options.messages[options.defaultValue[0].text],\n                    value: options.defaultValue[0].value\n               }];\n            }\n\n            dataSource = defaultValue.concat(options.items ? options.items : (editor.options[toolName] || [] ));\n            widget.setDataSource(dataSource);\n\n            widget.bind(\"change\", (e) => {\n                editor._range = range;\n                if (e.sender.value() !== \"\") {\n                    Tool.exec(editor, toolName, e.sender.value());\n                }\n            });\n\n            widget.bind(\"close\", () => {\n                setTimeout(function() {\n                    editor._deleteSavedRange();\n                },0);\n            });\n\n            widget.value(\"inherit\");\n\n            widget.wrapper.on(MOUSEDOWN_NS, \".k-select,.k-input-button,.k-input\", function() {\n                var newRange = editor.getRange();\n                range = editor._containsRange(newRange) ? newRange : range;\n            })\n            .on(KEYDOWN_NS, function(e) {\n                if (e.keyCode === kendo.keys.ENTER) {\n                    editor._deleteSavedRange();\n                    e.preventDefault();\n                }\n            });\n        }\n\n    });\n\n    var ColorTool = Tool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n\n            this.format = [{ tags: [\"span\",\"font\"] }];\n            this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr);\n        },\n\n        options: {\n            palette: \"websafe\",\n            columns: 18\n        },\n\n        update: function() {\n            this._widget.close();\n        },\n\n        command: function(commandArguments) {\n            var options = this.options,\n                format = this.format,\n                style = {};\n\n            return new Editor.FormatCommand(extend(commandArguments, {\n                formatter: function() {\n                    style[options.domAttr] = commandArguments.value;\n\n                    return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n                }\n            }));\n        },\n\n        initialize: function(ui, editor) {\n            var that = this,\n                toolName = that.options.name,\n                component = this._widget = ui.getKendoColorPicker();\n\n            if (!component) {\n                return;\n            }\n\n            component.bind(\"change\", () => {\n                var color = component.value();\n\n                if (color) {\n                    Tool.exec(editor, toolName, color);\n                }\n\n                delete that.storedRange;\n                delete that._inputFocused;\n\n                editor.focus();\n            });\n\n            component.bind(\"open\", () => {\n                that.storedRange = editor.getRange();\n\n                component._popup.element.on(MOUSEDOWN_NS, function(e) {\n                    if (!$(e.target).is(\"input.k-color-value\")) {\n                        e.preventDefault();\n                    }\n                });\n\n                if (!component._popup.element.is(\"[unselectable='on']\")) {\n                    component._popup.element\n                        .attr({ unselectable: \"on\" })\n                        .find(\"*:not(input)\").attr(\"unselectable\", \"on\")\n                        .end().find(\"input\").on(\"focus\", function() {\n                            that._inputFocused = true;\n                        });\n                }\n\n                component._popup.one(\"activate\", () => {\n                    component._popup.element.find(\".k-colorpalette\").trigger(\"focus\");\n                });\n            });\n\n            component.bind(\"close\", (e) => {\n                component._popup.element.off(MOUSEDOWN_NS);\n            });\n\n            component.unbind(\"activate\").bind(\"activate\", (e) => {\n                if (!component._value || component._value.toCssRgba() === \"rgba(255, 255, 255, 0)\") {\n                    return;\n                }\n\n                component.trigger(\"change\");\n            });\n\n            component.wrapper\n                .attr({ unselectable: \"on\" })\n                .find(\"*:not(input)\").attr(\"unselectable\", \"on\");\n\n            component.value(\"transparent\");\n        }\n    });\n\n    extend(Editor, {\n        InlineFormatFinder: InlineFormatFinder,\n        InlineFormatter: InlineFormatter,\n        DelayedExecutionTool: DelayedExecutionTool,\n        GreedyInlineFormatFinder: GreedyInlineFormatFinder,\n        GreedyInlineFormatter: GreedyInlineFormatter,\n        InlineFormatTool: InlineFormatTool,\n        FontTool: FontTool,\n        ColorTool: ColorTool\n    });\n\n    registerFormat(\"bold\", [ { tags: [\"strong\", \"b\"] }, { tags: [\"span\"], attr: { style: { fontWeight: \"bold\" } } } ]);\n    registerTool(\"bold\", new InlineFormatTool({\n        key: \"B\",\n        ctrl: true,\n        format: formats.bold,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerFormat(\"italic\", [ { tags: [\"em\", \"i\"] }, { tags: [\"span\"], attr: { style: { fontStyle: \"italic\" } } } ]);\n    registerTool(\"italic\", new InlineFormatTool({\n        key: \"I\",\n        ctrl: true,\n        format: formats.italic,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerFormat(\"underline\", [ { tags: [\"span\"], attr: { style: { textDecoration: \"underline\" } } }, { tags: [\"u\"] } ]);\n    registerTool(\"underline\", new InlineFormatTool({\n        key: \"U\",\n        ctrl: true,\n        format: formats.underline,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerFormat(\"strikethrough\", [ { tags: [\"del\", \"strike\"] }, { tags: [\"span\"], attr: { style: { textDecoration: \"line-through\" } } } ]);\n    registerTool(\"strikethrough\", new InlineFormatTool({\n        format: formats.strikethrough,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerFormat(\"superscript\", [ { tags: [\"sup\"] } ]);\n    registerTool(\"superscript\", new InlineFormatTool({\n        format: formats.superscript,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerFormat(\"subscript\", [ { tags: [\"sub\"] } ]);\n    registerTool(\"subscript\", new InlineFormatTool({\n        format: formats.subscript,\n        ui: {\n            togglable: true\n        }\n    }));\n\n    registerTool(\"foreColor\", new ColorTool({\n        cssAttr: \"color\",\n        fontAttr: \"color\",\n        domAttr: \"color\",\n        name: \"foreColor\",\n        ui: {\n            type: \"component\",\n            overflow: \"never\",\n            component: \"ColorPicker\",\n            componentOptions: {\n                views: [\"palette\"],\n                toolIcon: \"foreground-color\",\n                palette: \"websafe\",\n                columns: 18,\n                preview: false,\n                input: false,\n                buttons: false,\n                commandOn: \"change\",\n                closeOnSelect: true\n            }\n        }\n    }));\n\n    registerTool(\"backColor\", new ColorTool({\n        cssAttr: \"background-color\",\n        domAttr: \"backgroundColor\",\n        name: \"backColor\",\n        ui: {\n            type: \"component\",\n            overflow: \"never\",\n            component: \"ColorPicker\",\n            componentOptions: {\n                views: [\"palette\"],\n                toolIcon: \"droplet\",\n                palette: \"websafe\",\n                columns: 18,\n                preview: false,\n                input: false,\n                buttons: false,\n                commandOn: \"change\",\n                closeOnSelect: true\n            }\n        }\n    }));\n\n    registerTool(\"fontName\", new FontTool({\n        cssAttr: \"font-family\",\n        fontAttr: \"face\",\n        domAttr: \"fontFamily\",\n        name: \"fontName\",\n        defaultValue: [{ text: \"fontNameInherit\", value: \"inherit\" }],\n        ui: {\n            type: \"component\",\n            component: \"ComboBox\",\n            componentOptions: {\n                dataValueField: \"value\",\n                dataTextField: \"text\",\n                valuePrimitive: true\n            },\n            overflow: \"never\"\n        }\n    }));\n\n    registerTool(\"fontSize\", new FontTool({\n        cssAttr: \"font-size\",\n        fontAttr: \"size\",\n        domAttr: \"fontSize\",\n        name: \"fontSize\",\n        defaultValue: [{ text: \"fontSizeInherit\", value: \"inherit\" }],\n        ui: {\n            type: \"component\",\n            component: \"ComboBox\",\n            componentOptions: {\n                dataValueField: \"value\",\n                dataTextField: \"text\",\n                valuePrimitive: true\n            },\n            overflow: \"never\"\n        }\n    }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        encode = kendo.htmlEncode,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        RangeUtils = Editor.RangeUtils,\n        Command = Editor.Command,\n        Tool = Editor.Tool,\n        InlineFormatter = Editor.InlineFormatter,\n        InlineFormatFinder = Editor.InlineFormatFinder,\n        textNodes = RangeUtils.textNodes,\n        editableTextNodes = RangeUtils.editableTextNodes,\n        registerTool = Editor.EditorUtils.registerTool,\n        keys = kendo.keys;\n\n    var HTTP_PROTOCOL = \"http://\";\n    var protocolRegExp = /^\\w*:\\/\\//;\n    var endLinkCharsRegExp = /[\\w\\/\\$\\-_\\*\\?]/i;\n\n    var LinkFormatFinder = Class.extend({\n        findSuitable: function(sourceNode) {\n            return dom.parentOfType(sourceNode, [\"a\"]);\n        }\n    });\n\n    var LinkFormatter = Class.extend({\n        init: function() {\n            this.finder = new LinkFormatFinder();\n        },\n\n        apply: function(range, attributes) {\n            var nodes = this.immutables ? editableTextNodes(range) : textNodes(range);\n            var markers, doc, formatter, a, parent;\n\n            if (attributes.innerText) {\n                doc = RangeUtils.documentFromRange(range);\n                markers = RangeUtils.getMarkers(range);\n\n                range.deleteContents();\n                a = dom.create(doc, \"a\", attributes);\n                range.insertNode(a);\n\n                parent = a.parentNode;\n                if (dom.name(parent) == \"a\") {\n                    dom.insertAfter(a, parent);\n                }\n\n                if (dom.emptyNode(parent)) {\n                    dom.remove(parent);\n                }\n\n                // move range and markers after inserted link\n                var ref = a;\n                for (var i = 0; i < markers.length; i++) {\n                    dom.insertAfter(markers[i], ref);\n                    ref = markers[i];\n                }\n\n                if (markers.length) {\n                    dom.insertBefore(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                    dom.insertAfter(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                    range.setStartBefore(markers[0]);\n                    range.setEndAfter(markers[markers.length - 1]);\n                }\n            } else {\n                formatter = new InlineFormatter([{ tags: [\"a\"] }], attributes);\n                formatter.finder = this.finder;\n                formatter.apply(nodes);\n            }\n        }\n    });\n\n    var UnlinkCommand = Command.extend({\n        init: function(options) {\n            var that = this;\n            options.formatter = /** @ignore */ {\n                toggle: function(range) {\n                    var nodes = that.immutables() ? editableTextNodes(range) : textNodes(range);\n                    new InlineFormatter([{ tags: [\"a\"] }]).remove(nodes);\n                }\n            };\n            this.options = options;\n            Command.fn.init.call(this, options);\n        }\n    });\n\n    var LinkCommand = Command.extend({\n        init: function(options) {\n            var that;\n            this.options = options;\n            Command.fn.init.call(this, options);\n            this.formatter = new LinkFormatter();\n\n            if (!options.url) {\n                this.attributes = null;\n                this.async = true;\n            } else {\n                this.exec = function() {\n                    this.formatter.immutables = that && that.immutables();\n                    this.formatter.apply(options.range, {\n                        href: options.url,\n                        innerText: options.text || options.url,\n                        target: options.target\n                    });\n                };\n            }\n        },\n\n        exec: function() {\n            var messages = this.editor.options.messages;\n            this._initialText = \"\";\n            this._range = this.lockRange(true);\n            this.formatter.immutables = this.immutables();\n\n            var nodes = textNodes(this._range);\n            var a = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null;\n            var img = nodes.length && dom.name(nodes[0]) == \"img\";\n\n            var dialog = this.createDialog(\"<div/>\", {\n                title: messages.createLink,\n                minWidth: 340,\n                close: this._close.bind(this),\n                visible: false\n            }).data(\"kendoWindow\");\n\n            this._form = this._createForm(dialog);\n\n            if (a) {\n                this._range.selectNodeContents(a);\n                nodes = textNodes(this._range);\n            }\n\n            this._initialText = this.linkText(nodes);\n\n            dialog.wrapper\n                .find(\".k-dialog-insert\").on(\"click\", this._apply.bind(this)).end()\n                .find(\".k-dialog-close\").on(\"click\", this._close.bind(this)).end()\n                .find(\".k-form-field input\").on(\"keydown\", this._keydown.bind(this)).end()\n                .find(\"#k-editor-link-url\").val(this.linkUrl(a)).end()\n                .find(\"#k-editor-link-text\").val(this._initialText).end()\n                .find(\"#k-editor-link-title\").val(a ? a.title : \"\").end()\n                .find(\"#k-editor-link-target\").prop(\"checked\", a ? a.target == \"_blank\" : false).end()\n                .find(\".k-editor-link-text-row\").toggle(!img);\n\n            this._dialog = dialog.center().open();\n\n            $(\"#k-editor-link-url\", dialog.element).trigger(\"focus\").select();\n        },\n\n        _createForm: function(dialog) {\n            var that = this;\n            var formElement = $(\"<div/>\").appendTo(dialog.element);\n            var messages = that.editor.options.messages;\n            var form = formElement.kendoForm({\n                renderButtons: false,\n                items: [\n                    {\n                        field: \"k-editor-link-url\",\n                        label: encode(messages.linkWebAddress),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-link-text\",\n                        label: encode(messages.linkText),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-link-title\",\n                        label: encode(messages.linkToolTip),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-link-target\",\n                        editorOptions: {\n                            label: encode(messages.linkOpenInNewWindow)\n                        },\n                        label: \"\",\n                        editor: \"CheckBox\"\n                    }\n                ]\n            }).data(\"kendoForm\");\n\n            formElement.find(\"#k-editor-link-text\").parents(\".k-form-field\").addClass(\"k-editor-link-text-row\");\n\n            dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"link\", cancelButtonIcon: \"cancel-outline\" })));\n\n            return form;\n        },\n\n        _keydown: function(e) {\n            var keys = kendo.keys;\n\n            if (e.keyCode == keys.ENTER) {\n                this._apply(e);\n            } else if (e.keyCode == keys.ESC) {\n                this._close(e);\n            }\n        },\n\n        _apply: function(e) {\n            var element = this._dialog.element;\n            var href = $(\"#k-editor-link-url\", element).val();\n            var title, text, target;\n            var textInput = $(\"#k-editor-link-text\", element);\n\n            if (href && href != HTTP_PROTOCOL) {\n\n                if (href.indexOf(\"@\") > 0 && !/^(\\w+:)|(\\/\\/)/i.test(href)) {\n                    href = \"mailto:\" + href;\n                }\n\n                this.attributes = { href: href };\n\n                title = $(\"#k-editor-link-title\", element).val();\n                if (title) {\n                    this.attributes.title = title;\n                }\n\n                if (textInput.is(\":visible\")) {\n                    text = kendo.trim(textInput.val());\n                    if (!text && !this._initialText) {\n                        this.attributes.innerText = href;\n                    } else if (text && (text !== this._initialText)) {\n                        this.attributes.innerText = dom.stripBom(text);\n                    }\n                }\n\n                target = $(\"#k-editor-link-target\", element).is(\":checked\");\n                this.attributes.target = target ? \"_blank\" : null;\n\n                this.formatter.apply(this._range, this.attributes);\n            }\n\n            this._close(e);\n\n            if (this.change) {\n                this.change();\n            }\n        },\n\n        _close: function(e) {\n            e.preventDefault();\n            this._form.destroy();\n            this._dialog.destroy();\n\n            dom.windowFromDocument(RangeUtils.documentFromRange(this._range)).focus();\n\n            this.releaseRange(this._range);\n        },\n\n        linkUrl: function(anchor) {\n            if (anchor) {\n                // IE < 8 returns absolute url if getAttribute is not used\n                return anchor.getAttribute(\"href\", 2);\n            }\n\n            return HTTP_PROTOCOL;\n        },\n\n        linkText: function(nodes) {\n            var text = \"\";\n            var i;\n\n            for (i = 0; i < nodes.length; i++) {\n                text += nodes[i].nodeValue;\n            }\n\n            return dom.stripBom(text || \"\");\n        },\n\n        redo: function() {\n            var range = this.lockRange(true);\n\n            this.formatter.apply(range, this.attributes);\n            this.releaseRange(range);\n        }\n\n    });\n\n    var AutoLinkCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n\n            this.formatter = new LinkFormatter();\n        },\n\n        exec: function() {\n            var detectedLink = this.detectLink();\n            if (!detectedLink) {\n                return;\n            }\n\n            var range = this.getRange();\n            var linkMarker = new kendo.ui.editor.Marker();\n            var linkRange = range.cloneRange();\n\n            linkRange.setStart(detectedLink.start.node, detectedLink.start.offset);\n            linkRange.setEnd(detectedLink.end.node, detectedLink.end.offset);\n\n            range = this.lockRange();\n            linkMarker.add(linkRange);\n\n            this.formatter.apply(linkRange, {\n                href: this._ensureWebProtocol(detectedLink.text)\n            });\n\n            linkMarker.remove(linkRange);\n            this.releaseRange(range);\n        },\n\n        detectLink: function() {\n            var range = this.getRange();\n            var startNode = range.startContainer;\n            var startOffset = range.startOffset;\n            var prev = startNode.previousSibling;\n            if (!prev && ((dom.isBom(startNode) && !startNode.nextSibling) || (!startOffset && dom.isDataNode(startNode)))) {\n                startNode = startNode.parentNode;\n                startOffset = 0;\n            }\n            var traverser = new LeftDomTextTraverser({\n                node: startNode,\n                offset: startOffset,\n                cancelAtNode: function(node) { return node && dom.name(node) === \"a\"; }\n            });\n\n            var detection = new DomTextLinkDetection(traverser);\n            return detection.detectLink();\n        },\n\n        changesContent: function() {\n            return !!this.detectLink();\n        },\n\n        _ensureWebProtocol: function(linkText) {\n            var hasProtocol = this._hasProtocolPrefix(linkText);\n            return hasProtocol ? linkText : this._prefixWithWebProtocol(linkText);\n        },\n\n        _hasProtocolPrefix: function(linkText) {\n            return protocolRegExp.test(linkText);\n        },\n\n        _prefixWithWebProtocol: function(linkText) {\n            return HTTP_PROTOCOL + linkText;\n        }\n    });\n\n    var UnlinkTool = Tool.extend({\n        init: function(options) {\n            this.options = options;\n            this.finder = new InlineFormatFinder([{ tags: [\"a\"] }]);\n\n            Tool.fn.init.call(this, $.extend(options, { command: UnlinkCommand }));\n        },\n\n        update: function(ui, nodes) {\n            var isLink = this.finder.isFormatted(nodes),\n                toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n            if (isLink) {\n                toolbar.enable(ui, true);\n            } else {\n                toolbar.enable(ui, false);\n            }\n        }\n    });\n\n    var DomTextLinkDetection = Class.extend({\n        init: function(traverser) {\n            this.traverser = traverser;\n            this.start = DomPos();\n            this.end = DomPos();\n            this.text = \"\";\n        },\n\n        detectLink: function() {\n            var node = this.traverser.node;\n            var offset = this.traverser.offset;\n            if (dom.isDataNode(node)) {\n                var text = node.data.substring(0, offset);\n                if (/\\s{2}$/.test(dom.stripBom(text))) {\n                    return;\n                }\n            } else if (offset === 0) {//heuristic for new line\n                var p = dom.closestEditableOfType(node, dom.blockElements);\n                if (p && p.previousSibling) {\n                    this.traverser.init({\n                        node: p.previousSibling\n                    });\n                }\n            }\n\n            this.traverser.traverse(this._detectEnd.bind(this));\n            if (!this.end.blank()) {\n                this.traverser = this.traverser.clone(this.end);\n                this.traverser.traverse(this._detectStart.bind(this));\n\n                if (!this._isLinkDetected()) {\n                    var puntuationOptions = this.traverser.extendOptions(this.start);\n                    var puntuationTraverser = new RightDomTextTraverser(puntuationOptions);\n                    puntuationTraverser.traverse(this._skipStartPuntuation.bind(this));\n                    if (!this._isLinkDetected()) {\n                        this.start = DomPos();\n                    }\n                }\n            }\n\n            if (this.start.blank()) {\n                return null;\n            } else {\n                return {\n                    start: this.start,\n                    end: this.end,\n                    text: this.text\n                };\n            }\n        },\n\n        _isLinkDetected: function() {\n            return protocolRegExp.test(this.text) || /^w{3}\\./i.test(this.text);\n        },\n\n        _detectEnd: function(text, node) {\n            var i = lastIndexOfRegExp(text, endLinkCharsRegExp);\n            if (i > -1) {\n                this.end.node = node;\n                this.end.offset = i + 1;\n\n                return false;\n            }\n        },\n\n        _detectStart: function(text, node) {\n            var i = lastIndexOfRegExp(text, /\\s/);\n            var ii = i + 1;\n            this.text = text.substring(ii) + this.text;\n\n            this.start.node = node;\n            this.start.offset = ii;\n\n            if (i > -1) {\n                return false;\n            }\n        },\n\n        _skipStartPuntuation: function(text, node, offset) {\n            var i = indexOfRegExp(text, /\\w/);\n            var ii = i;\n            if (i === -1) {\n                ii = text.length;\n            }\n\n            this.text = this.text.substring(ii);\n            this.start.node = node;\n            this.start.offset = ii + (offset | 0);\n\n            if (i > -1) {\n                return false;\n            }\n        }\n    });\n\n    function lastIndexOfRegExp(str, search) {\n        var i = str.length;\n        while (i-- && !search.test(str[i])) {}\n\n        return i;\n    }\n    function indexOfRegExp(str, search) {\n        var r = search.exec(str);\n\n        return r ? r.index : -1;\n    }\n\n    var DomPos = function() {\n        return {\n            node: null,\n            offset: null,\n            blank: function() {\n                return this.node === null && this.offset === null;\n            }\n        };\n    };\n\n    var DomTextTraverser = Class.extend({\n        init: function(options) {\n            this.node = options.node;\n            this.offset = options.offset === undefined$1 ? (dom.isDataNode(this.node) && this.node.length) || 0 : options.offset;\n            this.cancelAtNode = options.cancelAtNode || this.cancelAtNode || $.noop;\n        },\n\n        traverse: function(callback) {\n            if (!callback) {\n                return;\n            }\n            this.cancel = false;\n            this._traverse(callback, this.node, this.offset);\n        },\n\n        _traverse: function(callback, node, offset) {\n            if (!node || this.cancel) {\n                return;\n            }\n            if (node.nodeType === 3) {\n                var text = node.data;\n                if (offset !== undefined$1) {\n                    text = this.subText(text, offset);\n                }\n                this.cancel = (callback(text, node, offset) === false);\n            }\n            else {\n                var edgeNode = this.edgeNode(node);\n                this.cancel = this.cancel || this.cancelAtNode(edgeNode);\n                return this._traverse(callback, edgeNode);\n            }\n\n            var next = this.next(node);\n            if (!next) {\n                var parent = node.parentNode;\n                while (!next && dom.isInline(parent)) {\n                    next = this.next(parent);\n                    parent = parent.parentNode;\n                }\n            }\n            this.cancel = this.cancel || this.cancelAtNode(next);\n            this._traverse(callback, next);\n        },\n\n        extendOptions: function(o) {\n            return $.extend({\n                node: this.node,\n                offset: this.offset,\n                cancelAtNode: this.cancelAtNode\n            }, o || {});\n        },\n\n        edgeNode: function(node) {},\n        next: function(node) {},\n        subText: function(text, offset) {}\n\n    });\n\n    var LeftDomTextTraverser = DomTextTraverser.extend({\n        subText: function(text, splitIndex) {\n            return text.substring(0, splitIndex);\n        },\n\n        next: function(node) {\n            return node.previousSibling;\n        },\n\n        edgeNode: function(node) {\n            return node.lastChild;\n        },\n\n        clone: function(options) {\n            var o = this.extendOptions(options);\n            return new LeftDomTextTraverser(o);\n        }\n    });\n\n    var RightDomTextTraverser = DomTextTraverser.extend({\n        subText: function(text, splitIndex) {\n            return text.substring(splitIndex);\n        },\n\n        next: function(node) {\n            return node.nextSibling;\n        },\n\n        edgeNode: function(node) {\n            return node.firstChild;\n        },\n\n        clone: function(options) {\n            var o = this.extendOptions(options);\n            return new RightDomTextTraverser(o);\n        }\n    });\n\n    extend(kendo.ui.editor, {\n        LinkFormatFinder: LinkFormatFinder,\n        LinkFormatter: LinkFormatter,\n        UnlinkCommand: UnlinkCommand,\n        LinkCommand: LinkCommand,\n        AutoLinkCommand: AutoLinkCommand,\n        UnlinkTool: UnlinkTool,\n        DomTextLinkDetection: DomTextLinkDetection,\n        LeftDomTextTraverser: LeftDomTextTraverser,\n        RightDomTextTraverser: RightDomTextTraverser\n    });\n\n    registerTool(\"createLink\", new Tool({ key: \"K\", ctrl: true, command: LinkCommand }));\n    registerTool(\"unlink\", new UnlinkTool({ key: \"K\", ctrl: true, shift: true, ui: { enable: false } }));\n    registerTool(\"autoLink\", new Tool({ key: [keys.ENTER, keys.SPACEBAR], keyPressCommand: true, command: AutoLinkCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        formats = kendo.ui.Editor.fn.options.formats,\n        dom = Editor.Dom,\n        FormatTool = Editor.FormatTool,\n        EditorUtils = Editor.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        registerFormat = EditorUtils.registerFormat,\n        RangeUtils = Editor.RangeUtils;\n\n    var BlockFormatFinder = Class.extend({\n        init: function(format) {\n            this.format = format;\n        },\n\n        contains: function(node, children) {\n            var i, len, child;\n\n            for (i = 0, len = children.length; i < len; i++) {\n                child = children[i];\n                if (!child || !dom.isAncestorOrSelf(node, child)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        findSuitable: function(nodes) {\n            var format = this.format,\n                suitable = [],\n                i, len, candidate;\n\n            for (i = 0, len = nodes.length; i < len; i++) {\n                for (var f = format.length - 1; f >= 0; f--) {\n                    candidate = dom.ofType(nodes[i], format[f].tags) ? nodes[i] : dom.closestEditableOfType(nodes[i], format[f].tags);\n                    if (candidate) {\n                        break;\n                    }\n                }\n\n                if (!candidate || candidate.contentEditable === 'true') {\n                    return [];\n                }\n\n                if ($.inArray(candidate, suitable) < 0) {\n                    suitable.push(candidate);\n                }\n            }\n\n            this._resolveListsItems(suitable);\n\n            for (i = 0, len = suitable.length; i < len; i++) {\n                if (this.contains(suitable[i], suitable)) {\n                    return [suitable[i]];\n                }\n            }\n\n            return suitable;\n        },\n        _resolveListsItems: function(nodes) {\n            var i, node, wrapper;\n            for (i = 0; i < nodes.length; i++) {\n                node = nodes[i];\n                wrapper = dom.is(node, \"li\") ? node : dom.wrapper(node);\n                wrapper = wrapper && dom.list(wrapper) ? wrapper.children[0] : wrapper;\n                if (dom.is(wrapper, \"li\")) {\n                    node = nodes[i] = wrapper;\n                }\n            }\n        },\n\n        findFormat: function(sourceNode, until) {\n            var format = this.format,\n                i, len, node, tags, attributes;\n            var editableParent = dom.editableParent(sourceNode);\n            var immutables = this.options && this.options.immutables;\n            var ImmutablesNS = Editor.Immutables;\n\n            for (i = 0, len = format.length; i < len; i++) {\n                node = sourceNode;\n                tags = format[i].tags;\n                attributes = format[i].attr;\n\n                if (immutables && tags && tags[0] == \"immutable\") {\n                    var immutable = ImmutablesNS.immutableParent(node);\n                    if (immutable && dom.attrEquals(immutable, attributes)) {\n                        return node;\n                    }\n                }\n\n                while (node && dom.isAncestorOf(editableParent, node)) {\n                    if (dom.ofType(node, tags) && dom.attrEquals(node, attributes)) {\n                        return node;\n                    }\n\n                    if (until && until(node)) {\n                        break;\n                    }\n\n                    node = node.parentNode;\n                }\n            }\n            return null;\n        },\n\n        getFormat: function(nodes) {\n            var that = this,\n                findFormat = function(node) {\n                        return that.findFormat(dom.isDataNode(node) ? node.parentNode : node);\n                    },\n                result = findFormat(nodes[0]),\n                i, len;\n\n            if (!result) {\n                return \"\";\n            }\n\n            for (i = 1, len = nodes.length; i < len; i++) {\n                if (result != findFormat(nodes[i])) {\n                    return \"\";\n                }\n            }\n\n            return result.nodeName.toLowerCase();\n        },\n\n        isFormatted: function(nodes, until) {\n            for (var i = 0, len = nodes.length; i < len; i++) {\n                if (!this.findFormat(nodes[i], until)) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    });\n\n    var BlockFormatter = Class.extend({\n        init: function(format, values) {\n            this.format = format;\n            this.values = values;\n            this.finder = new BlockFormatFinder(format);\n        },\n\n        wrap: function(tag, attributes, nodes) {\n\n            var commonAncestor = nodes.length == 1 ? dom.blockParentOrBody(nodes[0]) : dom.commonAncestor.apply(null, nodes);\n\n            if (dom.isInline(commonAncestor)) {\n                commonAncestor = dom.blockParentOrBody(commonAncestor);\n            }\n\n            var ancestors = dom.significantChildNodes(commonAncestor),\n                position = dom.findNodeIndex(ancestors[0]),\n                wrapper = dom.create(commonAncestor.ownerDocument, tag, attributes),\n                i, ancestor;\n\n            for (i = 0; i < ancestors.length; i++) {\n                ancestor = ancestors[i];\n                if (dom.isBlock(ancestor)) {\n                    dom.attr(ancestor, attributes);\n\n                    if (wrapper.childNodes.length) {\n                        dom.insertBefore(wrapper, ancestor);\n                        wrapper = wrapper.cloneNode(false);\n                    }\n\n                    position = dom.findNodeIndex(ancestor) + 1;\n\n                    continue;\n                }\n\n                wrapper.appendChild(ancestor);\n            }\n\n            if (wrapper.firstChild) {\n                dom.insertAt(commonAncestor, wrapper, position);\n            }\n        },\n\n        apply: function(nodes) {\n            var format, values = this.values;\n\n            function attributes(format) {\n                return extend({}, format && format.attr, values);\n            }\n\n            this._handleImmutables(nodes, true);\n\n            var images = dom.filter(\"img\", nodes);\n            var imageFormat = EditorUtils.formatByName(\"img\", this.format);\n            var imageAttributes = attributes(imageFormat);\n            $.each(images, function() {\n                dom.attr(this, imageAttributes);\n            });\n\n            // only images were selected, no need to wrap\n            if (images.length == nodes.length) {\n                return;\n            }\n\n            var nonImages = dom.filter(\"img\", nodes, true);\n            var formatNodes = this.finder.findSuitable(nonImages);\n\n            if (formatNodes.length) {\n                for (var i = 0, len = formatNodes.length; i < len; i++) {\n                    format = EditorUtils.formatByName(dom.name(formatNodes[i]), this.format);\n                    dom.attr(formatNodes[i], attributes(format));\n                }\n            } else {\n                format = this.format[0];\n                this.wrap(format.tags[0], attributes(format), nonImages);\n            }\n        },\n\n        _handleImmutables: function(nodes, applyFormatting) {\n            if (!this.immutables()) {\n                return;\n            }\n            var immutableFormat = EditorUtils.formatByName(\"immutable\", this.format);\n            if (!immutableFormat) {\n                return;\n            }\n            var ImmutablesNS = Editor.Immutables;\n            var l = nodes.length - 1;\n            for (var i = l; i >= 0; i--) {\n                var immutableParent = ImmutablesNS.immutableParent(nodes[i]);\n                if (!immutableParent) {\n                    continue;\n                }\n                if (immutableParent !== nodes[i + 1]) {\n                    if (applyFormatting) {\n                        dom.attr(immutableParent, immutableFormat.attr);\n                    } else {\n                        dom.unstyle(immutableParent, immutableFormat.attr.style);\n                    }\n                }\n                nodes.splice(i, 1);\n            }\n        },\n\n        immutables: function() {\n            return this.editor && this.editor.options.immutables;\n        },\n\n        remove: function(nodes) {\n            var i, l, formatNode, namedFormat, name;\n\n            this._handleImmutables(nodes, false);\n\n            for (i = 0, l = nodes.length; i < l; i++) {\n                formatNode = this.finder.findFormat(nodes[i]);\n                if (formatNode) {\n                    name = dom.name(formatNode);\n                    namedFormat = EditorUtils.formatByName(name, this.format);\n                    if (namedFormat.attr.style) {\n                        dom.unstyle(formatNode, namedFormat.attr.style);\n                    }\n                    if (namedFormat.attr.className) {\n                        dom.removeClass(formatNode, namedFormat.attr.className);\n                    }\n                }\n            }\n        },\n\n        toggle: function(range) {\n            var that = this,\n                nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n            if (that.finder.isFormatted(nodes)) {\n                that.remove(nodes);\n            } else {\n                that.apply(nodes);\n            }\n        }\n    });\n\n    var GreedyBlockFormatter = Class.extend({\n        init: function(format, values) {\n            var that = this;\n            that.format = format;\n            that.values = values;\n            that.finder = new BlockFormatFinder(format);\n        },\n\n        apply: function(nodes) {\n            var format = this.format;\n            var blocks = dom.blockParents(nodes);\n            var formatTag = format[0].tags[0];\n            var i, len, list, formatter, range;\n            var element;\n            var tagName;\n            var block;\n            var immutalbeParent;\n\n            if (blocks.length) {\n                for (i = 0, len = blocks.length; i < len; i++) {\n                    block = blocks[i];\n                    immutalbeParent = this.immutables() && Editor.Immutables.immutableParent(block);\n\n                    if (!immutalbeParent) {\n                        tagName = dom.name(block);\n\n                        if (tagName == \"li\") {\n                            list = block.parentNode;\n                            formatter = new Editor.ListFormatter(list.nodeName.toLowerCase(), formatTag);\n                            range = this.editor.createRange();\n                            range.selectNode(blocks[i]);\n                            formatter.toggle(range);\n                        } else if (formatTag && (tagName == \"td\" || block.attributes.contentEditable)) {\n                            new BlockFormatter(format, this.values).apply(block.childNodes);\n                        } else {\n                            element = dom.changeTag(block, formatTag);\n                            dom.attr(element, format[0].attr);\n                        }\n                    }\n                }\n            } else {\n                var blockFormatter = new BlockFormatter(format, this.values);\n                blockFormatter.editor = this.editor;\n                blockFormatter.apply(nodes);\n            }\n        },\n\n        toggle: function(range) {\n            var nodes = RangeUtils.textNodes(range);\n            if (!nodes.length) {\n                range.selectNodeContents(range.commonAncestorContainer);\n                nodes = RangeUtils.textNodes(range);\n                if (!nodes.length) {\n                    nodes = dom.significantChildNodes(range.commonAncestorContainer);\n                }\n            }\n\n            this.apply(nodes);\n        },\n\n        immutables: function() {\n            return this.editor && this.editor.options.immutables;\n        }\n    });\n\n    var BlockFormatTool = FormatTool.extend({ init: function(options) {\n            FormatTool.fn.init.call(this, extend(options, {\n                finder: new BlockFormatFinder(options.format),\n                formatter: function() {\n                    return new BlockFormatter(options.format);\n                }\n            }));\n        }\n    });\n\n    extend(Editor, {\n        BlockFormatFinder: BlockFormatFinder,\n        BlockFormatter: BlockFormatter,\n        GreedyBlockFormatter: GreedyBlockFormatter,\n        BlockFormatTool: BlockFormatTool\n    });\n\n    var listElements = [\"ul\",\"ol\",\"li\"];\n\n    registerFormat(\"justifyLeft\", [\n        { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"left\" } } },\n        { tags: [\"img\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n        { tags: [\"immutable\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n        { tags: listElements, attr: { style: { textAlign: \"left\", listStylePosition: \"\" } } }\n    ]);\n    registerTool(\"justifyLeft\", new BlockFormatTool({\n        format: formats.justifyLeft,\n        ui: {\n            togglable: true,\n            group: \"align\"\n        }\n    }));\n\n    registerFormat(\"justifyCenter\", [\n        { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"center\" } } },\n        { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n        { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n        { tags: listElements, attr: { style: { textAlign: \"center\", listStylePosition: \"inside\" } } }\n    ]);\n    registerTool(\"justifyCenter\", new BlockFormatTool({\n        format: formats.justifyCenter,\n        ui: {\n            togglable: true,\n            group: \"align\"\n        }\n    }));\n\n    registerFormat(\"justifyRight\", [\n        { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"right\" } } },\n        { tags: [\"img\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n        { tags: [\"immutable\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n        { tags: listElements, attr: { style: { textAlign: \"right\", listStylePosition: \"inside\" } } }\n    ]);\n    registerTool(\"justifyRight\", new BlockFormatTool({\n        format: formats.justifyRight,\n        ui: {\n            togglable: true,\n            group: \"align\"\n        }\n    }));\n\n    registerFormat(\"justifyFull\", [\n        { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"justify\" } } },\n        { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n        { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n        { tags: listElements, attr: { style: { textAlign: \"justify\", listStylePosition: \"\" } } }\n    ]);\n    registerTool(\"justifyFull\", new BlockFormatTool({\n        format: formats.justifyFull,\n        ui: {\n            togglable: true,\n            group: \"align\"\n        }\n    }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        RangeUtils = Editor.RangeUtils,\n        Command = Editor.Command,\n        FormatTool = Editor.FormatTool,\n        BlockFormatFinder = Editor.BlockFormatFinder,\n        textNodes = RangeUtils.textNodes,\n        registerTool = Editor.EditorUtils.registerTool;\n\n    var ListFormatFinder = BlockFormatFinder.extend({\n        init: function(options) {\n            this.tag = options.tag;\n            this.attr = options.attr;\n            this.altAttr = options.altAttr;\n\n            var tags = this.tags = [this.tag == 'ul' ? 'ol' : 'ul', this.tag];\n            var format = [{ tags: tags, attr: this.attr }];\n\n            if (this.altAttr) {\n                format.push({\n                    tags: tags,\n                    attr: this.altAttr\n                });\n            }\n\n            BlockFormatFinder.fn.init.call(this, format);\n        },\n\n        matchesType: function(node) {\n            return dom.attrEquals(node, this.attr) || (this.altAttr && dom.attrEquals(node, this.altAttr));\n        },\n\n        isList: function(node) {\n            return dom.list(node);\n        },\n\n        isFormatted: function(nodes) {\n            var formatNodes = [];\n            var formatNode, i;\n\n            for (i = 0; i < nodes.length; i++) {\n                formatNode = this.findFormat(nodes[i], this.isList);\n\n                if (formatNode && dom.name(formatNode) == this.tag && this.matchesType(formatNode)) {\n                    formatNodes.push(formatNode);\n                }\n            }\n\n            if (formatNodes.length < 1) {\n                return false;\n            }\n\n            if (formatNodes.length != nodes.length) {\n                return false;\n            }\n\n            // check if sequential lists are selected\n            for (i = 0; i < formatNodes.length; i++) {\n                if (formatNodes[i].parentNode != formatNode.parentNode) {\n                    break;\n                }\n\n                if (formatNodes[i] != formatNode) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        findSuitable: function(nodes) {\n            var candidate = this.findFormat(nodes[0], this.isList);\n\n            if (candidate && dom.name(candidate) == this.tag) {\n                return candidate;\n            }\n\n            return null;\n        }\n\n    });\n\n    var ListFormatter = Class.extend({\n        init: function(options, unwrapTag) {\n            var that = this;\n            options = $.isPlainObject(options) ? options : { tag: options, attr: null };\n            that.tag = options.tag;\n            that.attr = options.attr;\n            that.finder = new ListFormatFinder(options);\n            that.unwrapTag = unwrapTag;\n        },\n\n        isList: function(node) {\n            return dom.list(node);\n        },\n\n        immutables: function() {\n            return this.editor && !!this.editor.options.immutables;\n        },\n\n        wrap: function(list, nodes) {\n            var li = dom.create(list.ownerDocument, \"li\"),\n                i, node,\n                isImmutable = this.immutables() ? Editor.Immutables.immutable : $.noop;\n\n            for (i = 0; i < nodes.length; i++) {\n                node = nodes[i];\n\n                if (dom.is(node, 'li')) {\n                    list.appendChild(node);\n                    continue;\n                }\n\n                if (this.isList(node)) {\n                    while (node.firstChild) {\n                        list.appendChild(node.firstChild);\n                    }\n                    continue;\n                }\n\n                if (dom.is(node, \"td\")) {\n                    while (node.firstChild) {\n                        li.appendChild(node.firstChild);\n                    }\n                    list.appendChild(li);\n                    node.appendChild(list);\n                    list = list.cloneNode(false);\n                    li = li.cloneNode(false);\n                    continue;\n                }\n\n                li.appendChild(node);\n\n                if (dom.isBlock(node)) {\n                    list.appendChild(li);\n                    if (!isImmutable(node)) {\n                        dom.unwrap(node);\n                    }\n                    li = li.cloneNode(false);\n                }\n            }\n\n            if (li.firstChild) {\n                list.appendChild(li);\n            }\n        },\n\n        containsAny: function(parent, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                if (dom.isAncestorOrSelf(parent, nodes[i])) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        suitable: function(candidate, nodes) {\n            if (candidate.className == \"k-marker\") {\n                var sibling = candidate.nextSibling;\n\n                if (sibling && dom.isBlock(sibling)) {\n                    return false;\n                }\n\n                sibling = candidate.previousSibling;\n\n                if (sibling && dom.isBlock(sibling)) {\n                    return false;\n                }\n            }\n\n            return this.containsAny(candidate, nodes) || dom.isInline(candidate) || candidate.nodeType == 3;\n        },\n\n        _parentLists: function(node) {\n            var editable = dom.closestEditable(node);\n\n            return $(node).parentsUntil(editable, \"ul,ol\");\n        },\n\n        split: function(range) {\n            var nodes = textNodes(range);\n            var start, end, parents;\n\n            if (nodes.length) {\n                start = dom.parentOfType(nodes[0], ['li']);\n                end = dom.parentOfType(nodes[nodes.length - 1], ['li']);\n                range.setStartBefore(start);\n                range.setEndAfter(end);\n\n                for (var i = 0, l = nodes.length; i < l; i++) {\n                    var formatNode = this.finder.findFormat(nodes[i]);\n                    if (formatNode) {\n                        parents = this._parentLists(formatNode);\n                        if (parents.length) {\n                            RangeUtils.split(range, parents.last()[0], true);\n                        } else {\n                            RangeUtils.split(range, formatNode, true);\n                        }\n                    }\n                }\n            }\n        },\n\n        merge: function(tag, formatNode) {\n            var prev = formatNode.previousSibling, next;\n\n            while (prev && (prev.className == \"k-marker\" || (prev.nodeType == 3 && dom.isWhitespace(prev)))) {\n                prev = prev.previousSibling;\n            }\n\n            // merge with previous list\n            if (prev && dom.name(prev) == tag && this.finder.matchesType(prev)) {\n                while (formatNode.firstChild) {\n                    prev.appendChild(formatNode.firstChild);\n                }\n                dom.remove(formatNode);\n                formatNode = prev;\n            }\n\n            next = formatNode.nextSibling;\n            while (next && (next.className == \"k-marker\" || (next.nodeType == 3 && dom.isWhitespace(next)))) {\n                next = next.nextSibling;\n            }\n\n            // merge with next list\n            if (next && dom.name(next) == tag && this.finder.matchesType(next)) {\n                while (formatNode.lastChild) {\n                    next.insertBefore(formatNode.lastChild, next.firstChild);\n                }\n                dom.remove(formatNode);\n            }\n        },\n\n        breakable: function(node) {\n            return (\n                node != node.ownerDocument.body &&\n                !/table|tbody|thead|tr|td/.test(dom.name(node)) &&\n                !node.attributes.contentEditable\n            );\n        },\n\n        findSuitableNode: function(nodes) {\n            var that = this,\n                finder = that.finder,\n                tag = that.tag,\n                formatNode;\n\n            formatNode = finder.findSuitable(nodes);\n\n            if (!formatNode) {\n                // Find the opposite tag\n                finder = new ListFormatFinder({ tag: tag == \"ul\" ? \"ol\" : \"ul\" });\n                formatNode = finder.findSuitable(nodes);\n            }\n\n            if (!formatNode) {\n                // Find the same tag\n                finder = new ListFormatFinder({ tag: tag });\n                formatNode = finder.findSuitable(nodes);\n                formatNode = formatNode && that.finder.matchesType(formatNode) ? null : formatNode;\n            }\n\n\n            return formatNode;\n        },\n\n        applyOnSection: function(section, nodes) {\n            var tag = this.tag;\n            var attr = this.attr;\n            var commonAncestor = dom.closestSplittableParent(nodes);\n\n            var ancestors = [];\n            var formatNode = this.findSuitableNode(nodes);\n\n            var childNodes;\n\n            if (/table|tbody|thead/.test(dom.name(commonAncestor))) {\n                childNodes = $.map(nodes, function(node) {\n                    return dom.parentOfType(node, [\"td\"]);\n                });\n            } else {\n                childNodes = dom.significantChildNodes(commonAncestor);\n\n                if ($.grep(childNodes, dom.isBlock).length) {\n                    childNodes = $.grep(childNodes, (function(node) {\n                        return this.containsAny(node, nodes);\n                    }).bind(this));\n                }\n\n                if (!childNodes.length) {\n                    childNodes = nodes;\n                }\n            }\n\n            function pushAncestor() {\n                ancestors.push(this);\n            }\n\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[i];\n                var suitable = (!formatNode || !dom.isAncestorOrSelf(formatNode, child)) && this.suitable(child, nodes);\n\n                if (!suitable) {\n                    continue;\n                }\n\n                if (formatNode && this.isList(child)) {\n                    // merging lists\n                    $.each(child.children, pushAncestor);\n                    dom.remove(child);\n                } else {\n                    ancestors.push(child);\n                }\n            }\n\n            if (ancestors.length == childNodes.length && this.breakable(commonAncestor)) {\n                ancestors = [commonAncestor];\n            }\n\n            if (!formatNode) {\n                formatNode = dom.create(commonAncestor.ownerDocument, tag, attr);\n                if (dom.isBlock(ancestors[0])) {\n                    dom.mergeAttributes(ancestors[0], formatNode);\n                }\n                dom.insertBefore(formatNode, ancestors[0]);\n            }\n\n            this.wrap(formatNode, ancestors);\n\n            while (dom.isBom(formatNode.nextSibling)) {\n                dom.remove(formatNode.nextSibling);\n            }\n\n            if (!this.finder.matchesType(formatNode)) {\n                formatNode.removeAttribute(\"type\");\n                formatNode.style.listStyleType = \"\";\n                dom.mergeAttributes(dom.create(commonAncestor.ownerDocument, tag, attr), formatNode, true);\n            }\n\n            if (formatNode && formatNode.getAttribute(\"type\") === \"\") {\n                formatNode.removeAttribute(\"type\");\n            }\n\n            if (!dom.is(formatNode, tag)) {\n                dom.changeTag(formatNode, tag);\n            }\n\n            this.merge(tag, formatNode);\n        },\n\n        apply: function(nodes) {\n            var i = 0,\n                sections = [],\n                lastSection,\n                lastNodes,\n                section,\n                node,\n                l = nodes.length,\n                immutableParent = this.immutables() ? Editor.Immutables.immutableParent : $.noop;\n\n            function addLastSection() {\n                if (lastSection) {\n                    sections.push({\n                        section: lastSection,\n                        nodes: lastNodes\n                    });\n                }\n            }\n\n            // split nodes into sections that need to be different lists\n            for (i = 0; i < l; i++) {\n                node = immutableParent(nodes[i]) || nodes[i];\n                section = dom.closestEditable(node, [\"td\",\"th\",\"body\"]);\n                if (!lastSection || section != lastSection) {\n                    addLastSection();\n                    lastNodes = [node];\n                    lastSection = section;\n                } else {\n                    lastNodes.push(node);\n                }\n            }\n\n            addLastSection();\n\n            for (i = 0; i < sections.length; i++) {\n                this.applyOnSection(sections[i].section, sections[i].nodes);\n            }\n        },\n\n        unwrap: function(ul) {\n            var fragment = ul.ownerDocument.createDocumentFragment(),\n                unwrapTag = this.unwrapTag,\n                parents,\n                li,\n                p,\n                child;\n\n            for (li = ul.firstChild; li; li = li.nextSibling) {\n                p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n\n                while (li.firstChild) {\n                    child = li.firstChild;\n\n                    if (dom.isBlock(child)) {\n\n                        if (p.firstChild) {\n                            fragment.appendChild(p);\n                            p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n                        }\n\n                        fragment.appendChild(child);\n                    } else {\n                        p.appendChild(child);\n                    }\n                }\n\n                if (p.firstChild) {\n                    fragment.appendChild(p);\n                }\n            }\n\n            parents = this._parentLists(ul);\n\n            if (parents[0]) {\n                dom.insertAfter(fragment, parents.last()[0]);\n                parents.last().remove();\n            } else {\n                dom.insertAfter(fragment, ul);\n            }\n\n            dom.remove(ul);\n        },\n\n        remove: function(nodes) {\n            var formatNode;\n            for (var i = 0, l = nodes.length; i < l; i++) {\n                formatNode = this.finder.findFormat(nodes[i]);\n\n                if (formatNode) {\n                    this.unwrap(formatNode);\n                }\n            }\n        },\n\n        toggle: function(range) {\n            var that = this,\n                nodes = textNodes(range),\n                ancestor = range.commonAncestorContainer;\n\n            if (!nodes.length) {\n                range.selectNodeContents(ancestor);\n                nodes = textNodes(range);\n                if (!nodes.length) {\n                    var text = ancestor.ownerDocument.createTextNode(\"\");\n                    range.startContainer.appendChild(text);\n                    nodes = [text];\n                    range.selectNode(text.parentNode);\n                }\n            }\n            nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n            if (that.finder.isFormatted(nodes)) {\n                that.split(range);\n                that.remove(nodes);\n            } else {\n                that.apply(nodes);\n            }\n        }\n\n    });\n\n    var ListCommand = Command.extend({\n        init: function(options) {\n            options.formatter = new ListFormatter({ tag: options.tag, attr: options.attr });\n            Command.fn.init.call(this, options);\n        }\n    });\n\n    var ListTool = FormatTool.extend({\n        init: function(options) {\n            this.options = options;\n\n            FormatTool.fn.init.call(this, extend(options, {\n                finder: new ListFormatFinder(options)\n            }));\n        },\n\n        command: function(commandArguments) {\n            return new ListCommand(extend(commandArguments, { tag: this.options.tag, attr: this.options.attr }));\n        }\n    });\n\n    extend(Editor, {\n        ListFormatFinder: ListFormatFinder,\n        ListFormatter: ListFormatter,\n        ListCommand: ListCommand,\n        ListTool: ListTool\n    });\n\n    registerTool(\"insertUnorderedList\", new ListTool({ tag: 'ul', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\n    registerTool(\"insertOrderedList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\n    registerTool(\"insertUpperRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"upper-roman\" } }, altAttr: { type: \"I\" }, ui: { togglable: true, group: \"lists\" } }));\n    registerTool(\"insertLowerRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"lower-roman\" } }, altAttr: { type: \"i\" }, ui: { togglable: true, group: \"lists\" } }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        Editor = kendo.ui.editor,\n        Tool = Editor.Tool,\n        DelayedExecutionTool = Editor.DelayedExecutionTool,\n        Command = Editor.Command,\n        dom = Editor.Dom,\n        EditorUtils = Editor.EditorUtils,\n        RangeUtils = Editor.RangeUtils,\n        registerTool = EditorUtils.registerTool;\n\n\n    var FormattingTool = DelayedExecutionTool.extend({\n        init: function(options) {\n            var that = this;\n            Tool.fn.init.call(that, kendo.deepExtend({}, that.options, options));\n\n            that.type = \"kendoDropDownList\";\n\n            that.finder = {\n                getFormat: function() { return \"\"; }\n            };\n        },\n\n        options: {\n            items: [\n                { text: \"Paragraph\", value: \"p\" },\n                { text: \"Quotation\", value: \"blockquote\" },\n                { text: \"Heading 1\", value: \"h1\" },\n                { text: \"Heading 2\", value: \"h2\" },\n                { text: \"Heading 3\", value: \"h3\" },\n                { text: \"Heading 4\", value: \"h4\" },\n                { text: \"Heading 5\", value: \"h5\" },\n                { text: \"Heading 6\", value: \"h6\" }\n            ],\n            width: 110\n        },\n\n        toFormattingItem: function(item) {\n            var value = item.value;\n\n            if (!value) {\n                return item;\n            }\n\n            if (item.tag || item.className) {\n                return item;\n            }\n\n            var dot = value.indexOf(\".\");\n\n            if (dot === 0) {\n                item.className = value.substring(1);\n            } else if (dot == -1) {\n                item.tag = value;\n            } else {\n                item.tag = value.substring(0, dot);\n                item.className = value.substring(dot + 1);\n            }\n\n            return item;\n        },\n\n        command: function(args) {\n            var that = this;\n            var item = args.value;\n\n            item = this.toFormattingItem(item);\n\n            return new Editor.FormatCommand({\n                range: args.range,\n                formatter: function() {\n                    var formatter,\n                        tags = (item.tag || item.context || \"span\").split(\",\"),\n                        format = [{\n                            tags: tags,\n                            attr: { className: item.className || \"\" }\n                        }];\n\n                    if ($.inArray(tags[0], dom.inlineElements) >= 0) {\n                        formatter = new Editor.GreedyInlineFormatter(format);\n                    } else {\n                        formatter = new Editor.GreedyBlockFormatter(format);\n                    }\n\n                    formatter.editor = that.editor;\n                    return formatter;\n                }\n            });\n        },\n\n        decorate: function(body) {\n            var component = this.component,\n                dataSource = component.dataSource,\n                items = dataSource.data(),\n                i, tag, className, style;\n\n            if (body) {\n                component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n            }\n\n            if (this.component && this.component.options && this.component.options.unsafeInline !== false) {\n                for (i = 0; i < items.length; i++) {\n                    tag = items[i].tag || \"span\";\n                    className = items[i].className;\n\n                    style = dom.inlineStyle(body, tag, { className: className });\n\n                    style = style.replace(/\"/g, \"'\");\n\n                    items[i].style = style + \";display:inline-block\";\n                }\n            }\n\n            dataSource.trigger(\"change\");\n        },\n\n        initialize: function(ui, editor) {\n            var options = this.options;\n            var toolName = options.name;\n            var that = this;\n            var component = ui.getKendoDropDownList();\n\n            if (!component) {\n                return;\n            }\n\n            that.editor = editor;\n            that.component = component;\n\n            // must be moved to themes\n            ui.closest(\".k-dropdownlist\").width(options.width);\n\n            component.setOptions({\n                optionLabel: editor.options.messages.formatting,\n                change: () => {\n                    var dataItem = component.dataItem();\n\n                    if (dataItem) {\n                        Tool.exec(editor, toolName, dataItem.toJSON());\n                    }\n                },\n                dataBound: function() {\n                    var i, items = component.dataSource.data(),\n                        optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n                    for (i = 0; i < items.length; i++) {\n                        items[i] = that.toFormattingItem(items[i]);\n                    }\n\n                    if (optionLabel.length) {\n                        optionLabel.remove();\n                    }\n                }\n            });\n        },\n\n        getFormattingValue: function(items, nodes) {\n            for (var i = 0; i < items.length; i++) {\n                var item = items[i];\n                var tag = item.tag || item.context || \"\";\n                var className = item.className ? \".\" + item.className : \"\";\n                var selector = tag + className;\n\n                var element = $(nodes[0]).closest(selector)[0];\n\n                if (!element) {\n                    continue;\n                }\n\n                if (nodes.length == 1) {\n                    return item.value;\n                }\n\n                for (var n = 1; n < nodes.length; n++) {\n                    if (!$(nodes[n]).closest(selector)[0]) {\n                        break;\n                    } else if (n == nodes.length - 1) {\n                        return item.value;\n                    }\n                }\n            }\n\n            return \"\";\n        },\n\n        update: function(ui, nodes) {\n            var selectBox = $(ui).data(this.type);\n            // necessary until formatBlock is deleted\n            if (!selectBox) {\n                return;\n            }\n\n            var dataSource = selectBox.dataSource,\n                items = dataSource.data(),\n                i, context,\n                ancestor = dom.commonAncestor.apply(null, nodes);\n\n            if (ancestor != dom.closestEditable(ancestor) && this._ancestor == ancestor) {\n                return;\n            } else {\n                this._ancestor = ancestor;\n            }\n\n            for (i = 0; i < items.length; i++) {\n                context = items[i].context;\n\n                items[i].visible = !context || !!$(ancestor).closest(context).length;\n            }\n\n            dataSource.filter([{ field: \"visible\", operator: \"eq\", value: true }]);\n\n            DelayedExecutionTool.fn.update.call(this, ui, nodes);\n\n            selectBox.value(this.getFormattingValue(dataSource.view(), nodes));\n\n            selectBox.wrapper.toggleClass(\"k-disabled\", !dataSource.view().length);\n        },\n\n        destroy: function() {\n            this._ancestor = null;\n        }\n    });\n\n    var CleanFormatCommand = Command.extend({\n        exec: function() {\n            var range = this.lockRange(true);\n            this.tagsToClean = this.options.remove || \"strong,em,span,sup,sub,del,b,i,u,font\".split(\",\");\n\n            RangeUtils.wrapSelectedElements(range);\n\n            var nodes = RangeUtils.mapAll(range, function(node) {\n                return node;\n            });\n\n\n            for (var c = nodes.length - 1; c >= 0; c--) {\n                var node = nodes[c];\n                if (!this.immutableParent(node)) {\n                    this.clean(node);\n                }\n            }\n\n            this.releaseRange(range);\n        },\n\n        clean: function(node) {\n            if (!node || dom.isMarker(node)) {\n                return;\n            }\n\n            var name = dom.name(node);\n\n            if (name == \"ul\" || name == \"ol\") {\n                var listFormatter = new Editor.ListFormatter(name);\n                var prev = node.previousSibling;\n                var next = node.nextSibling;\n\n                listFormatter.unwrap(node);\n\n                // clean contents\n                for (; prev && prev != next; prev = prev.nextSibling) {\n                    this.clean(prev);\n                }\n            } else if (name == \"blockquote\") {\n                dom.changeTag(node, \"p\");\n            } else if (node.nodeType == 1 && !dom.insignificant(node)) {\n                for (var i = node.childNodes.length - 1; i >= 0; i--) {\n                    this.clean(node.childNodes[i]);\n                }\n\n                node.removeAttribute(\"style\");\n                node.removeAttribute(\"class\");\n            } else {\n                unwrapListItem(node);\n            }\n\n            if ($.inArray(name, this.tagsToClean) > -1) {\n                dom.unwrap(node);\n            }\n        },\n\n        immutableParent: function(node) {\n            return this.immutables() && Editor.Immutables.immutableParent(node);\n        }\n    });\n\n\n    function unwrapListItem(node) {\n        var li = dom.closestEditableOfType(node, [\"li\"]);\n        if (li) {\n            var listFormatter = new Editor.ListFormatter(dom.name(li.parentNode));\n            var range = kendo.ui.editor.W3CRange.fromNode(node);\n            range.selectNode(li);\n            listFormatter.toggle(range);\n        }\n    }\n\n    $.extend(Editor, {\n        FormattingTool: FormattingTool,\n        CleanFormatCommand: CleanFormatCommand\n    });\n\n    registerTool(\"formatting\", new FormattingTool({\n        ui: {\n            type: \"component\",\n            component: \"DropDownList\",\n            componentOptions: {\n                dataTextField: \"text\",\n                dataValueField: \"value\",\n                highlightFirst: false,\n                autoWidth: true,\n                template: kendo.template(\n                    (data) => `<span unselectable=\"on\" ${data.style ? `class=\"k-d-block\" style=\"display:block;${data.style || \"\"}` : \"\"}\">${kendo.htmlEncode(data.text)}</span>`\n                )\n            },\n            overflow: \"never\"\n        }\n    }));\n\n    registerTool(\"cleanFormatting\", new Tool({ command: CleanFormatCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        dom = Editor.Dom,\n        registerTool = EditorUtils.registerTool,\n        RangeUtils = Editor.RangeUtils,\n        Command = Editor.Command,\n        keys = kendo.keys,\n        KEDITORIMAGEURL = \"#k-editor-image-url\",\n        KEDITORIMAGETITLE = \"#k-editor-image-title\",\n        KEDITORIMAGEWIDTH = \"#k-editor-image-width\",\n        KEDITORIMAGEHEIGHT = \"#k-editor-image-height\";\n\n    var ImageCommand = Command.extend({\n        init: function(options) {\n            var that = this;\n            Command.fn.init.call(that, options);\n\n            that.async = true;\n            that.attributes = {};\n        },\n\n        insertImage: function(img, range) {\n            var attributes = this.attributes;\n            var doc = RangeUtils.documentFromRange(range);\n\n            if (attributes.src && attributes.src != \"http://\") {\n\n                var removeIEAttributes = function() {\n                    setTimeout(function() {\n                        if (!attributes.width) {\n                            img.removeAttribute(\"width\");\n                        }\n\n                        if (!attributes.height) {\n                            img.removeAttribute(\"height\");\n                        }\n\n                        img.removeAttribute(\"complete\");\n                    });\n                };\n\n                if (!img) {\n                    img = dom.create(doc, \"img\", attributes);\n                    img.onload = img.onerror = removeIEAttributes;\n\n                    range.deleteContents();\n                    range.insertNode(img);\n\n                    if (!img.nextSibling) {\n                        dom.insertAfter(doc.createTextNode(\"\\ufeff\"), img);\n                    }\n\n                    removeIEAttributes();\n\n                    range.setStartAfter(img);\n                    range.setEndAfter(img);\n                    RangeUtils.selectRange(range);\n                    return true;\n                } else {\n                    img.onload = img.onerror = removeIEAttributes;\n                    dom.attr(img, attributes);\n                    removeIEAttributes();\n                }\n            }\n\n            return false;\n        },\n\n        redo: function() {\n            var that = this,\n                range = that.lockRange();\n\n            if (!that.insertImage(RangeUtils.image(range), range)) {\n                that.releaseRange(range);\n            }\n        },\n\n        exec: function() {\n            var that = this,\n                range = that.lockRange(),\n                applied = false,\n                img = RangeUtils.image(range),\n                imageWidth = img && img.getAttribute(\"width\") || \"\",\n                imageHeight = img && img.getAttribute(\"height\") || \"\",\n                dialog,\n                form,\n                isIE = kendo.support.browser.msie,\n                options = that.editor.options,\n                messages = options.messages,\n                imageBrowser = options.imageBrowser,\n                showBrowser = !!(kendo.ui.ImageBrowser && imageBrowser && imageBrowser.transport && imageBrowser.transport.read !== undefined$1),\n                dialogOptions = {\n                    title: messages.insertImage,\n                    visible: false,\n                    resizable: showBrowser\n                };\n\n            this.expandImmutablesIn(range);\n\n            function apply(e) {\n                var element = dialog.element,\n                    w = parseInt(element.find(KEDITORIMAGEWIDTH).val(), 10),\n                    h = parseInt(element.find(KEDITORIMAGEHEIGHT).val(), 10);\n\n                that.attributes = {\n                    src: element.find(KEDITORIMAGEURL).val().replace(/ /g, \"%20\"),\n                    alt: element.find(KEDITORIMAGETITLE).val()\n                };\n\n                that.attributes.width = null;\n                that.attributes.height = null;\n\n                if (!isNaN(w) && w > 0) {\n                    that.attributes.width = w;\n                }\n\n                if (!isNaN(h) && h > 0) {\n                    that.attributes.height = h;\n                }\n\n                applied = that.insertImage(img, range);\n\n                close(e);\n\n                if (that.change) {\n                    that.change();\n                }\n            }\n\n            function close(e) {\n                e.preventDefault();\n                form.destroy();\n                dialog.destroy();\n\n                dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n                if (!applied) {\n                    that.releaseRange(range);\n                }\n            }\n\n            function keyDown(e) {\n                if (e.keyCode == keys.ENTER) {\n                    apply(e);\n                } else if (e.keyCode == keys.ESC) {\n                    close(e);\n                }\n            }\n\n            dialogOptions.close = close;\n\n            if (showBrowser) {\n                dialogOptions.width = 750;\n            }\n            dialogOptions.minWidth = 350;\n\n            dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n\n            form = that._createForm(dialog, showBrowser);\n\n            dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n            dialog.wrapper\n            .find(\".k-dialog-insert\").on(\"click\", apply).end()\n            .find(\".k-dialog-close\").on(\"click\", close).end()\n            .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n            // IE < 8 returns absolute url if getAttribute is not used\n            .find(KEDITORIMAGEURL).val(img ? img.getAttribute(\"src\", 2) : \"http://\").end()\n            .find(KEDITORIMAGETITLE).val(img ? img.alt : \"\").end()\n            .find(KEDITORIMAGEWIDTH).val(imageWidth).end()\n            .find(KEDITORIMAGEHEIGHT).val(imageHeight).end();\n\n            var element = dialog.element;\n            if (showBrowser) {\n                this._imageBrowser = new kendo.ui.ImageBrowser(\n                    element.find(\".k-imagebrowser\"),\n                    extend({}, imageBrowser)\n                );\n\n                this._imageBrowser.bind(\"change\", function(ev) {\n                    if (ev.selected.get(\"type\") === \"f\") {\n                        element.find(KEDITORIMAGEURL).val(this.value());\n                    }\n                });\n\n                this._imageBrowser.bind(\"apply\", apply);\n            }\n\n            if (isIE) {\n                var dialogHeight = element.closest(\".k-window\").height();\n                element.css(\"max-height\", dialogHeight);\n            }\n            dialog.center().open();\n            element.find(KEDITORIMAGEURL).trigger(\"focus\").select();\n        },\n\n        _createForm: function(dialog, showBrowser) {\n            var that = this;\n            var formElement = $(\"<div/>\").appendTo(dialog.element);\n            var messages = that.editor.options.messages;\n            var form = formElement.kendoForm({\n                renderButtons: false,\n                items: [\n                    {\n                        field: \"k-editor-image-url\",\n                        label: encode(messages.imageWebAddress),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-image-title\",\n                        label: encode(messages.imageAltText),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-image-width\",\n                        label: encode(messages.imageWidth),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-image-height\",\n                        label: encode(messages.imageHeight),\n                        editor: \"TextBox\"\n                    }\n                ]\n            }).data(\"kendoForm\");\n\n            if (showBrowser) {\n                formElement.prepend($('<div class=\"k-filebrowser k-imagebrowser\"></div>'));\n            }\n\n            dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"image-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n            return form;\n        }\n\n    });\n\n    kendo.ui.editor.ImageCommand = ImageCommand;\n\n    registerTool(\"insertImage\", new Editor.Tool({ command: ImageCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        Command = Editor.Command,\n        Tool = Editor.Tool,\n        registerTool = EditorUtils.registerTool,\n        loadingOverlay = '<div contenteditable=\"false\" class=\"k-loading-mask\" style=\"width: 100%; height: 100%; position: absolute; top: 0px; left: 0px;\"><div class=\"k-loading-image\"></div><div class=\"k-loading-color\"></div></div>';\n\n    var ImportCommand = Command.extend({\n        exec: function() {\n            (this.editor._uploadWidget || this._initializeUploadWidget()).element.click();\n        },\n\n        _initializeUploadWidget: function() {\n            var cmd = this;\n            var editor = cmd.editor;\n            var importOptions = editor.options[\"import\"];\n            var upload = $('<input id=\"editorImport\" name=\"files\" type=\"file\" />').kendoUpload({\n                success: cmd._onUploadSuccess.bind(cmd),\n                progress: cmd._onUploadProgress.bind(cmd),\n                select: cmd._onUploadSelect.bind(cmd),\n                error: cmd._onUploadError.bind(cmd),\n                complete: cmd._onUploadComplete.bind(cmd),\n                showFileList: false,\n                multiple: false,\n                async: {\n                    saveUrl: importOptions.proxyURL,\n                    autoUpload: true,\n                    saveField: \"file\"\n                },\n                validation: {\n                    allowedExtensions: importOptions.allowedExtensions,\n                    maxFileSize: importOptions.maxFileSize\n                }\n            }).getKendoUpload();\n\n            editor._uploadWidget = upload;\n\n            return upload;\n        },\n        _onUploadComplete: function(ev) {\n            this._trigger(\"complete\", ev);\n            ev.sender.clearAllFiles();\n\n            this._removeLoadingOverlay();\n        },\n        _onUploadSuccess: function(ev) {\n            this.editor.value(ev.response.html.replace(/<\\/?body>/ig, \"\"));\n            this._trigger(\"success\", ev);\n        },\n        _onUploadProgress: function(ev) {\n            this._trigger(\"progress\", ev);\n        },\n        _onUploadSelect: function(ev) {\n            this._trigger(\"select\", ev);\n            if (!ev.files[0].validationErrors) {\n                this._initLoadingOverlay();\n            }\n        },\n        _onUploadError: function(ev) {\n            this._trigger(\"error\", ev);\n        },\n\n        _trigger: function(eventType, uploadEvent) {\n            var editor = this.editor;\n            var importOptions = editor.options[\"import\"];\n            if (typeof importOptions[eventType] === \"function\") {\n                importOptions[eventType].call(editor, uploadEvent);\n            }\n        },\n\n        _initLoadingOverlay: function() {\n            var editable = this.editor.body;\n            if (Editor.Dom.is(editable, \"body\")) {\n                this._iframeWrapper = this._container =\n                    this.editor.wrapper.find(\"iframe\").parent()\n                    .css({ position: \"relative\" }).append(loadingOverlay);\n            } else {\n                this._container = $(editable).append(loadingOverlay);\n            }\n\n            kendo.ui.progress(this._container, true);\n        },\n\n        _removeLoadingOverlay: function() {\n            kendo.ui.progress(this._container, false);\n            $(this._iframeWrapper).css({\n                position: \"\"\n            });\n\n            delete this._container;\n            delete this._iframeWrapper;\n        }\n    });\n\n    extend(Editor, {\n        ImportCommand: ImportCommand\n    });\n\n    registerTool(\"import\", new Tool({\n        command: ImportCommand,\n        ui: {\n            showText: \"both\"\n        }\n    }));\n\n    }(window.kendo.jQuery));\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            editorNS = kendo.ui.editor,\n            Command = editorNS.Command,\n            GenericCommand = editorNS.GenericCommand,\n            EditorUtils = editorNS.EditorUtils,\n            registerTool = EditorUtils.registerTool,\n            Tool = editorNS.Tool,\n            RestorePoint = editorNS.RestorePoint,\n            extend = $.extend;\n\n    var InsertHtmlCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n\n            this.managesUndoRedo = true;\n        },\n\n        exec: function() {\n            var editor = this.editor;\n            var options = this.options;\n            var range = options.range;\n            var body = editor.body;\n            var startRestorePoint = new RestorePoint(range, body);\n            var html = options.html || options.value || '';\n\n            editor.selectRange(range);\n\n            editor.clipboard.paste(html, options);\n\n            if (options.postProcess) {\n                options.postProcess(editor, editor.getRange());\n            }\n\n            var genericCommand = new GenericCommand(startRestorePoint, new RestorePoint(editor.getRange(), body));\n            genericCommand.editor = editor;\n            editor.undoRedoStack.push(genericCommand);\n\n            editor.focus();\n        }\n    });\n\n    var InsertHtmlTool = Tool.extend({\n        initialize: function(ui, editor) {\n            var options = this.options,\n                dataSource = options.items ? options.items : editor.options.insertHtml,\n                component = ui.getKendoDropDownList();\n\n            if (!component) {\n                return;\n            }\n\n            component.one(\"open\", () => {\n                var optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n                if (optionLabel.length) {\n                    optionLabel.remove();\n                }\n            });\n\n            component.setOptions({\n                dataSource: dataSource,\n                optionLabel: editor.options.messages.insertHtml\n            });\n            component.bind(\"change\", () => {\n                Tool.exec(editor, 'insertHtml', component.value());\n            });\n        },\n\n        command: function(commandArguments) {\n            return new InsertHtmlCommand(commandArguments);\n        },\n\n        update: function(ui) {\n            var component = ui.data(\"kendoDropDownList\");\n            component.close();\n            component.value(null);\n        }\n    });\n\n    extend(editorNS, {\n        InsertHtmlCommand: InsertHtmlCommand,\n        InsertHtmlTool: InsertHtmlTool\n    });\n\n    registerTool(\"insertHtml\", new InsertHtmlTool({\n        ui: {\n            initialValue: \"Insert HTML\",\n            type: \"component\",\n            component: \"DropDownList\",\n            componentOptions: {\n                dataTextField: \"text\",\n                dataValueField: \"value\",\n                autoSize: true,\n                highlightFirst: false\n            },\n            overflow: \"never\"\n        }\n    }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        Command = Editor.Command,\n        Tool = Editor.Tool,\n        registerTool = EditorUtils.registerTool,\n        defaultExportAsItems = [\n            { text: 'Docx', value: 'docx' },\n            { text: 'Rtf', value: 'rtf' },\n            { text: 'Pdf', value: 'pdf' },\n            { text: 'Html', value: 'html' },\n            { text: 'Plain Text', value: 'txt' }\n        ];\n\n    var ExportAsCommand = Command.extend({\n        init: function(options) {\n            var cmd = this;\n            cmd.options = options;\n            Command.fn.init.call(cmd, options);\n            cmd.attributes = null;\n            cmd.exportType = options.exportType;\n        },\n\n        exec: function() {\n            var cmd = this;\n            var range = this.lockRange(true);\n            cmd.postToProxy();\n            cmd.releaseRange(range);\n        },\n\n        postToProxy: function() {\n            this.generateForm().appendTo('body').submit().remove();\n        },\n\n        generateForm: function() {\n            var cmd = this;\n            var exportAsOptions = cmd.editor.options.exportAs;\n            var form = $('<form>').attr({\n                action: exportAsOptions && exportAsOptions.proxyURL || \"\",\n                method: 'POST'\n            });\n\n            form.append([\n                cmd.valueInput(),\n                cmd.exportTypeInput(),\n                cmd.fileNameInput(),\n                cmd.antiForgeryInput()\n            ]);\n\n            return form;\n        },\n\n        valueInput: function() {\n            var editor = this.editor;\n            return $('<input>').attr({\n                value: editor.encodedValue(),\n                name: 'value',\n                type: 'hidden'\n            });\n        },\n\n        exportTypeInput: function() {\n            var cmd = this;\n            return $('<input>').attr({\n                value: cmd.exportType,\n                name: 'exportType',\n                type: 'hidden'\n            });\n\n        },\n\n        fileNameInput: function() {\n            var editor = this.editor;\n            var exportAsOptions = editor.options.exportAs;\n            var fileName = exportAsOptions && exportAsOptions.fileName || editor.element.attr(\"id\") || \"editor\";\n            return $('<input>').attr({\n                value: fileName,\n                name: 'fileName',\n                type: 'hidden'\n            });\n        },\n\n        antiForgeryInput: function() {\n            var csrf_param = $(\"meta[name=csrf-param],meta[name=_csrf_header]\").attr(\"content\");\n\n            return $(\"input[name^='__RequestVerificationToken']\").clone()\n                        .add($(\"input[name^='\" + csrf_param + \"']\").clone());\n        }\n    });\n\n    var ExportAsTool = Tool.extend({\n        init: function(options) {\n            var tool = this;\n            Tool.fn.init.call(tool, kendo.deepExtend({}, tool.options, options));\n            tool.type = 'kendoDropDownList';\n        },\n\n        options: {\n            items: defaultExportAsItems\n        },\n\n        command: function(args) {\n            var value = args.value;\n            return new Editor.ExportAsCommand({\n                range: args.range,\n                exportType: value.exportType\n            });\n        },\n\n        initialize: function(ui, editor) {\n            var tool = this,\n                component = ui.getKendoDropDownList();\n\n            tool.editor = editor;\n\n            component.bind(\"change\", this.changeHandler.bind(this));\n        },\n\n        changeHandler: function(e) {\n            this._exec(e.sender.value());\n            e.sender.value(null);\n            e.sender.wrapper.find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n        },\n\n        update: function(ui, editor) {\n            var component = ui.data(\"kendoDropDownList\");\n\n            component.close();\n            component.value(null);\n            ui.closest(\".k-dropdownlist\").find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n        },\n\n        _exec: function(value) {\n            if (value) {\n                Tool.exec(this.editor, this.options.name, { exportType: value } );\n            }\n        },\n\n        destroy: function() {\n            this._ancestor = null;\n        }\n    });\n\n    extend(Editor, {\n        ExportAsTool: ExportAsTool,\n        ExportAsCommand: ExportAsCommand\n    });\n\n    registerTool('exportAs', new ExportAsTool({\n        ui: {\n            type: \"component\",\n            overflow: \"never\",\n            component: \"DropDownList\",\n            componentOptions: {\n                dataTextField: \"text\",\n                dataValueField: \"value\",\n                valuePrimitive: true,\n                value: null,\n                width: \"140px\",\n                highlightFirst: false,\n                autoWidth: true,\n                itemTemplate: (data) => `<span class=\\\"k-link k-menu-link\\\" data-value=\\\"${data.value}\\\">${data.text}</strong></span>`,\n                icon: \"export\",\n                valueTemplate: () => `<span class=\"k-editor-export\">${kendo.ui.icon({ icon: \"export\", iconClass: \"k-button-icon\" })}<span class=\"k-export-tool-text\"></span></span>`\n            }\n        }\n    }));\n\n    }(window.kendo.jQuery));\n\n    (function($, undefined$1) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        EditorUtils = Editor.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Command = Editor.Command,\n        Tool = Editor.Tool,\n        RangeUtils = Editor.RangeUtils,\n        blockElements = dom.blockElements,\n        BlockFormatFinder = Editor.BlockFormatFinder,\n        BlockFormatter = Editor.BlockFormatter;\n\n    function indent(node, value) {\n        var isRtl = $(node).css(\"direction\") == \"rtl\",\n            indentDirection = isRtl ? \"Right\" : \"Left\",\n            property = dom.name(node) != \"td\" ? \"margin\" + indentDirection : \"padding\" + indentDirection;\n        if (value === undefined$1) {\n            return node.style[property] || 0;\n        } else {\n            if (value > 0) {\n                node.style[property] = value + \"px\";\n            } else {\n                node.style[property] = \"\";\n\n                if (!node.style.cssText) {\n                    node.removeAttribute(\"style\");\n                }\n            }\n        }\n    }\n\n    var IndentFormatter = Class.extend({\n        init: function() {\n            this.finder = new BlockFormatFinder([{ tags: dom.blockElements }]);\n        },\n\n        apply: function(nodes) {\n            nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n            var formatNodes = this.finder.findSuitable(nodes),\n                targets = [],\n                i, len, formatNode, parentList, sibling;\n\n            formatNodes = this.mapImmutables(formatNodes);\n\n            if (formatNodes.length) {\n                for (i = 0, len = formatNodes.length; i < len; i++) {\n                    if (dom.is(formatNodes[i], \"li\")) {\n                        if (!$(formatNodes[i]).index()) {\n                            targets.push(formatNodes[i].parentNode);\n                        } else if ($.inArray(formatNodes[i].parentNode, targets) < 0) {\n                            targets.push(formatNodes[i]);\n                        }\n                    } else {\n                        targets.push(formatNodes[i]);\n                    }\n                }\n\n                while (targets.length) {\n                    formatNode = targets.shift();\n                    if (dom.is(formatNode, \"li\")) {\n                        parentList = formatNode.parentNode;\n                        sibling = $(formatNode).prev(\"li\");\n                        var siblingList = sibling.find(\"ul,ol\").last();\n\n                        var nestedList = $(formatNode).children(\"ul,ol\")[0];\n\n                        if (nestedList && sibling[0]) {\n                            if (siblingList[0]) {\n                               siblingList.append(formatNode);\n                               siblingList.append($(nestedList).children());\n                               dom.remove(nestedList);\n                            } else {\n                                sibling.append(nestedList);\n                                nestedList.insertBefore(formatNode, nestedList.firstChild);\n                            }\n                        } else {\n                            nestedList = sibling.children(\"ul,ol\")[0];\n                            if (!nestedList) {\n                                nestedList = dom.create(formatNode.ownerDocument, dom.name(parentList), this.getListTypeAttr(parentList));\n                                sibling.append(nestedList);\n                            }\n\n                            while (formatNode && formatNode.parentNode == parentList) {\n                                nestedList.appendChild(formatNode);\n                                formatNode = targets.shift();\n                            }\n                        }\n                    } else {\n                        var marginLeft = parseInt(indent(formatNode), 10) + 30;\n                        indent(formatNode, marginLeft);\n\n                        for (var targetIndex = 0; targetIndex < targets.length; targetIndex++) {\n                            if ($.contains(formatNode, targets[targetIndex])) {\n                                targets.splice(targetIndex, 1);\n                            }\n                        }\n                    }\n                }\n            } else {\n                var formatter = new BlockFormatter([{ tags: [\"p\"] }], { style: { marginLeft: 30 } });\n\n                formatter.apply(nodes);\n            }\n        },\n\n        getListTypeAttr: function(list) {\n            var type = list.getAttribute(\"type\");\n            var styleType = list.style.listStyleType;\n\n            return type ? { type: type } : { style: { listStyleType: styleType } };\n        },\n\n        mapImmutables: function(nodes) {\n            if (!this.immutables) {\n                return nodes;\n            } else {\n                var immutables = [];\n                return $.map(nodes, function(node) {\n                    var immutable = Editor.Immutables.immutableParent(node);\n                    if (immutable) {\n                        if ($.inArray(immutable, immutables) === -1) {\n                            immutables.push(immutable);\n                        } else {\n                            return null;\n                        }\n                    }\n                    return immutable || node;\n                });\n            }\n        },\n\n        remove: function(nodes) {\n            nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n            var formatNodes = this.finder.findSuitable(nodes),\n                targetNode, i, len, list, listParent, siblings,\n                formatNode, marginLeft;\n\n            formatNodes = this.mapImmutables(formatNodes);\n\n            for (i = 0, len = formatNodes.length; i < len; i++) {\n                formatNode = $(formatNodes[i]);\n\n                if (formatNode.is(\"li\")) {\n                    list = formatNode.parent();\n                    listParent = list.parent();\n                    // listParent will be ul or ol in case of invalid dom - <ul><li></li><ul><li></li></ul></ul>\n                    if (listParent.is(\"li,ul,ol\") && !indent(list[0])) {\n                        // skip already processed nodes\n                        if (targetNode && $.contains(targetNode, listParent[0])) {\n                            continue;\n                        }\n\n                        siblings = formatNode.nextAll(\"li\");\n                        if (siblings.length) {\n                            $(list[0].cloneNode(false)).appendTo(formatNode).append(siblings);\n                        }\n\n                        if (listParent.is(\"li\")) {\n                            formatNode.insertAfter(listParent);\n                        } else {\n                            formatNode.appendTo(listParent);\n                        }\n\n                        if (!list.children(\"li\").length) {\n                            list.remove();\n                        }\n\n                        continue;\n                    } else {\n                        if (targetNode == list[0]) {\n                            // removing format on sibling LI elements\n                            continue;\n                        }\n                        targetNode = list[0];\n                    }\n                } else {\n                    targetNode = formatNodes[i];\n                }\n\n                marginLeft = parseInt(indent(targetNode), 10) - 30;\n                indent(targetNode, marginLeft);\n            }\n        }\n\n    });\n\n    var IndentCommand = Command.extend({\n        init: function(options) {\n            var that = this;\n            options.formatter = /** @ignore */ {\n                toggle: (function(range) {\n                    var indentFormatter = new IndentFormatter();\n                    indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                    indentFormatter.apply(RangeUtils.nodes(range));\n                }).bind(that)\n            };\n            Command.fn.init.call(this, options);\n        }\n    });\n\n    var OutdentCommand = Command.extend({\n        init: function(options) {\n            var that = this;\n            options.formatter = {\n                toggle: (function(range) {\n                    var indentFormatter = new IndentFormatter();\n                    indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                    indentFormatter.remove(RangeUtils.nodes(range));\n                }).bind(that)\n            };\n            Command.fn.init.call(this, options);\n        }\n    });\n\n    var OutdentTool = Tool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n\n            this.finder = new BlockFormatFinder([{ tags: blockElements }]);\n        },\n\n        initialize: function(ui, editor) {\n            $.extend(this.options, {\n                immutables: editor && editor.options.immutables\n            });\n        },\n\n        update: function(ui, nodes) {\n            var suitableNodes = this.finder.findSuitable(nodes),\n                toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\"),\n                isOutdentable, listParentsCount, i, len, suitable, immutableParent;\n\n            for (i = 0, len = suitableNodes.length; i < len; i++) {\n                suitable = suitableNodes[i];\n\n                if (this.options.immutables) {\n                    immutableParent = Editor.Immutables.immutableParent(suitable);\n\n                    if (immutableParent) {\n                        suitable = immutableParent;\n                    }\n                }\n\n                isOutdentable = indent(suitable);\n\n                if (!isOutdentable) {\n                    listParentsCount = $(suitable).parents(\"ul,ol\").length;\n                    isOutdentable = (dom.is(suitable, \"li\") && (listParentsCount > 1 || indent(suitable.parentNode))) ||\n                                    (dom.ofType(suitable, [\"ul\",\"ol\"]) && listParentsCount > 0);\n                }\n\n                if (isOutdentable) {\n                    toolbar.enable(ui, true);\n                    return;\n                }\n            }\n\n            toolbar.enable(ui, false);\n        }\n    });\n\n    extend(Editor, {\n        IndentFormatter: IndentFormatter,\n        IndentCommand: IndentCommand,\n        OutdentCommand: OutdentCommand,\n        OutdentTool: OutdentTool\n    });\n\n    registerTool(\"indent\", new Tool({ command: IndentCommand }));\n    registerTool(\"outdent\", new OutdentTool({ command: OutdentCommand, ui: { enable: false } }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        extend = $.extend,\n        editorNS = kendo.ui.editor,\n        dom = editorNS.Dom,\n        Command = editorNS.Command,\n        Tool = editorNS.Tool,\n        BlockFormatter = editorNS.BlockFormatter,\n        normalize = dom.normalize,\n        RangeUtils = editorNS.RangeUtils,\n        registerTool = editorNS.EditorUtils.registerTool;\n\n    var ParagraphCommand = Command.extend({\n        init: function(options) {\n            this.options = options;\n            Command.fn.init.call(this, options);\n        },\n\n        _insertMarker: function(doc, range) {\n            var marker = dom.create(doc, 'a'), container;\n            marker.className = \"k-marker\";\n\n            range.insertNode(marker);\n\n            if (!marker.parentNode) {\n                // inserting paragraph in Firefox full body range\n                container = range.commonAncestorContainer;\n                container.innerHTML = \"\";\n                container.appendChild(marker);\n            }\n\n            normalize(marker.parentNode);\n\n            return marker;\n        },\n\n        _moveFocus: function(range, candidate) {\n            if (dom.isEmpty(candidate)) {\n                range.setStartBefore(candidate);\n            } else {\n                range.selectNodeContents(candidate);\n\n                var focusNode = RangeUtils.textNodes(range)[0];\n\n                if (!focusNode) {\n                    while (candidate.childNodes.length && !dom.is(candidate.firstChild, \"br\")) {\n                        candidate = candidate.firstChild;\n                    }\n\n                    focusNode = candidate;\n                }\n\n                if (dom.isEmpty(focusNode)) {\n                    range.setStartBefore(focusNode);\n                } else {\n                    if (dom.emptyNode(focusNode)) {\n                        focusNode.innerHTML = \"\\ufeff\";\n                    }\n                    var startNode = focusNode.firstChild || focusNode;\n                    if (dom.isDataNode(startNode)) {\n                        range.setStart(startNode, 0);\n                    } else {\n                        range.setStartBefore(startNode);\n                    }\n                }\n            }\n        },\n\n        shouldTrim: function(range) {\n            var blocks = 'p,h1,h2,h3,h4,h5,h6'.split(','),\n                startInBlock = dom.parentOfType(range.startContainer, blocks),\n                endInBlock = dom.parentOfType(range.endContainer, blocks);\n            return (startInBlock && !endInBlock) || (!startInBlock && endInBlock);\n        },\n\n        _blankAfter: function(node) {\n            while (node && (dom.isMarker(node) || dom.stripBom(node.nodeValue) === \"\")) {\n                node = node.nextSibling;\n            }\n\n            return !node;\n        },\n\n        exec: function() {\n            var range = this.getRange(),\n                doc = RangeUtils.documentFromRange(range),\n                parent, previous, next,\n                emptyParagraphContent = editorNS.emptyElementContent,\n                paragraph, marker, li, heading, tableNode, rng,\n                shouldTrim;\n\n            this.expandImmutablesIn(range);\n\n            shouldTrim = this.shouldTrim(range);\n\n            range.deleteContents();\n            marker = this._insertMarker(doc, range);\n\n            dom.stripBomNode(marker.previousSibling);\n            dom.stripBomNode(marker.nextSibling);\n\n            li = dom.closestEditableOfType(marker, ['li']);\n            heading = dom.closestEditableOfType(marker, 'h1,h2,h3,h4,h5,h6'.split(','));\n            tableNode = dom.is(marker.parentNode, 'table') && marker.parentNode;\n\n            if (li) {\n                // hitting 'enter' in empty li\n                if (dom.emptyNode(li)) {\n                    paragraph = dom.create(doc, 'p');\n\n                    if (dom.next(li)) {\n                        rng = range.cloneRange();\n                        rng.selectNode(li);\n\n                        RangeUtils.split(rng, li.parentNode);\n                    }\n\n                    var br = $(\"br\", li);\n                    if (br.length == 1) {\n                        br.remove();\n                    }\n\n                    var parentNode = li.parentNode;\n                    var parentChildrenLength = li.parentNode.children.length;\n                    var firstChild = parentChildrenLength > 1 && li.childNodes.length == 1 && li.children[0];\n\n                    dom.insertAfter(paragraph, parentNode);\n                    dom.remove(parentChildrenLength == 1 ? li.parentNode : li);\n\n                    if (firstChild && firstChild !== marker) {\n                        paragraph.appendChild(firstChild);\n                        paragraph.appendChild(marker);\n                    } else {\n                        paragraph.innerHTML = emptyParagraphContent;\n                    }\n                    next = paragraph;\n                }\n            } else if (heading && this._blankAfter(marker)) {\n                paragraph = this._insertParagraphAfter(heading);\n                dom.remove(marker);\n                next = paragraph;\n            } else if (tableNode) {\n                paragraph = this._insertParagraphAfter(tableNode);\n                dom.remove(marker);\n                next = paragraph;\n            }\n\n            if (!next) {\n                if (!(li || heading)) {\n                    new BlockFormatter([{ tags: ['p'] }]).apply([marker]);\n                }\n\n                range.selectNode(marker);\n\n                parent = dom.parentOfType(marker, [li ? 'li' : heading ? dom.name(heading) : 'p']);\n\n                RangeUtils.split(range, parent, shouldTrim);\n\n                previous = parent.previousSibling;\n\n                if (dom.is(previous, 'li') && previous.firstChild && !dom.is(previous.firstChild, 'br')) {\n                    previous = previous.firstChild;\n                }\n\n                next = parent.nextSibling;\n\n                this.clean(previous, { links: true });\n                this.clean(next, { links: true });\n\n                if (dom.is(next, 'li') && next.firstChild && !dom.is(next.firstChild, 'br')) {\n                    next = next.firstChild;\n                }\n\n                dom.remove(parent);\n\n                // normalize updates the caret display in Gecko\n                normalize(previous);\n            }\n\n            normalize(next);\n\n            this._moveFocus(range, next);\n\n            range.collapse(true);\n\n            dom.scrollTo(next, true);\n\n            RangeUtils.selectRange(range);\n        },\n\n        _insertParagraphAfter: function(node) {\n            var range = this.getRange();\n            var doc = RangeUtils.documentFromRange(range);\n            var emptyElementContent = editorNS.emptyElementContent;\n            var paragraph = dom.create(doc, 'p');\n\n            dom.insertAfter(paragraph, node);\n            paragraph.innerHTML = emptyElementContent;\n\n            return paragraph;\n        },\n\n        clean: function(node, options) {\n            var root = node;\n\n            if (node.firstChild && dom.is(node.firstChild, 'br')) {\n                dom.remove(node.firstChild);\n            }\n\n            if (dom.isDataNode(node) && !node.nodeValue) {\n                node = node.parentNode;\n            }\n\n            if (node) {\n                var siblings = false;\n                while (node.firstChild && node.firstChild.nodeType == 1) {\n                    siblings = siblings || (dom.significantNodes(node.childNodes).length > 1);\n                    node = node.firstChild;\n                }\n\n                if (!dom.isEmpty(node) && node.className != \"k-br\" && /^\\s*$/.test(node.innerHTML) && !siblings) {\n                    $(root).find(\".k-br\").remove();\n                    node.innerHTML = editorNS.emptyElementContent;\n                }\n\n                if (options && options.links) {\n                    while (node != root) {\n                        if (dom.is(node, \"a\") && dom.emptyNode(node)) {\n                            dom.unwrap(node);\n                            break;\n                        }\n                        node = node.parentNode;\n                    }\n                }\n            }\n        }\n    });\n\n    var NewLineCommand = Command.extend({\n        init: function(options) {\n            this.options = options;\n            Command.fn.init.call(this, options);\n        },\n\n        exec: function() {\n            var range = this.getRange();\n            this.expandImmutablesIn(range);\n\n            var br = dom.create(RangeUtils.documentFromRange(range), 'br');\n            var node = range.startContainer;\n            var filler;\n            var browser = kendo.support.browser;\n            var oldIE = browser.msie && browser.version < 11;\n            var tableNode = dom.is(node, 'table') && node;\n            var kbrParent;\n\n            range.deleteContents();\n            if (tableNode) {\n                dom.insertAfter(br, tableNode);\n            } else {\n                kbrParent = $(node).closest('.k-br');\n                range.insertNode(br);\n\n                if (kbrParent.length) {\n                    // pressing enter in an k-br node\n                    dom.unwrap(kbrParent[0]);\n                }\n            }\n\n            normalize(br.parentNode);\n\n            if (!oldIE && (!br.nextSibling || dom.isWhitespace(br.nextSibling))) {\n                // Gecko and WebKit cannot put the caret after only one br.\n                if (!!br.nextSibling && dom.isWhitespace(br.nextSibling)) {\n                    $(br.nextSibling).remove();\n                }\n                filler = br.cloneNode(true);\n                filler.className = 'k-br';\n                dom.insertAfter(filler, br);\n            }\n\n            range.setStartAfter(br);\n            range.collapse(true);\n\n            dom.scrollTo(br.nextSibling || br, true);\n\n            RangeUtils.selectRange(range);\n        }\n    });\n\n    extend(editorNS, {\n        ParagraphCommand: ParagraphCommand,\n        NewLineCommand: NewLineCommand\n    });\n\n    registerTool(\"insertLineBreak\", new Tool({ key: 13, shift: true, command: NewLineCommand }));\n    registerTool(\"insertParagraph\", new Tool({ key: 13, command: ParagraphCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        dom = Editor.Dom,\n        registerTool = EditorUtils.registerTool,\n        RangeUtils = Editor.RangeUtils,\n        Command = Editor.Command,\n        LinkFormatter = Editor.LinkFormatter,\n        textNodes = RangeUtils.textNodes,\n        keys = kendo.keys,\n        KEDITORFILEURL = \"#k-editor-file-url\",\n        KEDITORFILETEXT = \"#k-editor-file-text\",\n        KEDITORFILETITLE = \"#k-editor-file-title\";\n\n    var FileCommand = Command.extend({\n        init: function(options) {\n            var that = this;\n            Command.fn.init.call(that, options);\n\n            that.formatter = new LinkFormatter();\n\n            that.async = true;\n            that.attributes = {};\n        },\n\n        insertFile: function(file, range) {\n            var attributes = this.attributes;\n            var doc = RangeUtils.documentFromRange(range);\n\n            if (attributes.href && attributes.href != \"http://\") {\n\n                if (!file) {\n                    file = dom.create(doc, \"a\", { href: attributes.href });\n                    file.innerHTML = attributes.innerHTML;\n                    file.title = attributes.title;\n\n                    range.deleteContents();\n                    range.insertNode(file);\n\n                    if (!file.nextSibling) {\n                        dom.insertAfter(doc.createTextNode(\"\\ufeff\"), file);\n                    }\n\n                    range.setStartAfter(file);\n                    range.setEndAfter(file);\n                    RangeUtils.selectRange(range);\n                    return true;\n                } else {\n                    dom.attr(file, attributes);\n                }\n            }\n\n            return false;\n        },\n\n        redo: function() {\n            var that = this,\n                range = that.lockRange();\n\n            this.formatter.apply(range, this.attributes);\n            that.releaseRange(range);\n        },\n\n        exec: function() {\n            var that = this,\n                range = that.lockRange(),\n                nodes = textNodes(range),\n                applied = false,\n                file = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null,\n                dialog,\n                form,\n                isIE = kendo.support.browser.msie,\n                options = that.editor.options,\n                messages = options.messages,\n                fileBrowser = options.fileBrowser,\n                showBrowser = !!(kendo.ui.FileBrowser && fileBrowser && fileBrowser.transport && fileBrowser.transport.read !== undefined$1),\n                dialogOptions = {\n                    title: messages.insertFile,\n                    visible: false,\n                    resizable: showBrowser\n                };\n\n            this.expandImmutablesIn(range);\n\n            function apply(e) {\n                var element = dialog.element,\n                    href = element.find(KEDITORFILEURL).val().replace(/ /g, \"%20\"),\n                    innerHTML = element.find(KEDITORFILETEXT).val(),\n                    title = element.find(KEDITORFILETITLE).val();\n\n                that.attributes = {\n                    href: href,\n                    innerHTML: innerHTML !== \"\" ? innerHTML : href,\n                    title: title\n                };\n\n                applied = that.insertFile(file, range);\n\n                close(e);\n\n                if (that.change) {\n                    that.change();\n                }\n            }\n\n            function close(e) {\n                e.preventDefault();\n                form.destroy();\n                dialog.destroy();\n\n                dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n                if (!applied) {\n                    that.releaseRange(range);\n                }\n            }\n\n            function keyDown(e) {\n                if (e.keyCode == keys.ENTER) {\n                    apply(e);\n                } else if (e.keyCode == keys.ESC) {\n                    close(e);\n                }\n            }\n\n            dialogOptions.close = close;\n\n            if (showBrowser) {\n                dialogOptions.width = 750;\n            }\n            dialogOptions.minWidth = 350;\n\n            dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n            form = that._createForm(dialog, showBrowser);\n\n            dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n            dialog.wrapper\n            .find(\".k-dialog-insert\").on(\"click\", apply).end()\n            .find(\".k-dialog-close\").on(\"click\", close).end()\n            .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n            // IE < 8 returns absolute url if getAttribute is not used\n            .find(KEDITORFILEURL).val(file ? file.getAttribute(\"href\", 2) : \"http://\").end()\n            .find(KEDITORFILETEXT).val(file ? file.innerText : \"\").end()\n            .find(KEDITORFILETITLE).val(file ? file.title : \"\").end();\n\n            var element = dialog.element;\n            if (showBrowser) {\n                that._fileBrowser = new kendo.ui.FileBrowser(\n                    element.find(\".k-filebrowser\"),\n                    extend({}, fileBrowser)\n                );\n\n                that._fileBrowser.bind(\"change\", function(ev) {\n                    if (ev.selected.get(\"type\") === \"f\") {\n                        element.find(KEDITORFILEURL).val(this.value());\n                    }\n                } );\n\n                that._fileBrowser.bind(\"apply\", apply);\n            }\n\n            if (isIE) {\n                var dialogHeight = element.closest(\".k-window\").height();\n                element.css(\"max-height\", dialogHeight);\n            }\n            dialog.center().open();\n            element.find(KEDITORFILEURL).trigger(\"focus\").select();\n        },\n\n        _createForm: function(dialog, showBrowser) {\n            var that = this;\n            var formElement = $(\"<div/>\").appendTo(dialog.element);\n            var messages = that.editor.options.messages;\n\n            var form = formElement.kendoForm({\n                renderButtons: false,\n                items: [\n                    {\n                        field: \"k-editor-file-url\",\n                        label: encode(messages.fileWebAddress),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-file-text\",\n                        label: encode(messages.fileText),\n                        editor: \"TextBox\"\n                    },\n                    {\n                        field: \"k-editor-file-title\",\n                        label: encode(messages.fileTitle),\n                        editor: \"TextBox\"\n                    }\n                ]\n            }).data(\"kendoForm\");\n\n            if (showBrowser) {\n                formElement.prepend($('<div class=\"k-filebrowser\"></div>'));\n            }\n\n            dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"file-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n            return form;\n        }\n\n    });\n\n    kendo.ui.editor.FileCommand = FileCommand;\n\n    registerTool(\"insertFile\", new Editor.Tool({ command: FileCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        RangeUtils = Editor.RangeUtils,\n        Command = Editor.Command,\n\n        NS = \"kendoEditor\",\n        ACTIVESTATE = \"k-active\",\n        SELECTEDSTATE = \"k-selected\",\n        SCOPE = \"scope\",\n        ROW = \"row\",\n        COL = \"col\",\n        ROWGROUP = \"rowgroup\",\n        COLGROUP = \"colgroup\",\n        COLSPAN = \"colspan\",\n        ROWSPAN = \"rowspan\",\n        TABLE = \"table\",\n        THEAD = \"thead\",\n        TBODY = \"tbody\",\n        TR = \"tr\",\n        TD = \"td\",\n        TH = \"th\",\n\n        Tool = Editor.Tool,\n        InsertHtmlCommand = Editor.InsertHtmlCommand,\n        BlockFormatFinder = Editor.BlockFormatFinder,\n        BlockFormatTool = Editor.BlockFormatTool,\n        FormatCommand = Editor.FormatCommand,\n        registerTool = Editor.EditorUtils.registerTool,\n        registerFormat = Editor.EditorUtils.registerFormat,\n        formats = kendo.ui.Editor.fn.options.formats,\n        getTouches = kendo.getTouches;\n    var template = kendo.template;\n\n    var columnTemplate = ({ width, content }) => `<td style=\"width:${width}%;\">${content}</td>`;\n\n    var tableFormatFinder = new BlockFormatFinder([{ tags: [TABLE] }]);\n\n    var TableCommand = InsertHtmlCommand.extend({\n        init: function(options) {\n            var o = $.extend({\n                postProcess: this.postProcess,\n                skipCleaners: true\n            }, options || {});\n\n            InsertHtmlCommand.fn.init.call(this, o);\n        },\n        _tableHtml: function(rows, columns) {\n            rows = rows || 1;\n            columns = columns || 1;\n            var columnHtml = template(columnTemplate)({ width: 100 / columns, content: Editor.emptyTableCellContent });\n            var rowHeight = 100 / rows;\n\n            return \"<table class='k-table' data-last>\" +\n                        new Array(rows + 1).join(\n                        \"<tr style='height:\" + rowHeight + \"%;'>\" +\n                            new Array(columns + 1).join(columnHtml) +\n                        \"</tr>\") +\n                   \"</table>\";\n        },\n\n        postProcess: function(editor, range) {\n            var insertedTable = $(\"table[data-last]\", editor.document).removeAttr(\"data-last\");\n\n            range.setStart(insertedTable.find(TD)[0], 0);\n            range.collapse(true);\n\n            editor.selectRange(range);\n        },\n\n        exec: function() {\n            var options = this.options;\n            options.html = this._tableHtml(options.rows, options.columns);\n\n            InsertHtmlCommand.fn.exec.call(this);\n        }\n    });\n\n    var PopupTool = Tool.extend({\n        initialize: function(ui, editor) {\n            var that = this;\n            var btn = $(\"<button>\" + editor.options.messages.tableWizard + \"</button>\");\n            var popup = $(this.options.popupTemplate).appendTo(\"body\").kendoPopup({\n                anchor: ui,\n                copyAnchorStyles: false,\n                open: this._open.bind(this),\n                activate: this._activate.bind(this),\n                close: this._close.bind(this)\n            }).data(\"kendoPopup\");\n\n            ui.on(\"click\", this._toggle.bind(this))\n              .on(\"keydown\", this._keydown.bind(this));\n\n            this._editor = editor;\n            this._popup = popup;\n\n            editor.tablePopup = this._popup;\n\n            var tableWizard = new Editor.TableWizardTool({\n                command: Editor.TableWizardCommand,\n                insertNewTable: true\n            });\n\n            registerTool(\"tableWizardInsert\", tableWizard);\n\n            btn.appendTo(popup.element);\n            btn.kendoButton({\n                icon: \"table-wizard\"\n            });\n\n            btn.on(\"click\", () => {\n                that._editor.exec(\"tableWizardInsert\");\n            });\n        },\n\n        popup: function() {\n            return this._popup;\n        },\n\n        _activate: $.noop,\n\n        _open: function() {\n            this._popup.options.anchor.addClass(ACTIVESTATE);\n        },\n\n        _close: function() {\n            this._popup.options.anchor.removeClass(ACTIVESTATE);\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                keys = kendo.keys,\n                key = e.keyCode;\n\n            if (key == keys.ESC) {\n                that._popup.close();\n            } else if (key == keys.DOWN && e.altKey) {\n                that._popup.open();\n                that._setTableSize({ row: 1, col: 1 });\n            } else if (key === keys.ENTER) {\n                setTimeout(() => {\n                    that._setTableSize({ row: 1, col: 1 });\n                });\n            }\n        },\n\n        _toggle: function(e) {\n            var button = $(e.target).closest(\".k-tool\");\n\n            if (!button.hasClass(\"k-disabled\")) {\n                this.popup().toggle();\n            }\n        },\n\n        update: function(ui) {\n            var popup = this.popup();\n\n            if (popup.wrapper && popup.wrapper.css(\"display\") == \"block\") {\n                popup.close();\n            }\n\n            ui.removeClass(\"k-hover\");\n        },\n\n        destroy: function() {\n            if (this._popup) {\n                this._popup.destroy();\n            }\n        }\n    });\n\n    var InsertTableTool = PopupTool.extend({\n        init: function(options) {\n            this.cols = 8;\n            this.rows = 6;\n\n            PopupTool.fn.init.call(this, $.extend(options, {\n                command: TableCommand,\n                popupTemplate:\n                    \"<div class='k-ct-popup'>\" +\n                        \"<div>\" +\n                            new Array(this.cols * this.rows + 1).join(\"<span class='k-ct-cell k-disabled'></span>\") +\n                        \"</div>\" +\n                        \"<div class='k-status'></div>\" +\n                    \"</div>\"\n            }));\n        },\n\n        _activate: function() {\n            var that = this,\n                element = that._popup.element,\n                cells = element.find(\".k-ct-cell\"),\n                firstCell = cells.eq(0),\n                lastCell = cells.eq(cells.length - 1),\n                start = kendo.getOffset(firstCell),\n                end = kendo.getOffset(lastCell),\n                cols = that.cols,\n                rows = that.rows,\n                cellWidth, cellHeight;\n\n            element.find(\"*\").addBack().attr(\"unselectable\", \"on\");\n\n            end.left += lastCell[0].offsetWidth;\n            end.top += lastCell[0].offsetHeight;\n\n            cellWidth = (end.left - start.left) / cols;\n            cellHeight = (end.top - start.top) / rows;\n\n            function tableFromLocation(e) {\n                var w = $(window);\n                return {\n                    row: Math.floor((e.clientY + w.scrollTop() - start.top) / cellHeight) + 1,\n                    col: Math.floor((e.clientX + w.scrollLeft() - start.left) / cellWidth) + 1\n                };\n            }\n\n            element.autoApplyNS(NS)\n                .on(\"mousemove\", \".k-ct-cell\", function(e) {\n                    that._setTableSize(tableFromLocation(e));\n                })\n                .on(\"mouseleave\", \".k-ct-cell\", function() {\n                    that._setTableSize();\n                })\n                .on(\"down\", \".k-ct-cell\", function(e) {\n                    e.preventDefault();\n                    var touch = getTouches(e)[0];\n                    that._exec(tableFromLocation(touch.location));\n                });\n        },\n\n        _valid: function(size) {\n            return size && size.row > 0 && size.col > 0 && size.row <= this.rows && size.col <= this.cols;\n        },\n\n        _exec: function(size) {\n            if (this._valid(size)) {\n                this._editor.exec(\"createTable\", {\n                    rows: size.row,\n                    columns: size.col\n                });\n                this._popup.close();\n            }\n        },\n\n        _setTableSize: function(size) {\n            var element = this._popup.element;\n            var status = element.find(\".k-status\");\n            var cells = element.find(\".k-ct-cell\");\n            var cols = this.cols;\n            var messages = this._editor.options.messages;\n\n            if (this._valid(size)) {\n                status.text(kendo.format(messages.createTableHint, size.row, size.col));\n\n                cells.each(function(i) {\n                    $(this).toggleClass(\n                        SELECTEDSTATE,\n                        i % cols < size.col && i / cols < size.row\n                    );\n                });\n            } else {\n                status.text(messages.createTable);\n                cells.removeClass(SELECTEDSTATE);\n            }\n        },\n\n        _keydown: function(e) {\n            var initiallyVisible = this._popup.visible();\n\n            PopupTool.fn._keydown.call(this, e);\n\n            if (!this._popup.visible()) {\n                return;\n            }\n\n            var keys = kendo.keys;\n            var key = e.keyCode;\n            var cells = this._popup.element.find(\".k-ct-cell\");\n            var focus = Math.max(cells.filter(\".k-selected\").last().index(), 0);\n            var selectedRows = Math.floor(focus / this.cols);\n            var selectedColumns = focus % this.cols;\n\n            var changed = false,\n                button;\n\n            if (key == keys.DOWN && !e.altKey) {\n                changed = true;\n                selectedRows++;\n            } else if (key == keys.UP) {\n                changed = true;\n                selectedRows--;\n            } else if (key == keys.RIGHT) {\n                changed = true;\n                selectedColumns++;\n            } else if (key == keys.LEFT) {\n                changed = true;\n                selectedColumns--;\n            } else if (key == keys.TAB) {\n                button = this._popup.element.find(\".k-button\");\n\n                if (button.length > 0) {\n                    changed = true;\n                    button.trigger(\"focus\");\n                }\n            }\n\n            var tableSize = {\n                row: Math.max(1, Math.min(this.rows, selectedRows + 1)),\n                col: Math.max(1, Math.min(this.cols, selectedColumns + 1))\n            };\n\n            if (key == keys.ENTER && initiallyVisible) {\n                this._exec(tableSize);\n            } else {\n                this._setTableSize(tableSize);\n            }\n\n            if (changed) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            }\n        },\n\n        _open: function() {\n            var messages = this._editor.options.messages;\n\n            PopupTool.fn._open.call(this);\n\n            this.popup().element\n                .find(\".k-status\").text(messages.createTable).end()\n                .find(\".k-ct-cell\").removeClass(SELECTEDSTATE);\n        },\n\n        _close: function() {\n            PopupTool.fn._close.call(this);\n            this.popup().element.off(\".\" + NS);\n        }\n    });\n\n    var TableModificationCommand = Command.extend({\n        undo: function() {\n            var point = this.restorePoint;\n            point.restoreHtml();\n\n            $(this.editor.body).find(\".k-element-resize-handle-wrapper\")\n                .each(function(index,el) {\n                    el.remove();\n                });\n\n            this.editor.selectRange(point.toRange());\n        },\n        _clearColIndexAttr: function(table) {\n            dom.clearTableMappings(table, \"col-index\");\n        },\n        _mapColIndices: function(table) {\n            dom.reMapTableColumns(table, \"col-index\");\n        },\n        _findRowSpanCell: function(parent, rowIndex, colIndex) {\n            var row, cell;\n\n            for (var i = rowIndex; i >= 0; i--) {\n                row = parent.rows[i];\n                cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n                if (cell.length) {\n                    return cell;\n                }\n            }\n        },\n        _resetElementResizing: function(editor) {\n            editor._destroyResizings();\n            editor._initializeColumnResizing();\n            editor._initializeRowResizing();\n            editor._initializeElementResizing();\n        },\n        _findNextTdInRow: function(row, colIndex) {\n            var lastTd = row.find(\"td:last-child\"),\n                lastIndex = parseInt(lastTd.attr(\"col-index\"), 10) + lastTd.prop(\"colSpan\") - 1,\n                td;\n\n            for (var i = colIndex; i <= lastIndex; i++) {\n                td = row.find(\"[col-index=\" + i + \"]\");\n                if (td.length) {\n                    return td;\n                }\n            }\n        },\n        _adjustColgroups: function(row, table) {\n            var colElements = table.getElementsByTagName(COL),\n                colgroupElements = table.getElementsByTagName(COLGROUP),\n                cells = row.cells,\n                numberOfCells = cells.length,\n                i, colgroup, cell;\n\n            while (colElements.length > 0) {\n                colElements[0].remove();\n            }\n            while (colgroupElements.length > 0) {\n                colgroupElements[0].remove();\n            }\n\n            for (i = numberOfCells - 1; i >= 0; i--) {\n                cell = cells[i];\n                if (cell.getAttribute(SCOPE) === COLGROUP) {\n                    colgroup = dom.createEmptyNode(this.editor.document, COLGROUP);\n                    colgroup.setAttribute(\"span\", cell.getAttribute(COLSPAN));\n                    table.prepend(colgroup);\n                } else {\n                    table.prepend(dom.createEmptyNode(this.editor.document, COL));\n                }\n            }\n        },\n        _associateHeaderIds: function(table) {\n            dom.clearTableMappings(table, \"col-index\");\n            dom.reMapTableColumns(table, \"col-index\");\n            $(table).find(\"th, td\").removeAttr(\"id headers\");\n            dom.associateWithIds(table);\n        },\n        _getNumberOfColumns: function(table) {\n            return dom._getNumberOfColumns(table, \"td, th\");\n        }\n    });\n\n    var InsertRowCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(true),\n                td = dom.closest(range.endContainer, [TD, TH]),\n                table = dom.closest(td, TABLE),\n                position = this.options.position || \"after\",\n                cellCount, row, cell,\n                newRow, rowIndex, rowSpanIndex, createdCell;\n\n            if (!table || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            row = td.parentNode;\n            rowIndex = dom.findNodeIndex(row, true);\n\n            if (td.rowSpan > 1 && position === \"after\") {\n                row = table.rows[rowIndex + td.rowSpan - 1];\n            }\n\n            cellCount = this._getNumberOfColumns(table);\n            newRow = row.cloneNode(true);\n            $(newRow).empty();\n\n            for (var i = 0; i < cellCount; i = i + cell.prop(\"colSpan\")) {\n                cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n                if (cell.length) {\n                    if (cell.prop(\"rowSpan\") > 1 && position === \"after\" && cell) {\n                        cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                    } else {\n                        this._appendCell(newRow, cell);\n                    }\n                } else {\n                    rowIndex = dom.findNodeIndex(row, true);\n                    cell = this._findRowSpanCell(row.parentElement, rowIndex, i);\n                    rowSpanIndex = cell.closest(TR).index();\n\n                    if (rowSpanIndex + cell.prop(\"rowSpan\") - 1 === rowIndex && position === \"after\") {\n                        this._appendCell(newRow, cell);\n                    } else {\n                        cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                    }\n                }\n\n                createdCell = $(newRow).find(\"[col-index=\" + i + \"]\");\n                if (createdCell.attr(SCOPE) === ROWGROUP && !createdCell.attr(ROWSPAN)) {\n                    createdCell.attr(SCOPE, ROW);\n                }\n            }\n\n            if (position == \"before\") {\n                dom.insertBefore(newRow, row);\n            } else {\n                dom.insertAfter(newRow, row);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n\n            this._resetElementResizing(this.editor);\n        },\n        _appendCell: function(row, cell) {\n            var newCell;\n\n            newCell = cell.clone();\n            newCell.html(Editor.emptyTableCellContent);\n            newCell.removeAttr(ROWSPAN);\n            newCell.appendTo(row);\n        }\n    });\n\n    var InsertColumnCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(true),\n                td = dom.closest(range.endContainer, [TD, TH]),\n                table = dom.closest(td, TABLE),\n                colElements = table.getElementsByTagName(COL),\n                colgroupElements = table.getElementsByTagName(COLGROUP),\n                columnIndex,\n                i,\n                rows = table && table.rows,\n                cell,\n                newCell,\n                position = this.options.position || \"after\";\n\n\n            if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            columnIndex = parseInt(td.getAttribute(\"col-index\"),10);\n\n            if (td.colSpan > 1 && position === \"after\") {\n                td.setAttribute(\"col-index\", columnIndex + td.colSpan - 1);\n                columnIndex = columnIndex + td.colSpan - 1;\n            }\n\n            for (i = 0; i < rows.length; i++) {\n                cell = this._processForColSpan(rows[i], columnIndex, position, td);\n\n                if (!cell) {\n                    continue;\n                }\n\n                newCell = cell.cloneNode();\n                newCell.innerHTML = Editor.emptyTableCellContent;\n                newCell.removeAttribute(COLSPAN);\n\n                if (newCell.getAttribute(SCOPE) && newCell.getAttribute(SCOPE) === COLGROUP) {\n                    newCell.setAttribute(SCOPE, COL);\n                }\n\n                if (position == \"before\") {\n                    dom.insertBefore(newCell, cell);\n                } else {\n                    dom.insertAfter(newCell, cell);\n                }\n\n                this._resizeCells(newCell, cell);\n            }\n\n            if (colElements.length > 0 || colgroupElements.length > 0) {\n                this._adjustColgroups(rows[0], table);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n\n            this._resetElementResizing(this.editor);\n        },\n        _processForColSpan: function(row, columnIndex, position, selectedCell) {\n            var cell,\n                colSpanEffect,\n                index = columnIndex - 1;\n\n            cell = $(row).find(\"[col-index=\" + columnIndex + \"]\")[0];\n\n            if (cell && cell.colSpan > 1 && position === \"after\" && cell !== selectedCell) {\n                cell.colSpan += 1;\n                return;\n            }\n\n            if (cell) {\n                return cell;\n            }\n\n            for (index; index >= 0; index--) {\n                cell = $(row).find(\"[col-index=\" + index + \"]\")[0];\n\n                if (cell && cell.colSpan > 1) {\n                    break;\n                }\n            }\n\n            if (!cell) {\n                return;\n            }\n\n            colSpanEffect = parseInt(cell.getAttribute(\"col-index\"),10) + cell.colSpan - 1;\n\n            if (colSpanEffect === columnIndex && position === \"after\") {\n                return cell;\n            } else if (columnIndex <= colSpanEffect) {\n                cell.setAttribute(COLSPAN, cell.colSpan + 1);\n            }\n        },\n        _resizeCells: function(newCell, cell) {\n            var width = newCell.style.width,\n            parsedWidth, unit, calculatedWidth;\n\n            if (!width) {\n                return;\n            }\n\n            parsedWidth = parseFloat(width);\n            unit = width.slice(parsedWidth.toString().length);\n            calculatedWidth = (parsedWidth / 2) + unit;\n\n            newCell.style.width = calculatedWidth;\n            cell.style.width = calculatedWidth;\n        }\n    });\n\n    var DeleteRowCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange();\n            var rows = RangeUtils.mapAll(range, function(node) {\n                return $(node).closest(TR)[0];\n            });\n            var td = dom.closest(range.endContainer, [TD, TH]);\n            var row = rows[0];\n            var rowSpan = td ? td.rowSpan : 1;\n            var rowIndex = $(rows[0]).index();\n            var table = dom.closest(row, TABLE);\n            var rowParent = row.parentElement;\n            var focusElement;\n\n            if (!table || (this.immutables() && Editor.Immutables.immutableParent(row))) {\n                this.releaseRange(range);\n                return;\n            }\n\n            for (var x = 0; x < rowSpan; x++) {\n                if (rows.indexOf(rowParent.rows[rowIndex + x]) < 0) {\n                    rows.push(rowParent.rows[rowIndex + x]);\n                }\n            }\n\n            if (table.rows.length <= rows.length) {\n                focusElement = dom.next(table);\n                if (!focusElement || dom.insignificant(focusElement)) {\n                    focusElement = dom.prev(table);\n                }\n\n                if (focusElement && focusElement.rows) {\n                    focusElement = focusElement.rows[0].cells[0];\n                }\n\n                dom.remove(table);\n                this._resetElementResizing(this.editor);\n            } else if (rowParent.rows.length <= rows.length) {\n                focusElement = rowParent.nextSibling;\n\n                if (!focusElement) {\n                    focusElement = rowParent.previousSibling;\n                }\n\n                dom.remove(rowParent);\n            } else {\n                this._mapColIndices(table);\n\n                for (var i = 0; i < rows.length; i++) {\n                    row = rows[i];\n                    dom.removeTextSiblings(row);\n                    focusElement = dom.next(row) || dom.prev(row);\n                    focusElement = focusElement.cells[0];\n\n                    // IE needs to focus the new row before removing the old one\n                    this._focusElement(range, focusElement);\n                    focusElement = null;\n\n                    this._handleRowSpanCells(table, row);\n\n                    dom.remove(row);\n                }\n\n                this._clearColIndexAttr(table);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            } else if (dom.is(rowParent, THEAD) && $(table).find(\"[scope]\").length > 0) {\n                this._adjustColgroups(rowParent.rows[0], table);\n            }\n\n            if (focusElement) {\n                this._focusElement(range, focusElement);\n            }\n\n            this._resetElementResizing(this.editor);\n        },\n        _focusElement: function(range, node) {\n            range.setStart(node, 0);\n            range.collapse(true);\n            this.editor.selectRange(range);\n        },\n        _handleRowSpanCells: function(table, row) {\n            var index, cell, adjacentCell, nextRow, rowIndex = dom.findNodeIndex(row, true),\n                firstRow = table.rows[0],\n                lastCell = firstRow.cells[firstRow.cells.length - 1],\n                lastIndex = parseInt(lastCell.getAttribute(\"col-index\"),10) + lastCell.colSpan - 1;\n\n            for (index = 0; index <= lastIndex; index = index + cell.prop(\"colSpan\")) {\n                cell = $(row).find(\"[col-index=\" + index + \"]\");\n\n                if (cell.length && cell.prop(\"rowSpan\") > 1) {\n                    nextRow = table.rows[rowIndex + 1];\n                    adjacentCell = $(nextRow).find(\"[col-index=\" + (index + 1) + \"]\");\n\n                    if (adjacentCell.length) {\n                        adjacentCell.before(cell);\n                    } else {\n                        $(nextRow).append(cell);\n                    }\n                    this._reduceRowSpan(cell);\n                }\n\n                if (!cell.length) {\n                    cell = this._findRowSpanCell(row.parentElement, rowIndex, index);\n                    this._reduceRowSpan(cell);\n                }\n            }\n        },\n        _reduceRowSpan: function(td) {\n            var rowSpanValue = td.prop(\"rowSpan\") - 1;\n\n            if (rowSpanValue <= 1) {\n                td.removeAttr(ROWSPAN);\n                if (td.attr(SCOPE) === ROWGROUP) {\n                    td.attr(SCOPE, ROW);\n                }\n            } else {\n                td.attr(ROWSPAN, rowSpanValue);\n            }\n        }\n    });\n\n    var DeleteColumnCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(),\n                td = dom.closest(range.endContainer, [TD, TH]),\n                table = dom.closest(td, TABLE),\n                rows = table && table.rows,\n                columnIndex = dom.findNodeIndex(td, true),\n                columnCount = rows && rows[0].cells.length,\n                colElements = table.getElementsByTagName(COL),\n                colgroupElements = table.getElementsByTagName(COLGROUP),\n                focusElement, i, cell, x;\n\n            if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n                this.releaseRange(range);\n                return;\n            }\n\n            if (columnCount == 1 || td.colSpan == columnCount) {\n                focusElement = dom.next(table);\n                if (!focusElement || dom.insignificant(focusElement)) {\n                    focusElement = dom.prev(table);\n                }\n\n                if (focusElement && focusElement.rows) {\n                    focusElement = focusElement.rows[0].cells[0];\n                }\n\n                dom.remove(table);\n                this._resetElementResizing(this.editor);\n            } else {\n                dom.removeTextSiblings(td);\n\n                focusElement = dom.next(td) || dom.prev(td);\n\n                this._mapColIndices(table);\n\n                columnIndex = parseInt(td.getAttribute(\"col-index\"), 10);\n\n                for (x = 0; x < td.colSpan; x++) {\n                    for (i = 0; i < rows.length; i = i + (cell.prop(\"rowSpan\") || 1)) {\n                        cell = $(rows[i]).find(\"[col-index=\" + (columnIndex + x) + \"]\");\n\n                        if (cell.length && cell.prop(\"colSpan\") <= 1) {\n                            cell.remove();\n                        } else {\n                            this._handleColSpanCells(rows[i], columnIndex + x);\n                        }\n                    }\n                }\n\n                this._clearColIndexAttr(table);\n            }\n\n            if (colElements.length > 0 || colgroupElements.length > 0) {\n                this._adjustColgroups(rows[0], table);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            if (focusElement) {\n                range.setStart(focusElement, 0);\n                range.collapse(true);\n                this.editor.selectRange(range);\n            }\n\n            this._resetElementResizing(this.editor);\n        },\n        _handleColSpanCells: function(row, colIndex) {\n            var cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n            if (cell.length && cell.prop(\"colSpan\") > 1) {\n                var clone = cell.clone(true);\n                cell.after(clone);\n                this._reduceColSpan(clone);\n                clone.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n                cell.remove();\n                return;\n            }\n\n            for (var i = colIndex; i >= 0; i--) {\n                cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n                if (cell.length) {\n                    this._reduceColSpan(cell);\n                    cell.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n                    return;\n                }\n            }\n        },\n        _reduceColSpan: function(td) {\n            var colSpanValue = td.prop(\"colSpan\") - 1;\n\n            if (colSpanValue <= 1) {\n                td.removeAttr(COLSPAN);\n                if (td.attr(SCOPE) === COLGROUP) {\n                    td.attr(SCOPE, COL);\n                }\n            } else {\n                td.attr(COLSPAN, colSpanValue);\n            }\n        }\n    });\n\n    var MergeCellsHorizontallyCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(),\n                td = dom.closest(range.endContainer, [TD, TH]),\n                table, row, columnIndex, nextTd, colspan;\n\n                if (!td) {\n                    this.releaseRange(range);\n                    return;\n                }\n\n                table = dom.closest(td, TABLE);\n                row = td.parentNode;\n                columnIndex = dom.findNodeIndex(td, true);\n                nextTd = row.children[columnIndex + 1];\n\n                if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                    this.releaseRange(range);\n                    return;\n                }\n\n                this._mapColIndices(table);\n\n                columnIndex = parseInt($(td).attr(\"col-index\"), 10);\n                nextTd = $(row).find(\"[col-index=\" + (columnIndex + 1 + this._getColspan(td) - 1) + \"]\").get(0);\n\n                if (!nextTd || nextTd.rowSpan !== td.rowSpan || td.tagName !== nextTd.tagName) {\n                    this._clearColIndexAttr(table);\n                    this.releaseRange(range);\n                    return;\n                }\n\n                colspan = this._getColspan(td) + this._getColspan(nextTd);\n\n                $(td).prop(COLSPAN, colspan)\n                     .append(dom.emptyNode(nextTd) ? \"\" : \"<br/>\" + nextTd.innerHTML);\n\n                $(td).width(td.offsetWidth);\n                $(nextTd).remove();\n\n                if (td.getAttribute(SCOPE) === COL) {\n                    td.setAttribute(SCOPE, COLGROUP);\n                }\n                if (td.getAttribute(SCOPE) === COLGROUP) {\n                    this._adjustColgroups(row, table);\n                }\n\n                if ($(table).find(\"[headers]\").length > 0) {\n                    this._associateHeaderIds(table);\n                }\n\n                this._clearColIndexAttr(table);\n                this.releaseRange(range);\n                this._resetElementResizing(this.editor);\n        },\n        _getColspan: function(td) {\n            return parseInt(td.getAttribute(COLSPAN), 10) || 1;\n        }\n    });\n\n    var MergeCellsVerticallyCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(),\n                td = dom.closest(range.endContainer, [TD, TH]),\n                tr, parent, table, columnIndex, rowIndex, targetRow, bottomTd;\n\n                if (!td) {\n                    this.releaseRange(range);\n                    return;\n                }\n\n                tr = dom.closest(td, TR);\n                parent = dom.closest(td, [THEAD, TBODY]);\n                table = dom.closest(td, TABLE);\n                columnIndex = dom.findNodeIndex(td, true);\n                rowIndex = dom.findNodeIndex(tr, true);\n\n                if (rowIndex + 1 === parent.rows.length) {\n                    this.releaseRange(range);\n                    return;\n                }\n\n                targetRow = parent.rows[rowIndex + this._getRowspan(td)];\n                bottomTd = targetRow && targetRow.children[columnIndex];\n\n                if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                    this.releaseRange(range);\n                    return;\n                }\n\n                this._mapColIndices(table);\n\n                columnIndex = $(td).attr(\"col-index\");\n                bottomTd = $(targetRow).find(\"[col-index=\" + columnIndex + \"]\").get(0);\n\n                if (!bottomTd || bottomTd.colSpan !== td.colSpan || td.tagName !== bottomTd.tagName) {\n                    this._clearColIndexAttr(table);\n                    this.releaseRange(range);\n                    return;\n                }\n\n                $(td).prop(ROWSPAN, this._getRowspan(td) + this._getRowspan(bottomTd))\n                     .append(dom.emptyNode(bottomTd) ? \"\" : \"<br/>\" + bottomTd.innerHTML);\n\n                if (td.getAttribute(SCOPE) === ROW) {\n                    td.setAttribute(SCOPE, ROWGROUP);\n                }\n\n                $(bottomTd).remove();\n\n                if ($(table).find(\"[headers]\").length > 0) {\n                    this._associateHeaderIds(table);\n                }\n\n                this._clearColIndexAttr(table);\n                this.releaseRange(range);\n        },\n        _getRowspan: function(td) {\n            return parseInt(td.getAttribute(ROWSPAN), 10) || 1;\n        }\n    });\n\n    var SplitCellCommand = TableModificationCommand.extend({\n        exec: function() {\n            var range = this.lockRange(),\n                type = this.options.type,\n                attr = type === \"row\" ? COLSPAN : ROWSPAN,\n                td = dom.closest(range.endContainer, [TD, TH]),\n                parent = dom.closest(td, [THEAD, TBODY]),\n                table = dom.closest(td, TABLE),\n                emptyTd = dom.createEmptyNode(this.editor.document, td.nodeName.toLowerCase());\n\n            if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            if (type === \"row\" && $(td).is(\"[\" + attr + \"]\")) {\n                this._splitCellHorizontally(td, parent, attr, emptyTd);\n            } else if (type === \"column\" && $(td).is(\"[\" + attr + \"]\")) {\n                this._splitCellVertically(td, parent, attr, emptyTd);\n            }\n\n            if ($(td).prop(attr.toLowerCase()) <= 1) {\n                $(td).removeAttr(attr);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n        },\n        _getRowspanValue: function(td) {\n            return parseInt(td.getAttribute(ROWSPAN), 10);\n        },\n        _getColspanValue: function(td) {\n            return parseInt(td.getAttribute(COLSPAN), 10);\n        },\n        _splitCellHorizontally: function(td, parent, attr, emptyTd) {\n            var rowSpan = td.rowSpan,\n                colSpan = td.colSpan,\n                tdToAdd = $(emptyTd),\n                colSpanResult = Math.floor(colSpan / 2);\n\n                if (colSpanResult > 1) {\n                    tdToAdd.attr(COLSPAN, colSpanResult);\n                }\n\n                if (rowSpan > 1) {\n                    tdToAdd.attr(ROWSPAN, rowSpan);\n                }\n\n                $(td).prop(attr, colSpan - colSpanResult)\n                    .after(tdToAdd);\n\n                $(td).width(td.offsetWidth);\n                tdToAdd.width(tdToAdd[0].offsetWidth);\n\n                if (td.hasAttribute(SCOPE)) {\n                    if (td.getAttribute(SCOPE) === COLGROUP) {\n                        tdToAdd.attr(SCOPE, COL);\n                        if (!td.getAttribute(COLSPAN) || td.getAttribute(COLSPAN) === \"1\") {\n                            td.setAttribute(SCOPE, COL);\n                        }\n\n                        this._adjustColgroups(td.parentNode, parent.parentNode);\n                    } else {\n                        tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                    }\n                }\n        },\n        _splitCellVertically: function(td, parent, attr, emptyTd) {\n            var tr = dom.closest(td,TR),\n                columnIndex = parseInt($(td).attr(\"col-index\"), 10),\n                rowIndex = dom.findNodeIndex(tr, true),\n                rowSpan = td.rowSpan,\n                colSpan = td.colSpan,\n                rowSpanResult = Math.floor(rowSpan / 2),\n                targetRow = $(parent).find(TR).eq(rowIndex + rowSpan - rowSpanResult),\n                nextTd = this._findNextTdInRow(targetRow, columnIndex + colSpan),\n                tdToAdd = $(emptyTd);\n\n                if (rowSpanResult > 1) {\n                    tdToAdd.attr(ROWSPAN, rowSpanResult);\n                }\n                if (colSpan > 1) {\n                    tdToAdd.attr(COLSPAN, colSpan);\n                }\n\n                if (nextTd && nextTd.length) {\n                    nextTd.before(tdToAdd);\n                } else {\n                    targetRow.append(tdToAdd);\n                }\n\n                $(td).prop(attr, rowSpan - rowSpanResult);\n\n                if (td.hasAttribute(SCOPE)) {\n                    if (td.getAttribute(SCOPE) === ROWGROUP) {\n                        tdToAdd.attr(SCOPE, ROW);\n                        if (!td.getAttribute(ROWSPAN) || td.getAttribute(ROWSPAN) === \"1\") {\n                            td.setAttribute(SCOPE, ROW);\n                        }\n                    } else {\n                        tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                    }\n                }\n        }\n    });\n\n    var TableModificationTool = Tool.extend({\n        command: function(options) {\n            var commandsMap = {\n                row: {\n                    insert: InsertRowCommand,\n                    \"delete\": DeleteRowCommand,\n                    merge: MergeCellsHorizontallyCommand,\n                    split: SplitCellCommand\n                },\n                column: {\n                    insert: InsertColumnCommand,\n                    \"delete\": DeleteColumnCommand,\n                    merge: MergeCellsVerticallyCommand,\n                    split: SplitCellCommand\n                }\n            };\n\n            options = extend(options, this.options);\n            options.action = options.action || \"insert\";\n\n            return new commandsMap[options.type][options.action](options);\n        },\n\n        update: function(ui, nodes) {\n            var isFormatted = !tableFormatFinder.isFormatted(nodes),\n                toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n            if (isFormatted === true) {\n                toolbar.hide(ui);\n            } else {\n                toolbar.show(ui);\n            }\n        }\n    });\n\n    var TableFormatCommand = FormatCommand.extend({\n        exec: function() {\n            var that = this;\n            var editor = that.editor;\n\n            FormatCommand.fn.exec.call(this);\n\n            if (editor.elementResizing) {\n                editor.elementResizing._showResizeHandles();\n            }\n        }\n    });\n\n    // var tableAlignFormatFinder = BlockFormatFinder.extend({\n\n    // });\n\n    var TableFormatTool = BlockFormatTool.extend({\n        update: function(ui, nodes) {\n            var isTable = !tableFormatFinder.isFormatted(nodes),\n                isFormatted = this.options.finder.isFormatted(nodes, this.isTable),\n                toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n            if (toolbar) {\n                toolbar.toggle(ui, isFormatted);\n            }\n\n            if (isTable === true) {\n                toolbar.hide(ui);\n            } else {\n                toolbar.show(ui);\n            }\n        },\n        command: function(commandArguments) {\n            var that = this;\n\n            return new TableFormatCommand(extend(commandArguments, {\n                formatter: that.options.formatter\n            }));\n        },\n        isTable: function(node) {\n            return dom.is(node, \"table\");\n        }\n    });\n\n    extend(kendo.ui.editor, {\n        PopupTool: PopupTool,\n        TableCommand: TableCommand,\n        InsertTableTool: InsertTableTool,\n        TableFormatTool: TableFormatTool,\n        TableFormatCommand: TableFormatCommand,\n        TableModificationTool: TableModificationTool,\n        InsertRowCommand: InsertRowCommand,\n        InsertColumnCommand: InsertColumnCommand,\n        DeleteRowCommand: DeleteRowCommand,\n        DeleteColumnCommand: DeleteColumnCommand,\n        MergeCellsHorizontallyCommand: MergeCellsHorizontallyCommand,\n        MergeCellsVerticallyCommand: MergeCellsVerticallyCommand,\n        SplitCellCommand: SplitCellCommand\n    });\n\n\n    registerTool(\"createTable\", new InsertTableTool({ ui: { popup: true, overflow: \"never\" } }));\n\n    registerTool(\"addColumnLeft\", new TableModificationTool({ type: \"column\", position: \"before\" }));\n    registerTool(\"addColumnRight\", new TableModificationTool({ type: \"column\" }));\n    registerTool(\"addRowAbove\", new TableModificationTool({ type: \"row\", position: \"before\" }));\n    registerTool(\"addRowBelow\", new TableModificationTool({ type: \"row\" }));\n    registerTool(\"deleteRow\", new TableModificationTool({ type: \"row\", action: \"delete\" }));\n    registerTool(\"deleteColumn\", new TableModificationTool({ type: \"column\", action: \"delete\" }));\n    registerTool(\"mergeCellsHorizontally\", new TableModificationTool({ type: \"row\", action: \"merge\" }));\n    registerTool(\"mergeCellsVertically\", new TableModificationTool({ type: \"column\", action: \"merge\" }));\n    registerTool(\"splitCellHorizontally\", new TableModificationTool({ type: \"row\", action: \"split\" }));\n    registerTool(\"splitCellVertically\", new TableModificationTool({ type: \"column\", action: \"split\" }));\n\n    registerFormat(\"tableAlignLeft\", [\n        { tags: [\"table\"], attr: { style: { marginLeft: \"\", marginRight: \"auto\" } } },\n        { tags: [\"table\"], attr: { align: \"left\" } }\n    ]);\n    registerTool(\"tableAlignLeft\", new TableFormatTool({\n        format: formats.tableAlignLeft,\n        ui: {\n            togglable: true,\n            group: \"tableAlign\"\n        }\n    }));\n\n    registerFormat(\"tableAlignCenter\", [\n        { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"auto\" } } },\n        { tags: [\"table\"], attr: { align: \"center\" } }\n    ]);\n    registerTool(\"tableAlignCenter\", new TableFormatTool({\n        format: formats.tableAlignCenter,\n        ui: {\n            togglable: true,\n            group: \"tableAlign\"\n        }\n    }));\n\n    registerFormat(\"tableAlignRight\", [\n        { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"\" } } },\n        { tags: [\"table\"], attr: { align: \"right\" } }\n    ]);\n    registerTool(\"tableAlignRight\", new TableFormatTool({\n        format: formats.tableAlignRight,\n        ui: {\n            togglable: true,\n            group: \"tableAlign\"\n        }\n    }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            editorNS = kendo.ui.editor,\n            RangeUtils = editorNS.RangeUtils,\n            dom = editorNS.Dom,\n            RestorePoint = editorNS.RestorePoint,\n            Marker = editorNS.Marker,\n            browser = kendo.support.browser,\n            extend = $.extend;\n\n    var Clipboard = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n            var pasteCleanup = editor.options.pasteCleanup;\n            this.nonSplittableTagsOnPaste = editor.options.nonSplittableTagsOnPaste || [];\n            this.cleaners = [\n                new ScriptCleaner(pasteCleanup),\n                new TabCleaner(pasteCleanup),\n                new MSWordFormatCleaner(pasteCleanup),\n                new WebkitFormatCleaner(pasteCleanup),\n                new HtmlTagsCleaner(pasteCleanup),\n                new HtmlAttrCleaner(pasteCleanup),\n                new HtmlContentCleaner(pasteCleanup),\n                new CustomCleaner(pasteCleanup) //always keep at end\n            ];\n        },\n\n        htmlToFragment: function(html) {\n            var editor = this.editor,\n                doc = editor.document,\n                container = dom.create(doc, 'div'),\n                fragment = doc.createDocumentFragment();\n\n            container.innerHTML = html;\n\n            while (container.firstChild) {\n                fragment.appendChild(container.firstChild);\n            }\n\n            return fragment;\n        },\n\n        isBlock: function(html) {\n            return (/<(div|p|ul|ol|table|h[1-6])/i).test(html);\n        },\n\n        _startModification: function() {\n            var range;\n            var restorePoint;\n            var editor = this.editor;\n\n            if (this._inProgress) {\n                return;\n            }\n\n            this._inProgress = true;\n\n            range = editor.getRange();\n            restorePoint = new RestorePoint(range, editor.body);\n\n            dom.persistScrollTop(editor.document);\n\n            return { range: range, restorePoint: restorePoint };\n        },\n\n        _endModification: function(modificationInfo) {\n            editorNS._finishUpdate(this.editor, modificationInfo.restorePoint);\n\n            this.editor._selectionChange();\n\n            this._inProgress = false;\n        },\n\n        _contentModification: function(before, after) {\n            var that = this;\n            var editor = that.editor;\n            var modificationInfo = that._startModification();\n\n            if (!modificationInfo) {\n                return;\n            }\n\n            before.call(that, editor, modificationInfo.range);\n\n            setTimeout(function() {\n                after.call(that, editor, modificationInfo.range);\n\n                that._endModification(modificationInfo);\n            });\n        },\n\n        _removeBomNodes: function(range) {\n            var nodes = RangeUtils.textNodes(range);\n\n            for (var i = 0; i < nodes.length; i++) {\n                nodes[i].nodeValue = dom.stripBom(nodes[i].nodeValue) || nodes[i].nodeValue;\n            }\n        },\n\n        _onBeforeCopy: function(range) {\n            var marker = new Marker();\n            marker.add(range);\n\n            this._removeBomNodes(range);\n\n            marker.remove(range);\n\n            this.editor.selectRange(range);\n        },\n\n        oncopy: function() {\n            this._onBeforeCopy(this.editor.getRange());\n        },\n\n        oncut: function() {\n            this._onBeforeCopy(this.editor.getRange());\n            this._contentModification($.noop, $.noop);\n        },\n\n        _fileToDataURL: function(blob) {\n            var deferred = $.Deferred();\n\n            var reader = new FileReader();\n\n            if (!(blob instanceof window.File) && blob.getAsFile) {\n                blob = blob.getAsFile();\n            }\n\n            reader.onload = deferred.resolve.bind(deferred);\n\n            reader.readAsDataURL(blob);\n\n            return deferred.promise();\n        },\n\n        _triggerPaste: function(html, options) {\n            var args = { html: html || \"\" };\n\n            args.html = args.html.replace(/\\ufeff/g, \"\");\n\n            this.editor.trigger(\"paste\", args);\n\n            this.paste(args.html, options || {});\n        },\n\n        _handleImagePaste: function(e) {\n            if (!('FileReader' in window) || (browser.msie && browser.version > 10)) {\n                return;\n            }\n\n            var clipboardData = e.clipboardData || e.originalEvent.clipboardData ||\n                        window.clipboardData || {};\n\n            var items = clipboardData.items || clipboardData.files;\n\n            return this._insertImages(items);\n        },\n\n        _insertImages: function(items) {\n            if (!items) {\n                return;\n            }\n\n            var images = $.grep(items, function(item) { return (/^image\\//i).test(item.type); });\n            var html = $.grep(items, function(item) { return (/^text\\/html/i).test(item.type); });\n\n            if (html.length || !images.length) {\n                return;\n            }\n\n            var modificationInfo = this._startModification();\n\n            if (!modificationInfo) {\n                return;\n            }\n\n            $.when.apply($, $.map(images, this._fileToDataURL))\n                .done((function() {\n                    var results = Array.prototype.slice.call(arguments);\n                    var html = $.map(results, function(e) {\n                        return '<img src=\"' + e.target.result + '\" />';\n                    }).join(\"\");\n\n                    this._triggerPaste(html);\n\n                    this._endModification(modificationInfo);\n                }).bind(this));\n\n            return true;\n        },\n\n        onpaste: function(e) {\n            if (this.editor.body.contentEditable === \"false\") {\n                return;\n            }\n\n            if (this._handleImagePaste(e)) {\n                e.preventDefault();\n                return;\n            }\n\n            this.expandImmutablesIn();\n\n            this._contentModification(\n                function beforePaste(editor, range) {\n                    var clipboardNode = dom.create(editor.document, 'div', {\n                            className: 'k-paste-container',\n                            innerHTML: \"\\ufeff\"\n                        });\n                    var browser = kendo.support.browser;\n                    var body = editor.body;\n\n                    this._decoreateClipboardNode(clipboardNode, body);\n\n                    body.appendChild(clipboardNode);\n\n                    //Browser scrolls to clipboardNode\n                    if (browser.webkit) {\n                        this._moveToCaretPosition(clipboardNode, range);\n                    }\n\n                    // text ranges are slow in IE10-, DOM ranges are buggy in IE9-10\n                    if (browser.msie && browser.version < 11) {\n                        e.preventDefault();\n                        var r = editor.createRange();\n                        r.selectNodeContents(clipboardNode);\n                        editor.selectRange(r);\n                        var textRange = editor.document.body.createTextRange();\n                        textRange.moveToElementText(clipboardNode);\n                        $(body).off('paste');\n                        textRange.execCommand('Paste');\n                        $(body).on('paste', this.onpaste.bind(this));\n                    } else {\n                        var clipboardRange = editor.createRange();\n                        clipboardRange.selectNodeContents(clipboardNode);\n                        editor.selectRange(clipboardRange);\n                    }\n\n                    range.deleteContents();\n                },\n                function afterPaste(editor, range) {\n                    var html = \"\", containers;\n\n                    editor.selectRange(range);\n\n                    containers = $(editor.body).children(\".k-paste-container\");\n\n                    containers.each(function() {\n                        var lastChild = this.lastChild;\n\n                        if (lastChild && dom.is(lastChild, 'br')) {\n                            dom.remove(lastChild);\n                        }\n\n                        html += this.innerHTML;\n                    });\n\n                    containers.remove();\n\n                    this._triggerPaste(html, { clean: true });\n                }\n            );\n        },\n        ondragover: function(e) {\n            if (browser.msie || browser.edge) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        },\n        ondrop: function(e) {\n            if (!('FileReader' in window)) {\n                return;\n            }\n\n            var dataTransfer = (e.originalEvent || e).dataTransfer || {};\n            var items = dataTransfer.items || dataTransfer.files;\n\n            if (this._insertImages(items)) {\n                e.preventDefault();\n            }\n        },\n        _decoreateClipboardNode: function(node, body) {\n            if (!browser.msie && !browser.webkit) {\n                return;\n            }\n\n            node = $(node);\n            node.css({\n                borderWidth: \"0px\",\n                width: \"0px\",\n                height: \"0px\",\n                overflow: \"hidden\",\n                margin: \"0\",\n                padding: \"0\"\n            });\n\n            if (browser.msie) {\n                //node inherits BODY styles and this causes the browser to add additional\n                var documentElement = $(body.ownerDocument.documentElement);\n\n                node.css({\n                    fontVariant: \"normal\",\n                    fontWeight: \"normal\",\n                    lineSpacing: \"normal\",\n                    lineHeight: \"normal\",\n                    textDecoration: \"none\"\n                });\n                var color = documentElement.css(\"color\");\n                if (color) {\n                    node.css(\"color\", color);\n                }\n                var fontFamily = documentElement.css(\"fontFamily\");\n                if (fontFamily) {\n                    node.css(\"fontFamily\", fontFamily);\n                }\n                var fontSize = documentElement.css(\"fontSize\");\n                if (fontSize) {\n                    node.css(\"fontSize\", fontSize);\n                }\n            }\n        },\n        _moveToCaretPosition: function(node, range) {\n            var that = this;\n            var body = that.editor.body;\n            var nodeOffset = dom.offset(node, body);\n            var caretOffset = that._caretOffset(range, body);\n            var translateX = caretOffset.left - nodeOffset.left;\n            var translateY = caretOffset.top - nodeOffset.top;\n            var translate = \"translate(\" + translateX + \"px,\" + translateY + \"px)\";\n\n            $(node).css({\n                \"-webkit-transform\": translate,\n                \"transform\": translate\n            });\n        },\n        _caretOffset: function(range, body) {\n            var editor = this.editor;\n            var caret = dom.create(editor.document, 'span', { innerHTML: \"\\ufeff\" });\n            var startContainer = range.startContainer;\n            var rangeChanged;\n\n            if (range.collapsed) {\n                var isStartTextNode = dom.isDataNode(startContainer);\n                if (isStartTextNode && (dom.isBom(startContainer) || range.startOffset === 0)) {\n                    dom.insertBefore(caret, startContainer);\n                } else if (isStartTextNode && range.startOffset === startContainer.length) {\n                    dom.insertAfter(caret, startContainer);\n                } else {\n                    range.insertNode(caret);\n                    rangeChanged = true;\n                }\n            } else {\n                startContainer = startContainer === body ?\n                    startContainer.childNodes[range.startOffset] : startContainer;\n                dom.insertBefore(caret, startContainer);\n            }\n\n            var offset = dom.offset(caret, body);\n            var prev = caret.previousSibling;\n            var next = caret.nextSibling;\n\n            dom.remove(caret);\n\n            if (rangeChanged && dom.isDataNode(prev) && dom.isDataNode(next) && !dom.isBom(prev) && !dom.isBom(next)) {\n                var prevLength = prev.length;\n                next.data = prev.data + next.data;\n                range.setStart(next, prevLength);\n                dom.remove(prev);\n\n                range.collapse(true);\n                editor.selectRange(range);\n            }\n\n            return offset;\n        },\n\n        expandImmutablesIn: function(range) {\n            var editor = this.editor;\n            if (editor && editor.options.immutables) {\n                var body = editor.body;\n                range = range || editor.getRange();\n                kendo.ui.editor.Immutables.expandImmutablesIn(range);\n                if (range.startContainer === body && range.startOffset === 0) {\n                    var doc = body.ownerDocument;\n                    var bomNode = doc.createTextNode(\"\\ufeff\");\n                    body.insertBefore(bomNode, body.childNodes[0]);\n                    range.setStartBefore(bomNode);\n                }\n                editor.selectRange(range);\n            }\n        },\n\n        splittableParent: function(block, node) {\n            var parentNode, body;\n\n            if (block) {\n                return dom.closestEditableOfType(node, ['p', 'ul', 'ol']) || node.parentNode;\n            }\n\n            parentNode = node.parentNode;\n            body = node.ownerDocument.body;\n\n            if (dom.isInline(parentNode)) {\n                while (parentNode.parentNode != body && !dom.isBlock(parentNode.parentNode)) {\n                    parentNode = parentNode.parentNode;\n                }\n            }\n\n            return parentNode;\n        },\n\n        paste: function(html, options) {\n            var editor = this.editor,\n                nonSplittableTagsOnPaste = this.nonSplittableTagsOnPaste,\n                preventSplit = false,\n                unwrapPasted = false,\n                i, l, childNodes, isList;\n\n            this.expandImmutablesIn();\n\n            options = extend({ clean: false, split: true }, options);\n\n            if (!options.skipCleaners) {\n                for (i = 0, l = this.cleaners.length; i < l; i++) {\n                    if (this.cleaners[i].applicable(html)) {\n                        html = this.cleaners[i].clean(html);\n                    }\n                }\n            }\n\n            if (options.clean) {\n                // remove br elements which immediately precede block elements\n                html = html.replace(/(<br>(\\s|&nbsp;)*)+(<\\/?(div|p|li|col|t))/ig, \"$3\");\n                // remove empty inline elements\n                html = html.replace(/<(a|span)[^>]*><\\/\\1>/ig, \"\");\n            }\n\n            html = html.replace(/<(a|span|font)([^>]*)> <\\/\\1>/ig, \"<$1$2>&nbsp;</$1>\");\n\n            // It is possible in IE to copy just <li> tags\n            html = html.replace(/^<li/i, '<ul><li').replace(/li>$/g, 'li></ul>');\n\n            var block = this.isBlock(html);\n\n            editor.focus();\n            var range = editor.getRange();\n            range.deleteContents();\n\n            if (range.startContainer == editor.document) {\n                range.selectNodeContents(editor.body);\n            }\n\n            var marker = new Marker();\n            var caret = marker.addCaret(range);\n\n            var parent = this.splittableParent(block, caret);\n            var unwrap = false;\n\n            for (i = 0; i < nonSplittableTagsOnPaste.length; i++) {\n                const splitter = nonSplittableTagsOnPaste[i],\n                    tag = splitter.tag || splitter;\n\n                if (dom.is(parent, tag)) {\n                    preventSplit = true;\n                    unwrapPasted = splitter.unwrap !== false;\n                    break;\n                }\n            }\n\n            var splittable = parent != editor.body && !dom.is(parent, \"td\") && !preventSplit;\n\n            if (options.split && splittable && (block || dom.isInline(parent))) {\n                range.selectNode(caret);\n                RangeUtils.split(range, parent, true);\n                unwrap = true;\n            }\n\n            var fragment = this.htmlToFragment(html);\n\n            if (fragment.firstChild && fragment.firstChild.className === \"k-paste-container\") {\n                var fragmentsHtml = [];\n                for (i = 0, l = fragment.childNodes.length; i < l; i++) {\n                    fragmentsHtml.push(fragment.childNodes[i].innerHTML);\n                }\n\n                fragment = this.htmlToFragment(fragmentsHtml.join('<br />'));\n            }\n\n            childNodes = fragment.childNodes;\n\n            if (unwrapPasted) {\n                isList = dom.list(childNodes[0]);\n                dom.unwrap(childNodes[0]);\n\n                if (isList) {\n                    range.selectNode(caret.parentNode);\n                }\n            }\n\n            $(childNodes)\n                .filter(\"table\").addClass(\"k-table\").end()\n                .find(\"table\").addClass(\"k-table\");\n\n            $(childNodes).each(function(index, elm) {\n               if (dom.isBlock(elm) && !dom.isSelfClosing(elm) && elm.innerHTML === \"\") {\n                    elm.appendChild(editor.document.createTextNode(\"\\ufeff\"));\n               }\n            });\n\n            range.insertNode(fragment);\n\n            parent = this.splittableParent(block, caret);\n            if (unwrap) {\n                while (caret.parentNode != parent) {\n                    dom.unwrap(caret.parentNode);\n                }\n\n                dom.unwrap(caret.parentNode);\n            }\n\n            dom.normalize(range.commonAncestorContainer);\n            caret.style.display = 'inline';\n            dom.restoreScrollTop(editor.document);\n            dom.scrollTo(caret);\n            marker.removeCaret(range);\n\n            var rangeEnd = range.commonAncestorContainer.parentNode;\n            if (range.collapsed && dom.name(rangeEnd) == \"tbody\" || range.collapsed && dom.name(rangeEnd) == \"thead\") {\n                range.setStartAfter($(rangeEnd).closest(\"table\")[0]);\n                range.collapse(true);\n            }\n\n            var focusedTable = $(range.commonAncestorContainer.parentNode).closest(\"table\");\n\n            if (focusedTable.get(0)) {\n                var siblingNodes = focusedTable.parent().contents();\n                var lastSiblingIndex = siblingNodes.length - 1;\n                var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n                while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n                    lastSiblingIndex -= 1;\n                    lastSibling = siblingNodes.get(lastSiblingIndex);\n                }\n\n                if (lastSibling === focusedTable.get(0) && !focusedTable.parents(\"table\").length) {\n                    dom.insertAfter(dom.createEmptyNode(editor.document, \"p\"), focusedTable[0]);\n                }\n            }\n\n            editor._handleSpaceAndNewLines();\n            editor.selectRange(range);\n        }\n    });\n\n    var Cleaner = Class.extend({\n        init: function(options) {\n            this.options = options || {};\n            this.replacements = [];\n        },\n\n        clean: function(html, customReplacements) {\n            var that = this,\n                replacements = customReplacements || that.replacements,\n                i, l;\n\n            for (i = 0, l = replacements.length; i < l; i += 2) {\n                html = html.replace(replacements[i], replacements[i + 1]);\n            }\n\n            return html;\n        }\n    });\n\n    var ScriptCleaner = Cleaner.extend({\n        init: function(options) {\n            Cleaner.fn.init.call(this, options);\n\n            this.replacements = [\n                /<(\\/?)script([^>]*)>/i, \"<$1telerik:script$2>\"\n            ];\n        },\n\n        applicable: function(html) {\n            return !this.options.none && (/<script[^>]*>/i).test(html);\n        }\n    });\n\n    var TabCleaner = Cleaner.extend({\n        init: function(options) {\n            Cleaner.fn.init.call(this, options);\n\n            var replacement = ' ';\n            this.replacements = [\n                /<span\\s+class=\"Apple-tab-span\"[^>]*>\\s*<\\/span>/gi, replacement,\n                /\\t/gi, replacement,\n                /&nbsp;&nbsp; &nbsp;/gi, replacement\n            ];\n        },\n\n        applicable: function(html) {\n            return (/&nbsp;&nbsp; &nbsp;|class=\"?Apple-tab-span/i).test(html);\n        }\n    });\n\n    var MSWordFormatCleaner = Cleaner.extend({\n        init: function(options) {\n            Cleaner.fn.init.call(this, options);\n\n            this.junkReplacements = [\n                /<\\?xml[^>]*>/gi, '',\n                /<!--(.|\\n)*?-->/g, '', /* comments */\n                /&quot;/g, \"'\", /* encoded quotes (in attributes) */\n                /<o:p>&nbsp;<\\/o:p>/ig, '&nbsp;',\n                /<\\/?(meta|link|style|o:|v:|x:)[^>]*>((?:.|\\n)*?<\\/(meta|link|style|o:|v:|x:)[^>]*>)?/ig, '', /* external references and namespaced tags */\n                /<\\/o>/g, ''\n            ];\n            this.replacements = this.junkReplacements.concat([\n                /(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*(<\\/?(h[1-6]|hr|p|div|table|tbody|thead|tfoot|th|tr|td|li|ol|ul|caption|address|pre|form|blockquote|dl|dt|dd|dir|fieldset)[^>]*>)(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*/g, '$1',\n                /<br><br>/g, '<BR><BR>',\n                /<br>\\n/g, '<br/>',\n                /<br>(?!\\n)/g, ' ',\n                /<table([^>]*)>(\\s|&nbsp;)+<t/gi, '<table$1><t',\n                /<tr[^>]*>(\\s|&nbsp;)*<\\/tr>/gi, '',\n                /<tbody[^>]*>(\\s|&nbsp;)*<\\/tbody>/gi, '',\n                /<table[^>]*>(\\s|&nbsp;)*<\\/table>/gi, '',\n                /<BR><BR>/g, '<br>',\n                /^\\s*(&nbsp;)+/gi, '',\n                /(&nbsp;|<br[^>]*>)+\\s*$/gi, '',\n                /mso-[^;\"]*;?/ig, '', /* office-related CSS attributes */\n                /<(\\/?)b(\\s[^>]*)?>/ig, '<$1strong$2>',\n                /<(\\/?)font(\\s[^>]*)?>/ig, this.convertFontMatch,\n                /<(\\/?)i(\\s[^>]*)?>/ig, '<$1em$2>',\n                /style=([\"|'])\\s*\\1/g, '', /* empty style attributes */\n                /(<br[^>]*>)?\\n/g, function($0, $1) { return $1 ? $0 : ' '; } /* phantom extra line feeds */\n            ]);\n        },\n\n        convertFontMatch: function(match, closing, args) {\n            var faceRe = /face=['\"]([^'\"]+)['\"]/i;\n            var face = faceRe.exec(args);\n            var family = args && face && face[1];\n\n            if (closing) {\n                return '</span>';\n            } else if (family) {\n                return '<span style=\"font-family:' + family + '\">';\n            } else {\n                return '<span>';\n            }\n        },\n\n        applicable: function(html) {\n            return (/class=\"?Mso/i).test(html) ||\n                   (/style=\"[^\"]*mso-/i).test(html) ||\n                   (/urn:schemas-microsoft-com:office/).test(html);\n        },\n\n        stripEmptyAnchors: function(html) {\n            return html.replace(/<a([^>]*)>\\s*<\\/a>/ig, function(a, attributes) {\n                if (!attributes || attributes.indexOf(\"href\") < 0) {\n                    return \"\";\n                }\n\n                return a;\n            });\n        },\n\n        listType: function(p, listData) {\n            var html = p.innerHTML;\n            var text = dom.innerText(p);\n\n            var startingSymbol;\n            var matchSymbol = html.match(/^(?:<span [^>]*texhtml[^>]*>)?<span [^>]*(?:Symbol|Wingdings)[^>]*>([^<]+)/i);\n            var symbol = matchSymbol && matchSymbol[1];\n            var isNumber = /^[a-z\\d]/i.test(symbol);//including alpha-numeric and roman numerals\n\n            var trimStartText = function(text) {\n                return text.replace(/^(?:&nbsp;|[\\u00a0\\n\\r\\s])+/, '');\n            };\n\n            if (matchSymbol) {\n                startingSymbol = true;\n            }\n\n            html = html.replace(/<\\/?\\w+[^>]*>/g, '').replace(/&nbsp;/g, '\\u00a0');\n\n            if ((!startingSymbol && /^[\\u2022\\u00b7\\u00a7\\u00d8o]\\u00a0+/.test(html)) ||\n                (startingSymbol && /^.\\u00a0+/.test(html)) ||\n                (symbol && !isNumber && listData)) {\n                return {\n                    tag: 'ul',\n                    style: this._guessUnorderedListStyle(trimStartText(text))\n                };\n            }\n\n            if (/^\\s*\\w+[\\.\\)][\\u00a0 ]{2,}/.test(html)) {\n                return {\n                    tag: 'ol',\n                    style: this._guessOrderedListStyle(trimStartText(text))\n                };\n            }\n        },\n\n        _convertToLi: function(p) {\n            var content;\n\n            if (p.childNodes.length == 1) {\n                content = p.firstChild.nodeType === dom.nodeTypes.TEXT_NODE ? dom.innerText(p) : p.firstChild.innerHTML.replace(/^\\w+[\\.\\)](&nbsp;)+ /, \"\");\n                content = this._checkForBullet(content);\n            } else {\n                content = this._getHtmlNoBullet(p);\n            }\n\n            dom.remove(p);\n\n            return dom.create(document, 'li', { innerHTML: content });\n        },\n\n        _checkForBullet: function(html) {\n            var p = dom.create(document, 'p', { innerHTML: html });\n            var bulletRgx = /^\\s*\\w+[\\.\\)]\\s+/;\n\n            if (bulletRgx.test(p.innerText)) {\n                return this._getHtmlNoBullet(p);\n            }\n\n            return html;\n        },\n\n        _getHtmlNoBullet: function(element) {\n            var content,\n                name = dom.name(element);\n\n            dom.remove(element.firstChild);\n\n            // check for roman numerals\n            if (element.firstChild.nodeType == 3) {\n                if (/^[ivxlcdm]+\\.$/i.test(element.firstChild.nodeValue)) {\n                    dom.remove(element.firstChild);\n                }\n            }\n\n            if (/^(&nbsp;|\\s)+$/i.test(element.firstChild.innerHTML)) {\n                dom.remove(element.firstChild);\n            }\n\n            if (name != \"p\") {\n                content = \"<\" + name + \">\" + element.innerHTML + \"</\" + name + \">\";\n            } else {\n                content = element.innerHTML;\n            }\n\n            return content;\n        },\n\n        _guessUnorderedListStyle: function(symbol) {\n            if (/^[\\u2022\\u00b7\\u00FC\\u00D8\\u002dv-]/.test(symbol)) {\n                return null;//return \"disc\"; //default CSS value\n            } else if (/^o/.test(symbol)) {\n                return \"circle\";\n            } else {\n                return \"square\";\n            }\n        },\n        _guessOrderedListStyle: function(symbol) {\n            var listType = null;\n            if (!/^\\d/.test(symbol)) {\n                listType = (/^[a-z]/.test(symbol) ? 'lower-' : 'upper-') +\n                           (/^[ivxlcdm]/i.test(symbol) ? 'roman' : 'alpha');\n            }\n\n            return listType;\n        },\n\n        extractListLevels: function(html) {\n            var msoListRegExp = /style=['\"]?[^'\"]*?mso-list:\\s?[a-zA-Z]+(\\d+)\\s[a-zA-Z]+(\\d+)\\s(\\w+)/gi;\n\n            html = html.replace(msoListRegExp, function(match, list, level) {\n                return kendo.format('data-list=\"{0}\" data-level=\"{1}\" {2}', list, level, match);\n            });\n\n            return html;\n        },\n\n        _createList: function(type, styleType) {\n            return dom.create(document, type, {\n                style: { listStyleType: styleType }\n            });\n        },\n\n        lists: function(placeholder) {\n            var blockChildren = $(placeholder).find(dom.blockElements.join(',')),\n                lastMargin = -1,\n                name,\n                levels = {},\n                li,\n                rootMargin,\n                rootIndex,\n                lastRootLi,\n                isLastRootLi,\n                rootList,\n                i, p, type, margin, list, listData,\n                acceptedNameTags = [\"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n                isParentTable = false;\n\n            for (i = 0; i < blockChildren.length; i++) {\n                p = blockChildren[i];\n                listData = $(p).data();\n                var listIndex = listData.list;\n                name = dom.name(p);\n                isParentTable = !!$(p).parents(\"table\").length;\n\n                if (isParentTable) {\n                    continue;\n                }\n\n                var listType = this.listType(p, listData);\n                type = listType && listType.tag;\n\n                if (!type || acceptedNameTags.indexOf(name) < 0) {\n                    if (!p.innerHTML) {\n                        dom.remove(p);\n                    } else if (li && !isLastRootLi) {\n                        li.appendChild(p);\n                    }\n                    continue;\n                }\n\n                // not supported list levels in ie\n                if (browser.msie) {\n                    continue;\n                }\n\n                margin = listData.level || parseFloat(p.style.marginLeft || 0);\n\n                var levelType = type + listIndex;\n                if (!levels[margin]) {\n                    levels[margin] = {};\n                }\n\n                if (!rootMargin || rootMargin < 0) {\n                    rootMargin = margin;\n                    rootIndex = listIndex;\n                    lastRootLi = $(placeholder).find(\"[data-list='\" + rootIndex + \"']\").last()[0];\n                    rootList = this._createList(type, listType.style);\n                    dom.insertBefore(rootList, p);\n                    lastMargin = margin;\n                    levels[margin][levelType] = rootList;\n                }\n\n                isLastRootLi = lastRootLi === p;\n\n                list = levels[margin][levelType];\n\n                if (margin > lastMargin || !list) {\n                    list = this._createList(type, listType.style);\n                    levels[margin][levelType] = list;\n                    li.appendChild(list);\n                }\n\n                li = this._convertToLi(p);\n                list.appendChild(li);\n\n                if (isLastRootLi) {\n                    rootMargin = lastMargin = -1;\n                } else {\n                    lastMargin = margin;\n                }\n            }\n        },\n\n        removeAttributes: function(element) {\n            var attributes = element.attributes,\n                i = attributes.length,\n                significantStyles = [],\n                isSignificantCss = function(val) {\n                    var significantCss = [\"border\", \"background\", \"padding\"];\n\n                    return significantCss.filter(function(cssAttr) {\n                        return val.trim().indexOf(cssAttr) === 0;\n                    }).length > 0;\n                },\n                addSignificantStyles = function(val) {\n                    if (isSignificantCss(val)) {\n                        significantStyles.push(val.trim());\n                    }\n                },\n                attr, attributeName, attributeValues;\n\n            while (i--) {\n                if (dom.name(attributes[i]) != \"colspan\") {\n                    attr = attributes[i];\n                    attributeName = attr.name;\n\n                    if (attributeName === \"style\" && (element.nodeName === \"TD\" || element.nodeName === \"TH\")) {\n                        attributeValues = attr.value.split(\";\");\n                        attributeValues.forEach(addSignificantStyles);\n                    }\n\n                    element.removeAttributeNode(attributes[i]);\n                }\n            }\n\n            if (significantStyles.length > 0) {\n                element.setAttribute(\"style\", significantStyles.join(\";\"));\n            }\n        },\n\n        createColGroup: function(row) {\n            var cells = row.cells;\n            var table = $(row).closest(\"table\");\n            var colgroup = table.children(\"colgroup\");\n\n            if (cells.length < 2) {\n                return;\n            } else if (colgroup.length) {\n                cells = colgroup.children();\n                colgroup[0].parentNode.removeChild(colgroup[0]);\n            }\n\n            colgroup = $($.map(cells, function(cell) {\n                    var width = cell.width;\n                    if (width && parseInt(width, 10) !== 0) {\n                        return kendo.format('<col style=\"width:{0}px;\"/>', width);\n                    }\n\n                    return \"<col />\";\n                }).join(\"\"));\n\n            // jquery 1.9/2.0 discrepancy\n            if (!colgroup.is(\"colgroup\")) {\n                colgroup = $(\"<colgroup/>\").append(colgroup);\n            }\n\n            colgroup.prependTo(table);\n        },\n\n        convertHeaders: function(row) {\n            var cells = row.cells,\n                i,\n                boldedCells = $.map(cells, function(cell) {\n                    var child = $(cell).children(\"p\").children(\"strong\")[0];\n\n                    if (child && dom.name(child) == \"strong\") {\n                        return child;\n                    }\n                });\n\n            if (boldedCells.length == cells.length) {\n                for (i = 0; i < boldedCells.length; i++) {\n                    dom.unwrap(boldedCells[i]);\n                }\n\n                $(row).closest(\"table\")\n                    .find(\"colgroup\").after(\"<thead></thead>\").end()\n                    .find(\"thead\").append(row);\n\n                for (i = 0; i < cells.length; i++) {\n                    dom.changeTag(cells[i], \"th\");\n                }\n            }\n        },\n\n        removeParagraphs: function(cells) {\n            var i, j, len, cell, paragraphs;\n\n            for (i = 0; i < cells.length; i++) {\n                this.removeAttributes(cells[i]);\n\n                // remove paragraphs and insert line breaks between them\n                cell = $(cells[i]);\n                paragraphs = cell.children(\"p\");\n\n                for (j = 0, len = paragraphs.length; j < len; j++) {\n                    if (j < len - 1) {\n                        dom.insertAfter(dom.create(document, \"br\"), paragraphs[j]);\n                    }\n\n                    dom.unwrap(paragraphs[j]);\n                }\n            }\n        },\n\n        removeTextNodes: function(trs) {\n            var i, j, childNodes, currentNode, row;\n\n            for (i = 0; i < trs.length; i++) {\n                row = trs[i];\n                childNodes = row.childNodes;\n\n                for (j = 0; j < childNodes.length; j++) {\n                    currentNode = childNodes[j];\n\n                    if (currentNode.nodeType === dom.nodeTypes.TEXT_NODE) {\n                        row.removeChild(currentNode);\n                    }\n                }\n            }\n        },\n\n        tables: function(placeholder) {\n            var tables = $(placeholder).find(\"table\"),\n                that = this,\n                rows,\n                firstRow, longestRow, i, j;\n\n            for (i = 0; i < tables.length; i++) {\n                rows = tables[i].rows;\n                longestRow = firstRow = rows[0];\n\n                for (j = 1; j < rows.length; j++) {\n                    if (rows[j].cells.length > longestRow.cells.length) {\n                        longestRow = rows[j];\n                    }\n                }\n\n                that.createColGroup(longestRow);\n                that.convertHeaders(firstRow);\n\n                that.removeAttributes(tables[i]);\n\n                that.removeParagraphs(tables.eq(i).find(\"td,th\"));\n\n                that.removeTextNodes(tables.eq(i).find(\"tr\"));\n            }\n        },\n\n        headers: function(placeholder) {\n            var titles = $(placeholder).find(\"p.MsoTitle\");\n\n            for (var i = 0; i < titles.length; i++) {\n                dom.changeTag(titles[i], \"h1\");\n            }\n        },\n\n        removeFormatting: function(placeholder) {\n            $(placeholder).find(\"*\").each(function() {\n                $(this).css({\n                    fontSize: \"\",\n                    fontFamily: \"\"\n                });\n\n                if (!this.getAttribute(\"style\") && !this.style.cssText) {\n                    this.removeAttribute(\"style\");\n                }\n            });\n        },\n\n        clean: function(html) {\n            var that = this, placeholder;\n            var filters = this.options;\n\n            if (filters.none) {\n                html = Cleaner.fn.clean.call(that, html, this.junkReplacements);\n                html = that.stripEmptyAnchors(html);\n            } else {\n\n                html = filters.msConvertLists ? this.extractListLevels(html) : html;\n                html = Cleaner.fn.clean.call(that, html);\n                html = that.stripEmptyAnchors(html);\n\n                placeholder = dom.create(document, 'div', { innerHTML: html });\n                that.headers(placeholder);\n\n                if (filters.msConvertLists) {\n                    that.lists(placeholder);\n                }\n                that.tables(placeholder);\n\n                if (filters.msAllFormatting) {\n                    that.removeFormatting(placeholder);\n                }\n\n                html = placeholder.innerHTML.replace(/(<[^>]*)\\s+class=\"?[^\"\\s>]*\"?/ig, '$1');\n            }\n\n            return html;\n        }\n    });\n\n    var WebkitFormatCleaner = Cleaner.extend({\n        init: function(options) {\n            Cleaner.fn.init.call(this, options);\n\n            this.replacements = [\n                /\\s+class=\"Apple-style-span[^\"]*\"/gi, '',\n                /<(div|p|h[1-6])\\s+style=\"[^\"]*\"/gi, '<$1',\n                /^<div>(.*)<\\/div>$/, '$1'\n            ];\n        },\n\n        applicable: function(html) {\n            return (/class=\"?Apple-style-span|style=\"[^\"]*-webkit-nbsp-mode/i).test(html);\n        }\n    });\n\n    var DomCleaner = Cleaner.extend({\n        clean: function(html) {\n            var container = dom.create(document, 'div', { innerHTML: html });\n            container = this.cleanDom(container);\n            return container.innerHTML;\n        },\n\n        cleanDom: function(container) {\n            return container;\n        }\n    });\n\n    var HtmlTagsCleaner = DomCleaner.extend({\n        cleanDom: function(container) {\n            var tags = this.collectTags();\n\n            $(container).find(tags).each(function() {\n                dom.unwrap(this);\n            });\n\n            return container;\n        },\n\n        collectTags: function() {\n            if (this.options.span) {\n                return \"span\";\n            }\n        },\n\n        applicable: function() {\n            return this.options.span;\n        }\n    });\n\n    var HtmlAttrCleaner = DomCleaner.extend({\n        cleanDom: function(container) {\n            var attributes = this.collectAttr();\n            var nodes = $(container).find(\"[\" + attributes.join(\"],[\") + \"]\");\n            nodes.removeAttr(attributes.join(\" \"));\n\n            return container;\n        },\n\n        collectAttr: function() {\n            if (this.options.css) {\n                return [\"class\", \"style\"];\n            }\n\n            return [];\n        },\n\n        applicable: function() {\n            return this.options.css;\n        }\n    });\n\n    var TextContainer = function() {\n        this.text = \"\";\n        this.add = function(text) {\n            this.text += text;\n        };\n    };\n\n    var HtmlTextLines = Class.extend({\n        init: function(separators) {\n            this.separators = separators || {\n                    text: \" \",\n                    line: \"<br/>\"\n                };\n            this.lines = [];\n            this.inlineBlockText = [];\n            this.resetLine();\n        },\n\n        appendText: function(text) {\n            if (text.nodeType === 3) {\n                text = text.nodeValue;\n            }\n\n            this.textContainer.add(text);\n        },\n\n        appendInlineBlockText: function(text) {\n            this.inlineBlockText.push(text);\n        },\n\n        flashInlineBlockText: function() {\n            if (this.inlineBlockText.length) {\n                this.appendText(this.inlineBlockText.join(\" \"));\n                this.inlineBlockText = [];\n            }\n        },\n\n        endLine: function() {\n            this.flashInlineBlockText();\n            this.resetLine();\n        },\n\n        html: function() {\n            var separators = this.separators;\n            var result = \"\";\n            var lines = this.lines;\n\n            this.flashInlineBlockText();\n\n            for (var i = 0, il = lines.length, il1 = il - 1; i < il; i++) {\n                var line = lines[i];\n                for (var j = 0, jl = line.length, jl1 = jl - 1; j < jl; j++) {\n                    var text = line[j].text;\n                    result += text;\n                    if (j !== jl1) {\n                        result += separators.text;\n                    }\n                }\n                if (i !== il1) {\n                    result += separators.line;\n                }\n            }\n\n            return result;\n        },\n\n        resetLine: function() {\n            this.textContainer = new TextContainer();\n            this.line = [];\n            this.line.push(this.textContainer);\n            this.lines.push(this.line);\n        }\n    });\n\n    var DomEnumerator = Class.extend({\n        init: function(callback) {\n            this.callback = callback;\n        },\n        enumerate: function(node) {\n            if (!node) {\n                return;\n            }\n\n            var preventDown = this.callback(node);\n\n            var child = node.firstChild;\n            if (!preventDown && child) {\n                this.enumerate(child);\n            }\n\n            this.enumerate(node.nextSibling);\n        }\n    });\n\n    var HtmlContentCleaner = Cleaner.extend({\n        init: function(options) {\n            Cleaner.fn.init.call(this, options);\n            this.hasText = false; //unpleasant flag to prevent an empty line at the beginning of the generated content.\n            this.enumerator = new DomEnumerator(this.buildText.bind(this));\n        },\n\n        clean: function(html) {\n            var container = dom.create(document, 'div', { innerHTML: html });\n\n            return this.cleanDom(container);\n        },\n\n        cleanDom: function(container) {\n            this.separators = this.getDefaultSeparators();\n            this.htmlLines = new HtmlTextLines(this.separators);\n            this.enumerator.enumerate(container.firstChild);\n            this.hasText = false;\n\n            return this.htmlLines.html();\n        },\n\n        buildText: function(node) {\n            if (dom.isDataNode(node)) {\n                if (dom.isEmptyspace(node)) {\n                    return;\n                }\n                this.htmlLines.appendText(node.nodeValue.replace('\\n', this.separators.line));\n                this.hasText = true;\n            } else if (dom.isBlock(node) && this.hasText) {\n                var action = this.actions[dom.name(node)] || this.actions.block;\n                return action(this, node);\n            } else if (dom.isBr(node)) {\n                this.htmlLines.appendText(this.separators.line);\n            }\n        },\n\n        applicable: function() {\n            var o = this.options;\n            return o.all || o.keepNewLines;\n        },\n\n        getDefaultSeparators: function() {\n            if (this.options.all) {\n                return { text: \" \", line: \" \" };\n            } else {\n                return { text: \" \", line: \"<br/>\" };\n            }\n        },\n\n        actions: {\n            ul: $.noop,\n            ol: $.noop,\n            table: $.noop,\n            thead: $.noop,\n            tbody: $.noop,\n            td: function(cleaner, node) {\n                var tdCleaner = new HtmlContentCleaner({ all: true });\n\n                var cellText = tdCleaner.cleanDom(node);\n                cleaner.htmlLines.appendInlineBlockText(cellText);\n\n                return true;\n            },\n\n            block: function(cleaner) {\n                cleaner.htmlLines.endLine();\n            }\n        }\n    });\n\n    var CustomCleaner = Cleaner.extend({\n        clean: function(html) {\n            return this.options.custom(html);\n        },\n\n        applicable: function() {\n            return typeof(this.options.custom) === \"function\";\n        }\n    });\n\n    extend(editorNS, {\n        Clipboard: Clipboard,\n        Cleaner: Cleaner,\n        ScriptCleaner: ScriptCleaner,\n        TabCleaner: TabCleaner,\n        MSWordFormatCleaner: MSWordFormatCleaner,\n        WebkitFormatCleaner: WebkitFormatCleaner,\n        HtmlTagsCleaner: HtmlTagsCleaner,\n        HtmlAttrCleaner: HtmlAttrCleaner,\n        HtmlContentCleaner: HtmlContentCleaner,\n        HtmlTextLines: HtmlTextLines,\n        CustomCleaner: CustomCleaner\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        editorNS = kendo.ui.editor,\n        RangeUtils = editorNS.RangeUtils,\n        dom = editorNS.Dom,\n        RestorePoint = editorNS.RestorePoint,\n        Marker = editorNS.Marker,\n        browser = kendo.support.browser,\n        bomSpan = \"<span  class='k-br'>\\ufeff</span>\",\n        extend = $.extend;\n    var nodeTypes = dom.nodeTypes;\n    var PREVIOUS_SIBLING = \"previousSibling\";\n\n    function selected(node, range) {\n        return range.startContainer === node && range.endContainer === node &&\n            range.startOffset === 0 && range.endOffset == node.childNodes.length;\n    }\n\n    function getSibling(node, direction, condition) {\n        var sibling = node ? node[direction] : null;\n\n        while (sibling && !condition(sibling)) {\n            sibling = sibling[direction];\n        }\n\n        return sibling;\n    }\n\n    var tableCells = \"td,th,caption\";\n    var tableCellsWrappers = \"table,tbody,thead,tfoot,tr\";\n    var tableElements = tableCellsWrappers + \",\" + tableCells;\n    var inTable = function(range) { return !range.collapsed && $(range.commonAncestorContainer).is(tableCellsWrappers); };\n\n    var RemoveTableContent = Class.extend({\n        remove: function(range) {\n            var that = this;\n            var marker = new Marker();\n            marker.add(range, false);\n\n            var nodes = RangeUtils.getAll(range, function(node) { return $(node).is(tableElements); });\n            var doc = RangeUtils.documentFromRange(range);\n            var start = marker.start;\n            var end = marker.end;\n            var cellsTypes = tableCells.split(\",\");\n            var startCell = dom.parentOfType(start, cellsTypes);\n            var endCell = dom.parentOfType(end, cellsTypes);\n            that._removeContent(start, startCell, true);\n            that._removeContent(end, endCell, false);\n            $(nodes).each(function(i, node) {\n                node = $(node);\n                (node.is(tableCells) ? node : node.find(tableCells)).each(function(j, cell) {\n                    cell.innerHTML = \"&#65279;\";\n                });\n            });\n            if (startCell && !start.previousSibling) {\n                dom.insertBefore(doc.createTextNode(\"\\ufeff\"), start);\n            }\n            if (endCell && !end.nextSibling) {\n                dom.insertAfter(doc.createTextNode(\"\\ufeff\"), end);\n            }\n            if (startCell) {\n                range.setStartBefore(start);\n            } else if (nodes[0]) {\n                startCell = $(nodes[0]);\n                startCell = startCell.is(tableCells) ? startCell : startCell.find(tableCells).first();\n                if (startCell.length) {\n                    range.setStart(startCell.get(0), 0);\n                }\n            }\n\n            range.collapse(true);\n\n            dom.remove(start);\n            dom.remove(end);\n        },\n        _removeContent: function(start, top, forwards) {\n            if (top) {\n                var sibling = forwards ? \"nextSibling\" : \"previousSibling\",\n                    next,\n                    getNext = function(node) {\n                        while (node && !node[sibling]) {\n                            node = node.parentNode;\n                        }\n                        return node && $.contains(top, node) ? node[sibling] : null;\n                    };\n                start = getNext(start);\n                while (start) {\n                    next = getNext(start);\n                    dom.remove(start);\n                    start = next;\n                }\n            }\n        }\n    });\n\n    var TypingHandler = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n        },\n\n        keydown: function(e) {\n            var that = this,\n                editor = that.editor,\n                keyboard = editor.keyboard,\n                isTypingKey = keyboard.isTypingKey(e),\n                evt = extend($.Event(), e);\n\n            that.editor.trigger(\"keydown\", evt);\n\n            if (evt.isDefaultPrevented()) {\n                e.preventDefault();\n                return true;\n            }\n\n            if (!evt.isDefaultPrevented() && isTypingKey && !keyboard.isTypingInProgress()) {\n                var range = editor.getRange();\n                var body = editor.body;\n                that.startRestorePoint = new RestorePoint(range, body);\n\n                if (inTable(range)) {\n                    var removeTableContent = new RemoveTableContent(editor);\n                    removeTableContent.remove(range);\n                    editor.selectRange(range);\n                }\n\n                if (browser.webkit && !range.collapsed && selected(body, range)) {\n                    body.innerHTML = \"\";\n                }\n\n                if (editor.immutables && editorNS.Immutables.immutablesContext(range)) {\n                    var backspaceHandler = new editorNS.BackspaceHandler(editor);\n                    backspaceHandler.deleteSelection(range);\n                }\n\n                keyboard.startTyping(function() {\n                    that._removeBomSpan();\n                    that.endRestorePoint = editorNS._finishUpdate(editor, that.startRestorePoint);\n                });\n\n                return true;\n            }\n\n            return false;\n        },\n\n        keyup: function(e) {\n            var keyboard = this.editor.keyboard;\n\n            this.editor.trigger(\"keyup\", e);\n\n            if (keyboard.isTypingInProgress()) {\n                keyboard.endTyping();\n                return true;\n            }\n\n            return false;\n        },\n\n        _removeBomSpan: function() {\n            var node = this.editor.getRange().commonAncestorContainer;\n\n            if (!dom.emptyNode(node)) {\n                if (node.nodeType === 3) {\n                    node = node.parentNode;\n                }\n\n                if (dom.insignificant(node)) {\n                    // typing in an insignificant node\n                    // make it significant\n                    node.textContent = dom.stripBom(node.textContent);\n                    dom.unwrap(node);\n                }\n            }\n        }\n    });\n\n    var BackspaceHandler = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n        },\n        _addCaret: function(container) {\n            var caret = dom.create(this.editor.document, \"a\");\n\n            // Only if not Chrome: Make sure to include cared in the formatted inline node\n            if (!kendo.support.browser.chrome && container.firstChild &&\n                container.firstChild.nodeType === nodeTypes.ELEMENT_NODE) {\n\n                container = container.firstChild;\n            }\n\n            dom.insertAt(container, caret, 0);\n            dom.stripBomNode(caret.previousSibling);\n            dom.stripBomNode(caret.nextSibling);\n            return caret;\n        },\n        _restoreCaret: function(caret) {\n            var range = this.editor.createRange();\n\n            if (!caret.nextSibling && dom.isDataNode(caret.previousSibling)) {\n                range.setStart(caret.previousSibling, caret.previousSibling.length);\n            } else {\n                range.setStartAfter(caret);\n            }\n\n            range.collapse(true);\n            this.editor.selectRange(range);\n            dom.remove(caret);\n        },\n        _handleDelete: function(range) {\n            var node = range.endContainer;\n            var block = dom.closestEditableOfType(node, dom.blockElements);\n\n            if (block && editorNS.RangeUtils.isEndOf(range, block)) {\n                // join with next sibling\n                var next = dom.next(block);\n                if (!next || dom.name(next) != \"p\") {\n                    return false;\n                }\n\n                var caretPlaceholder = dom.significantChildNodes(next)[0];\n                caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder)) ? caretPlaceholder : next;\n                var caret = this._addCaret(caretPlaceholder);\n\n                this._merge(block, next);\n\n                this._restoreCaret(caret);\n\n                return true;\n            }\n\n            return false;\n        },\n        _cleanBomBefore: function(range) {\n            var offset = range.startOffset;\n            var node = range.startContainer;\n            var text = node.nodeValue;\n            var count = 0;\n            while (offset - count >= 0 && text[offset - count - 1] == \"\\ufeff\") {\n                count++;\n            }\n\n            if (count > 0) {\n                node.deleteData(offset - count, count);\n\n                range.setStart(node, Math.max(0, offset - count));\n                range.collapse(true);\n\n                this.editor.selectRange(range);\n            }\n        },\n        _handleBackspace: function(range) {\n            var node = range.startContainer;\n            var li = dom.closestEditableOfType(node, ['li']);\n            var block = dom.closestEditableOfType(node, 'p,h1,h2,h3,h4,h5,h6'.split(','));\n            var editor = this.editor;\n            var previousSibling;\n\n            if (dom.isDataNode(node)) {\n                if (range.collapsed && /^\\s[\\ufeff]+$/.test(node.nodeValue)) {\n                    range.setStart(node, 0);\n                    range.setEnd(node, node.length);\n                    editor.selectRange(range);\n                    return false;\n                }\n                this._cleanBomBefore(range);\n            }\n\n            previousSibling = getSibling(block, PREVIOUS_SIBLING, function(sibling) {\n                return !dom.htmlIndentSpace(sibling);\n            });\n\n            //deleting the first list item with empty content in IE results in invalid range\n            if (range.collapsed && range.startOffset !== range.endOffset && range.startOffset < 0) {\n                range.startOffset = 0;\n                range.endOffset = 0;\n                editor.selectRange(range);\n            }\n\n            var startAtLi = li && editorNS.RangeUtils.isStartOf(range, li);\n            var liIndex = li && $(li).index();\n            var startAtNonFirstLi = startAtLi && liIndex > 0;\n            if (startAtNonFirstLi) {\n                block = li;\n                previousSibling = dom.prev(li);\n            }\n\n            if (block && previousSibling && dom.is(previousSibling, 'table') && editorNS.RangeUtils.isStartOf(range, block)) {\n                if (block.innerText === '') {\n                    block.innerHTML = '\\ufeff';\n                }\n                return true;\n            }\n\n            // outdent\n            if (editorNS.RangeUtils.isStartOf(range, block) && parseInt(block.style.marginLeft,10) > 0) {\n                editor.exec(\"outdent\");\n                return true;\n            }\n\n            // unwrap block\n            if ((block && previousSibling && editorNS.RangeUtils.isStartOf(range, block)) || startAtNonFirstLi) {\n                var caretPlaceholder = dom.significantChildNodes(block)[0];\n                caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder) && !dom.isImg(caretPlaceholder)) ? caretPlaceholder : block;\n\n                var caret = this._addCaret(caretPlaceholder);\n                this._merge(previousSibling, block);\n                this._restoreCaret(caret);\n\n                return true;\n            }\n\n            // unwrap li element\n            if (startAtLi && liIndex === 0) {\n                var child = li.firstChild;\n                if (!child) {\n                    li.innerHTML = editorNS.emptyElementContent;\n                    child = li.firstChild;\n                }\n\n                var formatter = new editorNS.ListFormatter(dom.name(li.parentNode), \"p\");\n                range.selectNodeContents(li);\n                formatter.toggle(range);\n\n                if (dom.insignificant(child)) {\n                    range.setStartBefore(child);\n                } else {\n                    range.setStart(child, 0);\n                }\n\n                editor.selectRange(range);\n\n                return true;\n            }\n\n            var rangeStartNode = node.childNodes[range.startOffset - 1];\n            var linkRange = range;\n            var anchor = rangeStartNode && dom.closestEditableOfType(rangeStartNode, ['a']);\n            var previousNode = getSibling(rangeStartNode || node, PREVIOUS_SIBLING, function(sibling) {\n                return !dom.isDataNode(sibling) || (!dom.isBom(sibling) && sibling.length > 0);\n            });\n            if (anchor || ((range.startOffset === 0 || rangeStartNode) && dom.is(previousNode, \"a\"))) {\n                anchor = anchor || previousNode;\n                linkRange = editor.createRange();\n                linkRange.setStart(anchor, anchor.childNodes.length);\n                linkRange.collapse(true);\n            }\n\n            anchor = anchor || dom.closestEditableOfType(rangeStartNode || linkRange.startContainer, ['a']);\n            var isEndOfLink = anchor && editorNS.RangeUtils.isEndOf(linkRange, anchor);\n            if (isEndOfLink) {\n                var command = new editorNS.UnlinkCommand({ range: linkRange, body: editor.body, immutables: !!editor.immutables });\n                editor.execCommand(command);\n                editor._selectionChange();\n            }\n            return false;\n        },\n        _handleSelection: function(range) {\n            var ancestor = range.commonAncestorContainer;\n            var table = dom.closest(ancestor, \"table\");\n            var emptyParagraphContent = editorNS.emptyElementContent;\n            var editor = this.editor;\n            var parentElementOrNode;\n\n            if (inTable(range)) {\n                var removeTableContent = new RemoveTableContent(editor);\n                removeTableContent.remove(range);\n                editor.selectRange(range);\n                return true;\n            }\n\n            var marker = new Marker();\n            marker.add(range, false);\n\n            if (range.commonAncestorContainer === editor.body) {\n                this._surroundFullyContent(marker, range);\n            }\n\n            if (editor.immutables) {\n                this._handleImmutables(marker);\n            }\n\n            this._surroundFullySelectedAnchor(marker, range);\n\n            range.setStartAfter(marker.start);\n            range.setEndBefore(marker.end);\n\n            var start = range.startContainer;\n            var end = range.endContainer;\n\n            range.deleteContents();\n\n            if (end.tagName.toLocaleLowerCase() === \"li\" && dom.emptyNode(end)) {\n                range.selectNode(end);\n                range.deleteContents();\n            }\n\n            if (table && $(table).text() === \"\") {\n                range.selectNode(table);\n                range.deleteContents();\n            }\n\n            ancestor = range.commonAncestorContainer;\n\n            if (dom.name(ancestor) === \"p\" && ancestor.innerHTML === \"\") {\n                ancestor.innerHTML = emptyParagraphContent;\n                range.setStart(ancestor, 0);\n            }\n\n            this._join(start, end);\n\n            dom.insertAfter(editor.document.createTextNode(\"\\ufeff\"), marker.start);\n            marker.remove(range);\n\n            start = range.startContainer;\n            if (dom.name(start) == \"tr\") {\n                start = start.childNodes[Math.max(0, range.startOffset - 1)];\n                range.setStart(start, dom.getNodeLength(start));\n            }\n\n            range.collapse(true);\n\n            editor.selectRange(range);\n\n            parentElementOrNode = start.parentElement || start.parentNode;\n\n            if (dom.isDataNode(start) && !dom.emptyNode(parentElementOrNode)) {\n                this._cleanBomBefore(range);\n            }\n\n            return true;\n        },\n        _handleImmutables: function(marker) {\n            var immutableParent = editorNS.Immutables.immutableParent;\n            var startImmutable = immutableParent(marker.start);\n            var endImmutable = immutableParent(marker.start);\n            if (startImmutable) {\n                dom.insertBefore(marker.start, startImmutable);\n            }\n            if (endImmutable) {\n                dom.insertAfter(marker.end, endImmutable);\n            }\n            if (startImmutable) {\n                dom.remove(startImmutable);\n            }\n            if (endImmutable && endImmutable.parentNode) {\n                dom.remove(endImmutable);\n            }\n        },\n        _surroundFullyContent: function(marker, range) {\n            var children = range.commonAncestorContainer.children,\n                startParent = children[0],\n                endParent = children[children.length - 1];\n\n            this._moveMarker(marker, range, startParent, endParent);\n        },\n        _surroundFullySelectedAnchor: function(marker, range) {\n            var start = marker.start,\n                startParent = $(start).closest(\"a\").get(0),\n                end = marker.end,\n                endParent = $(end).closest(\"a\").get(0);\n\n            this._moveMarker(marker, range, startParent, endParent);\n        },\n        _moveMarker: function(marker, range, startParent, endParent) {\n            var start = marker.start,\n                end = marker.end;\n\n            if (startParent && RangeUtils.isStartOf(range, startParent)) {\n                dom.insertBefore(start, startParent);\n            }\n\n            if (endParent && RangeUtils.isEndOf(range, endParent)) {\n                dom.insertAfter(end, endParent);\n            }\n        },\n        _root: function(node) {\n            while (node && dom.name(node) != \"body\" && node.parentNode && dom.name(node.parentNode) != \"body\") {\n                node = node.parentNode;\n            }\n\n            return node;\n        },\n        _join: function(start, end) {\n            start = this._root(start);\n            end = this._root(end);\n\n            if (start != end && dom.is(end, \"p\")) {\n                this._merge(start, end);\n            }\n        },\n        _merge: function(dest, src) {\n            dom.removeTrailingBreak(dest);\n\n            while (dest && src.firstChild) {\n                if (dest.nodeType == 1) {\n                    dest = dom.list(dest) ? dest.children[dest.children.length - 1] : dest;\n\n                    if (dest) {\n                        dest.appendChild(src.firstChild);\n                    }\n                } else if (dest.nodeType === nodeTypes.TEXT_NODE) {\n                    this._mergeWithTextNode(dest, src.firstChild);\n                } else {\n                    dest.parentNode.appendChild(src.firstChild);\n                }\n            }\n\n            dom.remove(src);\n        },\n\n        _mergeWithTextNode: function(textNode, appendedNode) {\n            if (textNode && textNode.nodeType === nodeTypes.TEXT_NODE) {\n                if (textNode.nextSibling && this._isCaret(textNode.nextSibling)) {\n                    dom.insertAfter(appendedNode, textNode.nextSibling);\n                }\n                else {\n                    dom.insertAfter(appendedNode, textNode);\n                }\n            }\n        },\n\n        _isCaret: function(element) {\n            return $(element).is(\"a\");\n        },\n\n        keydown: function(e) {\n            var method, startRestorePoint;\n            var editor = this.editor;\n            var range = editor.getRange();\n            var keyCode = e.keyCode;\n            var keys = kendo.keys;\n            var backspace = keyCode === keys.BACKSPACE;\n            var del = keyCode == keys.DELETE;\n\n            if (editor.immutables && editor.immutables.keydown(e, range)) {\n                return;\n            }\n\n            if ((backspace || del) && !range.collapsed) {\n                method = \"_handleSelection\";\n            } else if (backspace) {\n                method = \"_handleBackspace\";\n            } else if (del) {\n                method = \"_handleDelete\";\n            }\n\n            if (!method) {\n                return;\n            }\n\n            startRestorePoint = new RestorePoint(range, editor.body);\n\n            if (this[method](range)) {\n                e.preventDefault();\n\n                editorNS._finishUpdate(editor, startRestorePoint);\n            }\n        },\n        deleteSelection: function(range) {\n            this._handleSelection(range);\n        },\n        keyup: $.noop\n    });\n\n    var SystemHandler = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n            this.systemCommandIsInProgress = false;\n        },\n\n        createUndoCommand: function() {\n            this.startRestorePoint = this.endRestorePoint = editorNS._finishUpdate(this.editor, this.startRestorePoint);\n        },\n\n        changed: function() {\n            if (this.startRestorePoint) {\n                return this.startRestorePoint.html != this.editor.body.innerHTML;\n            }\n\n            return false;\n        },\n\n        keydown: function(e) {\n            var that = this,\n                editor = that.editor,\n                keyboard = editor.keyboard;\n\n            if (keyboard.isModifierKey(e)) {\n\n                if (keyboard.isTypingInProgress()) {\n                    keyboard.endTyping(true);\n                }\n\n                that.startRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n                return true;\n            }\n\n            if (keyboard.isSystem(e)) {\n                that.systemCommandIsInProgress = true;\n\n                if (that.changed()) {\n                    that.systemCommandIsInProgress = false;\n                    that.createUndoCommand();\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        keyup: function() {\n            var that = this;\n\n            if (that.systemCommandIsInProgress && that.changed()) {\n                that.systemCommandIsInProgress = false;\n                that.createUndoCommand();\n                return true;\n            }\n\n            return false;\n        }\n    });\n\n    var SelectAllHandler = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n        },\n\n        keydown: function(e) {\n            if (!browser.webkit || e.isDefaultPrevented() ||\n                !(e.ctrlKey && e.keyCode == 65 && !e.altKey && !e.shiftKey)) {\n                return;\n            }\n            if (this.editor.options.immutables) {\n                this._toSelectableImmutables();\n            }\n            this._selectEditorBody();\n        },\n\n        _selectEditorBody: function() {\n            var editor = this.editor;\n            var range = editor.getRange();\n            range.selectNodeContents(editor.body);\n\n            setTimeout(function() {\n                editor.selectRange(range);\n            });\n        },\n\n        _toSelectableImmutables: function() {\n            var editor = this.editor,\n                body = editor.body,\n                immutable = editorNS.Immutables.immutable,\n                emptyTextNode = dom.emptyTextNode,\n                first = body.firstChild,\n                last = body.lastChild;\n\n            while (emptyTextNode(first)) {\n                first = first.nextSibling;\n            }\n\n            while (emptyTextNode(last)) {\n                last = last.previousSibling;\n            }\n\n            if (first && immutable(first)) {\n                $(bomSpan).prependTo(body);\n            }\n\n            if (last && immutable(last)) {\n                $(bomSpan).appendTo(body);\n            }\n        },\n\n        keyup: $.noop\n    });\n\n    var Keyboard = Class.extend({\n        init: function(handlers) {\n            this.handlers = handlers;\n            this.typingInProgress = false;\n        },\n\n        isCharacter: function(keyCode) {\n            return (keyCode >= 48 && keyCode <= 90) || (keyCode >= 96 && keyCode <= 111) ||\n                   (keyCode >= 186 && keyCode <= 192) || (keyCode >= 219 && keyCode <= 222) ||\n                   keyCode == 229;\n        },\n\n        toolFromShortcut: function(tools, e) {\n            var key = String.fromCharCode(e.keyCode),\n                toolName,\n                toolOptions,\n                modifier = this._getShortcutModifier(e, navigator.platform);\n\n            for (toolName in tools) {\n                toolOptions = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n                if ((toolOptions.key == key || toolOptions.key == e.keyCode) &&\n                    toolOptions.ctrl == modifier &&\n                    toolOptions.alt == e.altKey &&\n                    toolOptions.shift == e.shiftKey) {\n                    return toolName;\n                }\n            }\n        },\n\n        _getShortcutModifier: function(e, platform) {\n            var mac = platform.toUpperCase().indexOf('MAC') >= 0;\n            return mac ? e.metaKey : e.ctrlKey;\n        },\n\n        toolsFromShortcut: function(tools, e) {\n            var key = String.fromCharCode(e.keyCode),\n                toolName,\n                o,\n                matchesKey,\n                found = [];\n            var matchKey = function(toolKey) { return toolKey == key || toolKey == e.keyCode || toolKey == e.charCode; };\n\n            for (toolName in tools) {\n                o = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n                matchesKey = Array.isArray(o.key) ? $.grep(o.key, matchKey).length > 0 : matchKey(o.key);\n                if (matchesKey &&\n                    o.ctrl == e.ctrlKey &&\n                    o.alt == e.altKey &&\n                    o.shift == e.shiftKey) {\n                    found.push(tools[toolName]);\n                }\n            }\n\n            return found;\n        },\n\n        isTypingKey: function(e) {\n            var keyCode = e.keyCode;\n            return (this.isCharacter(keyCode) && !e.ctrlKey && !e.altKey) ||\n                   keyCode == 32 || keyCode == 13 || keyCode == 8 ||\n                   (keyCode == 46 && !e.shiftKey && !e.ctrlKey && !e.altKey);\n        },\n\n        isModifierKey: function(e) {\n            var keyCode = e.keyCode;\n            return (keyCode == 17 && !e.shiftKey && !e.altKey) ||\n                   (keyCode == 16 && !e.ctrlKey && !e.altKey) ||\n                   (keyCode == 18 && !e.ctrlKey && !e.shiftKey);\n        },\n\n        isSystem: function(e) {\n            return e.keyCode == 46 && e.ctrlKey && !e.altKey && !e.shiftKey;\n        },\n\n        startTyping: function(callback) {\n            this.onEndTyping = callback;\n            this.typingInProgress = true;\n        },\n\n        stopTyping: function() {\n            if (this.typingInProgress && this.onEndTyping) {\n                this.onEndTyping();\n            }\n            this.typingInProgress = false;\n        },\n\n        endTyping: function(force) {\n            var that = this;\n            that.clearTimeout();\n            if (force) {\n                that.stopTyping();\n            } else {\n                that.timeout = window.setTimeout(that.stopTyping.bind(that), 1000);\n            }\n        },\n\n        isTypingInProgress: function() {\n            return this.typingInProgress;\n        },\n\n        clearTimeout: function() {\n            window.clearTimeout(this.timeout);\n        },\n\n        notify: function(e, what) {\n            var i, handlers = this.handlers;\n\n            for (i = 0; i < handlers.length; i++) {\n                if (handlers[i][what](e)) {\n                    break;\n                }\n            }\n        },\n\n        keydown: function(e) {\n            this.notify(e, 'keydown');\n        },\n\n        keyup: function(e) {\n            this.notify(e, 'keyup');\n        }\n    });\n\n    extend(editorNS, {\n        TypingHandler: TypingHandler,\n        SystemHandler: SystemHandler,\n        BackspaceHandler: BackspaceHandler,\n        SelectAllHandler: SelectAllHandler,\n        Keyboard: Keyboard\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            editorNS = kendo.ui.editor,\n            Command = editorNS.Command,\n            EditorUtils = editorNS.EditorUtils,\n            registerTool = EditorUtils.registerTool,\n            Tool = editorNS.Tool,\n            extend = $.extend;\n\n    var ExportPdfCommand = Command.extend({\n        init: function(options) {\n            this.async = true;\n            Command.fn.init.call(this, options);\n        },\n\n        exec: function() {\n            var that = this;\n            var range = that.lockRange(true);\n            var editor = that.editor;\n\n            editor._destroyResizings();\n\n            editor.saveAsPDF().then(function() {\n                that.releaseRange(range);\n                editor._initializeColumnResizing();\n                editor._initializeRowResizing();\n                editor._initializeElementResizing();\n            });\n        }\n    });\n\n    extend(editorNS, {\n        ExportPdfCommand: ExportPdfCommand\n    });\n\n    registerTool(\"pdf\", new Tool({ command: ExportPdfCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        // Imports ================================================================\n        var kendo = window.kendo,\n            editorNS = kendo.ui.editor,\n            Command = editorNS.Command,\n            EditorUtils = editorNS.EditorUtils,\n            registerTool = EditorUtils.registerTool,\n            Tool = editorNS.Tool,\n            extend = $.extend;\n\n    var PrintCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n\n            this.managesUndoRedo = true;\n        },\n\n        exec: function() {\n            var editor = this.editor;\n\n            if (kendo.support.browser.msie) {\n                editor.document.execCommand(\"print\", false, null);\n            } else if (editor.window.print) {\n                editor.window.print();\n            }\n        }\n    });\n\n    extend(editorNS, {\n        PrintCommand: PrintCommand\n    });\n\n    registerTool(\"print\", new Tool({ command: PrintCommand }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    var kendo = window.kendo,\n        Editor = kendo.ui.editor,\n        Tool = Editor.Tool,\n        Command = Editor.Command,\n        EditorUtils = Editor.EditorUtils,\n        dom = Editor.Dom,\n        RangeUtils = Editor.RangeUtils,\n        registerTool = EditorUtils.registerTool;\n\n    var CopyFormatCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n        },\n\n        exec: function() {\n            var range = this.lockRange(true);\n            this.inlineStyles = [];\n            this.blockStyles = [];\n            this.collectStyles(range);\n            this.editor.inlineStyles = this.inlineStyles;\n            this.editor.blockStyles = this.blockStyles;\n            this.releaseRange(range);\n        },\n\n        collectStyles: function(range) {\n            var rangeNodes = RangeUtils.nodes(range);\n            var node;\n\n            if (rangeNodes.length === 1) {\n                node = rangeNodes[0].parentNode;\n            } else {\n                node = range.startContainer;\n            }\n\n            while (node && !dom.is(node, \"body\") && node.getAttribute(\"data-role\") !== \"editor\") {\n                if (dom.isBlock(node)) {\n                    this.populateStyles(node, \"blockStyles\");\n                    if (dom.is(node, \"li\")) {\n                        node = node.parentNode;\n                    } else {\n                        node = null;\n                    }\n                } else {\n                    this.populateStyles(node, \"inlineStyles\");\n                    node = node.parentNode;\n                }\n            }\n        },\n\n        populateStyles: function(node, destination) {\n            var styles = node.style;\n            var attributes = node.attributes;\n            var nodeStyles = {\n                tags: [ node.tagName ],\n                attr: {\n                    style: {}\n                }\n            };\n            var styleValue, styleKey, attributeKey, attributeValue, i;\n\n            for (i = 0; styles && i < styles.length; i++) {\n                styleKey = styles[i];\n                styleValue = styles[styleKey];\n                nodeStyles.attr.style[styleKey] = styleValue;\n            }\n\n            for (i = 0; attributes && i < attributes.length; i++) {\n                attributeKey = attributes[i].nodeName;\n                attributeValue = attributes[i].nodeValue;\n                if (attributeKey === \"style\") {\n                    continue;\n                } else if (attributeKey === \"class\") {\n                    nodeStyles.attr.className = attributeValue;\n                } else {\n                    nodeStyles.attr[attributeKey] = attributeValue;\n                }\n            }\n\n            this[destination].push(nodeStyles);\n        }\n    });\n\n    var ApplyFormatCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n        },\n\n        exec: function() {\n            var range = this.lockRange(true);\n            var markers = RangeUtils.getMarkers(range);\n            var editor = this.editor;\n            var inlineStyles = editor.inlineStyles;\n            var blockStyles = editor.blockStyles;\n            var nodes;\n\n            if ((!inlineStyles || inlineStyles.length === 0) && (!blockStyles || blockStyles.length === 0)) {\n                return;\n            }\n\n            if (markers.length === 3) {\n                this.marker.removeCaret(range);\n                this.marker.caret = null;\n            }\n\n            this.removeEmptyElementsFromRange(range);\n            nodes = RangeUtils.nodes(range);\n            this.cleanInlineParents(nodes);\n            dom.normalize(range.commonAncestorContainer);\n\n            if (markers.length === 2) {\n                range.setStartAfter(markers[0]);\n                range.setEndBefore(markers[1]);\n            } else {\n                range.setStartBefore(nodes[0]);\n                range.setEndAfter(nodes[0]);\n            }\n\n            nodes = RangeUtils.nodes(range);\n\n            if (nodes && blockStyles && blockStyles.length) {\n                this.applyBlockStyles(nodes, blockStyles);\n            }\n\n            if (nodes && inlineStyles && inlineStyles.length) {\n                this.applyInlineStyles(nodes, inlineStyles);\n            }\n\n            this.releaseRange(range);\n        },\n\n        removeEmptyElementsFromRange: function(range) {\n            var isEmptyInline = function(node) {\n                return dom.isInline(node) && !node.firstChild && !dom.isMarker(node);\n            };\n            var emptyElements, i;\n\n            emptyElements = RangeUtils.getAll(range, isEmptyInline);\n\n            if (emptyElements && emptyElements.length > 0) {\n                for (i = 0; i < emptyElements.length; i++) {\n                    emptyElements[i].parentNode.removeChild(emptyElements[i]);\n                }\n            }\n        },\n\n        cleanInlineParents: function(nodes) {\n            var i, node, parent, children, j, child, newNode;\n\n            for (i = 0; i < nodes.length; i++) {\n                node = nodes[i];\n                parent = node.parentNode;\n\n                if (this.immutableParent(node)) {\n                    continue;\n                }\n\n                while (parent && dom.isInline(parent)) {\n                    children = parent.childNodes;\n\n                    for (j = 0; j < children.length; j++) {\n                        child = children[j];\n\n                        if (!dom.isMarker(child) && child !== node) {\n                            newNode = parent.cloneNode(true);\n                            newNode.innerHTML = \"\";\n                            dom.wrap(child, newNode);\n                        }\n                    }\n\n                    dom.unwrap(parent);\n                    parent = node.parentNode;\n                }\n            }\n        },\n\n        applyBlockStyles: function(nodes, blockStyles) {\n            var formatTag = blockStyles[0].tags[0];\n            var attr = blockStyles[0].attr;\n            var document = this.editor.document;\n            var i, len, node, wrapper, blockParent, outerWrapper;\n            var previousNodes, nextNodes, previous, next, prevWrapper, nextWrapper, child, j, listItems;\n\n            for (i = 0, len = nodes.length; i < len; i++) {\n                node = nodes[i];\n\n                if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                    continue;\n                }\n\n                blockParent = dom.blockParentOrBody(node);\n\n                if (blockParent.tagName !== \"BODY\" && blockParent.tagName !== formatTag) {\n                    if (blockParent.tagName !== \"LI\" && blockParent.tagName !== \"TD\" && blockParent.tagName !== \"TH\") {\n                        previousNodes = [];\n                        nextNodes = [];\n                        previous = node.previousSibling;\n                        next = node.nextSibling;\n\n                        while (previous) {\n                            if (!dom.isMarker(previous)) {\n                                previousNodes.push(previous);\n                            }\n\n                            previous = previous.previousSibling;\n                        }\n\n                        if (previousNodes.length) {\n                            prevWrapper = blockParent.cloneNode(true);\n                            prevWrapper.innerHTML = \"\";\n                            dom.insertBefore(prevWrapper, previousNodes[0]);\n\n                            for (j = 0; j < previousNodes.length; j++) {\n                                child = previousNodes[j];\n                                dom.insertAt(prevWrapper, child, 0);\n                            }\n                        }\n\n                        while (next) {\n                            if (!dom.isMarker(next)) {\n                                nextNodes.push(next);\n                            }\n\n                            next = next.nextSibling;\n                        }\n\n                        if (nextNodes.length) {\n                            nextWrapper = blockParent.cloneNode(true);\n                            nextWrapper.innerHTML = \"\";\n                            dom.insertBefore(nextWrapper, nextNodes[0]);\n\n                            for (j = 0; j < nextNodes.length; j++) {\n                                child = nextNodes[j];\n                                nextWrapper.appendChild(child);\n                            }\n                        }\n\n                        dom.unwrap(blockParent);\n                    }\n\n                    wrapper = dom.create(document, formatTag, attr);\n                    dom.wrap(node, wrapper);\n                } else if (blockParent.tagName === formatTag) {\n                    dom.attr(blockParent, attr);\n                }\n            }\n\n            if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\" && formatTag === \"LI\") {\n                listItems = [];\n\n                while (dom.is(wrapper, \"li\")) {\n                    listItems.push(wrapper);\n                    wrapper = dom.prev(wrapper);\n                }\n\n                outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n                dom.insertBefore(outerWrapper, listItems[listItems.length - 1]);\n                outerWrapper.appendChild(listItems[0]);\n\n                for (i = 1, len = listItems.length; i < len; i++) {\n                    dom.insertBefore(listItems[i], outerWrapper.firstChild);\n                }\n            } else if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\") {\n                outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n                dom.wrap(wrapper, outerWrapper);\n            }\n        },\n\n        applyInlineStyles: function(nodes, inlineStyles) {\n            var document = this.editor.document;\n            var currentStyle, createdNode, topNode, i, newNode, node;\n\n            for (i = 0; i < inlineStyles.length; i++) {\n                currentStyle = inlineStyles[i];\n                createdNode = dom.create(document, currentStyle.tags[0], currentStyle.attr);\n\n                if (topNode) {\n                    createdNode.appendChild(topNode);\n                }\n\n                topNode = createdNode;\n            }\n\n            if (topNode) {\n                for (i = 0; i < nodes.length; i++) {\n                    node = nodes[i];\n                    if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                        continue;\n                    }\n                    newNode = topNode.cloneNode(true);\n                    dom.insertBefore(newNode, node);\n\n                    while (newNode.children && newNode.children.length) {\n                        newNode = newNode.children[0];\n                    }\n\n                    newNode.appendChild(node);\n                }\n            }\n        },\n\n        immutables: function() {\n            return this.editor && this.editor.options.immutables;\n        },\n\n        immutableParent: function(node) {\n            return this.immutables() && Editor.Immutables.immutableParent(node);\n        }\n    });\n\n    var CopyFormatTool = Tool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n        },\n\n        command: function(commandArguments) {\n            return new CopyFormatCommand(commandArguments);\n        }\n    });\n\n    var ApplyFormatTool = Tool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n        },\n\n        command: function(commandArguments) {\n            return new ApplyFormatCommand(commandArguments);\n        }\n    });\n\n    $.extend(Editor, {\n        CopyFormatCommand: CopyFormatCommand,\n        ApplyFormatCommand: ApplyFormatCommand,\n        CopyFormatTool: CopyFormatTool,\n        ApplyFormatTool: ApplyFormatTool\n    });\n\n    registerTool(\"copyFormat\", new CopyFormatTool({ }));\n    registerTool(\"applyFormat\", new ApplyFormatTool({ }));\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        const kendo = window.kendo,\n            extend = $.extend,\n            Editor = kendo.ui.editor,\n            formats = kendo.ui.Editor.fn.options.formats,\n            dom = Editor.Dom,\n            Tool = Editor.Tool,\n            DelayedExecutionTool = Editor.DelayedExecutionTool,\n            BlockFormatter = Editor.BlockFormatter,\n            FormatCommand = Editor.FormatCommand,\n            GreedyInlineFormatFinder = Editor.GreedyInlineFormatFinder,\n            EditorUtils = Editor.EditorUtils,\n            registerTool = EditorUtils.registerTool,\n            registerFormat = EditorUtils.registerFormat,\n            RangeUtils = Editor.RangeUtils;\n\n        const LineHeightCommand = FormatCommand.extend({\n            exec: function() {\n                const cmd = this,\n                    range = cmd.lockRange(true),\n                    nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n                cmd.formatter.format[0].attr.style.lineHeight = cmd.options.value.lineHeight;\n                cmd.formatter.apply(nodes);\n                cmd.releaseRange(range);\n            }\n        });\n\n        const LineHeightFormatTool = DelayedExecutionTool.extend({\n            init: function(options) {\n                Tool.fn.init.call(this, options);\n\n                this.type = \"kendoComboBox\";\n                this.format = [{ tags: [\"p\", \"lineHeight\"] }];\n                this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr, options.defaultValue);\n            },\n\n            command: function(commandArguments) {\n                var that = this;\n\n                return new LineHeightCommand(extend(commandArguments, {\n                    formatter: function() {\n                        return new BlockFormatter(that.options.format);\n                    }\n                }));\n            },\n\n            initialize: function(ui, editor) {\n                var tool = this,\n                    component = ui.getKendoComboBox();\n\n                tool.editor = editor;\n\n                component.bind(\"change\", this.changeHandler.bind(this));\n            },\n\n            changeHandler: function(e) {\n                this._exec(e.sender.value());\n            },\n\n            _exec: function(value) {\n                if (value) {\n                    Tool.exec(this.editor, this.options.name, { lineHeight: value });\n                }\n            },\n        });\n\n        $.extend(Editor, {\n            LineHeightCommand: LineHeightCommand,\n            LineHeightFormatTool: LineHeightFormatTool\n        });\n\n        registerFormat(\"lineHeight\", [\n            { tags: dom.blockElements, attr: { style: { lineHeight: \"normal\" } } }\n        ]);\n\n        registerTool(\"lineHeight\", new LineHeightFormatTool({\n            cssAttr: \"line-height\",\n            format: formats.lineHeight,\n            defaultValue: 1.15,\n            ui: {\n                type: \"component\",\n                component: \"ComboBox\",\n                componentOptions: {\n                    value: 1.15,\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    prefixOptions: {\n                        icon: \"paragraphHeight\"\n                    },\n                    autoSize: true,\n                    dataSource: [\n                        { text: \"1\", value: \"1\" },\n                        { text: \"1.15\", value: \"1.15\" },\n                        { text: \"1.5\", value: \"1.5\" },\n                        { text: \"2\", value: \"2\" },\n                        { text: \"2.5\", value: \"2.5\" },\n                    ]\n                }\n            }\n        }));\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        const kendo = window.kendo,\n            Editor = kendo.ui.editor,\n            Tool = Editor.Tool,\n            Command = Editor.Command,\n            EditorUtils = Editor.EditorUtils,\n            registerTool = EditorUtils.registerTool,\n            DOM = Editor.Dom,\n            SPACE_UNICODE = \"\\u00B7\",\n            NEW_LINE_UNICODE = \"\\u21B5\";\n\n        const createMark = function(range, document, character, scrollTop, index) {\n            const clonedRange = range.cloneRange(),\n                  container = clonedRange.startContainer;\n\n            let domRect, x, y, textNode;\n\n            if (index !== undefined) {\n                clonedRange.setStart(container, index);\n                clonedRange.setEnd(container, index + 1);\n            }\n\n            domRect = clonedRange.getBoundingClientRect();\n\n            if (character === SPACE_UNICODE) {\n                x = domRect.x - domRect.width / 4;\n                y = domRect.y + domRect.height + scrollTop;\n            } else if (character === NEW_LINE_UNICODE) {\n                x = domRect.x;\n                y = domRect.y + domRect.height + scrollTop;\n            }\n\n            textNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            textNode.setAttributeNS(null, \"x\", x);\n            textNode.setAttributeNS(null, \"y\", y);\n            textNode.setAttributeNS(null, \"fill\", \"#6098f2\");\n            textNode.setAttributeNS(null, \"font-size\", `${Math.ceil(domRect.height + domRect.width)}px`);\n            textNode.textContent = character;\n\n            return textNode;\n        };\n\n        const appendSvgMarks = function() {\n            const that = this,\n                range = that.getRange().cloneRange(),\n                svgNodes = [],\n                overlay = that._formattingMarksOverlay[0],\n                fragment = that.document.createDocumentFragment(),\n                document = that.document,\n                scrollTop = document.documentElement.scrollTop;\n\n            range.setStart(that.body.firstChild, 0);\n            range.setEnd(that.body.lastChild, 0);\n\n            const nodes = DOM.getTextNodes(that.body).concat($(that.body).find(\"br\").toArray());\n\n            nodes.forEach((node) => {\n                if (node.nodeType === DOM.nodeTypes.TEXT_NODE) {\n                    range.selectNodeContents(node);\n\n                    for (let i = range.startOffset; i < range.endOffset; i++) {\n                        if ((range.startContainer.textContent.charCodeAt(i) === 32 || range.startContainer.textContent.charCodeAt(i) === 160)) {\n                            fragment.appendChild(createMark(range, document, SPACE_UNICODE, scrollTop, i));\n                        }\n                    }\n                } else {\n                    range.selectNode(node);\n                    fragment.appendChild(createMark(range, document, NEW_LINE_UNICODE, scrollTop));\n                }\n            });\n\n            overlay.appendChild(fragment);\n        };\n\n        const clearFormattingMarksOverlay = function(editor) {\n            editor._formattingMarksOverlay.empty();\n        };\n\n        const applyFormattingMarks = function(editor) {\n            appendSvgMarks.call(editor);\n        };\n\n        const FormattingMarksCommand = Command.extend({\n            exec: function() {\n                const cmd = this,\n                    range = cmd.lockRange(true),\n                    editor = cmd.editor;\n\n                if (!editor._toggledFormattingMarks) {\n                    editor._toggledFormattingMarks = true;\n                    editor._appendFormattingMarksOverlay();\n                    editor._appendFormattingMarksStyles();\n                    clearFormattingMarksOverlay(editor);\n                    applyFormattingMarks(editor);\n                } else {\n                    editor._toggledFormattingMarks = false;\n                    editor._destroyFormattingMarksOverlay();\n                }\n\n                cmd.releaseRange(range);\n            }\n        });\n\n        $.extend(Editor, {\n            FormattingMarksCommand: FormattingMarksCommand,\n            applyFormattingMarks: applyFormattingMarks,\n            clearFormattingMarksOverlay: clearFormattingMarksOverlay\n        });\n\n        registerTool(\"formattingMarks\", new Tool({ command: FormattingMarksCommand, icon: \"paragraphMark\", ui: { togglable: true } }));\n    })(window.kendo.jQuery);\n\n    (function(kendo, undefined$1) {\n        var global = window;\n        var math = global.Math;\n        var min = math.min;\n        var max = math.max;\n        var parseFloat = global.parseFloat;\n\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n\n        var Editor = kendo.ui.editor;\n\n        var PERCENTAGE = \"%\";\n        var PIXEL = \"px\";\n        var REGEX_NUMBER_IN_PERCENTAGES = /(\\d+)(\\.?)(\\d*)%/;\n        var REGEX_NUMBER_IN_PIXELS = /(\\d+)(\\.?)(\\d*)px/;\n        var STRING = \"string\";\n\n        function constrain(options) {\n            var value = options.value;\n            var lowerBound = options.min;\n            var upperBound = options.max;\n\n            return max(min(parseFloat(value), parseFloat(upperBound)), parseFloat(lowerBound));\n        }\n\n        function getScrollBarWidth(element) {\n            if (element && !$(element).is(\"body\") && element.scrollHeight > element.clientHeight) {\n                return kendo.support.scrollbar();\n            }\n\n            return 0;\n        }\n\n        function calculatePercentageRatio(value, total) {\n            if (inPercentages(value)) {\n                return parseFloat(value);\n            }\n            else {\n                return ((parseFloat(value) / total) * 100);\n            }\n        }\n\n        function inPercentages(value) {\n            return (typeof(value) === STRING && REGEX_NUMBER_IN_PERCENTAGES.test(value));\n        }\n\n        function inPixels(value) {\n            return (typeof(value) === STRING && REGEX_NUMBER_IN_PIXELS.test(value));\n        }\n\n        function toPercentages(value) {\n            return (parseFloat(value) + PERCENTAGE);\n        }\n\n        function toPixels(value) {\n            return (parseFloat(value) + PIXEL);\n        }\n\n        var ResizingUtils = {\n            constrain: constrain,\n            getScrollBarWidth: getScrollBarWidth,\n            calculatePercentageRatio: calculatePercentageRatio,\n            inPercentages: inPercentages,\n            inPixels: inPixels,\n            toPercentages: toPercentages,\n            toPixels: toPixels\n        };\n\n        extend(Editor, {\n            ResizingUtils: ResizingUtils\n        });\n    })(window.kendo);\n\n    (function(kendo, undefined$1) {\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n        var noop = $.noop;\n\n        var Editor = kendo.ui.editor;\n        var Class = kendo.Class;\n\n        var KEY_DOWN = \"keydown\";\n        var MOUSE_DOWN = \"mousedown\";\n        var MOUSE_ENTER = \"mouseenter\";\n        var MOUSE_LEAVE = \"mouseleave\";\n        var MOUSE_MOVE = \"mousemove\";\n        var MOUSE_UP = \"mouseup\";\n\n        var COMMA = \",\";\n        var DOT = \".\";\n        var LAST_CHILD = \":last-child\";\n\n        var TABLE = \"table\";\n\n        var TableElementResizing = Class.extend({\n            init: function(element, options) {\n                var that = this;\n\n                that.options = extend({}, that.options, options);\n\n                that.options.tags = Array.isArray(that.options.tags) ? that.options.tags : [that.options.tags];\n\n                if ($(element).is(TABLE)) {\n                    that.element = element;\n                    that._attachEventHandlers();\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n                var eventNamespace = that.options.eventNamespace;\n\n                if (that.element) {\n                    $(that.element).off(eventNamespace);\n                    that.element = null;\n                }\n\n                $(that.options.rootElement).off(KEY_DOWN + eventNamespace);\n\n                that._destroyResizeHandle();\n            },\n\n            options: {\n                tags: [],\n                min: 0,\n                rootElement: null,\n                eventNamespace: \"\",\n                rtl: false,\n                handle: {\n                    dataAttribute: \"\",\n                    height: 0,\n                    width: 0,\n                    classNames: {},\n                    template: \"\"\n                }\n            },\n\n            _attachEventHandlers: function() {\n                var that = this;\n                var options = that.options;\n\n                $(that.element).on(MOUSE_MOVE + options.eventNamespace, options.tags.join(COMMA), that.detectElementBorderHovering.bind(that));\n            },\n\n            resizingInProgress: function() {\n                var that = this;\n                var resizable = that._resizable;\n\n                if (resizable) {\n                    return !!resizable.resizing;\n                }\n\n                return false;\n            },\n\n            resize: noop,\n\n            detectElementBorderHovering: function(e) {\n                var that = this;\n                var options = that.options;\n                var handleOptions = options.handle;\n                var tableElement = $(e.currentTarget);\n                var resizeHandle = that.resizeHandle;\n                var dataAttribute = handleOptions.dataAttribute;\n\n                if (!that.resizingInProgress()) {\n                    if (!tableElement.is(LAST_CHILD) && that.elementBorderHovered(tableElement, e)) {\n                        if (resizeHandle) {\n                            if (resizeHandle.data(dataAttribute) && resizeHandle.data(dataAttribute) !== tableElement[0]) {\n                                that.showResizeHandle(tableElement, e);\n                            }\n                        }\n                        else {\n                            that.showResizeHandle(tableElement, e);\n                        }\n                    }\n                    else {\n                        if (resizeHandle) {\n                            that._destroyResizeHandle();\n                        }\n                    }\n                }\n            },\n\n            elementBorderHovered: noop,\n\n            showResizeHandle: function(tableElement, e) {\n                var that = this;\n\n                if (e.buttons !== 0) {\n                    //prevent showing when a mouse button is still being pressed\n                    return;\n                }\n\n                that._initResizeHandle();\n                that.setResizeHandlePosition(tableElement);\n                that.setResizeHandleDimensions();\n                that.setResizeHandleDataAttributes(tableElement[0]);\n                that._attachResizeHandleEventHandlers();\n\n                that._initResizable(tableElement);\n\n                that._hideResizeMarker();\n                that.resizeHandle.show();\n            },\n\n            _initResizeHandle: function() {\n                var that = this;\n                var options = that.options;\n\n                that._destroyResizeHandle();\n\n                that.resizeHandle = $(options.handle.template).appendTo(options.rootElement);\n            },\n\n            setResizeHandlePosition: noop,\n\n            setResizeHandleDimensions: noop,\n\n            setResizeHandleDataAttributes: function(tableElement) {\n                var that = this;\n\n                that.resizeHandle.data(that.options.handle.dataAttribute, tableElement);\n            },\n\n            _attachResizeHandleEventHandlers: function() {\n                var that = this;\n                var options = that.options;\n                var eventNamespace = options.eventNamespace;\n                var markerClass = options.handle.classNames.marker;\n                var resizeHandle = that.resizeHandle;\n\n                that.resizeHandle\n                    .on(MOUSE_DOWN + eventNamespace, function() {\n                        resizeHandle.find(DOT + markerClass).show();\n                    })\n                    .on(MOUSE_UP + eventNamespace, function() {\n                        resizeHandle.find(DOT + markerClass).hide();\n                    });\n            },\n\n            _hideResizeMarker: function() {\n                var that = this;\n\n                that.resizeHandle.find(DOT + that.options.handle.classNames.marker).hide();\n            },\n\n            _destroyResizeHandle: function() {\n                var that = this;\n\n                if (that.resizeHandle) {\n                    that._destroyResizable();\n                    that.resizeHandle.off(that.options.eventNamespace).remove();\n                    that.resizeHandle = null;\n                }\n            },\n\n            _initResizable: function(tableElement) {\n                var that = this;\n\n                if (!that.resizeHandle) {\n                    return;\n                }\n\n                that._destroyResizable();\n\n                that._resizable = new kendo.ui.Resizable(tableElement, {\n                    draggableElement: that.resizeHandle[0],\n                    start: that.onResizeStart.bind(that),\n                    resize: that.onResize.bind(that),\n                    resizeend: that.onResizeEnd.bind(that)\n                });\n            },\n\n            _destroyResizable: function() {\n                var that = this;\n\n                if (that._resizable) {\n                    that._resizable.destroy();\n                    that._resizable = null;\n                }\n            },\n\n            onResizeStart: function() {\n                this._disableKeyboard();\n            },\n\n            onResize: function(e) {\n                this.setResizeHandleDragPosition(e);\n            },\n\n            setResizeHandleDragPosition: noop,\n\n            onResizeEnd: function(e) {\n                var that = this;\n\n                that.resize(e);\n                that._destroyResizeHandle();\n                that._enableKeyboard();\n            },\n\n            _enableKeyboard: function() {\n                var options = this.options;\n\n                $(options.rootElement).off(KEY_DOWN + options.eventNamespace);\n            },\n\n            _disableKeyboard: function() {\n                var options = this.options;\n\n                $(options.rootElement).on(KEY_DOWN + options.eventNamespace, function(e) {\n                    e.preventDefault();\n                });\n            },\n\n            _forceResizing: function(e) {\n                var resizable = this._resizable;\n\n                if (resizable && resizable.userEvents) {\n                    resizable.userEvents._end(e);\n                }\n            }\n        });\n\n        var ResizingFactory = Class.extend({\n            create: function(editor, options) {\n                var that = this;\n                var resizingName = options.name;\n                var NS = options.eventNamespace;\n\n                $(editor.body)\n                    .on(MOUSE_ENTER + NS, TABLE, function(e) {\n                        var table = e.currentTarget;\n                        var resizing = editor[resizingName];\n\n                        e.stopPropagation();\n\n                        if (resizing) {\n                            if (resizing.element !== table && !resizing.resizingInProgress()) {\n                                that._destroyResizing(editor, options);\n                                that._initResizing(editor, table, options);\n                            }\n                        }\n                        else {\n                            that._initResizing(editor, table, options);\n                        }\n                    })\n                    .on(MOUSE_LEAVE + NS, TABLE, function(e) {\n                        var parentTable;\n                        var resizing = editor[resizingName];\n\n                        e.stopPropagation();\n\n                        if (resizing && !resizing.resizingInProgress() && !resizing.resizeHandle) {\n                            parentTable = $(resizing.element).parents(TABLE)[0];\n\n                            if (parentTable) {\n                                that._destroyResizing(editor, options);\n                                that._initResizing(editor, parentTable, options);\n                            }\n                        }\n                    })\n                    .on(MOUSE_LEAVE + NS, function() {\n                        var resizing = editor[resizingName];\n\n                        if (resizing && !resizing.resizingInProgress()) {\n                            that._destroyResizing(editor, options);\n                        }\n                    })\n                    .on(MOUSE_UP + NS, function(e) {\n                        var resizing = editor[resizingName];\n                        var parentTable;\n\n                        if (resizing && resizing.resizingInProgress()) {\n                            parentTable = $(e.target).parents(TABLE)[0];\n\n                            if (parentTable) {\n                                resizing._forceResizing(e);\n                                that._destroyResizing(editor, options);\n                                that._initResizing(editor, parentTable, options);\n                            }\n                        }\n                    });\n            },\n\n            dispose: function(editor, options) {\n                $(editor.body).off(options.eventNamespace);\n            },\n\n            _initResizing: function(editor, tableElement, options) {\n                var resizingName = options.name;\n                var resizingType = options.type;\n\n                editor[resizingName] = new resizingType(tableElement, {\n                    rtl: kendo.support.isRtl(editor.element),\n                    rootElement: editor.body\n                });\n            },\n\n            _destroyResizing: function(editor, options) {\n                var resizingName = options.name;\n\n                if (editor[resizingName]) {\n                    editor[resizingName].destroy();\n                    editor[resizingName] = null;\n                }\n            }\n        });\n        ResizingFactory.current = new ResizingFactory();\n\n        TableElementResizing.create = function(editor, options) {\n            ResizingFactory.current.create(editor, options);\n        };\n\n        TableElementResizing.dispose = function(editor, options) {\n            ResizingFactory.current.dispose(editor, options);\n        };\n\n        extend(Editor, {\n            TableElementResizing: TableElementResizing\n        });\n\n    })(window.kendo);\n\n    (function(kendo, undefined$1) {\n        var global = window;\n        var math = global.Math;\n        var abs = math.abs;\n\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n\n        var Editor = kendo.ui.editor;\n        var dom = Editor.Dom;\n        var TableElementResizing = Editor.TableElementResizing;\n        var ResizingUtils = Editor.ResizingUtils;\n        var constrain = ResizingUtils.constrain;\n        var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n        var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n        var inPercentages = ResizingUtils.inPercentages;\n        var toPercentages = ResizingUtils.toPercentages;\n        var toPixels = ResizingUtils.toPixels;\n        var outerWidth = kendo._outerWidth;\n\n        var NS = \".kendoEditorColumnResizing\";\n        var RESIZE_HANDLE_CLASS = \"k-column-resize-handle\";\n        var RESIZE_MARKER_CLASS = \"k-column-resize-marker\";\n\n        var BODY = \"body\";\n        var TBODY = \"tbody\";\n        var THEAD = \"thead\";\n        var TD = \"td\";\n        var TH = \"th\";\n        var TR = \"tr\";\n\n        var COLATTR = \"col-index\";\n\n        var COMMA = \",\";\n        var WIDTH = \"width\";\n\n        var ColumnResizing = TableElementResizing.extend({\n            options: {\n                tags: [TD, TH],\n                min: 20,\n                rootElement: null,\n                eventNamespace: NS,\n                rtl: false,\n                handle: {\n                    dataAttribute: \"column\",\n                    width: 10,\n                    height: 0,\n                    classNames: {\n                        handle: RESIZE_HANDLE_CLASS,\n                        marker: RESIZE_MARKER_CLASS\n                    },\n                    template:\n                        '<div class=\"k-column-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                            '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                                '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                            '</div>' +\n                        '</div>'\n                }\n            },\n\n            elementBorderHovered: function(column, e) {\n                var that = this;\n                var options = that.options;\n                var handleWidth = options.handle.width;\n                var borderOffset = column.offset().left + (options.rtl ? 0 : outerWidth(column));\n\n\n                var mousePosition = e.clientX + $(column[0].ownerDocument).scrollLeft();\n\n                if ((mousePosition > (borderOffset - handleWidth)) && (mousePosition < (borderOffset + handleWidth))) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            },\n\n            setResizeHandlePosition: function(column) {\n                var that = this;\n                var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n                var options = that.options;\n                var rtl = options.rtl;\n                var handleWidth = options.handle.width;\n                var rootElement = $(options.rootElement);\n                var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n                var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n                var columnWidthOffset = rtl ? 0 : outerWidth(column);\n                var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n                var columnOffsetLeft = column.offset().left -\n                                        (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                        parseFloat(column.css(\"marginLeft\"));\n                var innerElementOffsetTop = tableInnerElement.offset().top -\n                                        (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                        parseFloat(tableInnerElement.css(\"marginTop\"));\n                var browser = kendo.support.browser;\n\n                if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrollLeftOffset = scrollLeftOffset * -1;\n                }\n\n                that.resizeHandle.css({\n                    top: innerElementOffsetTop + scrollTopOffset,\n                    left: columnOffsetLeft + columnWidthOffset + (scrollLeftOffset - scrollBarWidth) - (handleWidth / 2),\n                    position: \"absolute\"\n                });\n            },\n\n            setResizeHandleDimensions: function() {\n                var that = this;\n                var tableHead = $(that.element).children(THEAD);\n                var tableBody = $(that.element).children(TBODY);\n                var fullHeight = tableHead.length > 0 ? tableHead.height() + tableBody.height() : tableBody.height();\n\n                that.resizeHandle.css({\n                    width: that.options.handle.width,\n                    height: fullHeight\n                });\n            },\n\n            setResizeHandleDragPosition: function(e) {\n                var that = this;\n                var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n                var options = that.options;\n                var rootElement = $(options.rootElement);\n                var handleWidth = options.handle ? options.handle.width : 0;\n                var min = options.min;\n                var rtl = options.rtl;\n                var columnWidth = outerWidth(column);\n                var columnLeftOffset = column.offset().left -\n                                        (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                        parseFloat(column.css(\"marginLeft\"));\n                var adjacentColumnWidth = outerWidth(column.next());\n                var resizeHandle = $(that.resizeHandle);\n                var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n                var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n                var resizeHandleOffsetLeft = resizeHandle.offset().left -\n                                                (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                                parseFloat(resizeHandle.css(\"marginLeft\"));\n                var browser = kendo.support.browser;\n\n                if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrollLeftOffset = scrollLeftOffset * -1;\n                }\n\n                var handleOffset = constrain({\n                    value: resizeHandleOffsetLeft + (scrollLeftOffset - scrollBarWidth) + e.x.delta,\n                    min: columnLeftOffset + (scrollLeftOffset - scrollBarWidth) - (rtl ? adjacentColumnWidth : 0) + min,\n                    max: columnLeftOffset + columnWidth + (scrollLeftOffset - scrollBarWidth) + (rtl ? 0 : adjacentColumnWidth) - handleWidth - min\n                });\n\n                resizeHandle.css({ left: handleOffset });\n            },\n\n            resize: function(e) {\n                var that = this;\n                var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n                var options = that.options;\n                var rtlModifier = options.rtl ? (-1) : 1;\n                var min = options.min;\n                var initialDeltaX = rtlModifier * e.x.initialDelta;\n                var newWidth;\n                var initialAdjacentColumnWidth;\n                var initialColumnWidth;\n                var colIndex;\n                var nextColumn;\n\n                dom.reMapTableColumns(that.element, COLATTR);\n\n                colIndex = parseInt(column.attr(COLATTR), 10);\n\n                if (column.prop(\"colSpan\") > 1) {\n                    column = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + column.prop(\"colSpan\") - 1) + \"]\").eq(0);\n                    colIndex = parseInt(column.attr(COLATTR), 10);\n                }\n\n                nextColumn = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + 1) + \"]:not([colspan])\");\n\n                that._setTableComputedWidth();\n                that._setColumnsComputedWidth();\n\n                initialColumnWidth = outerWidth(column);\n                initialAdjacentColumnWidth = outerWidth(nextColumn);\n\n                newWidth = constrain({\n                    value: initialColumnWidth + initialDeltaX,\n                    min: min,\n                    max: initialColumnWidth + initialAdjacentColumnWidth - min\n                });\n\n                that._resizeColumn(column[0], newWidth);\n                that._resizeTopAndBottomColumns(column[0], newWidth);\n                that._resizeAdjacentColumns(parseInt(column.attr(COLATTR),10), initialAdjacentColumnWidth, initialColumnWidth, (initialColumnWidth - newWidth));\n\n                dom.clearTableMappings(that.element, COLATTR);\n            },\n\n            _setTableComputedWidth: function() {\n                var element = this.element;\n\n                if (element.style[WIDTH] === \"\") {\n                    element.style[WIDTH] = toPixels(outerWidth($(element)));\n                }\n            },\n\n            _setColumnsComputedWidth: function() {\n                var that = this;\n                var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n                var innerElementWidth = outerWidth(tableInnerElement);\n                var columns = tableInnerElement.children(TR).children(TD);\n                var length = columns.length;\n                var currentColumnsWidths = columns.map(function() {\n                    return outerWidth($(this));\n                });\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    if (inPercentages(columns[i].style[WIDTH])) {\n                        columns[i].style[WIDTH] = toPercentages(calculatePercentageRatio(currentColumnsWidths[i], innerElementWidth));\n                    }\n                    else {\n                        columns[i].style[WIDTH] = toPixels(currentColumnsWidths[i]);\n                    }\n                }\n            },\n\n            _resizeTopAndBottomColumns: function(column, newWidth) {\n                var that = this;\n                var columnIndex = $(column).attr(COLATTR);\n                var topAndBottomColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                    .filter(function() {\n                        var cell = this;\n                        return ($(cell).attr(COLATTR) === columnIndex && cell !== column);\n                    });\n                var length = topAndBottomColumns.length;\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    that._resizeColumn(topAndBottomColumns[i], newWidth);\n                }\n            },\n\n            _resizeColumn: function(column, newWidth) {\n                var innerTableElement = $(this.element.tHead || this.element.tBodies[0]);\n                if (inPercentages(column.style[WIDTH])) {\n                    column.style[WIDTH] = toPercentages(calculatePercentageRatio(newWidth, outerWidth(innerTableElement)));\n                }\n                else {\n                    column.style[WIDTH] = toPixels(newWidth);\n                }\n            },\n\n            _resizeAdjacentColumns: function(columnIndex, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n                var that = this;\n                var adjacentColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                    .filter(function() {\n                        return (parseInt($(this).attr(COLATTR),10) === (columnIndex + 1));\n                    });\n                var length = adjacentColumns.length;\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    that._resizeAdjacentColumn(adjacentColumns[i], initialAdjacentColumnWidth, initialColumnWidth, deltaWidth);\n                }\n            },\n\n            _resizeAdjacentColumn: function(adjacentColumn, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n                var that = this;\n                var min = that.options.min;\n                var newWidth;\n\n                newWidth = constrain({\n                    value: initialAdjacentColumnWidth + deltaWidth,\n                    min: min,\n                    max: abs(initialColumnWidth + initialAdjacentColumnWidth - min)\n                });\n\n                that._resizeColumn(adjacentColumn, newWidth);\n            }\n        });\n\n        ColumnResizing.create = function(editor) {\n            TableElementResizing.create(editor, {\n                name: \"columnResizing\",\n                type: ColumnResizing,\n                eventNamespace: NS\n            });\n        };\n\n        ColumnResizing.dispose = function(editor) {\n            TableElementResizing.dispose(editor, {\n                eventNamespace: NS\n            });\n        };\n\n        extend(Editor, {\n            ColumnResizing: ColumnResizing\n        });\n\n    })(window.kendo);\n\n    (function(kendo, undefined$1) {\n        var math = window.Math;\n        var abs = math.abs;\n\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n\n        var Editor = kendo.ui.editor;\n        var TableElementResizing = Editor.TableElementResizing;\n        var ResizingUtils = Editor.ResizingUtils;\n        var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n        var constrain = ResizingUtils.constrain;\n        var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n        var inPercentages = ResizingUtils.inPercentages;\n        var toPercentages = ResizingUtils.toPercentages;\n        var toPixels = ResizingUtils.toPixels;\n        var outerHeight = kendo._outerHeight;\n\n        var NS = \".kendoEditorRowResizing\";\n        var RESIZE_HANDLE_CLASS = \"k-row-resize-handle\";\n        var RESIZE_HANDLE_MARKER_WRAPPER_CLASS = \"k-row-resize-marker-wrapper\";\n        var RESIZE_MARKER_CLASS = \"k-row-resize-marker\";\n\n        var BODY = \"body\";\n        var TR = \"tr\";\n        var TBODY = \"tbody\";\n        var THEAD = \"thead\";\n\n        var COMMA = \",\";\n        var HEIGHT = \"height\";\n\n        var RowResizing = TableElementResizing.extend({\n            options: {\n                tags: [TR],\n                min: 20,\n                rootElement: null,\n                eventNamespace: NS,\n                rtl: false,\n                handle: {\n                    dataAttribute: \"row\",\n                    width: 0,\n                    height: 10,\n                    classNames: {\n                        handle: RESIZE_HANDLE_CLASS,\n                        marker: RESIZE_MARKER_CLASS\n                    },\n                    template:\n                        '<div class=\"k-row-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                            '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                                '<div class=\"' + RESIZE_HANDLE_MARKER_WRAPPER_CLASS + '\">' +\n                                    '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                                '</div>' +\n                            '</div>' +\n                        '</div>'\n                }\n            },\n\n            elementBorderHovered: function(tableElement, e) {\n                var that = this;\n                var handleHeight = that.options.handle[HEIGHT];\n                var borderOffset = tableElement.offset().top + outerHeight(tableElement);\n                var mousePosition = e.clientY + $(tableElement[0].ownerDocument).scrollTop();\n\n                if ((mousePosition > (borderOffset - handleHeight)) && (mousePosition < (borderOffset + handleHeight))) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            },\n\n            setResizeHandlePosition: function(row) {\n                var that = this;\n                var options = that.options;\n                var handleHeight = options.handle[HEIGHT];\n                var rootElement = $(options.rootElement);\n                var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n                var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n                var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n\n                var rowOffsetLeft = row.offset().left -\n                                        (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                        parseFloat(row.css(\"marginLeft\"));\n                var rowOffsetTop = row.offset().top -\n                                        (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                        parseFloat(row.css(\"marginTop\"));\n                var browser = kendo.support.browser;\n\n                if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    scrollLeftOffset = scrollLeftOffset * -1;\n                }\n\n                that.resizeHandle.css({\n                    top: rowOffsetTop + outerHeight(row) + scrollTopOffset - (handleHeight / 2),\n                    left: rowOffsetLeft + (scrollLeftOffset - scrollBarWidth),\n                    position: \"absolute\"\n                });\n            },\n\n            setResizeHandleDimensions: function() {\n                var that = this;\n                var innerTableElement = $(that.element.tHead || that.element.tBodies[0]);\n\n                that.resizeHandle.css({\n                    width: innerTableElement.width(),\n                    height: that.options.handle[HEIGHT]\n                });\n            },\n\n            setResizeHandleDragPosition: function(e) {\n                var that = this;\n                var options = that.options;\n                var min = options.min;\n                var tableHead = $(that.element).children(THEAD);\n                var tableBody = $(that.element).children(TBODY);\n                var topInnerTableElement = tableHead.length > 0 ? tableHead : tableBody;\n                var resizeHandle = $(that.resizeHandle);\n                var row = $(e.currentTarget).data(options.handle.dataAttribute);\n                var $row = $(row);\n                var rootElement = $(options.rootElement);\n                var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n                var tableTopOffset = topInnerTableElement.offset().top -\n                                        (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                        parseFloat(topInnerTableElement.css(\"marginTop\"));\n\n                var rowOffsetTop = $row.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat($row.css(\"marginTop\"));\n\n                var resizeHandleOffsetTop = resizeHandle.offset().top -\n                                    (Math.max(0 , rootElement.offset().top) + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(resizeHandle.css(\"marginTop\"));\n\n                var handleOffset = constrain({\n                    value: resizeHandleOffsetTop + scrollTopOffset + e.y.delta,\n                    min: rowOffsetTop + scrollTopOffset + min,\n                    max: tableTopOffset + outerHeight(tableHead) + outerHeight(tableBody) + scrollTopOffset - options.handle[HEIGHT] - min\n                });\n\n                resizeHandle.css({ top: handleOffset });\n            },\n\n            resize: function(e) {\n                var that = this;\n                var options = that.options;\n                var row = $(e.currentTarget).data(options.handle.dataAttribute);\n                var currentRowHeight = outerHeight($(row));\n                var element = $(that.element);\n                var initialTableHeight = outerHeight(element);\n                var tableHead = element.children(THEAD);\n                var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n                var tableBody = element.children(TBODY);\n                var tableBodyHeight = tableBody.height();\n                var initialStyleHeight = row.style[HEIGHT];\n                var newRowHeight = constrain({\n                    value: currentRowHeight + e.y.initialDelta,\n                    min: options.min,\n                    max: abs(tableHeadHeight + tableBodyHeight - options.min)\n                });\n\n                that._setRowsHeightInPixels();\n                row.style[HEIGHT] = toPixels(newRowHeight);\n                that._setTableHeight(initialTableHeight + (newRowHeight - currentRowHeight));\n\n                if (inPercentages(initialStyleHeight)) {\n                    //resize rows in percentages as late as possible to prevent incorrect precision calculations\n                    that._setRowsHeightInPercentages();\n                }\n            },\n\n            _setRowsHeightInPixels: function() {\n                var that = this;\n                var rows = $(that.element).children(TBODY + COMMA + THEAD).children(TR);\n                var length = rows.length;\n                var currentRowsHeights = rows.map(function() {\n                    return outerHeight($(this));\n                });\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n                }\n            },\n\n            _setRowsHeightInPercentages: function() {\n                var that = this;\n                var tableHead = $(that.element).children(THEAD);\n                var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n                var tableBody = $(that.element).children(TBODY);\n                var tableBodyHeight = tableBody.height();\n                var rows = $(that.element).children(THEAD + COMMA + TBODY).children(TR);\n                var length = rows.length;\n                var currentRowsHeights = rows.map(function() {\n                    return outerHeight($(this));\n                });\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n                }\n            },\n\n            _setTableHeight: function(newHeight) {\n                var element = this.element;\n\n                if (inPercentages(element.style[HEIGHT])) {\n                    element.style[HEIGHT] = toPercentages(calculatePercentageRatio(newHeight, $(element).parent().height()));\n                }\n                else {\n                    element.style[HEIGHT] = toPixels(newHeight);\n                }\n            }\n        });\n\n        RowResizing.create = function(editor) {\n            TableElementResizing.create(editor, {\n                name: \"rowResizing\",\n                type: RowResizing,\n                eventNamespace: NS\n            });\n        };\n\n        RowResizing.dispose = function(editor) {\n            TableElementResizing.dispose(editor, {\n                eventNamespace: NS\n            });\n        };\n\n        extend(Editor, {\n            RowResizing: RowResizing\n        });\n\n    })(window.kendo);\n\n    (function(kendo, undefined$1) {\n        var $ = kendo.jQuery;\n        var extend = $.extend;\n        var noop = $.noop;\n\n        var Editor = kendo.ui.editor;\n        var Class = kendo.Class;\n        var Draggable = kendo.ui.Draggable;\n        var Observable = kendo.Observable;\n        var getScrollBarWidth = Editor.ResizingUtils.getScrollBarWidth;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n\n        var NS = \".kendoEditorElementResizeHandle\";\n        var RESIZE_HANDLE_CLASS = \"k-element-resize-handle\";\n\n        var DRAG_START = \"dragStart\";\n        var DRAG = \"drag\";\n        var DRAG_END = \"dragEnd\";\n        var HALF_INSIDE = \"halfInside\";\n        var MOUSE_OVER = \"mouseover\";\n        var MOUSE_OUT = \"mouseout\";\n\n        var BODY = \"body\";\n        var TABLE = \"table\";\n\n        var EAST = \"east\";\n        var NORTH = \"north\";\n        var NORTHEAST = \"northeast\";\n        var NORTHWEST = \"northwest\";\n        var SOUTH = \"south\";\n        var SOUTHEAST = \"southeast\";\n        var SOUTHWEST = \"southwest\";\n        var WEST = \"west\";\n\n        var DOT = \".\";\n\n        var ElementResizeHandle = Observable.extend({\n            init: function(options) {\n                var that = this;\n\n                Observable.fn.init.call(that);\n\n                that.options = extend({}, that.options, options);\n                that.element = $(that.options.template).appendTo(that.options.appendTo)[0];\n\n                that._attachEventHandlers();\n                that._addStyles();\n                that._initDraggable();\n                that._initPositioningStrategy();\n                that._initDraggingStrategy();\n\n                $(that.element).data(TABLE, that.options.resizableElement);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                $(that.element).off(NS).remove();\n                that.element = null;\n\n                that._destroyDraggable();\n\n                that.unbind();\n            },\n\n            options: {\n                appendTo: null,\n                direction: SOUTHEAST,\n                resizableElement: null,\n                rtl: false,\n                template:\n                    \"<div class='k-element-resize-handle-wrapper' unselectable='on' contenteditable='false'>\" +\n                        \"<div class='\" + RESIZE_HANDLE_CLASS + \"'></div>\" +\n                    \"</div>\"\n            },\n\n            events: [\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                MOUSE_OVER,\n                MOUSE_OUT\n            ],\n\n            show: function() {\n                this._setPosition();\n            },\n\n            _setPosition: function() {\n                var that = this;\n                var position = that._positioningStrategy.getPosition();\n\n                $(that.element).css({\n                    top: position.top,\n                    left: position.left,\n                    position: \"absolute\"\n                });\n            },\n\n            _attachEventHandlers: function() {\n                var that = this;\n\n                $(that.element)\n                    .on(MOUSE_OVER + NS, that._onMouseOver.bind(that))\n                    .on(MOUSE_OUT + NS, that._onMouseOut.bind(that));\n            },\n\n            _onMouseOver: function() {\n                this.trigger(MOUSE_OVER);\n            },\n\n            _onMouseOut: function() {\n                this.trigger(MOUSE_OUT);\n            },\n\n            _addStyles: function() {\n                var that = this;\n                $(that.element).children(DOT + RESIZE_HANDLE_CLASS).addClass(\"k-resize-\" + that.options.direction);\n            },\n\n            _initPositioningStrategy: function() {\n                var that = this;\n                var options = that.options;\n\n                that._positioningStrategy = HandlePositioningStrategy.create({\n                    name: options.direction,\n                    handle: that.element,\n                    resizableElement: options.resizableElement,\n                    rootElement: options.rootElement,\n                    rtl: options.rtl\n                });\n            },\n\n            _initDraggable: function() {\n                var that = this;\n                var element = that.element;\n\n                if (that._draggable || !element) {\n                    return;\n                }\n\n                that._draggable = new Draggable(element, {\n                    dragstart: that._onDragStart.bind(that),\n                    drag: that._onDrag.bind(that),\n                    dragend: that._onDragEnd.bind(that)\n                });\n            },\n\n            _onDragStart: function() {\n                this.trigger(DRAG_START);\n            },\n\n            _onDrag: function(e) {\n                var that = this;\n\n                that.trigger(DRAG, that._draggingStrategy.adjustDragDelta({\n                    deltaX: e.x.delta,\n                    deltaY: e.y.delta,\n                    initialDeltaX: e.x.initialDelta,\n                    initialDeltaY: e.y.initialDelta\n                }));\n            },\n\n            _onDragEnd: function() {\n                this.trigger(DRAG_END);\n            },\n\n            _destroyDraggable: function() {\n                var that = this;\n\n                if (that._draggable) {\n                    that._draggable.destroy();\n                    that._draggable = null;\n                }\n            },\n\n            _initDraggingStrategy: function() {\n                var that = this;\n\n                that._draggingStrategy = HandleDraggingStrategy.create({\n                    name: that.options.direction\n                });\n            }\n        });\n\n        var StrategyFactory = Class.extend({\n            init: function() {\n                this._items = [];\n            },\n\n            register: function(name, type) {\n                this._items.push({\n                    name: name,\n                    type: type\n                });\n            },\n\n            create: function(options) {\n                var items = this._items;\n                var itemsLength = items.length;\n                var name = options.name ? options.name.toLowerCase() : \"\";\n                var match;\n                var item;\n                var i;\n\n                for (i = 0; i < itemsLength; i++) {\n                    item = items[i];\n\n                    if (item.name.toLowerCase() === name) {\n                        match = item;\n                        break;\n                    }\n                }\n\n                if (match) {\n                    return new match.type(options);\n                }\n            }\n        });\n\n        var PositioningStrategyFactory = StrategyFactory.extend({});\n        PositioningStrategyFactory.current = new PositioningStrategyFactory();\n\n        var HandlePositioningStrategy = Class.extend({\n            init: function(options) {\n                var that = this;\n                that.options = extend({}, that.options, options);\n            },\n\n            options: {\n                handle: null,\n                offset: HALF_INSIDE,\n                resizableElement: null,\n                rootElement: null,\n                rtl: false\n            },\n\n            getPosition: function() {\n                var that = this;\n\n                var position = that.calculatePosition();\n                var handleOffsetPosition = that.applyHandleOffset(position);\n                var scrollOffsetPosition = that.applyScrollOffset(handleOffsetPosition);\n\n                return scrollOffsetPosition;\n            },\n\n            calculatePosition: noop,\n\n            applyHandleOffset: function(position) {\n                var options = this.options;\n                var handle = $(options.handle);\n\n                if (options.offset === HALF_INSIDE) {\n                    return {\n                        top: position.top - (outerHeight(handle) / 2),\n                        left: position.left - (outerWidth(handle) / 2)\n                    };\n                }\n\n                return position;\n            },\n\n            applyScrollOffset: function(position) {\n                var options = this.options;\n                var rootElement = $(options.rootElement);\n                var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n                var browser = kendo.support.browser;\n                var rootLeft;\n\n                if (!rootElement.is(BODY)) {\n                    rootLeft = kendo.scrollLeft(rootElement) || 0;\n\n                    if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                        rootLeft = rootLeft * -1;\n                    }\n\n                    return {\n                        top: position.top + (rootElement.scrollTop() || 0),\n                        left: position.left + rootLeft - scrollBarWidth\n                    };\n                }\n\n                return position;\n            }\n        });\n\n        HandlePositioningStrategy.create = function(options) {\n            return PositioningStrategyFactory.current.create(options);\n        };\n\n        var EastPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top + (outerHeight(resizableElement) / 2),\n                    left: offset.left + outerWidth(resizableElement) + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(EAST, EastPositioningStrategy);\n\n        var NorthPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top,\n                    left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(NORTH, NorthPositioningStrategy);\n\n        var NortheastPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top,\n                    left: offset.left + outerWidth(resizableElement) + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(NORTHEAST, NortheastPositioningStrategy);\n\n        var NorthwestPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top,\n                    left: offset.left + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(NORTHWEST, NorthwestPositioningStrategy);\n\n        var SouthPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top + outerHeight(resizableElement),\n                    left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(SOUTH, SouthPositioningStrategy);\n\n        var SoutheastPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top + outerHeight(resizableElement),\n                    left: offset.left + outerWidth(resizableElement) + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(SOUTHEAST, SoutheastPositioningStrategy);\n\n        var SouthwestPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top + outerHeight(resizableElement),\n                    left: offset.left + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(SOUTHWEST, SouthwestPositioningStrategy);\n\n        var WestPositioningStrategy = HandlePositioningStrategy.extend({\n            calculatePosition: function() {\n                var resizableElement = $(this.options.resizableElement);\n                var offset = resizableElement.position();\n                var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n                return {\n                    top: offset.top + (outerHeight(resizableElement) / 2),\n                    left: offset.left + marginLeft\n                };\n            }\n        });\n        PositioningStrategyFactory.current.register(WEST, WestPositioningStrategy);\n\n        var DraggingStrategyFactory = StrategyFactory.extend({});\n        DraggingStrategyFactory.current = new DraggingStrategyFactory();\n\n        var HandleDraggingStrategy = Class.extend({\n            init: function(options) {\n                var that = this;\n                that.options = extend({}, that.options, options);\n            },\n\n            options: {\n                deltaX: {\n                    adjustment: null,\n                    modifier: null\n                },\n                deltaY: {\n                    adjustment: null,\n                    modifier: null\n                }\n            },\n\n            adjustDragDelta: function(deltas) {\n                var options = this.options;\n                var xAxisAdjustment = options.deltaX.adjustment * options.deltaX.modifier;\n                var yAxisAdjustment = options.deltaY.adjustment * options.deltaY.modifier;\n\n                return {\n                    deltaX: deltas.deltaX * xAxisAdjustment,\n                    deltaY: deltas.deltaY * yAxisAdjustment,\n                    initialDeltaX: deltas.initialDeltaX * xAxisAdjustment,\n                    initialDeltaY: deltas.initialDeltaY * yAxisAdjustment\n                };\n            }\n        });\n\n        HandleDraggingStrategy.create = function(options) {\n            return DraggingStrategyFactory.current.create(options);\n        };\n\n        var HorizontalDraggingStrategy = HandleDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    adjustment: 1,\n                    modifier: 1\n                },\n                deltaY: {\n                    adjustment: 0,\n                    modifier: 0\n                }\n            }\n        });\n\n        var EastDraggingStrategy = HorizontalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: 1\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(EAST, EastDraggingStrategy);\n\n        var WestDraggingStrategy = HorizontalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: (-1)\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(WEST, WestDraggingStrategy);\n\n        var VerticalDraggingStrategy = HandleDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    adjustment: 0,\n                    modifier: 0\n                },\n                deltaY: {\n                    adjustment: 1,\n                    modifier: 1\n                }\n            }\n        });\n\n        var NorthDraggingStrategy = VerticalDraggingStrategy.extend({\n            options: {\n                deltaY: {\n                    modifier: (-1)\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(NORTH, NorthDraggingStrategy);\n\n        var SouthDraggingStrategy = VerticalDraggingStrategy.extend({\n            options: {\n                deltaY: {\n                    modifier: 1\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(SOUTH, SouthDraggingStrategy);\n\n        var HorizontalAndVerticalDraggingStrategy = HandleDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    adjustment: 1,\n                    modifier: 1\n                },\n                deltaY: {\n                    adjustment: 1,\n                    modifier: 1\n                }\n            }\n        });\n\n        var NorthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: 1\n                },\n                deltaY: {\n                    modifier: (-1)\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(NORTHEAST, NorthEastDraggingStrategy);\n\n        var NorthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: (-1)\n                },\n                deltaY: {\n                    modifier: (-1)\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(NORTHWEST, NorthWestDraggingStrategy);\n\n        var SouthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: 1\n                },\n                deltaY: {\n                    modifier: 1\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(SOUTHEAST, SouthEastDraggingStrategy);\n\n        var SouthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n            options: {\n                deltaX: {\n                    modifier: (-1)\n                },\n                deltaY: {\n                    modifier: 1\n                }\n            }\n        });\n        DraggingStrategyFactory.current.register(SOUTHWEST, SouthWestDraggingStrategy);\n\n        extend(Editor, {\n            ElementResizeHandle: ElementResizeHandle\n        });\n    })(window.kendo);\n\n    (function(kendo, undefined$1) {\n        var global = window;\n        var math = global.Math;\n        var min = math.min;\n        var max = math.max;\n\n        var $ = kendo.jQuery;\n        var contains = $.contains;\n        var extend = $.extend;\n\n        var browser = kendo.support.browser;\n        var Editor = kendo.ui.editor;\n        var Class = kendo.Class;\n        var ElementResizeHandle = Editor.ElementResizeHandle;\n        var ResizingUtils = Editor.ResizingUtils;\n        var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n        var constrain = ResizingUtils.constrain;\n        var inPercentages = ResizingUtils.inPercentages;\n        var inPixels = ResizingUtils.inPixels;\n        var toPercentages = ResizingUtils.toPercentages;\n        var toPixels = ResizingUtils.toPixels;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n        var RangeUtils = Editor.RangeUtils;\n\n        var NS = \".kendoEditorElementResizing\";\n        var RESIZE_HANDLE_WRAPPER_CLASS = \"k-element-resize-handle-wrapper\";\n        var TABLE_CLASS = \"k-table\";\n        var ELEMENT_RESIZING_CLASS = \"k-element-resizing\";\n\n        var DRAG_START = \"dragStart\";\n        var DRAG = \"drag\";\n        var DRAG_END = \"dragEnd\";\n        var KEY_DOWN = \"keydown\";\n        var MOUSE_DOWN = \"mousedown\";\n        var SELECT = \"select\";\n        var DROP = \"drop\";\n\n        var COLUMN = \"td\";\n        var ROW = \"tr\";\n        var TBODY = \"tbody\";\n        var THEAD = \"thead\";\n        var TABLE = \"table\";\n        var IMG = \"img\";\n        var ELEMENT_TYPES = [\"TABLE\", \"IMG\"];\n\n        var COMMA = \",\";\n        var WIDTH = \"width\";\n        var HEIGHT = \"height\";\n\n        var EAST = \"east\";\n        var NORTH = \"north\";\n        var NORTHEAST = \"northeast\";\n        var NORTHWEST = \"northwest\";\n        var SOUTH = \"south\";\n        var SOUTHEAST = \"southeast\";\n        var SOUTHWEST = \"southwest\";\n        var WEST = \"west\";\n\n        var DOT = \".\";\n\n        function isUndefined(value) {\n            return typeof(value) === \"undefined\";\n        }\n\n        var ElementResizing = Class.extend({\n            init: function(element, options) {\n                var that = this;\n\n                that.options = extend({}, that.options, options);\n                that.handles = [];\n\n                // Check whether the element is TABLE or IMG\n                if (ELEMENT_TYPES.indexOf(element.nodeName) >= 0) {\n                    that.element = element;\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                $(that.element).off(NS);\n                that.element = null;\n\n                $(that.options.rootElement).off(KEY_DOWN + NS);\n\n                that._destroyResizeHandles();\n            },\n\n            options: {\n                appendHandlesTo: null,\n                rtl: false,\n                rootElement: null,\n                minWidth: 10,\n                minHeight: 10,\n                handles: [{\n                    direction: NORTHWEST\n                }, {\n                    direction: NORTH\n                }, {\n                    direction: NORTHEAST\n                }, {\n                    direction: EAST\n                }, {\n                    direction: SOUTHEAST\n                }, {\n                    direction: SOUTH\n                }, {\n                    direction: SOUTHWEST\n                }, {\n                    direction: WEST\n                }]\n            },\n\n            resize: function(args) {\n                var that = this;\n                var deltas = extend({}, {\n                    deltaX: 0,\n                    deltaY: 0,\n                    initialDeltaX: 0,\n                    initialDeltaY: 0\n                }, args);\n\n                that._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n                that._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n                that.showResizeHandles();\n            },\n\n            _resizeWidth: function() {\n                return false;\n            },\n\n            _resizeHeight: function() {\n                return false;\n            },\n\n            _getMaxDimensionValue: function(dimension) {\n                var that = this;\n                var element = $(that.element);\n                var dimensionLowercase = dimension.toLowerCase();\n                var rtlModifier = that.options.rtl ? (-1) : 1;\n                var parent = $(that.element).parent();\n                var parentElement = parent[0];\n                var parentDimension = parent[dimensionLowercase]();\n                var parentScrollOffset = rtlModifier * (dimension === WIDTH ? kendo.scrollLeft(parent) : parent.scrollTop());\n\n                if (parentElement && parentElement === element.closest(COLUMN)[0]) {\n                    if (parentElement.style[dimensionLowercase] === \"\" && !inPercentages(that.element.style[dimensionLowercase])) {\n                        return Infinity;\n                    }\n                    else {\n                        return (parentDimension + parentScrollOffset);\n                    }\n                }\n                else {\n                    return (parentDimension + parentScrollOffset);\n                }\n            },\n\n            showResizeHandles: function() {\n                var that = this;\n\n                that._initResizeHandles();\n                that._showResizeHandles();\n            },\n\n            _initResizeHandles: function() {\n                var that = this;\n                var handles = that.handles;\n                var options = that.options;\n                var handleOptions = that.options.handles;\n                var length = handleOptions.length;\n                var i;\n\n                if (handles && handles.length > 0) {\n                    return;\n                }\n\n                for (i = 0; i < length; i++) {\n                    that.handles.push(new ElementResizeHandle(extend({\n                        appendTo: options.appendHandlesTo,\n                        resizableElement: that.element,\n                        rootElement: options.rootElement,\n                        rtl: options.rtl\n                    }, handleOptions[i])));\n                }\n\n                that._bindToResizeHandlesEvents();\n            },\n\n            _destroyResizeHandles: function() {\n                var that = this;\n                var length = that.handles ? that.handles.length : 0;\n\n                for (var i = 0; i < length; i++) {\n                    that.handles[i].destroy();\n                }\n\n                that.handles = [];\n            },\n\n            _showResizeHandles: function() {\n                var that = this;\n                var handles = that.handles || [];\n                var length = handles.length;\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    that.handles[i].show();\n                }\n            },\n\n            _bindToResizeHandlesEvents: function() {\n                return false;\n            },\n\n            _onResizeHandleDragStart: function() {\n                var that = this;\n                var element = $(that.element);\n\n                element.addClass(ELEMENT_RESIZING_CLASS);\n\n                that._initialElementHeight = outerHeight(element);\n                that._initialElementWidth = outerWidth(element);\n                that._disableKeyboard();\n            },\n\n            _onResizeHandleDrag: function(e) {\n                this.resize(e);\n            },\n\n            _onResizeHandleDragEnd: function() {\n                var that = this;\n                $(that.element).removeClass(ELEMENT_RESIZING_CLASS);\n                that._enableKeyboard();\n            },\n\n            _enableKeyboard: function() {\n                $(this.options.rootElement).off(KEY_DOWN + NS);\n            },\n\n            _disableKeyboard: function() {\n                $(this.options.rootElement).on(KEY_DOWN + NS, function(e) {\n                    e.preventDefault();\n                });\n            }\n        });\n\n        var TableResizing = ElementResizing.extend({\n            _bindToResizeHandlesEvents: function() {\n                var that = this;\n                var handles = that.handles || [];\n                var length = handles.length;\n                var i;\n                var handle;\n\n                for (i = 0; i < length; i++) {\n                    handle = handles[i];\n                    handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n                    handle.bind(DRAG, that._onResizeHandleDrag.bind(that));\n                    handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n                }\n            },\n\n            _hasRowsInPixels: function() {\n                var that = this;\n                var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].style.height === \"\" || inPixels(rows[i].style.height)) {\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n\n            _resizeWidth: function(delta, initialDelta) {\n                var that = this;\n                var element = $(that.element);\n                var styleWidth = element[0].style[WIDTH];\n                var currentWidth = outerWidth(element);\n                var parentWidth = element.parent().width();\n                var maxWidth = that._getMaxDimensionValue(WIDTH);\n                var newWidth;\n                var ratioValue;\n                var ratioTotalValue;\n                var constrainedWidth;\n\n                if (delta === 0) {\n                    return;\n                }\n\n                if (isUndefined(that._initialElementWidth)) {\n                    that._initialElementWidth = currentWidth;\n                }\n\n                //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n                //on each drag does not work due to browser calculation of computed styles\n                constrainedWidth = constrain({\n                    value: that._initialElementWidth + initialDelta,\n                    min: that.options.minWidth,\n                    max: maxWidth\n                });\n\n                if (inPercentages(styleWidth)) {\n                    //detect resizing greater than 100%\n                    if (currentWidth + delta > parentWidth) {\n                        ratioValue = max(constrainedWidth, parentWidth);\n                        ratioTotalValue = min(constrainedWidth, parentWidth);\n                    }\n                    else {\n                        ratioValue = min(constrainedWidth, parentWidth);\n                        ratioTotalValue = max(constrainedWidth, parentWidth);\n                    }\n\n                    newWidth = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n                }\n                else {\n                    newWidth = toPixels(constrainedWidth);\n                }\n\n                that._setColumnsWidth();\n\n                element[0].style[WIDTH] = newWidth;\n            },\n\n            _resizeHeight: function(delta, initialDelta) {\n                var that = this;\n                var element = $(that.element);\n                var styleHeight = element[0].style[HEIGHT];\n                var currentHeight = outerHeight(element);\n                var parent = element.parent();\n                var parentHeight = parent.height();\n                var maxHeight = that._getMaxDimensionValue(HEIGHT);\n                var newHeight;\n                var ratioValue;\n                var ratioTotalValue;\n                var constrainedHeight;\n                var minHeight = that.options.minHeight;\n                var hasRowsInPixels = that._hasRowsInPixels();\n\n                if (delta === 0) {\n                    return;\n                }\n\n                if (isUndefined(that._initialElementHeight)) {\n                    that._initialElementHeight = currentHeight;\n                }\n\n                //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n                //on each drag does not work due to browser calculation of computed styles\n                constrainedHeight = constrain({\n                    value: that._initialElementHeight + initialDelta,\n                    min: minHeight,\n                    max: maxHeight\n                });\n\n                if (hasRowsInPixels && delta < 0) {\n                    //decreasing table height when rows are sized in pixels is not possible\n                    that._setRowsHeightInPercentages();\n                }\n\n                if (inPercentages(styleHeight)) {\n                    //detect resizing greater than 100%\n                    if (currentHeight + delta > parentHeight) {\n                        ratioValue = max(constrainedHeight, parentHeight);\n                        ratioTotalValue = min(constrainedHeight, parentHeight);\n                    }\n                    else {\n                        ratioValue = min(constrainedHeight, parentHeight);\n                        ratioTotalValue = max(constrainedHeight, parentHeight);\n                    }\n\n                    newHeight = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n                }\n                else {\n                    newHeight = toPixels(constrainedHeight);\n                }\n\n                element[0].style[HEIGHT] = newHeight;\n\n                if (hasRowsInPixels && delta < 0) {\n                    //restore original rows height unit\n                    that._setRowsHeightInPixels();\n                }\n            },\n\n            _setColumnsWidth: function() {\n                var that = this;\n                var element = $(that.element);\n                var parentElement = element.parent()[0];\n                var parentColumn = element.closest(COLUMN);\n                var columns = parentColumn.closest(ROW).children();\n                var columnsLength = columns.length;\n                var i;\n\n                function isWidthInPercentages(element) {\n                    var styleWidth = element.style.width;\n\n                    if (styleWidth !== \"\") {\n                        return inPercentages(styleWidth) ? true : false;\n                    }\n                    else {\n                        return $(element).hasClass(TABLE_CLASS) ? true : false;\n                    }\n                }\n\n                if (isWidthInPercentages(element[0]) && parentElement === parentColumn[0] && parentElement.style[WIDTH] === \"\") {\n                    for (i = 0; i < columnsLength; i++) {\n                        columns[i].style[WIDTH] = toPixels($(columns[i]).width());\n                    }\n                }\n            },\n\n            _setRowsHeightInPercentages: function() {\n                var that = this;\n                var tableHead = $(that.element).children(THEAD);\n                var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n                var tableBody = $(that.element).children(TBODY);\n                var tableBodyHeight = tableBody.height();\n                var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n                var length = rows.length;\n                var currentRowsHeights = rows.map(function() {\n                    return outerHeight($(this));\n                });\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n                }\n            },\n\n            _setRowsHeightInPixels: function() {\n                var that = this;\n                var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n                var length = rows.length;\n                var currentRowsHeights = rows.map(function() {\n                    return outerHeight($(this));\n                });\n                var i;\n\n                for (i = 0; i < length; i++) {\n                    rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n                }\n            }\n        });\n\n        var ImageResizing = ElementResizing.extend({\n            _bindToResizeHandlesEvents: function() {\n                var that = this;\n                var handles = that.handles || [];\n                var length = handles.length;\n                var i;\n                var handle;\n\n                for (i = 0; i < length; i++) {\n                    handle = handles[i];\n                    handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n\n                    if (handle.options.direction === \"north\" || handle.options.direction === \"south\") {\n                        handle.bind(DRAG, that._onResizeHandleDragVertical.bind(that));\n                    } else if (handle.options.direction === \"east\" || handle.options.direction === \"west\") {\n                        handle.bind(DRAG, that._onResizeHandleDragHorizontal.bind(that));\n                    } else {\n                        handle.bind(DRAG, that._onResizeHandleDragLocked.bind(that));\n                    }\n\n                    handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n                }\n            },\n\n            _getDeltas: function(args) {\n                return extend({}, {\n                    deltaX: 0,\n                    deltaY: 0,\n                    initialDeltaX: 0,\n                    initialDeltaY: 0\n                }, args);\n            },\n\n            _onResizeHandleDragVertical: function(args) {\n                var deltas = this._getDeltas(args);\n\n                this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n                this.showResizeHandles();\n            },\n\n            _onResizeHandleDragHorizontal: function(args) {\n                var deltas = this._getDeltas(args);\n\n                this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n                this.showResizeHandles();\n            },\n\n            _onResizeHandleDragLocked: function(args) {\n                var min = Math.min(Math.abs(args.initialDeltaX), Math.abs(args.initialDeltaY)),\n                    initialWidth = this._initialElementWidth,\n                    initialHeight = this._initialElementHeight,\n                    deltas;\n\n                if (min === args.initialDeltaX || min === args.initialDeltaX * -1) {\n                    args.initialDeltaY = args.initialDeltaX * initialHeight / initialWidth;\n                    args.deltaY = args.deltaX;\n                } else if (min === args.initialDeltaY || min === args.initialDeltaY * -1) {\n                    args.initialDeltaX = args.initialDeltaY * initialWidth / initialHeight;\n                    args.deltaX = args.deltaY;\n                }\n\n                deltas = this._getDeltas(args);\n\n                this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n                this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n                this.showResizeHandles();\n            },\n\n            _resizeWidth: function(delta, initialDelta) {\n                var that = this;\n                var element = $(that.element);\n                var currentWidth = outerWidth(element);\n                var newWidth;\n                var constrainedWidth;\n\n                if (delta === 0) {\n                    return;\n                }\n\n                if (isUndefined(that._initialElementWidth)) {\n                    that._initialElementWidth = currentWidth;\n                }\n\n                //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n                //on each drag does not work due to browser calculation of computed styles\n                constrainedWidth = constrain({\n                    value: that._initialElementWidth + initialDelta,\n                    min: that.options.minWidth,\n                    max: that._getMaxDimensionValue(WIDTH)\n                });\n\n                newWidth = toPixels(constrainedWidth);\n                element[0].style[WIDTH] = newWidth;\n                element.attr(WIDTH, Math.floor(constrainedWidth));\n            },\n\n            _resizeHeight: function(delta, initialDelta) {\n                var that = this;\n                var element = $(that.element);\n                var currentHeight = outerHeight(element);\n                var newHeight;\n                var constrainedHeight;\n\n                if (delta === 0) {\n                    return;\n                }\n\n                if (isUndefined(that._initialElementHeight)) {\n                    that._initialElementHeight = currentHeight;\n                }\n\n                //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n                //on each drag does not work due to browser calculation of computed styles\n                constrainedHeight = constrain({\n                    value: that._initialElementHeight + initialDelta,\n                    min: that.options.minHeight,\n                    max: Number.MAX_SAFE_INTEGER\n                });\n\n                newHeight = toPixels(constrainedHeight);\n                element[0].style[HEIGHT] = newHeight;\n                element.attr(HEIGHT, Math.floor(constrainedHeight));\n            }\n        });\n\n        var ElementResizingFactory = Class.extend({\n            create: function(editor) {\n                var factory = this;\n\n                $(editor.body)\n                    .on(\"dragstart\" + NS, function() {\n                        var nodes = RangeUtils.nodes(editor.getRange()),\n                            hasImg = false;\n\n                        nodes.forEach(function(node) {\n                            if (node.nodeName === \"IMG\") {\n                                hasImg = true;\n                            }\n                        });\n\n                        if (hasImg && nodes.length > 1) {\n                            editor.elementResizing._destroyResizeHandles();\n                        }\n                    })\n                    .on(DROP + NS, function() {\n                        setTimeout(function() {\n                            var image = RangeUtils.image(editor.getRange());\n\n                            if (image) {\n                                editor.elementResizing._destroyResizeHandles();\n                                editor.elementResizing.element = image;\n                                editor.elementResizing.showResizeHandles();\n                            }\n                        });\n                    })\n                    .on(MOUSE_DOWN + NS, TABLE + COMMA + IMG, function(e) {\n                        var eventTarget = e.target;\n                        var eventCurrentTarget = e.currentTarget;\n                        var elementResizing = editor.elementResizing;\n                        var element = elementResizing ? elementResizing.element : null;\n\n                        if (elementResizing) {\n                            if (element && eventCurrentTarget !== element) {\n                                if (contains(eventCurrentTarget, element) && element !== eventTarget && contains(element, eventTarget)) {\n                                    //prevent a parent table resizing init when clicking on a nested table when the event bubbles\n                                    //instead of stopping event propagation\n                                    return;\n                                }\n                                else {\n                                    if (element !== eventTarget) {\n                                        editor._destroyElementResizing();\n                                        factory._initResizing(editor, eventCurrentTarget);\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            factory._initResizing(editor, eventCurrentTarget);\n                        }\n\n                        editor._showElementResizeHandles();\n                    })\n                    .on(MOUSE_DOWN + NS, function(e) {\n                        var elementResizing = editor.elementResizing;\n                        var element = elementResizing ? elementResizing.element : null;\n                        var target = e.target;\n                        var isResizeHandleOrChild = $(target).hasClass(RESIZE_HANDLE_WRAPPER_CLASS) || $(target).parents(DOT + RESIZE_HANDLE_WRAPPER_CLASS).length > 0;\n\n                        if (elementResizing && element !== target && !contains(element, target) && !isResizeHandleOrChild) {\n                            editor._destroyElementResizing();\n                        }\n                    });\n            },\n\n            dispose: function(editor) {\n                $(editor.body).off(NS);\n            },\n\n            _initResizing: function(editor, element) {\n                // table and image resizing is natively supported in IE\n                // https://stackoverflow.com/questions/53831846/resizing-images-in-contenteditable-div-stopped-working-in-firefox\n                // Enable custom resize handlers for FF too\n                if (!browser.msie) {\n                    if ($(element).is(TABLE)) {\n                        editor.elementResizing = editor.tableResizing = new TableResizing(element, {\n                            appendHandlesTo: editor.body,\n                            rtl: kendo.support.isRtl(editor.element),\n                            rootElement: editor.body\n                        });\n                    } else if ($(element).is(IMG)) {\n                        editor.elementResizing = new ImageResizing(element, {\n                            appendHandlesTo: editor.body,\n                            rtl: kendo.support.isRtl(editor.element),\n                            rootElement: editor.body\n                        });\n                    }\n\n                    if (editor._showElementResizeHandlesProxy) {\n                        editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n                        editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n                    }\n                }\n            }\n        });\n\n        ElementResizingFactory.current = new ElementResizingFactory();\n\n        extend(Editor, {\n            TableResizing: TableResizing,\n            ImageResizing: ImageResizing,\n            ElementResizing: ElementResizing,\n            ElementResizingFactory: ElementResizingFactory\n        });\n\n    })(window.kendo);\n\n    (function($, undefined$1) {\n\n    var kendo = window.kendo,\n        Editor = kendo.ui.editor,\n        EditorUtils = Editor.EditorUtils,\n        RangeUtils = Editor.RangeUtils,\n        dom = Editor.Dom,\n        registerTool = EditorUtils.registerTool,\n        Command = Editor.Command;\n\n    var tableFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"table\"] }]);\n    var cellsFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"td\",\"th\"] }]);\n    var reUnit = /([a-z]+|%)$/i;\n\n    var COL = \"col\";\n    var ROW = \"row\";\n    var COLGROUP = \"colgroup\";\n    var SCOPE = \"scope\";\n    var COL_INDEX = \"col-index\";\n    var TH = \"th\";\n    var TD = \"td\";\n    var THEAD = \"thead\";\n    var HEADERS = \"headers\";\n    var TABLE = \"table\";\n\n    var TableWizardCommand = Command.extend({\n        exec: function() {\n            var cmd = this;\n            var editor = cmd.editor;\n            var range = cmd.range = cmd.lockRange();\n            var isTableCellWizard = cmd.options.tableCellWizard;\n            var selectedTable = cmd._sourceTable = !cmd.options.insertNewTable ? cmd._selectedTable(range) : undefined$1;\n            var selectedCells = cmd._selectedTableCells = selectedTable ? cmd._selectedCells(range) : undefined$1;\n            var options = {\n                visible: false,\n                messages: editor.options.messages,\n                closeCallback: cmd.onDialogClose.bind(cmd),\n                table: cmd.parseTable(selectedTable, selectedCells),\n                dialogOptions: editor.options.dialogOptions,\n                isRtl: kendo.support.isRtl(editor.wrapper)\n            };\n\n            var dialog = new Editor.TableWizardDialog(options);\n            dialog.open(isTableCellWizard);\n        },\n\n        onDialogClose: function(data) {\n            var cmd = this;\n            cmd.releaseRange(cmd.range);\n\n            if (data) { //Ok button pressed\n                if (cmd.options.insertNewTable) {\n                    cmd.insertTable(cmd.createNewTable(data));\n                } else {\n                    cmd.updateTable(data, cmd._sourceTable, cmd._selectedTableCells);\n                }\n            }\n        },\n        releaseRange: function(range) {\n            var cmd = this;\n            var doc = cmd.editor.document;\n            dom.windowFromDocument(doc).focus();\n            Command.fn.releaseRange.call(cmd, range);\n        },\n        insertTable: function(table) {\n            var range = this.range;\n\n            range.insertNode(table);\n            range.collapse(true);\n            this.editor.selectRange(range);\n\n            this._ensureFocusableAfterTable(table);\n        },\n        _ensureFocusableAfterTable: function(table) {\n            var siblingNodes = $(table).parent().contents();\n            var lastSiblingIndex = siblingNodes.length - 1;\n            var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n            while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n                lastSiblingIndex -= 1;\n                lastSibling = siblingNodes.get(lastSiblingIndex);\n            }\n\n            if (lastSibling === table) {\n                dom.insertAfter(dom.createEmptyNode(this.editor.document, \"p\"), table);\n            }\n        },\n        updateTable: function(data, table, selectedCells) {\n            var cmd = this;\n            var tableRows = $(table.rows).toArray();\n            var tableProp = data.tableProperties;\n            var rows = tableProp.rows;\n            var tHead = table.tHead;\n            var last = cmd._lastInCollection;\n            var lastSelectedRow, cellProp;\n\n            //Leave only first selected cell\n            while (selectedCells.length > 1) {\n                selectedCells.pop();\n            }\n\n            lastSelectedRow = selectedCells.length ? last(selectedCells).parentNode : last(tableRows);\n\n            cmd._deleteTableRows(tableRows, tableRows.length - rows);\n\n            if (tableRows.length < rows) {\n                cmd._addRows(lastSelectedRow, rows, tableRows);\n            }\n\n            dom.reMapTableColumns(table, COL_INDEX);\n            cmd._updateColumns(tableRows, tableProp.columns, selectedCells, lastSelectedRow);\n            cmd._updateTableProperties(table, tableProp);\n\n            cellProp = data.cellProperties;\n            if (selectedCells[0]) {\n                dom.attr(selectedCells[0], { id: (cellProp || {}).id || null });\n            }\n            if (cellProp) {\n                (cellProp.selectAllCells ? $(tableRows).children() : $(selectedCells)).each(function(i, cell) {\n                    cmd._updateCellProperties(cell, cellProp, tableProp);\n                });\n            }\n\n            cmd._updateCaption(table, tableProp);\n\n            if (tHead) {\n                cmd._updateHeadersWithThead(table, data);\n            } else {\n                cmd._updateHeadersNoThead(table, data);\n            }\n\n            cmd._updateHeaderAssociates(table, tableProp);\n            dom.clearTableMappings(table, COL_INDEX);\n        },\n        _isHeadingRow: function(row) {\n            return dom.is(row.cells[0], TH) && dom.is(row.parentNode, THEAD);\n        },\n        _isHeadingCell: function(cell) {\n            return dom.is(cell, TH);\n        },\n        cellsWithHeadersAssociated: function(table) {\n            var cells = $(table.rows).children();\n            var headingIds = [];\n            var checkHeader = function(header) {\n                return headingIds.indexOf(header) > -1;\n            };\n\n            cells.each(function(c, cell) {\n                if (cell.id && dom.is(cell, TH)) {\n                    headingIds.push(cell.id);\n                }\n            });\n\n            var associatedCells = cells.filter(function(c, cell) {\n                var headersAttr = cell.getAttribute(HEADERS);\n                var headersArray;\n\n                if (headersAttr && !dom.is(cell, TH)) {\n                    headersArray = headersAttr.split(\" \");\n\n                    if (headersArray && headersArray.length > 0) {\n                        return headersArray.some(checkHeader);\n                    }\n                }\n\n                return false;\n            });\n\n            return !!associatedCells.length;\n        },\n        _insertCells: function(count, row, index) {\n            index = isNaN(index) ? -1 : index;\n            for (var i = 0, cell; i < count; i++) {\n                cell = row.insertCell(index);\n                cell.innerHTML = \"&nbsp;\";\n            }\n        },\n        _deleteTableRows: function(rows, count) {\n            for (var i = 0, row, rowParent; i < count; i++) {\n                row = rows.pop();\n                rowParent = row.parentNode;\n                rowParent.removeChild(row);\n                if (!rowParent.rows.length) {\n                    dom.remove(rowParent);\n                }\n            }\n        },\n        createNewTable: function(data) {\n            var cmd = this;\n            var doc = cmd.editor.document;\n            var tableProp = data.tableProperties;\n            var table = dom.create(doc, TABLE);\n            var rowIndex = 0;\n            var thead;\n\n            cmd._updateTableProperties(table, tableProp);\n            cmd._updateCaption(table, tableProp);\n\n            if (tableProp.headerRows && tableProp.headerRows > 0) {\n                thead = table.createTHead();\n                cmd._createTableRows(data, thead, rowIndex, true);\n                rowIndex += tableProp.headerRows;\n            }\n\n            var tbody = table.createTBody();\n            cmd._createTableRows(data, tbody, rowIndex, false);\n\n            dom.reMapTableColumns(table, COL_INDEX);\n\n            if (tableProp.cellsWithHeaders === \"ids\") {\n                dom.associateWithIds(table);\n            } else if (tableProp.cellsWithHeaders === \"scope\") {\n                cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n            }\n\n            dom.clearTableMappings(table, COL_INDEX);\n\n            return table;\n        },\n        _createTableRows: function(data, container, initialIndex, headerRows) {\n            var cmd = this;\n            var tableProp = data.tableProperties;\n            var cellProp = data.cellProperties;\n            var columns = tableProp.columns;\n            var rows = headerRows ? tableProp.headerRows : tableProp.rows;\n            var headerColumns = tableProp.headerColumns;\n\n            for (var r = initialIndex, row; r < rows; r++) {\n                row = container.insertRow();\n\n                for (var c = 0, cell; c < columns; c++) {\n                    if (headerRows || headerColumns > c) {\n                        cell = document.createElement(TH);\n                    } else {\n                        cell = document.createElement(TD);\n                    }\n\n                    row.appendChild(cell);\n                    cell.innerHTML = \"&nbsp;\";\n                    if (cellProp && r === 0 && c === 0 && cellProp.id) {\n                        cell.id = cellProp.id;\n                    }\n\n                    cmd._updateCellProperties(cell, cellProp && (cellProp.selectAllCells || (r === 0 && c === 0)) ? cellProp : {}, tableProp);\n                }\n            }\n        },\n        _addRows: function(lastSelectedRow, rows, tableRows) {\n            var cmd = this;\n            var rowIndex = $(lastSelectedRow).index();\n            var cellsLength = lastSelectedRow.cells.length;\n            var newRowsCount = rows - tableRows.length;\n            var parent = lastSelectedRow.parentNode;\n            var row;\n\n            while (newRowsCount) {\n                row = parent.insertRow(rowIndex + 1);\n                cmd._insertCells(cellsLength - row.cells.length, row);\n                newRowsCount--;\n            }\n        },\n        _updateColumns: function(tableRows, columns, selectedCells, lastSelectedRow) {\n            var cmd = this;\n            var last = cmd._lastInCollection;\n            var firstRowLastCell = last(tableRows[0].cells);\n            var numberOfColumns = Number(firstRowLastCell.getAttribute(COL_INDEX)) + firstRowLastCell.colSpan;\n\n            if (numberOfColumns > columns) {\n                $(tableRows).each(function(i, row) {\n                    var lastCurrentCell = last(row.cells);\n                    var rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n\n                    while (rowColumns > columns) {\n                        if (lastCurrentCell.colSpan && lastCurrentCell.colSpan > 1) {\n                            lastCurrentCell.colSpan -= 1;\n                        } else {\n                            row.deleteCell(-1);\n                        }\n\n                        lastCurrentCell = last(row.cells);\n                        rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n                    }\n                });\n            }\n\n            if (numberOfColumns < columns) {\n                var cellIndex = $(last(selectedCells) || last(lastSelectedRow.cells)).index();\n                $(tableRows).each(function(i, row) {\n                    var lastCurrentCell = last(row.cells);\n                    cmd._insertCells(columns - Number(lastCurrentCell.getAttribute(COL_INDEX)) - lastCurrentCell.colSpan, row, cellIndex + 1);\n                });\n            }\n        },\n        _updateTableProperties: function(table, data) {\n            var style = this._getStylesData(data);\n            dom.attr(table, {\n                cellSpacing: data.cellSpacing || null,\n                topCellPadding: this._getNumericValue(data.topCellPadding) ?? '',\n                leftCellPadding: this._getNumericValue(data.leftCellPadding) ?? '',\n                bottomCellPadding: this._getNumericValue(data.bottomCellPadding) ?? '',\n                rightCellPadding: this._getNumericValue(data.rightCellPadding) ?? '',\n                className: data.className || null,\n                id: data.id || null,\n                summary: data.summary || null,\n                style: style || null\n            });\n            $(table).addClass(\"k-table\");\n        },\n        _updateCellProperties: function(cell, data, tableData) {\n            var style = this._getStylesData(data);\n            style.paddingTop = this._getNumericValue(data.topCellPadding) ?? this._getNumericValue(tableData?.topCellPadding) ?? '';\n            style.paddingLeft = this._getNumericValue(data.leftCellPadding) ?? this._getNumericValue(tableData?.leftCellPadding) ?? '';\n            style.paddingBottom = this._getNumericValue(data.bottomCellPadding) ?? this._getNumericValue(tableData?.bottomCellPadding) ?? '';\n            style.paddingRight = this._getNumericValue(data.rightCellPadding) ?? this._getNumericValue(tableData?.rightCellPadding) ?? '';\n            style.margin = data.cellMargin || null;\n            dom.attr(cell, {\n                style: style || null,\n                className: data.className || null\n            });\n        },\n        _updateCaption: function(table, data) {\n            if (table.caption && !data.captionContent) {\n                table.deleteCaption();\n            } else if (data.captionContent) {\n                var caption = table.createCaption();\n                caption.innerHTML = data.captionContent;\n                var alignment = this._getAlignmentData(data.captionAlignment);\n                dom.attr(caption, {\n                    style: {\n                        textAlign: alignment.textAlign,\n                        verticalAlign: alignment.verticalAlign\n                    }\n                });\n            }\n        },\n        _updateHeadersNoThead: function(table, data) {\n            var cmd = this;\n            var tableProp = data.tableProperties;\n            var rows = table.rows;\n            var row, cells, cell, i, j;\n\n            for (i = 0; i < rows.length; i++) {\n                row = rows[i];\n                cells = row.cells;\n\n                for (j = 0; j < cells.length; j++) {\n                    cell = cells[j];\n                    if (!cmd._isHeadingCell(cell) && (i < tableProp.headerRows || tableProp.headerColumns > cell.getAttribute(COL_INDEX))) {\n                        dom.changeTag(cell, TH, false);\n                    } else if (cmd._isHeadingCell(cell) && i >= tableProp.headerRows && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                        dom.changeTag(cell, TD, false);\n                    }\n                }\n            }\n        },\n        _updateHeadersWithThead: function(table, data) {\n            var cmd = this;\n            var tableProp = data.tableProperties;\n            var thead = table.tHead;\n            var rowIndex = 0;\n            var tbody = table.tBodies[0];\n            var row, cell, i;\n\n            if (!tbody) {\n                tbody = table.createTBody();\n            }\n\n            if (tableProp.headerRows && tableProp.headerRows > 0) {\n                if (!thead) {\n                    thead = table.createTHead();\n                }\n\n                while (thead.rows.length < tableProp.headerRows) {\n                    thead.appendChild(tbody.rows[0]);\n                }\n\n                while (thead.rows.length > tableProp.headerRows) {\n                    tbody.appendChild(thead.rows[0]);\n                }\n\n                cmd._swapToHeaderCells(thead);\n            } else if (thead) {\n                while (thead.rows.length > 0) {\n                    tbody.appendChild(thead.rows[thead.rows.length - 1]);\n                }\n\n                table.deleteTHead();\n            }\n\n            while (tbody.rows.length > rowIndex) {\n                row = tbody.rows[rowIndex];\n                for (i = 0; i < row.cells.length; i++) {\n                    cell = row.cells[i];\n                    if (cmd._isHeadingCell(cell) && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                        dom.changeTag(cell, TD, false);\n                    } else if (!cmd._isHeadingCell(cell) && tableProp.headerColumns > cell.getAttribute(COL_INDEX)) {\n                        dom.changeTag(cell, TH, false);\n                    }\n                }\n                rowIndex += 1;\n            }\n        },\n        _updateHeaderAssociates: function(table, tableProp) {\n            var cmd = this;\n\n            if (tableProp.cellsWithHeaders === \"ids\") {\n                if (!cmd.cellsWithHeadersAssociated(table)) {\n                    cmd._removeScopes(table);\n                }\n                dom.associateWithIds(table);\n            } else if (tableProp.cellsWithHeaders === \"scope\") {\n                if (cmd.cellsWithHeadersAssociated(table)) {\n                    cmd._removeAssociates(table);\n                }\n                cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n            } else {\n                if (cmd.cellsWithHeadersAssociated(table)) {\n                    cmd._removeAssociates(table);\n                } else {\n                    cmd._removeScopes(table);\n                }\n            }\n        },\n        _addScopes: function(table, headerRows, headerCols) {\n            var rows = table.rows;\n            var i, j, row, cell;\n\n            for (i = 0; i < rows.length; i++) {\n                row = rows[i];\n\n                for (j = 0; j < row.cells.length; j++) {\n                    cell = row.cells[j];\n\n                    if (i < headerRows) {\n                        cell.setAttribute(SCOPE, COL);\n                    } else if (cell.getAttribute(COL_INDEX) < headerCols) {\n                        cell.setAttribute(SCOPE, ROW);\n                    }\n                }\n            }\n        },\n        _removeScopes: function(table) {\n            $(table).find(TH).removeAttr(SCOPE);\n            $(table).find(COL).remove();\n            $(table).find(COLGROUP).remove();\n        },\n        _removeAssociates: function(table) {\n            $(table).find(\"th, td\").removeAttr(\"id headers\");\n        },\n        _swapToHeaderCells: function(thead) {\n            var tds = $(thead).find(\"td\");\n            var swapCell = function(index, cell) {\n                dom.changeTag(cell, TH, false);\n            };\n            tds.each(swapCell);\n        },\n        _getStylesData: function(data) {\n            var that = this;\n            var alignment = this._getAlignmentData(data.alignment);\n            var whiteSpace = \"wrapText\" in data ? (data.wrapText ? \"\" : \"nowrap\") : null;\n\n            return $.extend({\n                width: data.width ? data.width + data.widthUnit : null,\n                height: data.height ? data.height + data.heightUnit : null,\n                textAlign: alignment.textAlign,\n                verticalAlign: alignment.verticalAlign,\n                backgroundColor: data.bgColor || \"\",\n                borderWidth: data.borderWidth,\n                borderStyle: data.borderStyle,\n                borderColor: data.borderColor || \"\",\n                borderCollapse: data.collapseBorders ? \"collapse\" : null,\n                whiteSpace: whiteSpace\n            }, that._getTablePositionData(data.position));\n        },\n        _getAlignmentData: function(alignment) {\n            var textAlign = \"\";\n            var verticalAlign = textAlign;\n\n            if (alignment) {\n                if (alignment.indexOf(\" \") != -1) {\n                    var align = alignment.split(\" \");\n                    textAlign = align[0];\n                    verticalAlign = align[1];\n                } else {\n                    textAlign = alignment;\n                }\n            }\n            return { textAlign: textAlign, verticalAlign: verticalAlign };\n        },\n        _getTablePositionData: function(position) {\n            if (!position) {\n                return {};\n            }\n\n            return { marginLeft: position != \"left\" ? \"auto\" : \"\", marginRight: position != \"right\" ? \"auto\" : \"\" };\n        },\n        parseTable: function(table, selectedCells) {\n            if (!table) {\n                return { tableProperties: {}, selectedCells: [] };\n            }\n\n            var cmd = this;\n            var tStyle = table.style;\n            var rows = table.rows;\n            var caption = table.caption;\n            var captionClone = $(caption ? caption.cloneNode(true) : undefined$1);\n            captionClone.find(\".k-marker\").remove();\n\n            var cssClass = table.className;\n            cssClass = cssClass.replace(/^k-table\\s|\\sk-table$/, \"\");\n            cssClass = cssClass.replace(/\\sk-table\\s/, \" \");\n            cssClass = cssClass.replace(/^k-table$/, \"\");\n\n            var tableAlignment = cmd._getAlignment(table, true);\n            var tablePosition = cmd._getTablePosition(table);\n            var captionAlignment = caption ? cmd._getAlignment(caption) : undefined$1;\n            var numberOfHeaderRows = dom._getNumberOfHeaderRows(table);\n\n            var cellsWithHeaders;\n            if (cmd.cellsWithHeadersAssociated(table)) {\n                cellsWithHeaders = \"ids\";\n            } else if ($(table).find(\"th[scope]\").length > 0) {\n                cellsWithHeaders = \"scope\";\n            } else {\n                cellsWithHeaders = \"none\";\n            }\n\n            dom.reMapTableColumns(table, COL_INDEX);\n            var numberOfColumns = dom._getNumberOfColumns(table);\n            var numberOfHeaderColumns = dom._getNumberOfHeaderColumns(table, numberOfHeaderRows);\n            dom.clearTableMappings(table, COL_INDEX);\n\n            var tableJson = {\n                tableProperties: {\n                    width: tStyle.width || table.width ? parseFloat(tStyle.width || table.width) : null,\n                    height: tStyle.height || table.height ? parseFloat(tStyle.height || table.height) : null,\n                    columns: numberOfColumns,\n                    rows: rows.length,\n                    widthUnit: cmd._getUnit(tStyle.width),\n                    heightUnit: cmd._getUnit(tStyle.height),\n                    cellSpacing: table.cellSpacing,\n                    topCellPadding: table.topCellPadding,\n                    leftCellPadding: table.leftCellPadding,\n                    bottomCellPadding: table.bottomCellPadding,\n                    rightCellPadding: table.rightCellPadding,\n                    alignment: tableAlignment.textAlign,\n                    position: tablePosition,\n                    bgColor: tStyle.backgroundColor || table.bgColor,\n                    className: cssClass,\n                    id: table.id,\n                    borderWidth: tStyle.borderWidth || table.border,\n                    borderColor: tStyle.borderColor,\n                    borderStyle: tStyle.borderStyle || \"\",\n                    collapseBorders: !!tStyle.borderCollapse,\n                    summary: table.summary,\n                    captionContent: caption ? captionClone.html() : \"\",\n                    captionAlignment: caption && captionAlignment.textAlign ? captionAlignment.textAlign + \" \" + captionAlignment.verticalAlign : \"\",\n                    headerRows: numberOfHeaderRows,\n                    headerColumns: numberOfHeaderColumns,\n                    cellsWithHeaders: cellsWithHeaders\n                },\n                selectedCells: []\n            };\n\n            tableJson.rows = cmd.parseTableRows(rows, selectedCells, tableJson);\n\n            return tableJson;\n        },\n        parseTableRows: function(rows, selectedCells, tableJson) {\n            var cmd = this;\n            var data = [], row, rowData, cells, cell, cellData;\n            for (var i = 0; i < rows.length; i++) {\n                row = rows[i];\n                rowData = { cells: [] };\n                cells = row.cells;\n                data.push(rowData);\n                for (var j = 0; j < cells.length; j++) {\n                    cell = cells[j];\n                    cellData = cmd.parseCell(cell);\n                    if ($.inArray(cell, selectedCells) != -1) {\n                        tableJson.selectedCells.push(cellData);\n                    }\n                    rowData.cells.push(cellData);\n                }\n            }\n            return data;\n        },\n        parseCell: function(cell) {\n            var cmd = this;\n            var cStyle = cell.style;\n            var alignment = cmd._getAlignment(cell);\n            alignment = alignment.textAlign ? alignment.textAlign + \" \" + alignment.verticalAlign : \"\";\n\n            var data = {\n                width: cStyle.width || cell.width ? parseFloat(cStyle.width || cell.width) : null,\n                height: cStyle.height || cell.height ? parseFloat(cStyle.height || cell.height) : null,\n                widthUnit: cmd._getUnit(cStyle.width),\n                heightUnit: cmd._getUnit(cStyle.height),\n                cellMargin: cStyle.margin,\n                topCellPadding: cStyle.paddingTop,\n                leftCellPadding: cStyle.paddingLeft,\n                bottomCellPadding: cStyle.paddingBottom,\n                rightCellPadding: cStyle.paddingRight,\n                alignment: alignment,\n                bgColor: cStyle.backgroundColor || cell.bgColor,\n                className: cell.className,\n                id: cell.id,\n                borderWidth: cStyle.borderWidth || cell.border,\n                borderColor: cStyle.borderColor,\n                borderStyle: cStyle.borderStyle,\n                wrapText: cStyle.whiteSpace != \"nowrap\"\n            };\n\n            return data;\n        },\n        _getTablePosition: function(element) {\n            var style = element.style;\n            if (style.marginLeft == \"auto\" && style.marginRight == \"auto\") {\n                return \"center\";\n            }\n\n            if (style.marginLeft == \"auto\") {\n                return \"right\";\n            }\n\n            return \"left\";\n        },\n        _getAlignment: function(element, horizontalOnly) {\n            var style = element.style;\n            var hAlign = style.textAlign || element.align || \"\";\n            if (horizontalOnly) {\n                return { textAlign: hAlign };\n            }\n            var vAlign = style.verticalAlign || element.vAlign || \"\";\n            if (hAlign && vAlign) {\n                return { textAlign: hAlign, verticalAlign: vAlign };\n            }\n            if (!hAlign && vAlign) {\n                return { textAlign: \"left\", verticalAlign: vAlign };\n            }\n            if (hAlign && !vAlign) {\n                return { textAlign: hAlign, verticalAlign: \"top\" };\n            }\n            return { textAlign: \"\", verticalAlign: \"\" };\n        },\n        _getUnit: function(value) {\n            var unit = (value || \"\").match(reUnit);\n            return unit ? unit[0] : \"px\";\n        },\n        _selectedTable: function(range) {\n            var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n            return tableFormatFinder.findSuitable(nodes)[0];\n        },\n        _selectedCells: function(range) {\n            var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n            return cellsFormatFinder.findSuitable(nodes);\n        },\n        _lastInCollection: function(collection) {\n            return collection[collection.length - 1];\n        },\n        _getNumericValue: function(value) {\n            return !isNaN(value) || typeof value === \"string\" ? value : null;\n        }\n    });\n\n    var TableWizardTool = Editor.Tool.extend({\n        command: function(options) {\n            options.insertNewTable = this.options.insertNewTable;\n            options.tableCellWizard = !!this.options.tableCellWizard;\n            return new TableWizardCommand(options);\n        }\n    });\n\n    var TableWizardEditTool = TableWizardTool.extend({\n        update: function(ui, nodes) {\n            var isFormatted = !tableFormatFinder.isFormatted(nodes),\n                toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n            if (isFormatted === true) {\n                toolbar.hide(ui);\n            } else {\n                toolbar.show(ui);\n            }\n        }\n    });\n\n    var TableCellWizardEditTool = TableWizardTool.extend({\n        update: function(ui, nodes) {\n            var isFormatted = !tableFormatFinder.isFormatted(nodes),\n                toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n            if (isFormatted === true) {\n                toolbar.hide(ui);\n            } else {\n                toolbar.show(ui);\n            }\n        }\n    });\n\n    kendo.ui.editor.TableWizardTool = TableWizardTool;\n    kendo.ui.editor.TableWizardCommand = TableWizardCommand;\n\n    registerTool(\"tableProperties\", new TableWizardEditTool({ command: TableWizardCommand, insertNewTable: false, property: \"tableProperties\" }));\n    registerTool(\"tableCellProperties\", new TableCellWizardEditTool({ command: TableWizardCommand, tableCellWizard: true, insertNewTable: false, property: \"tableCellProperties\" }));\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n    const FORM_FIELD_CLASS = \"k-form-field\",\n          INVISIBLE_CLASS = \"k-visibility-invisible\",\n          DOT = \".\";\n\n    var kendo = window.kendo,\n        encode = kendo.htmlEncode,\n        numericTextBoxSettings = { format: \"0\", min: 0 },\n        units = [\"px\", \"em\"],\n        borderStyles = [\"solid\", \"dotted\", \"dashed\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\", \"initial\", \"inherit\", \"none\", \"hidden\"];\n\n    var DEFAULT_NUMBER_OF_COLS_AND_ROWS = 4;\n\n    var textWrapDropDownSettings = {\n        dataSource: [{\n            className: \"text-wrap\",\n            value: \"wrap\"\n        }, {\n            className: \"parameter-string\",\n            value: \"nowrap\"\n        }],\n        dataTextField: \"className\",\n        dataValueField: \"value\",\n        template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n        valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-text-wrap\" }) + encode(tooltip)\n    };\n\n    var tablePositionDropDownSettings = {\n        dataSource: [{\n            className: \"table-position-start\",\n            value: \"left\"\n        }, {\n            className: \"table-position-center\",\n            value: \"center\"\n        }, {\n            className: \"table-position-end\",\n            value: \"right\"\n        }],\n        dataTextField: \"className\",\n        dataValueField: \"value\",\n        template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n        valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n    };\n\n    var tableAlignmentDropDownSettings = {\n        dataSource: [{\n            className: \"table-align-middle-left\",\n            value: \"left\"\n        }, {\n            className: \"table-align-middle-center\",\n            value: \"center\"\n        }, {\n            className: \"table-align-middle-right\",\n            value: \"right\"\n        }, {\n            className: \"align-remove\",\n            value: \"\"\n        }],\n        dataTextField: \"className\",\n        dataValueField: \"value\",\n        template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n        valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n    };\n\n    var cellAlignmentDropDownSettings = {\n        dataSource: [{\n            className: \"table-align-top-left\",\n            value: \"left top\"\n        }, {\n            className: \"table-align-top-center\",\n            value: \"center top\"\n        }, {\n            className: \"table-align-top-right\",\n            value: \"right top\"\n        }, {\n            className: \"table-align-middle-left\",\n            value: \"left middle\"\n        }, {\n            className: \"table-align-middle-center\",\n            value: \"center middle\"\n        }, {\n            className: \"table-align-middle-right\",\n            value: \"right middle\"\n        }, {\n            className: \"table-align-bottom-left\",\n            value: \"left bottom\"\n        }, {\n            className: \"table-align-bottom-center\",\n            value: \"center bottom\"\n        }, {\n            className: \"table-align-bottom-right\",\n            value: \"right bottom\"\n        }, {\n            className: \"align-remove\",\n            value: \"\"\n        }],\n        dataTextField: \"className\",\n        dataValueField: \"value\",\n        template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n        valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n    };\n\n    var accessibilityAlignmentDropDownSettings = {\n        dataSource: [{\n            className: \"table-align-top-left\",\n            value: \"left top\"\n        }, {\n            className: \"table-align-top-center\",\n            value: \"center top\"\n        }, {\n            className: \"table-align-top-right\",\n            value: \"right top\"\n        }, {\n            className: \"table-align-bottom-left\",\n            value: \"left bottom\"\n        }, {\n            className: \"table-align-bottom-center\",\n            value: \"center bottom\"\n        }, {\n            className: \"table-align-bottom-right\",\n            value: \"right bottom\"\n        }, {\n            className: \"align-remove\",\n            value: \"\"\n        }],\n        dataTextField: \"className\",\n        dataValueField: \"value\",\n        template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }),\n        valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" })\n    };\n\n    var tablePropertiesDialogTemplate = ({ messages }) =>\n        '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n            '<div id=\"k-table-wizard-tabs\" class=\"k-root-tabs\">' +\n                '<ul>' +\n                    `<li class=\"k-active\">${ messages.tableTab }</li>` +\n                    `<li>${ messages.accessibilityTab }</li>` +\n                '</ul>' +\n                '<div id=\"k-table-properties\"></div>' +\n                '<div id=\"k-accessibility-properties\"></div>' +\n            '</div>' +\n            '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                    kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                        icon: 'check',\n                            themeColor: \"primary\"\n                        }) +\n                        kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                            icon: 'cancel-outline'\n                        }) +\n            '</div>' +\n        '</div>';\n        var cellPropertiesDialogTemplate = ({ messages }) =>\n        '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n            '<div id=\"k-cell-properties\"></div>' +\n            '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                    kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                        icon: 'check',\n                            themeColor: \"primary\"\n                        }) +\n                        kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                            icon: 'cancel-outline'\n                        }) +\n            '</div>' +\n        '</div>';\n\n    var TableWizardDialog = kendo.Class.extend({\n        init: function(options) {\n            this.options = options;\n        },\n        _openTablePropertiesDialog: function() {\n            var that = this,\n                options = that.options,\n                dialogOptions = options.dialogOptions,\n                tableData = options.table,\n                dialog,\n                messages = options.messages,\n                isIE = kendo.support.browser.msie;\n\n            function close(e) {\n                e.preventDefault();\n                that.destroy();\n                dialog.destroy();\n            }\n\n            function okHandler(e) {\n                that.collectTableDialogValues(tableData);\n\n                close(e);\n\n                if (that.change) {\n                    that.change();\n                }\n\n                options.closeCallback(tableData);\n            }\n\n            function closeHandler(e) {\n                close(e);\n                options.closeCallback();\n            }\n\n            dialogOptions.close = closeHandler;\n            dialogOptions.minWidth = 700;\n            dialogOptions.width = 700;\n            dialogOptions.title = messages.tableProperties;\n            dialogOptions.visible = options.visible;\n\n            dialog = $(that._dialogTemplate(messages)).appendTo(document.body)\n                .kendoWindow(dialogOptions)\n                .addClass(\"k-editor-window\")\n                .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n                .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n                .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n                .data(\"kendoWindow\");\n\n            var element = dialog.element;\n            this.components = {};\n            that._initTabStripComponent(element);\n            that._tablePropertiesForm = that._createTablePropertiesForm(dialog, messages);\n            that._accessibilityPropertiesForm = that._createAccessibilityPropertiesForm(dialog, messages);\n\n            dialog.center();\n            dialog.open();\n\n            if (isIE) {\n                var dialogHeight = element.closest(\".k-window\").height();\n                element.css(\"max-height\", dialogHeight);\n            }\n        },\n        _openCellPropertiesDialog: function() {\n            var that = this,\n                options = that.options,\n                dialogOptions = options.dialogOptions,\n                tableData = options.table,\n                dialog,\n                messages = options.messages,\n                isIE = kendo.support.browser.msie;\n\n            function close(e) {\n                e.preventDefault();\n                that.destroy();\n                dialog.destroy();\n            }\n\n            function okHandler(e) {\n                that.collectCellDialogValues(tableData);\n\n                close(e);\n\n                if (that.change) {\n                    that.change();\n                }\n\n                options.closeCallback(tableData);\n            }\n\n            function closeHandler(e) {\n                close(e);\n                options.closeCallback();\n            }\n\n            dialogOptions.close = closeHandler;\n            dialogOptions.minWidth = 400;\n            dialogOptions.title = messages.tableCellProperties;\n            dialogOptions.visible = options.visible;\n\n            dialog = $(that._dialogTemplate(messages, cellPropertiesDialogTemplate)).appendTo(document.body)\n                .kendoWindow(dialogOptions)\n                .addClass(\"k-editor-window\")\n                .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n                .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n                .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n                .data(\"kendoWindow\");\n\n            var element = dialog.element;\n            that._cellPropertiesForm = that._createCellPropertiesForm(dialog, messages);\n\n            dialog.center();\n            dialog.open();\n\n            if (isIE) {\n                var dialogHeight = element.closest(\".k-window\").height();\n                element.css(\"max-height\", dialogHeight);\n            }\n        },\n        open: function(isCellProperties) {\n            if (!isCellProperties) {\n                this._openTablePropertiesDialog();\n            } else {\n                this._openCellPropertiesDialog();\n            }\n        },\n\n        _initTabStripComponent: function(element) {\n            var components = this.components = {};\n            components.tabStrip = element.find(\"#k-table-wizard-tabs\").kendoTabStrip({\n                animation: false\n            }).data(\"kendoTabStrip\");\n        },\n\n        collectTableDialogValues: function() {\n            var that = this;\n            var data = that.options.table;\n            that._collectTableViewValues(data);\n            that._collectAccessibilityViewValues(data);\n        },\n\n        collectCellDialogValues: function() {\n            var that = this;\n            var data = that.options.table;\n            that._collectCellViewValues(data);\n        },\n\n        _collectTableViewValues: function(tableData) {\n            var tableView = this.components.tableView;\n            var tableProperties = tableData.tableProperties;\n            var cellData = tableData.cellProperties = tableData.cellProperties || {};\n            tableProperties.width = tableView.width.value();\n            tableProperties.widthUnit = tableView.widthUnit.value();\n            tableProperties.height = tableView.height.value();\n            tableProperties.columns = tableView.columns.value();\n            tableProperties.rows = tableView.rows.value();\n            tableProperties.heightUnit = tableView.heightUnit.value();\n            tableProperties.cellSpacing = tableView.cellSpacing.value();\n            tableProperties.topCellPadding = tableView.topCellPadding.value();\n            tableProperties.leftCellPadding = tableView.leftCellPadding.value();\n            tableProperties.bottomCellPadding = tableView.bottomCellPadding.value();\n            tableProperties.rightCellPadding = tableView.rightCellPadding.value();\n            tableProperties.alignment = tableView.alignment.value();\n            tableProperties.position = tableView.position.value();\n            tableProperties.bgColor = tableView.bgColor.value();\n            tableProperties.borderWidth = tableView.borderWidth.value();\n            tableProperties.borderColor = tableView.borderColor.value();\n            tableProperties.borderStyle = tableView.borderStyle.value();\n            tableProperties.collapseBorders = tableView.collapseBorders.check();\n\n            if (!cellData.width) {\n                cellData.selectAllCells = true;\n                cellData.width = 100 / tableData.tableProperties.columns;\n                cellData.widthUnit = \"%\";\n            }\n        },\n\n        _collectCellViewValues: function(table) {\n            var cellData = table.cellProperties = table.cellProperties || {};\n            var cellView = this.components.cellView;\n\n            cellData.selectAllCells = cellView.selectAllCells.check();\n            cellData.width = cellView.width.value();\n            cellData.widthUnit = cellView.widthUnit.value();\n            cellData.height = cellView.height.value();\n            cellData.heightUnit = cellView.heightUnit.value();\n            cellData.independentCellPaddings = cellView.independentCellPaddings.check();\n            cellData.topCellPadding = cellView.topCellPadding.value();\n            cellData.leftCellPadding = cellView.leftCellPadding.value();\n            cellData.bottomCellPadding = cellView.bottomCellPadding.value();\n            cellData.rightCellPadding = cellView.rightCellPadding.value();\n            cellData.cellMargin = cellView.cellMargin.value();\n            cellData.alignment = cellView.alignment.value();\n            cellData.bgColor = cellView.bgColor.value();\n            cellData.className = cellView.className.value();\n            cellData.id = cellView.id.value();\n            cellData.borderWidth = cellView.borderWidth.value();\n            cellData.borderColor = cellView.borderColor.value();\n            cellData.borderStyle = cellView.borderStyle.value();\n            cellData.wrapText = cellView.wrapTextValue.value() == \"wrap\";\n\n            if (!cellData.width) {\n                cellData.selectAllCells = true;\n                cellData.width = 100 / table.tableProperties.columns;\n                cellData.widthUnit = \"%\";\n            }\n        },\n\n       _collectAccessibilityViewValues: function(table) {\n            var tableProperties = table.tableProperties;\n            var accessibilityView = this.components.accessibilityView;\n            tableProperties.captionContent = accessibilityView.captionContent.value();\n            tableProperties.captionAlignment = accessibilityView.captionAlignment.value();\n            tableProperties.summary = accessibilityView.summary.value();\n            tableProperties.cellsWithHeaders = accessibilityView.cellsWithHeaders.value();\n            tableProperties.className = accessibilityView.className.value();\n            tableProperties.id = accessibilityView.id.value();\n            tableProperties.headerRows = accessibilityView.headerRows.value();\n            tableProperties.headerColumns = accessibilityView.headerColumns.value();\n        },\n        _addUnit: function(units, value) {\n            if (value && $.inArray(value, units) == -1) {\n                units.push(value);\n            }\n        },\n\n        _initNumericTextbox: function(element, property, data, storage, settings) {\n            var component = storage[property] = element.kendoNumericTextBox(\n                    settings ? $.extend({}, numericTextBoxSettings, settings) : numericTextBoxSettings\n                ).data(\"kendoNumericTextBox\");\n            if (property in data) {\n                component.value(parseInt(data[property], 10));\n            }\n        },\n\n        _initDropDownList: function(element, property, data, storage, dataSource) {\n            var component = storage[property] = element.kendoDropDownList({\n                dataSource: dataSource\n            }).data(\"kendoDropDownList\");\n            this._setComponentValue(component, data, property);\n        },\n\n        _initBorderStyleDropDown: function(element, property, data, storage, dataSource) {\n            var component = storage[property] = element.kendoDropDownList({\n                dataSource: dataSource,\n                optionLabel: this.options.messages.borderNone\n            }).data(\"kendoDropDownList\");\n            this._setComponentValue(component, data, property);\n        },\n\n        _initTablePositionDropDown: function(element, data) {\n            var messages = this.options.messages;\n            var tableView = this.components.tableView;\n            var dataSource = tablePositionDropDownSettings.dataSource;\n            dataSource[0].tooltip = messages.tableAlignLeft;\n            dataSource[1].tooltip = messages.tableAlignCenter;\n            dataSource[2].tooltip = messages.tableAlignRight;\n\n            this._initPositionDropDown(element, tablePositionDropDownSettings, \"position\", data, tableView);\n        },\n\n        _initTableAlignmentDropDown: function(element, data) {\n            var messages = this.options.messages;\n            var tableView = this.components.tableView;\n            var dataSource = tableAlignmentDropDownSettings.dataSource;\n            dataSource[0].tooltip = messages.alignLeft;\n            dataSource[1].tooltip = messages.alignCenter;\n            dataSource[2].tooltip = messages.alignRight;\n            dataSource[3].tooltip = messages.alignRemove;\n\n            this._initAlignmentDropDown(element, tableAlignmentDropDownSettings, \"alignment\", data, tableView);\n        },\n\n        _initCellAlignmentDropDown: function(element, data) {\n            var messages = this.options.messages;\n            var cellView = this.components.cellView;\n            var dataSource = cellAlignmentDropDownSettings.dataSource;\n            dataSource[0].tooltip = messages.alignLeftTop;\n            dataSource[1].tooltip = messages.alignCenterTop;\n            dataSource[2].tooltip = messages.alignRightTop;\n            dataSource[3].tooltip = messages.alignLeftMiddle;\n            dataSource[4].tooltip = messages.alignCenterMiddle;\n            dataSource[5].tooltip = messages.alignRightMiddle;\n            dataSource[6].tooltip = messages.alignLeftBottom;\n            dataSource[7].tooltip = messages.alignCenterBottom;\n            dataSource[8].tooltip = messages.alignRightBottom;\n            dataSource[9].tooltip = messages.alignRemove;\n\n            this._initAlignmentDropDown(element, cellAlignmentDropDownSettings, \"alignment\", data, cellView);\n        },\n\n        _initAccessibilityAlignmentDropDown: function(element, data) {\n            var messages = this.options.messages;\n            var accessibilityView = this.components.accessibilityView;\n            var dataSource = accessibilityAlignmentDropDownSettings.dataSource;\n            dataSource[0].tooltip = messages.alignLeftTop;\n            dataSource[1].tooltip = messages.alignCenterTop;\n            dataSource[2].tooltip = messages.alignRightTop;\n            dataSource[3].tooltip = messages.alignLeftBottom;\n            dataSource[4].tooltip = messages.alignCenterBottom;\n            dataSource[5].tooltip = messages.alignRightBottom;\n            dataSource[6].tooltip = messages.alignRemove;\n\n            this._initAlignmentDropDown(element, accessibilityAlignmentDropDownSettings, \"captionAlignment\", data, accessibilityView);\n        },\n        _initTextWrapDropDown: function(element, data) {\n            var messages = this.options.messages;\n            var name = \"wrapTextValue\";\n            data.wrapTextValue = data.wrapText ? \"wrap\" : \"nowrap\";\n\n            var cellView = this.components.cellView;\n            var dataSource = textWrapDropDownSettings.dataSource;\n            dataSource[0].tooltip = messages.wrapText;\n            dataSource[1].tooltip = messages.fitToCell;\n            var component = cellView[name] =\n                element.kendoDropDownList(textWrapDropDownSettings).data(\"kendoDropDownList\");\n\n            component.list.addClass('k-text-wrap');\n            this._setComponentValue(component, data, name);\n        },\n        _initPositionDropDown: function(element, settings, name, data, storage) {\n            var component = storage[name] =\n                element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n            component.list.addClass('k-position');\n            this._setComponentValue(component, data, name);\n        },\n        _initAlignmentDropDown: function(element, settings, name, data, storage) {\n            var component = storage[name] =\n                element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n            component.list.addClass('k-align');\n            this._setComponentValue(component, data, name);\n        },\n        _initAssociationDropDown: function(element, name, settings, data, storage) {\n            var component = storage[name] =\n                element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n            this._setComponentValue(component, data, name);\n        },\n        _setComponentValue: function(component, data, property) {\n            if (property in data) {\n                component.value(data[property]);\n            }\n        },\n\n        _initColorPicker: function(element, property, data, storage) {\n            var component = storage[property] =\n                element.kendoColorPicker({ buttons: false, clearButton: true }).data(\"kendoColorPicker\");\n\n            if (data[property]) {\n                component.value(data[property]);\n            }\n        },\n        _initInput: function(element, property, data, storage, settings) {\n            var component = storage[property] = element.kendoTextBox(settings || {}).data(\"kendoTextBox\");\n            if (property in data) {\n                component.value(data[property]);\n            }\n        },\n\n        _initCheckbox: function(element, property, data, storage, settings) {\n            var component = storage[property] = element.kendoCheckBox(settings || {}).data(\"kendoCheckBox\");\n            if (property in data) {\n                component.check(data[property]);\n            }\n        },\n\n        _initTextArea: function(element, property, data, storage, settings) {\n            var component = storage[property] = element.kendoTextArea(settings || {}).data(\"kendoTextArea\");\n            if (property in data) {\n                component.value(data[property]);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            that._destroyComponents(this.components);\n\n            delete that.components;\n        },\n        _destroyComponents: function(components) {\n            for (var widget in components) {\n                if (components[widget].destroy) {\n                    components[widget].destroy();\n                }\n                delete components[widget];\n            }\n        },\n\n        _dialogTemplate: function(messages, dialogTemplate) {\n            return kendo.template(dialogTemplate || tablePropertiesDialogTemplate)({ messages: messages });\n        },\n\n        _onPaddingTopChange: function(e) {\n            let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n                view = this.components[viewType],\n                independentCellPaddings = !view.independentCellPaddings.check(),\n                topCellPaddingNumeric = view.topCellPadding,\n                topCellPaddingValue = topCellPaddingNumeric.value(),\n                leftCellPaddingNumeric = view.leftCellPadding,\n                bottomCellPaddingNumeric = view.bottomCellPadding,\n                rightCellPaddingNumeric = view.rightCellPadding;\n\n            if (independentCellPaddings) {\n                leftCellPaddingNumeric.value(topCellPaddingValue);\n                bottomCellPaddingNumeric.value(topCellPaddingValue);\n                rightCellPaddingNumeric.value(topCellPaddingValue);\n            }\n\n            topCellPaddingNumeric._cachedPadding = topCellPaddingValue;\n        },\n\n        _onPaddingCheckChange: function(e) {\n            let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n                messages = this.options.messages,\n                checked = e.sender.check(),\n                view = this.components[viewType],\n                topCellPaddingNumeric = view.topCellPadding,\n                leftCellPaddingNumeric = view.leftCellPadding,\n                bottomCellPaddingNumeric = view.bottomCellPadding,\n                rightCellPaddingNumeric = view.rightCellPadding,\n                topCellPaddingValue = topCellPaddingNumeric.value(),\n                bottomCellPaddingValue = bottomCellPaddingNumeric.value(),\n                leftCellPaddingValue = leftCellPaddingNumeric.value(),\n                rightCellPaddingValue = rightCellPaddingNumeric.value();\n\n            if (!checked) {\n                if (topCellPaddingValue === bottomCellPaddingValue &&\n                        topCellPaddingValue === leftCellPaddingValue &&\n                        topCellPaddingValue === rightCellPaddingValue) {\n                    leftCellPaddingNumeric.value(topCellPaddingValue);\n                    bottomCellPaddingNumeric.value(topCellPaddingValue);\n                    rightCellPaddingNumeric.value(topCellPaddingValue);\n                } else {\n                    topCellPaddingNumeric.value(null);\n                }\n\n                leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n                bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n                rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n\n                topCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.cellPadding);\n            } else {\n                if (!isNaN(topCellPaddingNumeric._cachedPadding)) {\n                    topCellPaddingNumeric.value(topCellPaddingNumeric._cachedPadding);\n                }\n\n                leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n                bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n                rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n\n                topCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.topPadding);\n            }\n        },\n\n        _onColumnsNumberChange: function(args) {\n            var that = this;\n            var accessibilityView = that.components.accessibilityView;\n            var headerColumnsNumeric = accessibilityView.headerColumns;\n            var currentNumberOfColumnsHeaders = headerColumnsNumeric.value();\n            var numberOfColumns = args.sender.value();\n\n            if (numberOfColumns < currentNumberOfColumnsHeaders) {\n                headerColumnsNumeric.value(numberOfColumns);\n            }\n\n            headerColumnsNumeric.max(numberOfColumns);\n        },\n\n        _onRowsNumberChange: function(args) {\n            var that = this;\n            var accessibilityView = that.components.accessibilityView;\n            var headerRowsNumeric = accessibilityView.headerRows;\n            var currentNumberOfRowHeaders = headerRowsNumeric.value();\n            var numberOfRows = args.sender.value();\n\n            if (numberOfRows < currentNumberOfRowHeaders) {\n                headerRowsNumeric.value(numberOfRows);\n            }\n\n            headerRowsNumeric.max(numberOfRows);\n        },\n\n        _createTablePropertiesForm: function(dialog, messages) {\n            var that = this;\n            var table = that.options.table;\n            var formElement = dialog.element.find(\"#k-table-properties\");\n            var components = that.components;\n            var tableView = components.tableView = {};\n            var tableProperties = table.tableProperties = table.tableProperties || {};\n            var form;\n\n            that._addUnit(units, tableProperties.widthUnit);\n            that._addUnit(units, tableProperties.heightUnit);\n            tableProperties.borderStyle = tableProperties.borderStyle || \"\";\n            form = formElement.kendoForm({\n                renderButtons: false,\n                layout: \"grid\",\n                grid: {\n                    cols: 4\n                },\n                items: [\n                    {\n                        colSpan: 2,\n                        field: \"k-editor-table-columns\",\n                        label: encode(messages.columns),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-columns\" />').appendTo(container),\n                                \"columns\",\n                                tableProperties,\n                                tableView,\n                                {\n                                    min: 1,\n                                    value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                    change: that._onColumnsNumberChange.bind(that)\n                                });\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-table-rows\",\n                        label: encode(messages.rows),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-rows\" />').appendTo(container),\n                                \"rows\",\n                                tableProperties,\n                                tableView,\n                                {\n                                    min: 1,\n                                    value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                    change: that._onRowsNumberChange.bind(that)\n                                });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-table-width\",\n                        label: encode(messages.width),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-table-width\" />').appendTo(container), \"width\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-table-width-type\",\n                        label: {\n                            encoded: false,\n                            text: '&nbsp;'\n                        },\n                        editor: function(container, options) {\n                            that._initDropDownList($(`<input id=\"k-editor-table-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                                \"widthUnit\",\n                                tableProperties,\n                                tableView,\n                                units);\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-table-height\",\n                        label: encode(messages.height),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-table-height\" />').appendTo(container), \"height\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-table-height-type\",\n                        label: {\n                            encoded: false,\n                            text: '&nbsp;'\n                        },\n                        editor: function(container, options) {\n                            that._initDropDownList($(`<input id=\"k-editor-table-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                                \"heightUnit\",\n                                tableProperties,\n                                tableView,\n                                units);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-table-position\",\n                        label: encode(messages.position),\n                        editor: function(container, options) {\n                            that._initTablePositionDropDown($('<input id=\"k-editor-table-position\" class=\"k-position\" />').appendTo(container), tableProperties);\n                        }\n                    },\n                    {\n                        colSpan: 2,\n                        field: \"k-editor-table-alignment\",\n                        label: encode(messages.alignment),\n                        editor: function(container, options) {\n                            that._initTableAlignmentDropDown($('<input id=\"k-editor-table-alignment\" class=\"k-align\" />').appendTo(container), tableProperties);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-table-cell-spacing\",\n                        label: encode(messages.cellSpacing),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-table-cell-spacing\" />').appendTo(container), \"cellSpacing\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        type: \"group\",\n                        label: \"Cell Paddings\",\n                        layout: \"grid\",\n                        colSpan: 4,\n                        grid: {\n                            cols: 4,\n                            gutter: 20\n                        },\n                        items: [\n                            {\n                                colSpan: \"full\",\n                                field: \"k-editor-padding-all-sides\",\n                                label: \"\",\n                                editor: function(container, options) {\n                                    that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", tableProperties, tableView,\n                                    {\n                                        checked: true,\n                                        label: encode(messages.independentCellPaddings),\n                                        change: that._onPaddingCheckChange.bind(that)\n                                    });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cell-padding-top\",\n                                label: encode(messages.topPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-top\" />').appendTo(container), \"topCellPadding\", tableProperties, tableView,\n                                    {\n                                        placeholder: encode(messages.auto),\n                                        change: that._onPaddingTopChange.bind(that)\n                                    });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cell-padding-right\",\n                                label: encode(messages.rightPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-right\" />').appendTo(container), \"rightCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cells-padding-bottom\",\n                                label: encode(messages.bottomPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cell-padding-left\",\n                                label: encode(messages.leftPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-left\" />').appendTo(container), \"leftCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                                }\n                            }\n                        ]\n                    }, {\n                        type: \"group\",\n                        label: \"Borders\",\n                        layout: \"grid\",\n                        colSpan: 4,\n                        grid: {\n                            cols: 4,\n                            gutter: 10\n                        },\n                        items: [{\n                            colSpan: \"full\",\n                            field: \"k-editor-table-bg\",\n                            label: encode(messages.tableBackground),\n                            editor: function(container, options) {\n                                that._initColorPicker($('<input id=\"k-editor-table-bg\" />').appendTo(container), \"bgColor\", tableProperties, tableView);\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-border-width\",\n                            label: encode(messages.borderWidth),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-border-width\" />').appendTo(container), \"borderWidth\", tableProperties, tableView);\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-border-color\",\n                            label: encode(messages.borderColor),\n                            editor: function(container, options) {\n                                that._initColorPicker($('<input id=\"k-editor-border-color\" />').appendTo(container), \"borderColor\", tableProperties, tableView);\n                            }\n                        },{\n                            colSpan: 2,\n                            field: \"k-editor-border-style\",\n                            label: encode(messages.borderStyle),\n                            editor: function(container, options) {\n                                that._initBorderStyleDropDown($('<input id=\"k-editor-border-style\" />').appendTo(container),\n                                    \"borderStyle\",\n                                    tableProperties,\n                                    tableView,\n                                    borderStyles);\n                            }\n                        },{\n                            colSpan: \"full\",\n                            field: \"k-editor-collapse-borders\",\n                            label: \"\",\n                            editor: function(container, options) {\n                                that._initCheckbox($('<input id=\"k-editor-collapse-borders\"/>').appendTo(container), \"collapseBorders\", tableProperties, tableView, { label: encode(messages.collapseBorders) });\n                            }\n                        }]\n                    }\n                ]\n            }).data(\"kendoForm\");\n            form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n            return form;\n        },\n\n        _createCellPropertiesForm: function(dialog, messages) {\n            var that = this;\n            var table = that.options.table;\n            var formElement = dialog.element.find(\"#k-cell-properties\");\n            var components = that.components = that.components || {};\n            var cellView = components.cellView = {};\n            var cellProperties = (table.selectedCells && table.selectedCells[0]) || { borderStyle: \"\", wrapText: true };\n            var form;\n\n            that._addUnit(units, cellProperties.widthUnit);\n            that._addUnit(units, cellProperties.heightUnit);\n            form = formElement.kendoForm({\n                renderButtons: false,\n                layout: \"grid\",\n                grid: {\n                    cols: 4\n                },\n                items: [\n                    {\n                        colSpan: \"full\",\n                        field: \"k-editor-selectAllCells\",\n                        label: \"\",\n                        editor: function(container, options) {\n                            that._initCheckbox($('<input id=\"k-editor-selectAllCells\" />').appendTo(container), \"selectAllCells\", table.tableProperties, cellView, { label: encode(messages.selectAllCells) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-width\",\n                        label: encode(messages.width),\n                        hint: encode(messages.applyToColumn),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-cell-width\" />').appendTo(container), \"width\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-width-type\",\n                        label: {\n                            encoded: false,\n                            text: '&nbsp;'\n                        },\n                        editor: function(container, options) {\n                            that._initDropDownList($(`<input id=\"k-editor-cell-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                                \"widthUnit\",\n                                cellProperties,\n                                cellView,\n                                units);\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-height\",\n                        label: encode(messages.height),\n                        hint: encode(messages.applyToRow),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-cell-height\" />').appendTo(container), \"height\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-height-type\",\n                        label: {\n                            encoded: false,\n                            text: '&nbsp;'\n                        },\n                        editor: function(container, options) {\n                            that._initDropDownList($(`<input id=\"k-editor-cell-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                                \"heightUnit\",\n                                cellProperties,\n                                cellView,\n                                units);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-cell-alignment\",\n                        label: encode(messages.alignment),\n                        editor: function(container, options) {\n                            that._initCellAlignmentDropDown($('<input id=\"k-editor-cell-alignment\" class=\"k-align\" />').appendTo(container), cellProperties);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-wrap-text\",\n                        label: \"Text control\",\n                        editor: function(container, options) {\n                            that._initTextWrapDropDown($('<input id=\"k-editor-wrap-text\" />').appendTo(container),\n                            cellProperties);\n                        }\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-cell-bg\",\n                        label: encode(messages.background),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-cell-bg\" />').appendTo(container), \"bgColor\", cellProperties, cellView);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-table-cell-margin\",\n                        label: encode(messages.cellMargin),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-table-cell-margin\" />').appendTo(container), \"cellMargin\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        type: \"group\",\n                        label: \"Cell Paddings\",\n                        layout: \"grid\",\n                        colSpan: 4,\n                        grid: {\n                            cols: 4,\n                            gutter: 20\n                        },\n                        items: [\n                            {\n                                colSpan: \"full\",\n                                field: \"k-editor-padding-all-sides\",\n                                label: \"\",\n                                editor: function(container, options) {\n                                    that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", table.tableProperties, cellView,\n                                    {\n                                        checked: true,\n                                        label: encode(messages.independentCellPaddings),\n                                        change: that._onPaddingCheckChange.bind(that)\n                                    });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cells-padding-top\",\n                                label: encode(messages.topPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-top\" />').appendTo(container), \"topCellPadding\", cellProperties, cellView,\n                                    {\n                                        placeholder: encode(messages.auto),\n                                        change: that._onPaddingTopChange.bind(that)\n                                    });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cells-padding-right\",\n                                label: encode(messages.rightPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-right\" />').appendTo(container), \"rightCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cells-padding-bottom\",\n                                label: encode(messages.bottomPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-cells-padding-left\",\n                                label: encode(messages.leftPadding),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-left\" />').appendTo(container), \"leftCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                                }\n                            }\n                        ]\n                    },{\n                        type: \"group\",\n                        label: \"Borders\",\n                        layout: \"grid\",\n                        colSpan: 4,\n                        grid: {\n                            cols: 4,\n                            gutter: 10\n                        },\n                        items: [{\n                            colSpan: 1,\n                            field: \"k-editor-cell-border-width\",\n                            label: encode(messages.borderWidth),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-cell-border-width\" />').appendTo(container), \"borderWidth\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-cell-border-color\",\n                            label: encode(messages.borderColor),\n                            editor: function(container, options) {\n                                that._initColorPicker($('<input id=\"k-editor-cell-border-color\" />').appendTo(container), \"borderColor\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 2,\n                            field: \"k-editor-cell-border-style\",\n                            label: encode(messages.borderStyle),\n                            editor: function(container, options) {\n                                that._initBorderStyleDropDown($('<input id=\"k-editor-cell-border-style\" />').appendTo(container),\n                                    \"borderStyle\",\n                                    cellProperties,\n                                    cellView,\n                                    borderStyles);\n                            }\n                        }]\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-cell-id\",\n                        label: {\n                            text: encode(messages.id),\n                            optional: true\n                        },\n                        editor: function(container, options) {\n                            that._initInput($('<input id=\"k-editor-cell-id\" />').appendTo(container), \"id\", cellProperties, cellView);\n                        }\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-cell-css-class\",\n                        label: {\n                            text: encode(messages.cssClass),\n                            optional: true\n                        },\n                        editor: function(container, options) {\n                            that._initInput($('<input id=\"k-editor-cell-css-class\" />').appendTo(container), \"className\", cellProperties, cellView);\n                        }\n                    }\n                ]\n            }).data(\"kendoForm\");\n            form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n            return form;\n        },\n\n        _createAccessibilityPropertiesForm: function(dialog, messages) {\n            var that = this;\n            var table = that.options.table;\n            var formElement = dialog.element.find(\"#k-accessibility-properties\");\n            var components = that.components;\n            var accessibilityView = components.accessibilityView = {};\n            var tableProperties = table.tableProperties;\n            var form;\n\n            form = formElement.kendoForm({\n                renderButtons: false,\n                layout: \"grid\",\n                grid: {\n                    cols: 4\n                },\n                items: [\n                    {\n                        colSpan: \"full\",\n                        field: \"k-editor-id\",\n                        label: {\n                            text: encode(messages.id),\n                            optional: true\n                        },\n                        editor: function(container, options) {\n                            that._initInput($('<input id=\"k-editor-id\" />').appendTo(container), \"id\", tableProperties, accessibilityView);\n                        }\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-css-class\",\n                        label: {\n                            text: encode(messages.cssClass),\n                            optional: true\n                        },\n                        editor: function(container, options) {\n                            that._initInput($('<input id=\"k-editor-css-class\" />').appendTo(container), \"className\", tableProperties, accessibilityView);\n                        }\n                    },\n                    {\n                        layout: \"grid\",\n                        grid: {\n                            cols: 4,\n                            gutter: 16\n                        },\n                        colSpan: \"full\",\n                        type: \"group\",\n                        label: \"Accessibility\",\n                        items: [\n                            {\n                                colSpan: 2,\n                                field: \"k-editor-table-caption\",\n                                label: {\n                                    text: encode(messages.caption),\n                                    optional: true\n                                },\n                                editor: function(container, options) {\n                                    that._initInput($('<input id=\"k-editor-table-caption\" />').appendTo(container), \"captionContent\", tableProperties, accessibilityView);\n                                }\n                            },{\n                                colSpan: 2,\n                                field: \"k-editor-accessibility-alignment\",\n                                label: encode(messages.captionAlignment),\n                                editor: function(container, options) {\n                                    that._initAccessibilityAlignmentDropDown($('<input id=\"k-editor-accessibility-alignment\" />').appendTo(container), tableProperties);\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-header-rows\",\n                                label: encode(messages.headerRows),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-header-rows\" />').appendTo(container),\n                                    \"headerRows\",\n                                    tableProperties,\n                                    accessibilityView,\n                                    {\n                                        max: tableProperties.rows || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                    });\n                                }\n                            },{\n                                colSpan: 1,\n                                field: \"k-editor-table-header-columns\",\n                                label: encode(messages.headerColumns),\n                                editor: function(container, options) {\n                                    that._initNumericTextbox($('<input id=\"k-editor-table-header-columns\" />').appendTo(container),\n                                    \"headerColumns\",\n                                    tableProperties,\n                                    accessibilityView,\n                                    {\n                                        max: tableProperties.columns || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                    });\n                                }\n                            },{\n                                colSpan: 2,\n                                field: \"k-editor-cells-headers\",\n                                label: encode(messages.associateCellsWithHeaders),\n                                editor: function(container, options) {\n                                    var element = $(`<select id=\"k-editor-cells-headers\">\n                                    <option value=\"none\">${ messages.associateNone }</option>\n                                    <option value=\"scope\">${ messages.associateScope }</option>\n                                    <option value=\"ids\">${ messages.associateIds }</option>\n                                </select>`).appendTo(container);\n\n                                    that._initAssociationDropDown(element, \"cellsWithHeaders\", { valuePrimitive: true }, tableProperties, accessibilityView);\n                                }\n                            },{\n                                colSpan: \"full\",\n                                field: \"k-editor-accessibility-summary\",\n                                label: {\n                                    text: encode(messages.summary),\n                                    optional: true\n                                },\n                                editor: function(container, options) {\n                                    that._initTextArea($('<textarea id=\"k-editor-accessibility-summary\"></textarea>').appendTo(container), \"summary\", tableProperties, accessibilityView, {\n                                        rows: 5,\n                                        placeholder: messages.tableSummaryPlaceholder\n                                    });\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }).data(\"kendoForm\");\n\n            form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n            return form;\n        }\n    });\n\n    kendo.ui.editor.TableWizardDialog = TableWizardDialog;\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n            id: \"editor\",\n            name: \"Editor\",\n            category: \"web\",\n            description: \"Rich text editor component\",\n            depends: [ \"combobox\", \"dropdownlist\", \"window\", \"colorpicker\", \"toolbar\", \"icons\" ],\n            features: [ {\n                id: \"editor-imagebrowser\",\n                name: \"Image Browser\",\n                description: \"Support for uploading and inserting images\",\n                depends: [ \"imagebrowser\" ]\n            }, {\n                id: \"editor-resizable\",\n                name: \"Resize handle\",\n                description: \"Support for resizing the content area via a resize handle\",\n                depends: [ \"resizable\" ]\n            }, {\n                id: \"editor-tablewizard\",\n                name: \"Table wizard dialog\",\n                description: \"Support for table properties configuration\",\n                depends: [ \"tabstrip\", \"button\", \"numerictextbox\", \"textarea\" ]\n            }, {\n                id: \"editor-pdf-export\",\n                name: \"PDF export\",\n                description: \"Export Editor content as PDF\",\n                depends: [ \"pdf\", \"drawing\" ]\n            }]\n        };\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}