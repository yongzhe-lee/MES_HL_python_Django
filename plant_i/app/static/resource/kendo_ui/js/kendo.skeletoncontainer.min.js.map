{"version":3,"sources":["raw-js/kendo.skeletoncontainer.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoskeletoncontainer","js","this","$","kendo","window","ui","Widget","SkeletonContainer","extend","init","element","options","that","fn","call","cssNumber","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","addClass","_setWrapperStyles","_initItems","_initTemplate","_aria","name","animation","grid","template","height","width","setOptions","deepExtend","empty","getOptions","attr","role","progress","messages","loading","shape","settings","item","items","i","length","toLowerCase","css","format","colStart","colSpan","rowStart","rowSpan","appendTo","replace","append","_addClasses","shapes","animations","find","removeAttr","j","columns","rows","gap","plugin","jQuery"],"mappings":"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","file":"kendo.skeletoncontainer.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoskeletoncontainer = global.kendoskeletoncontainer || {}, global.kendoskeletoncontainer.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"skeletoncontainer\",\n        name: \"SkeletonContainer\",\n        category: \"web\",\n        depends: [ \"core\"]\n    };\n\n    (function($) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            WAVE_ANIMATION = \"k-skeleton-wave\",\n            PULSE_ANIMATION = \"k-skeleton-pulse\",\n            WRAPPER_CLASS = \"k-skeleton-container\";\n\n        var SkeletonContainer = Widget.extend( {\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                $.cssNumber.gridColumnStart = true;\n                $.cssNumber.gridColumnEnd = true;\n                $.cssNumber.gridRowStart = true;\n                $.cssNumber.gridRowEnd = true;\n\n                that.element = $(element).addClass(WRAPPER_CLASS);\n\n                that._setWrapperStyles();\n                that._initItems();\n                that._initTemplate();\n                that._aria();\n            },\n\n            options: {\n                name: \"SkeletonContainer\",\n                animation: \"pulse\",\n                grid: null,\n                template: null,\n                height: \"\",\n                width: \"\"\n            },\n\n            setOptions: function(options) {\n                kendo.deepExtend(this.options, options);\n                this.element.empty();\n                this.init(this.element, this.options);\n            },\n\n            getOptions: function() {\n                var result = $.extend(true, {}, this.options);\n\n                return result;\n            },\n\n            _aria: function() {\n                var element = this.element;\n\n                element.attr({\n                    \"role\": \"alert\",\n                    \"aria-live\": \"polite\",\n                    \"aria-label\": kendo.ui.progress.messages.loading\n                });\n            },\n\n            _initItems: function() {\n                if (!this.options.grid) {\n                    return;\n                }\n\n                var that = this;\n                var grid = that.options.grid;\n                var items = grid.items;\n                var shape;\n                var settings;\n                var item;\n\n                for (var i = 0; i < items.length; i++) {\n                    settings = items[i];\n                    item = $(\"<div></div>\");\n\n                    shape = settings.shape.toLowerCase();\n\n                    item\n                        .css({\n                            \"grid-column\": kendo.format(\"{0} / span {1}\",settings.colStart, settings.colSpan),\n                            \"grid-row\": kendo.format(\"{0} / span {1}\",settings.rowStart, settings.rowSpan)\n                        })\n    \t\t\t\t\t.addClass(\"k-skeleton\")\n                        .addClass(kendo.format(\"k-skeleton-{0}\", shape === \"rectangle\" ? \"rect\" : shape));\n\n                    item.appendTo(that.element);\n                }\n            },\n\n            _initTemplate: function() {\n                if (!this.options.template || this.options.grid) {\n                    return;\n                }\n\n                var template = kendo.template(this.options.template)({});\n\n                template = template\n                        .replace(/data-animation/gi, \"k-skeleton\")\n                        .replace(/data-shape/gi, \"k-skeleton\")\n                        .replace(/k-skeleton-rectangle/gi, \"k-skeleton-rect\");\n\n                this.element.append(template);\n\n                this._addClasses();\n            },\n\n            _addClasses: function() {\n                var shapes = [\"circle\", \"rect\", \"text\"];\n                var animations = [\"wave\", \"pulse\"];\n\n                for (var i = 0; i < shapes.length; i++) {\n                    this.element\n                        .find(\"[k-skeleton-\" + shapes[i] + \"]\")\n                        .removeAttr(\"k-skeleton-\" + shapes[i])\n                        .addClass(\"k-skeleton k-skeleton-\" + shapes[i] + \"\");\n                }\n\n                for (var j = 0; j < animations.length; j++) {\n                    this.element\n                        .find(\"[k-skeleton-\" + animations[j] + \"]\")\n                        .removeAttr(\"k-skeleton-\" + animations[j])\n                        .addClass(\"k-skeleton-\" + animations[j] + \"\");\n                }\n            },\n\n            _setWrapperStyles: function() {\n                var that = this;\n                var options = that.options;\n                var grid = options.grid;\n                var animation = options.animation.toLowerCase();\n\n                if (grid) {\n                    that.element\n                        .css({\n                            \"grid-template-columns\": kendo.format(\"repeat({0}, 1fr)\", grid.columns),\n                            \"grid-template-rows\": kendo.format(\"repeat({0}, 1fr)\", grid.rows),\n                            \"column-gap\": (grid.gap || {}).columns,\n                            \"row-gap\": (grid.gap || {}).rows\n                        })\n                        .addClass(\"k-d-grid\");\n                }\n\n                that.element.css({\n                    \"width\": typeof options.width === \"string\" ? options.width : options.width + \"px\",\n                    \"height\": typeof options.height === \"string\" ? options.height : options.height + \"px\"\n                });\n\n                if (animation !== \"none\") {\n                    that.element.addClass(animation == \"wave\" ? WAVE_ANIMATION : PULSE_ANIMATION);\n                }\n            }\n        });\n\n        ui.plugin(SkeletonContainer);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}