{"version":3,"sources":["raw-js/kendo.timeselector.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendotimeselector","js","this","$","undefined$1","kendo","window","ui","encode","htmlEncode","Widget","html","extend","mediaQuery","FOCUSED","keys","NS","listItemTemplate","value","TimeSelector","init","element","options","that","fn","call","bigScreenMQL","smallScreenMQL","adaptiveMode","onChange","popup","isFunction","fullscreen","mediaQueryList","matches","_wrappers","_buttons","_attchHandlers","_shortCuts","_columns","_popup","name","columns","shortcuts","size","fillMode","rounded","messages","set","cancel","days","hours","minutes","milliseconds","seconds","events","addTranslate","list","itemHeight","listHeight","translate","bottomOffset","lists","_listsContainer","find","length","i","getItemHeight","eq","outerHeight","css","transform","height","off","on","_itemClickHandler","bind","_listScrollHandler","applyValue","values","rest","Math","floor","getTimeParts","each","index","column","columnVal","min","max","_scrollListToPosition","format","selectorFormat","toggle","destroy","_listContainer","_timeSelectorWrapper","_scrollerKeyDownHandler","_applyShortCut","_cancelClickHandler","_setClickHandler","_mouseOverHandler","e","preventDefault","_value","parseInt","currentTarget","attr","change","close","focus","key","keyCode","isRtl","support","wrapper","container","UP","DOWN","altKey","RIGHT","LEFT","_focusList","scrollTop","ENTER","ESC","setTimeout","visible","removeClass","addClass","trigger","_scrollTop","_activeElement","_currentValues","originalEvent","_internalScroll","_scrollingTimeout","clearTimeout","_updateCurrentlySelected","_findSelectedValue","firstOccurence","round","is","item","_renderList","title","listTemplate","elements","step","appendTo","shortcut","_shortcuts","renderButton","getValidCssClass","text","id","Popup","anchor","open","activate","document","body","ActionSheet","adaptive","subtitle","closeButton","getBoundingClientRect","plugin","jQuery"],"mappings":"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","file":"kendo.timeselector.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.popup.js'), require('kendo.html.button.js'), require('kendo.actionsheet.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.popup', 'kendo.html.button', 'kendo.actionsheet'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendotimeselector = global.kendotimeselector || {}, global.kendotimeselector.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"timeselector\",\n        name: \"TimeSelector\",\n        category: \"web\",\n        description: \"The TimeSelector widget allows the end user to select a time range from a popup\",\n        depends: [ \"popup\", \"html.button\", \"actionsheet\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            Widget = ui.Widget,\n            html = kendo.html,\n            extend = $.extend,\n            mediaQuery = kendo.mediaQuery,\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            SCROLL = \"scroll\",\n            FOCUSED = \"k-focus\",\n            keys = kendo.keys,\n            NS = \".kendoTimeSelector\",\n            html = kendo.html;\n\n        var listItemTemplate = ({ value }) => `<li class='k-item' data-value='${encode(value)}'><span>${encode(value)}</span></li>`;\n        var listTemplate = ({ title, name }) => '<div class=\"k-time-list-wrapper\">' +\n                                              `<span class=\"k-title\">${encode(title)}</span>` +\n                                              '<div class=\"k-time-list\">' +\n                                                  `<div class=\"k-content k-scrollable k-time-container\" data-name=\"${encode(name)}\">` +\n                                                      '<ul class=\"k-reset\"></ul>' +\n                                                      '<div class=\"k-scrollable-placeholder\"></div>' +\n                                                  '</div>' +\n                                              '</div>' +\n                                           '</div>';\n\n        var TimeSelector = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.bigScreenMQL = mediaQuery(\"large\");\n                that.smallScreenMQL = mediaQuery(\"small\");\n                if (that.options.adaptiveMode == \"auto\" ) {\n                    that.smallScreenMQL.onChange(function() {\n                        if (that.popup && kendo.isFunction(that.popup.fullscreen)) {\n                            that.popup.fullscreen(that.smallScreenMQL.mediaQueryList.matches);\n                        }\n                    });\n                }\n\n                that._wrappers();\n                that._buttons();\n                that._attchHandlers();\n                that._shortCuts();\n                that._columns();\n                that._popup();\n            },\n            options: {\n                name: \"TimeSelector\",\n                columns: [],\n                shortcuts: [],\n                adaptiveMode: \"none\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                messages: {\n                    set: \"Set\",\n                    cancel: \"Cancel\",\n                    days: \"Days\",\n                    hours: \"Hours\",\n                    minutes: \"Minutes\",\n                    milliseconds: \"Milliseconds\",\n                    seconds: \"Seconds\"\n                }\n            },\n\n            events: [CHANGE],\n\n            addTranslate: function() {\n                var lists = this._listsContainer.find(\".k-time-container.k-content.k-scrollable\");\n                var length = lists.length;\n                var list;\n                var itemHeight;\n                var listHeight;\n                var topOffset;\n                var translate;\n                var bottomOffset;\n\n                for (var i = 0; i < length; i++) {\n                    list = lists.eq(i);\n                    itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n                    listHeight = list.outerHeight();\n                    topOffset = (listHeight - itemHeight) / 2;\n                    translate = \"translateY(\" + topOffset + \"px)\";\n                    bottomOffset = listHeight - itemHeight;\n                    list.find(\"ul\").css({\n                        transform: translate,\n                        \"-ms-transform\": translate\n                    });\n                    list.find(\".k-scrollable-placeholder\").css({\n                        height: list.find(\"ul\").height() + bottomOffset\n                    });\n                    list.off(NS)\n                        .on(CLICK + NS, \".k-item\", this._itemClickHandler.bind(this))\n                        .on(SCROLL + NS, this._listScrollHandler.bind(this));\n                }\n            },\n\n            applyValue: function(value) {\n                if (!value) {\n                    return;\n                }\n                var that = this;\n                var lists = this._listsContainer.find('.k-time-container.k-content.k-scrollable');\n                var values = getTimeParts(value);\n\n                lists.each(function(index, list) {\n                    var column = that.options.columns[index];\n                    var columnVal = values[column.name];\n\n                    if (columnVal >= column.min && columnVal <= column.max) {\n                        that._scrollListToPosition($(list), kendo.format(column.selectorFormat, columnVal));\n                    }\n                });\n            },\n\n            toggle: function() {\n                this.popup.toggle();\n            },\n\n            destroy: function() {\n                this._listContainer.off(NS);\n                this._timeSelectorWrapper.off(NS);\n\n                if (this.popup) {\n                    this.popup.destroy();\n                    this.popup = null;\n                }\n\n                if (this.bigScreenMQL) {\n                    this.bigScreenMQL.destroy();\n                }\n\n                if (this.smallScreenMQL) {\n                    this.smallScreenMQL.destroy();\n                }\n            },\n\n            _attchHandlers: function() {\n                var that = this;\n\n                that._listContainer.on(\"keydown\" + NS, this._scrollerKeyDownHandler.bind(this));\n                that._timeSelectorWrapper.on(\"click\" + NS, \".k-time-fast-selection button\", this._applyShortCut.bind(this));\n                that._timeSelectorWrapper.on(\"click\" + NS, \".k-timeduration-footer button.k-time-cancel\", this._cancelClickHandler.bind(this));\n                that._timeSelectorWrapper.on(\"click\" + NS, \".k-timeduration-footer button.k-time-accept\", this._setClickHandler.bind(this));\n                that._listContainer.on(\"mouseover\" + NS, \".k-time-list-wrapper\", this._mouseOverHandler.bind(this));\n            },\n\n            _applyShortCut: function(e) {\n                e.preventDefault();\n                this._value = parseInt($(e.currentTarget).attr(kendo.attr(\"value\")));\n                this.options.change(this._value);\n                this.popup.close();\n                this.options.focus();\n            },\n\n            _scrollerKeyDownHandler: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    list = $(e.currentTarget).find(\".k-time-list-wrapper.k-focus\"),\n                    lists = that._listContainer.find(\".k-time-list-wrapper\"),\n                    length = lists.length,\n                    index = lists.index(list),\n                    isRtl = kendo.support.isRtl(that.wrapper),\n                    itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0)),\n                    container = list.find(\".k-time-container.k-content.k-scrollable\");\n\n                if (!list.length) {\n                    return;\n                }\n\n                if ((key == keys.UP || key == keys.DOWN) && e.altKey) {\n                    e.preventDefault();\n                    that.toggle();\n                    setTimeout(function() {\n                        if (!that.popup.visible()) {\n                            that.options.focus();\n                        }\n                    }, 100);\n                    return;\n                }\n\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    if (index + 1 < length) {\n                        that._focusList(lists.eq(index + 1));\n                    }\n\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    if (index - 1 >= 0) {\n                        that._focusList(lists.eq(index - 1));\n                    }\n                } else if (key == keys.UP) {\n                    container.scrollTop(container.scrollTop() - itemHeight);\n                    e.preventDefault();\n                } else if (key == keys.DOWN) {\n                    container.scrollTop(container.scrollTop() + itemHeight);\n                    e.preventDefault();\n                } else if (key === keys.ENTER) {\n                    that._setClickHandler(e);\n                } else if (key === keys.ESC) {\n                    that._cancelClickHandler(e);\n                }\n            },\n\n            _mouseOverHandler: function(e) {\n                this._focusList($(e.currentTarget));\n            },\n\n            _focusList: function(list) {\n                this._listContainer.find(\".k-time-list-wrapper\").removeClass(FOCUSED);\n                list.addClass(FOCUSED);\n                this._listContainer.trigger(\"focus\");\n                this._scrollTop = list.find('.k-scrollable').scrollTop();\n            },\n\n            _setClickHandler: function(e) {\n                if ($(kendo._activeElement()).attr(kendo.attr(\"value\"))) {\n                    return;\n                }\n\n                e.preventDefault();\n                this._value = convertToMsec(this._currentValues);\n                this.options.change(this._value);\n                this.popup.close();\n                this.options.focus();\n            },\n\n            _cancelClickHandler: function(e) {\n                if ($(kendo._activeElement()).attr(kendo.attr(\"value\"))) {\n                    return;\n                }\n                e.preventDefault();\n                this.popup.close();\n                this.options.focus();\n            },\n\n            _itemClickHandler: function(e) {\n                var list = $(e.originalEvent.currentTarget);\n                var index = list.find(\".k-item:visible\").index($(e.currentTarget));\n                var itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n\n                list.scrollTop(index * itemHeight);\n            },\n\n            _listScrollHandler: function(e) {\n                var that = this;\n                var itemHeight = getItemHeight($(e.currentTarget).find(\".k-item:visible\").eq(0));\n\n                if (that._internalScroll) {\n                    return;\n                }\n\n                if (that._scrollingTimeout) {\n                    clearTimeout(that._scrollingTimeout);\n                }\n\n                that._scrollingTimeout = setTimeout(function() {\n                    if (e.currentTarget.scrollTop % itemHeight > 1) {\n                        e.currentTarget.scrollTop += itemHeight - e.currentTarget.scrollTop % itemHeight;\n                    }\n                    that._scrollTop = e.currentTarget.scrollTop;\n                    that._updateCurrentlySelected();\n                }, 100);\n            },\n\n            _findSelectedValue: function(list) {\n                var firstOccurence = firstItemIndex(list.scrollTop(), getItemHeight(list.find(\".k-item:visible\").eq(0)));\n                return list.find(\".k-item:visible\").eq(firstOccurence).attr(\"data-value\");\n             },\n\n            _updateCurrentlySelected: function() {\n                var that = this;\n                var lists = this._listsContainer.find('.k-content.k-scrollable');\n\n                if (!this._listsContainer.is(\":visible\")) {\n                    return;\n                }\n\n                that._currentValues = {};\n\n                lists.each(function() {\n                    var list = $(this);\n                    that._currentValues[list.attr(\"data-name\")] = parseInt(that._findSelectedValue(list));\n                });\n            },\n\n            _scrollListToPosition: function(list, value) {\n                var item = list.find('.k-item[data-value=\"' + value + '\"]');\n                var itemHeight = getItemHeight(item);\n\n                list.scrollTop(list.find(\".k-item:visible\").index(item) * itemHeight);\n            },\n\n            _renderList: function(wrapper, options) {\n                if (!options) {\n                    return;\n                }\n                var that = this;\n                var list = $(listTemplate({ name: options.name, title: that.options.messages[options.name] }));\n                var elements = \"\";\n\n                for (var i = options.min; i <= options.max; i += options.step) {\n                    elements += listItemTemplate({ value: kendo.format(options.selectorFormat, i) });\n                }\n                list.find(\"ul\").html(elements);\n                list.appendTo(wrapper);\n            },\n\n            _columns: function() {\n                var that = this;\n                var column;\n                var options = that.options;\n\n                if (that._listsContainer) {\n                    for (var i = 0; i < options.columns.length; i++) {\n                        column = options.columns[i];\n                        that._renderList(that._listsContainer, column);\n                    }\n                }\n            },\n\n            _shortCuts: function() {\n                var that = this;\n                var options = that.options;\n                var shortcut;\n\n                if (that._shortcuts) {\n                    for (var i = 0; i < options.shortcuts.length; i++) {\n                        shortcut = options.shortcuts[i];\n\n                        $(html.renderButton(`<button class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-button-solid k-button-solid-base k-rounded-md\">` + shortcut.text + '</button>', {\n                            rounded: options.rounded\n                        }))\n                        .attr(kendo.attr(\"value\"), shortcut.value)\n                        .appendTo(that._shortcuts);\n                    }\n                }\n            },\n\n            _buttons: function() {\n                var that = this;\n                var options = that.options;\n\n                $(\"<div class='k-actions k-actions-stretched k-actions-horizontal k-timeduration-footer'>\"\n                    +\n                    html.renderButton('<button class=\"k-time-cancel k-button\">' + encode(options.messages.cancel) + '</button>', {\n                     rounded: options.rounded,\n                     size: options.size\n                    })\n                    +\n                    html.renderButton('<button class=\"k-time-accept k-button k-button-solid k-button-solid-primary\">' + encode(options.messages.set) + '</button>', {\n                     rounded: options.rounded,\n                     size: options.size\n                    })\n                    +\n                \"</div>\").appendTo(that._timeSelectorWrapper);\n            },\n\n            _wrappers: function() {\n                var that = this;\n                var options = that.options;\n\n                that._timeSelectorWrapper = $(\"<div></div>\");\n\n                that._listContainer = $(`<div tabindex='0' class='k-timeselector ${kendo.getValidCssClass(\"k-timeselector-\", \"size\", that.options.size || \"medium\")}'></div>`);\n                that._listContainer.appendTo(that._timeSelectorWrapper);\n\n                if (options.shortcuts) {\n                    that._shortcuts = $(\"<div class='k-actions k-actions-start k-actions-horizontal k-time-fast-selection'></div>\").appendTo(that._listContainer);\n                }\n\n                if (options.columns.length) {\n                    that._listsContainer = $(\"<div class='k-time-list-container'><span class='k-time-highlight'></span></div>\").appendTo(that._listContainer);\n                    that._listsContainer.attr(\"id\", options.id);\n                }\n            },\n\n            _popup: function() {\n                var that = this,\n                    options = that.options;\n\n                if (options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches) {\n                    that._timeSelectorWrapper.appendTo(document.body);\n                    that.popup = new ui.ActionSheet(that._timeSelectorWrapper, {\n                        adaptive: true,\n                        title: \"Set time\",\n                        subtitle: \"00/00/00\",\n                        closeButton: true,\n                        fullscreen: that.smallScreenMQL.mediaQueryList.matches,\n                        popup: extend(true, {}, options.popup, {\n                            anchor: options.anchor,\n                            open: options.open,\n                            close: options.close,\n                            isRtl: kendo.support.isRtl(options.anchor)\n                        }),\n                        activate: function() {\n                            that.addTranslate();\n                            if (that._value) {\n                                that.applyValue(that._value);\n                            } else {\n                                that._updateCurrentlySelected();\n                            }\n                            that._focusList(that._listContainer.find(\".k-time-list-wrapper\").eq(0));\n                        }\n                    });\n\n                    that._timeSelectorWrapper.find(\".k-timeduration-footer\").appendTo(that.popup.element);\n                } else {\n                    that.popup = new ui.Popup(that._timeSelectorWrapper, extend(true, {}, options.popup, {\n                        anchor: options.anchor,\n                        open: options.open,\n                        close: options.close,\n                        isRtl: kendo.support.isRtl(options.anchor),\n                        activate: function() {\n                            that.addTranslate();\n                            if (that._value) {\n                                that.applyValue(that._value);\n                            } else {\n                                that._updateCurrentlySelected();\n                            }\n                            that._focusList(that._listContainer.find(\".k-time-list-wrapper\").eq(0));\n                        }\n                    }));\n                }\n            }\n        });\n\n        function convertToMsec(value) {\n            return ((value.days || 0) * 86400000) + ((value.hours || 0) * 3600000) + ((value.minutes || 0) * 60000) + ((value.seconds || 0) * 1000) + (value.milliseconds || 0);\n        }\n\n        function getTimeParts(value) {\n            var rest;\n            var days = Math.floor(value / 86400000);\n            rest = value % 86400000;\n            var hours = Math.floor(rest / 3600000);\n            rest = value % 3600000;\n            var minutes = Math.floor(rest / 60000);\n            rest = value % 60000;\n            var seconds = Math.floor(rest / 1000);\n            rest = value % 1000;\n\n            return {\n                days: days,\n                hours: hours,\n                minutes: minutes,\n                seconds: seconds,\n                milliseconds: rest\n            };\n        }\n\n        function firstItemIndex(scrollTop, itemHeight) {\n            return Math.max(Math.round(scrollTop / itemHeight), 0);\n        }\n\n        function getItemHeight(item) {\n            return item.length && item[0].getBoundingClientRect().height;\n        }\n\n        ui.plugin(TimeSelector);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}