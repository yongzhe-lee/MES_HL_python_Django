{"version":3,"sources":["raw-js/kendo.reorderable.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoreorderable","js","this","$","undefined$1","kendo","window","outerWidth","_outerWidth","outerHeight","_outerHeight","getOffset","Widget","ui","CHANGE","Reorderable","extend","init","element","options","draggable","that","group","guid","fn","call","addClass","Draggable","autoScroll","filter","hint","dropFilter","reorderDropCue","find","kendoDropTarget","dragenter","e","externalDraggableInstance","_externalDraggable","_draggable","_handleExternalDraggable","offset","dropTarget","denied","_isPartOfSortable","_dropTargetAllowed","_isLastDraggable","toggleHintClass","cueOffset","top","left","isHorizontal","orientation","smartPosition","inSameContainer","source","target","sourceIndex","_index","targetIndex","_dropTarget","css","height","zIndex","appendTo","document","body","positionDropCue","dragleave","remove","drop","dropIndex","isAfter","trigger","oldIndex","newIndex","position","bind","dragcancel","_dragcancel","dragend","_dragend","dragstart","_dragstart","drag","_drag","name","deniedIcon","allowIcon","events","length","icon","eq","draggableFilter","trimStart","substring","_dragcancelHandler","_dragendHandler","_dragstartHandler","_dragHandler","currentTarget","closest","_draggableInstance","_elements","unbind","is","sender","dropStartOffset","width","pageX","dropStartTop","pageY","dragOverContainers","clickMoveClick","hasClass","elementUnderCursor","index","externalDraggable","item","elements","get","found","pop","destroy","each","data","plugin","jQuery"],"mappings":"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","file":"kendo.reorderable.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.draganddrop.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.draganddrop', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoreorderable = global.kendoreorderable || {}, global.kendoreorderable.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"reorderable\",\n        name: \"Reorderable\",\n        category: \"framework\",\n        depends: [ \"core\", \"draganddrop\", \"icons\" ],\n        advanced: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            getOffset = kendo.getOffset,\n            Widget = kendo.ui.Widget,\n            CHANGE = \"change\",\n            KREORDERABLE = \"k-reorderable\";\n\n        var Reorderable = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    draggable,\n                    group = kendo.guid() + \"-reorderable\";\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.element.addClass(KREORDERABLE);\n                options = that.options;\n\n                that.draggable = draggable = options.draggable || new kendo.ui.Draggable(element, {\n                    group: group,\n                    autoScroll: true,\n                    filter: options.filter,\n                    hint: options.hint\n                });\n\n                if (!that.options.dropFilter) {\n                    that.options.dropFilter = draggable.options.filter;\n                }\n\n                that.reorderDropCue = that.options.reorderDropCue;\n\n                element.find(options.dropFilter).kendoDropTarget({\n                    group: draggable.options.group,\n                    dragenter: function(e) {\n                        var externalDraggableInstance = that._externalDraggable(e);\n\n                        if (!that._draggable && !externalDraggableInstance) {\n                            return;\n                        }\n\n                        if (externalDraggableInstance) {\n                            that._handleExternalDraggable(externalDraggableInstance);\n                        }\n\n                        var dropTarget = this.element, offset;\n\n                        var denied = that._isPartOfSortable(that._draggable) ? (!that._dropTargetAllowed(dropTarget) || that._isLastDraggable()) : false;\n\n                        that.toggleHintClass(e.draggable.hint, denied);\n\n                        if (!denied) {\n                            offset = getOffset(dropTarget);\n                            var cueOffset = { top: offset.top, left: offset.left };\n                            var isHorizontal = options.orientation === \"horizontal\";\n\n                            if (!options.smartPosition || (options.inSameContainer && !options.inSameContainer({\n                                source: dropTarget,\n                                target: that._draggable,\n                                sourceIndex: that._index(dropTarget),\n                                targetIndex: that._index(that._draggable)\n                            }))) {\n                                that._dropTarget = dropTarget;\n                            } else {\n                                if (that._index(dropTarget) > that._index(that._draggable) && options.smartPosition) {\n                                    cueOffset[isHorizontal ? \"left\" : \"top\"] += isHorizontal ? outerWidth(dropTarget) : outerHeight(dropTarget);\n                                }\n                            }\n\n                            that.reorderDropCue.css({\n                                height: outerHeight(dropTarget),\n                                top: cueOffset.top,\n                                left: cueOffset.left,\n                                zIndex: 19000\n                            })\n                            .appendTo(document.body);\n\n                            if (options.positionDropCue) {\n                                options.positionDropCue(that.reorderDropCue, dropTarget);\n                            }\n                        }\n                    },\n                    dragleave: function(e) {\n                        that.toggleHintClass(e.draggable.hint, true);\n                        that.reorderDropCue.remove();\n                        that._dropTarget = null;\n                    },\n                    drop: function() {\n                        that._dropTarget = null;\n\n                        if (!that._draggable) {\n                            return;\n                        }\n                        var dropTarget = this.element;\n                        var draggable = that._draggable;\n                        var dropIndex = that._index(dropTarget);\n\n                        var isAfter = that.options.orientation === \"horizontal\" ?\n                            getOffset(that.reorderDropCue).left > getOffset(dropTarget).left :\n                            getOffset(that.reorderDropCue).top > getOffset(dropTarget).top;\n\n                        dropIndex = isAfter ? dropIndex + 1 : dropIndex;\n\n                        if (that._dropTargetAllowed(dropTarget) && !that._isLastDraggable() && that._index(draggable) !== dropIndex) {\n                            that.trigger(CHANGE, {\n                                element: that._draggable,\n                                target: dropTarget,\n                                oldIndex: that._index(draggable),\n                                newIndex: that._index(dropTarget),\n                                position: isAfter ? \"after\" : \"before\"\n                            });\n                        }\n\n                        if (that.reorderDropCue) {\n                            that.reorderDropCue.remove();\n                        }\n                    }\n                });\n\n                draggable.bind([ \"dragcancel\", \"dragend\", \"dragstart\", \"drag\" ], {\n                    dragcancel: that._dragcancel.bind(that),\n                    dragend: that._dragend.bind(that),\n                    dragstart: that._dragstart.bind(that),\n                    drag: that._drag.bind(that)\n                });\n            },\n\n            options: {\n                name: \"Reorderable\",\n                filter: \"*\",\n                orientation: \"horizontal\",\n                deniedIcon: \"cancel\",\n                allowIcon: \"plus\",\n                reorderDropCue: $('<div class=\"k-reorder-cue\"></div></div>'),\n                smartPosition: true\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            toggleHintClass: function(hint, denied) {\n                var that = this,\n                    options = that.options;\n\n                hint = $(hint);\n\n                if (hint.find(\".k-drag-status\").length > 0) {\n                    kendo.ui.icon(hint.find(\".k-drag-status\").eq(0), { icon: denied ? options.deniedIcon : options.allowIcon });\n                }\n            },\n\n            _handleExternalDraggable: function(draggable) {\n                var that = this;\n                var draggableFilter = that.options.dropFilter.trimStart();\n\n                // make direct child selectors compatible with .closest()\n                if (draggableFilter && draggableFilter[0] == \">\") {\n                    draggableFilter = draggableFilter.substring(1);\n                }\n\n                that._dragcancelHandler = that._dragcancel.bind(that);\n                that._dragendHandler = that._dragend.bind(that);\n                that._dragstartHandler = that._dragstart.bind(that);\n                that._dragHandler = that._drag.bind(that);\n\n                that._draggable = draggable.currentTarget.closest(draggableFilter);\n                that._draggableInstance = draggable;\n                that._elements = that.element.find(that.options.dropFilter);\n\n                draggable.bind([ \"dragcancel\", \"dragend\", \"dragstart\", \"drag\" ], {\n                    dragcancel: that._dragcancelHandler,\n                    dragend: that._dragendHandler,\n                    dragstart: that._dragstartHandler,\n                    drag: that._dragHandler\n                });\n            },\n\n            _dragcancel: function() {\n                var that = this;\n\n                if (that._draggableInstance && (that._dragcancelHandler || that._dragendHandler ||\n                    that._dragstartHandler || that._dragHandler)) {\n\n                        that._draggableInstance.unbind({\n                        dragcancel: that._dragcancelHandler,\n                        dragend: that._dragendHandler,\n                        dragstart: that._dragstartHandler,\n                        drag: that._dragHandler\n                    });\n                }\n\n                if (that.reorderDropCue) {\n                    that.reorderDropCue.remove();\n                }\n\n                that._draggable = null;\n                that._elements = null;\n\n            },\n            _dragend: function() {\n                var that = this;\n\n                if (that._draggableInstance && (that._dragcancelHandler || that._dragendHandler ||\n                    that._dragstartHandler || that._dragHandler)) {\n\n                        that._draggableInstance.unbind({\n                        dragcancel: that._dragcancelHandler,\n                        dragend: that._dragendHandler,\n                        dragstart: that._dragstartHandler,\n                        drag: that._dragHandler\n                    });\n                }\n\n                if (that.reorderDropCue) {\n                    that.reorderDropCue.remove();\n                }\n\n                that._draggable = null;\n                that._elements = null;\n            },\n            _dragstart: function(e) {\n                var that = this;\n                var target = $(e.currentTarget);\n                var draggableFilter = that.options.dropFilter.trimStart();\n\n                // make direct child selectors compatible with .closest()\n                if (draggableFilter && draggableFilter[0] == \">\") {\n                    draggableFilter = draggableFilter.substring(1);\n                }\n\n                that._draggable = target.is(draggableFilter) ? target : target.closest(draggableFilter);\n                that._elements = that.element.find(that.options.dropFilter);\n            },\n            _drag: function(e) {\n                var that = this,\n                    dropIndex, sourceIndex, denied,\n                    offset = {},\n                    target,\n                    draggableFilter = that.options.dropFilter.trimStart();\n\n                // make direct child selectors compatible with .closest()\n                if (draggableFilter && draggableFilter[0] == \">\") {\n                    draggableFilter = draggableFilter.substring(1);\n                }\n\n                target = $(e.currentTarget).closest(draggableFilter);\n\n                if (!that._dropTarget || (that.options.smartPosition && e.sender.hint.find(\".k-drag-status\").is(\".k-i-cancel,.k-svg-i-cancel\"))) {\n                    return;\n                }\n\n                dropIndex = that._index(that._dropTarget);\n                sourceIndex = that._index(target);\n                sourceIndex = dropIndex > sourceIndex ? sourceIndex + 1 : sourceIndex;\n\n                if (that.options.orientation === \"horizontal\") {\n                    var dropStartOffset = getOffset(that._dropTarget).left;\n                    var width = outerWidth(that._dropTarget);\n\n                    if (e.pageX > dropStartOffset + width / 2) {\n                        offset.left = dropStartOffset + width;\n                        dropIndex += 1;\n                    } else {\n                        offset.left = dropStartOffset;\n                    }\n                } else {\n                    var dropStartTop = getOffset(that._dropTarget).top;\n                    var height = outerHeight(that._dropTarget);\n\n                    if (e.pageY > dropStartTop + height / 2) {\n                        offset.top = dropStartTop + height;\n                        dropIndex += 1;\n                    } else {\n                        offset.top = dropStartTop;\n                    }\n                }\n\n                that.reorderDropCue.css(offset);\n\n                if (that.options.positionDropCue) {\n                    that.options.positionDropCue(that.reorderDropCue, that._dropTarget);\n                }\n\n                if (that._isPartOfSortable(target)) {\n\n                    denied = sourceIndex === dropIndex ||\n                        (that.options.dragOverContainers && !that.options.dragOverContainers(sourceIndex, dropIndex)) ||\n                        e.clickMoveClick && e.currentTarget.hasClass(\"k-drag-cell\") && $(e.elementUnderCursor).closest(\".k-drag-cell\").length === 0;\n\n                    that.toggleHintClass(e.sender.hint, denied);\n                }\n            },\n\n            _isPartOfSortable: function(draggable) {\n                var that = this;\n\n                return that._elements.index(draggable) >= 0;\n            },\n\n            _externalDraggable: function(e) {\n                var that = this,\n                    options = that.options;\n\n                if (!that._draggable && options.externalDraggable) {\n                    return options.externalDraggable(e);\n                }\n\n                return null;\n            },\n\n            _isLastDraggable: function() {\n                var inSameContainer = this.options.inSameContainer,\n                    draggable = this._draggable[0],\n                    elements = this._elements.get(),\n                    found = false,\n                    item;\n\n                if (!inSameContainer) {\n                    return false;\n                }\n\n                while (!found && elements.length > 0) {\n                    item = elements.pop();\n                    found = draggable !== item && inSameContainer({\n                        source: draggable,\n                        target: item,\n                        sourceIndex: this._index(draggable),\n                        targetIndex: this._index(item)\n                    });\n                }\n\n                return !found;\n            },\n\n            _dropTargetAllowed: function(dropTarget) {\n                var inSameContainer = this.options.inSameContainer,\n                    dragOverContainers = this.options.dragOverContainers,\n                    draggable = this._draggable;\n\n                if (draggable[0] === dropTarget[0]) {\n                    return false;\n                }\n\n                if (!inSameContainer || !dragOverContainers) {\n                    return true;\n                }\n\n                if (inSameContainer({ source: draggable,\n                    target: dropTarget,\n                    sourceIndex: this._index(draggable),\n                    targetIndex: this._index(dropTarget)\n                })) {\n                    return true;\n                }\n\n                return dragOverContainers(this._index(draggable), this._index(dropTarget));\n            },\n\n            _index: function(element) {\n                return this._elements.index(element);\n            },\n\n            destroy: function() {\n               var that = this;\n\n\n               Widget.fn.destroy.call(that);\n\n               that.element.find(that.options.dropFilter).each(function() {\n                   var item = $(this);\n                   if (item.data(\"kendoDropTarget\")) {\n                       item.data(\"kendoDropTarget\").destroy();\n                    }\n                });\n\n                if (that.draggable) {\n                    that.draggable.destroy();\n\n                    that.draggable.element = that.draggable = null;\n                }\n\n                that.reorderDropCue.remove();\n                that.elements = that.reorderDropCue = that._elements = that._draggable = null;\n           }\n        });\n\n        kendo.ui.plugin(Reorderable);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}