{"version":3,"sources":["raw-js/kendo.switch.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoswitch","js","this","$","undefined$1","kendo","window","ui","NS","Widget","support","CHANGE","switchStyles","widget","track","thumbWrapper","thumb","checked","checkedLabel","unchecked","uncheckedLabel","disabled","readonly","active","DISABLED","ARIA_DISABLED","READONLY","ARIA_READONLY","ARIA_HIDDEN","CHECKED","CLICK","click","TOUCHEND","pointers","KEYDOWN","DOT","SWITCH_TEMPLATE","template","styles","SWITCH_TRACK_TEMPLATE","SWITCH_THUMB_TEMPLATE","Switch","extend","init","element","options","that","fn","call","_wrapper","_initSettings","_aria","_attachEvents","notify","wrapper","type","wrap","parent","style","cssText","hide","append","messages","addClass","className","removeClass","rounded","trackRounded","_applyCssClasses","_applyRoundedClasses","action","cssProperties","getValidClass","name","propName","value","thumbRounded","find","on","_click","bind","_touchEnd","_keydown","setOptions","_clearCssClasses","text","width","css","enabled","enable","check","_tabindex","attr","id","labelFor","ariaLabel","ariaLabelledBy","length","labelId","guid","events","size","toggleClass","removeAttr","prop","apply","destroy","off","toggle","_check","trigger","e","keyCode","keys","SPACEBAR","preventDefault","_isTouch","event","test","originalEvent","pointerType","which","target","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery"],"mappings":"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","file":"kendo.switch.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoswitch = global.kendoswitch || {}, global.kendoswitch.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"switch\",\n        name: \"Switch\",\n        category: \"web\",\n        description: \"The Switch widget is used to display two exclusive choices.\",\n        depends: [ \"core\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            NS = \".kendoSwitch\",\n            Widget = ui.Widget,\n            support = kendo.support,\n            CHANGE = \"change\",\n            switchStyles = {\n                widget: \"k-switch\",\n                track: \"k-switch-track\",\n                thumbWrapper: \"k-switch-thumb-wrap\",\n                thumb: \"k-switch-thumb\",\n                checked: \"k-switch-on\",\n                checkedLabel: \"k-switch-label-on\",\n                unchecked: \"k-switch-off\",\n                uncheckedLabel: \"k-switch-label-off\",\n                disabled: \"k-disabled\",\n                readonly: \"k-readonly\",\n                active: \"k-active\"\n            },\n            DISABLED = \"disabled\",\n            ARIA_DISABLED = \"aria-disabled\",\n            READONLY = \"readonly\",\n            ARIA_READONLY = \"aria-readonly\",\n            ARIA_CHECKED = \"aria-checked\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            CHECKED = \"checked\",\n            CLICK = support.click + NS,\n            TOUCHEND = support.pointers ? \"pointerup\" : \"touchend\",\n            KEYDOWN = \"keydown\" + NS,\n            LABELIDPART = \"_label\",\n            DOT = \".\";\n\n        var SWITCH_TEMPLATE = kendo.template(({ styles }) => `<span class=\"${styles.widget}\" role=\"switch\"></span>`);\n\n        var SWITCH_TRACK_TEMPLATE = kendo.template(({ styles, checked, unchecked }) => `<span class='${styles.track}'>` +\n            `<span class='${styles.checkedLabel}'>${checked}</span>` +\n            `<span class='${styles.uncheckedLabel}'>${unchecked}</span>` +\n            `</span>`);\n\n        var SWITCH_THUMB_TEMPLATE = kendo.template(({ styles }) => `<span class='${styles.thumbWrapper}'>` +\n            `<span class='${styles.thumb}'></span>` +\n            `</span>`);\n\n        var Switch = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._wrapper();\n\n                that._initSettings();\n\n                that._aria();\n\n                that._attachEvents();\n\n                kendo.notify(that, kendo.ui);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    element = that.element[0],\n                    wrapper = $(SWITCH_TEMPLATE({\n                        styles: switchStyles\n                    }));\n\n                element.type = \"checkbox\";\n\n                that.wrapper = that.element.wrap(wrapper).parent();\n\n                that.wrapper[0].style.cssText = that.element[0].style.cssText;\n                that.element.hide();\n\n                that.wrapper\n                    .append($(SWITCH_TRACK_TEMPLATE({\n                        styles: switchStyles,\n                        checked: options.messages.checked,\n                        unchecked: options.messages.unchecked\n                    })))\n                    .append($(SWITCH_THUMB_TEMPLATE({\n                        styles: switchStyles\n                    })))\n                    .addClass(element.className)\n                    .removeClass('input-validation-error');\n\n                that.options.rounded = that.options.trackRounded;\n                that._applyCssClasses();\n                that._applyRoundedClasses();\n            },\n\n            _applyRoundedClasses: function(action) {\n                var that = this,\n                    options = that.options,\n                    trackRounded = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"rounded\",\n                        value: options.trackRounded\n                    }),\n                    thumbRounded = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"rounded\",\n                        value: options.thumbRounded\n                    });\n\n                action = action || \"addClass\";\n\n                that.wrapper.find(DOT + switchStyles.track)[action](trackRounded);\n                that.wrapper.find(DOT + switchStyles.thumb)[action](thumbRounded);\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.wrapper\n                    .on(CLICK, that._click.bind(that))\n                    .on(TOUCHEND, that._touchEnd.bind(that))\n                    .on(KEYDOWN, that._keydown.bind(that));\n            },\n\n            setOptions: function(options) {\n                var that = this,\n                    messages = options.messages,\n                    checkedLabel,\n                    uncheckedLabel;\n\n                that._clearCssClasses(options);\n                that._applyRoundedClasses(\"removeClass\");\n\n                that.options = $.extend(that.options, options);\n\n                if (messages && messages.checked !== undefined$1) {\n                    checkedLabel = that.wrapper.find(DOT + switchStyles.checkedLabel);\n                    checkedLabel.text(messages.checked);\n                }\n\n                if (messages && messages.unchecked !== undefined$1) {\n                    uncheckedLabel = that.wrapper.find(DOT + switchStyles.uncheckedLabel);\n                    uncheckedLabel.text(messages.unchecked);\n                }\n\n                if (options.width) {\n                    that.wrapper.css({\n                        width: options.width\n                    });\n                }\n\n                if (options.enabled !== undefined$1) {\n                    that.enable(options.enabled);\n                }\n\n                if (options.readonly !== undefined$1) {\n                    that.readonly(options.readonly);\n                }\n\n                that.check(options.checked);\n\n                that.options.rounded = that.options.trackRounded;\n                that._applyCssClasses();\n                that._applyRoundedClasses();\n            },\n\n            _initSettings: function() {\n                var that = this,\n                    element = that.element[0],\n                    options = that.options;\n\n                if (options.enabled) {\n                    that._tabindex();\n                }\n\n                if (options.width) {\n                    that.wrapper.css({\n                        width: options.width\n                    });\n                }\n\n                if (options.checked === null) {\n                    options.checked = element.checked;\n                }\n\n                that.check(options.checked);\n\n                options.enabled = options.enabled && !that.element.attr(DISABLED);\n                that.enable(options.enabled);\n\n                options.readonly = options.readonly || !!that.element.attr(READONLY);\n                that.readonly(options.readonly);\n            },\n\n            _aria: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper = that.wrapper,\n                    id = element.attr(\"id\"),\n                    labelFor = $(\"label[for=\\\"\" + id + \"\\\"]\"),\n                    ariaLabel = element.attr(\"aria-label\"),\n                    ariaLabelledBy = element.attr(\"aria-labelledby\");\n\n                if (ariaLabel) {\n                    wrapper.attr(\"aria-label\", ariaLabel);\n                } else if (ariaLabelledBy) {\n                    wrapper.attr(\"aria-labelledby\", ariaLabelledBy);\n                } else if (labelFor.length) {\n                    var labelId = labelFor.attr(\"id\");\n\n                    if (!labelId) {\n                        labelId = (id || kendo.guid()) + LABELIDPART;\n                        labelFor.attr(\"id\", labelId);\n                    }\n\n                    wrapper.attr(\"aria-labelledby\", labelId);\n                }\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            options: {\n                name: \"Switch\",\n                messages: {\n                    checked: \"On\",\n                    unchecked: \"Off\"\n                },\n                width: null,\n                checked: null,\n                enabled: true,\n                readonly: false,\n                size: \"medium\",\n                rounded: \"full\",\n                trackRounded: \"full\",\n                thumbRounded: \"full\"\n            },\n\n            check: function(checked) {\n                var that = this,\n                    element = that.element[0];\n\n                if (checked === undefined$1) {\n                    return element.checked;\n                }\n\n                if (element.checked !== checked) {\n                    that.options.checked = element.checked = checked;\n                }\n\n                that.wrapper\n                    .attr(ARIA_CHECKED, checked)\n                    .toggleClass(switchStyles.checked, checked)\n                    .toggleClass(switchStyles.unchecked, !checked)\n                    .find(\"[aria-hidden='true']\")\n                    .removeAttr(ARIA_HIDDEN);\n\n                if (checked) {\n                    that.element\n                        .attr(CHECKED, CHECKED);\n\n                    that.wrapper.find(DOT + switchStyles.uncheckedLabel)\n                        .attr(ARIA_HIDDEN, true);\n                } else {\n                    that.element\n                        .prop(CHECKED, false);\n\n                    that.wrapper.find(DOT + switchStyles.checkedLabel)\n                        .attr(ARIA_HIDDEN, true);\n                }\n            },\n\n            // alias for check, NG support\n            value: function(value) {\n                if (typeof value === \"string\") {\n                    value = (value === \"true\");\n                } else if (value === null) {\n                    value = false;\n                }\n                return this.check.apply(this, [value]);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n                this.wrapper.off(NS);\n            },\n\n            toggle: function() {\n                var that = this;\n\n                that.check(!that.element[0].checked);\n            },\n\n            enable: function(enable) {\n                var element = this.element,\n                    wrapper = this.wrapper;\n\n                if (typeof enable == \"undefined\") {\n                    enable = true;\n                }\n\n                this.options.enabled = enable;\n\n                if (enable) {\n                    element.prop(DISABLED, false);\n                    wrapper.removeAttr(ARIA_DISABLED);\n                } else {\n                    element.attr(DISABLED, DISABLED);\n                    wrapper.attr(ARIA_DISABLED, true);\n                }\n\n                wrapper.toggleClass(switchStyles.disabled, !enable);\n            },\n\n            readonly: function(readonly) {\n                var that = this,\n                    element = that.element,\n                    wrapper = that.wrapper;\n\n                if (typeof readonly == \"undefined\") {\n                    readonly = true;\n                }\n\n                that.options.readonly = readonly;\n\n                if (readonly) {\n                    element.attr(READONLY, true);\n                    wrapper.attr(ARIA_READONLY, true);\n                } else {\n                    element.prop(READONLY, false);\n                    wrapper.removeAttr(ARIA_READONLY);\n                }\n\n                wrapper.toggleClass(switchStyles.readonly, readonly);\n            },\n\n            _check: function() {\n                var that = this,\n                    checked = that.element[0].checked = !that.element[0].checked;\n\n                that.wrapper.trigger(\"focus\");\n\n                if (!that.options.enabled || that.options.readonly ||\n                    that.trigger(CHANGE, { checked: checked })) {\n                    that.element[0].checked = !checked;\n                    return;\n                }\n\n                that.check(checked);\n            },\n\n            _keydown: function(e) {\n                if (e.keyCode === kendo.keys.SPACEBAR) {\n                    this._check();\n                    e.preventDefault();\n                }\n            },\n\n            _isTouch: function(event) {\n                return /touch/.test(event.type) || (event.originalEvent && /touch/.test(event.originalEvent.pointerType));\n            },\n\n            _click: function(e) {\n                if (!this._isTouch(e) && e.which === 1) {\n                    if (e.target === this.element[0]) {\n                        // In this case the input has been clicked directly\n                        // even if hidden that is possible via <label for= >\n                        // thus we should revert its checked state to trigger the change\n                        this.element[0].checked = !this.element[0].checked;\n                    }\n\n                    this._check();\n                }\n            },\n\n            _touchEnd: function(e) {\n                if (this._isTouch(e)) {\n                    this._check();\n                    e.preventDefault();\n                }\n            }\n\n        });\n\n        kendo.cssProperties.registerPrefix(\"Switch\", \"k-switch-\");\n\n        kendo.cssProperties.registerValues(\"Switch\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(Switch);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}