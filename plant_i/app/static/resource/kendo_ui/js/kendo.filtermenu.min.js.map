{"version":3,"sources":["raw-js/kendo.filtermenu.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendofiltermenu","js","this","$","undefined$1","kendo","window","ui","support","encode","htmlEncode","AUTOCOMPLETEVALUE","browser","chrome","POPUP","INIT","OPEN","REFRESH","CHANGE","NS","COLUMN_HEADER_SELECTOR","EQ","NEQ","roles","number","date","mobileRoles","string","isFunction","Widget","actionsFilterButtonsContainer","actionsCssClass","messages","html","renderButton","filter","type","themeColor","icon","clear","booleanTemplate","field","format","ns","extra","operators","role","values","componentType","info","isTrue","isFalse","modernBooleanTemplate","inputIdForTrue","guid","inputIdForFalse","customBooleanTemplate","defaultTemplate","operator","Object","keys","map","op","value","stringify","replace","selectValue","logic","and","or","additionalOperator","additionalValue","defaultMobileTemplate","title","filterMenuGuid","inputType","cancel","into","done","val","text","booleanMobileTemplate","removeFiltersForField","expression","filters","grep","length","convertItems","items","idx","item","result","FilterMenu","extend","init","element","options","initial","columnHeader","that","fn","call","dataSource","DataSource","create","attr","closest","appendTo","find","link","_createLink","model","reader","_parse","fields","parse","bind","_defaultFilter","_refreshHandler","refresh","appendToElement","_init","setUI","attrRole","pane","_isMobile","_createMobileForm","_createForm","form","on","_submit","_reset","removeClass","each","wrap","trigger","container","cycleForm","template","_getTemplate","append","popup","data","anchor","copyAnchorStyles","open","_open","activate","_activate","close","closeCallback","_keydown","hasCustomTemplate","view","e","submit","preventDefault","_closeForm","_mobileClear","appendTarget","buttonTitle","addClass","_click","defaultFilters","defaultOperator","push","filterModel","observable","children","first","roleAttribute","buttongroup","index","select","eq","set","_logicChangeHandler","_bind","valueAttribute","sender","current","destroy","unbind","off","purge","currentFilter","found","_stripFilters","_merge","_removeFilter","viewElement","booleanRadioButton","booleanRadioButtonValue","prop","i","input","andLogicRadio","expr","nested","stopPropagation","toJSON","containsFilters","_checkForNullOrEmptyFilter","currentExpression","firstNullOrEmpty","secondNullOrEmpty","search","parent","show","navigate","animations","right","left","toggle","not","instance","target","keyCode","ESC","widgetInstance","hasClass","visible","getKendoPopup","events","name","neq","startswith","contains","doesnotcontain","endswith","isnull","isnotnull","isempty","isnotempty","isnullorempty","isnotnullorempty","gte","gt","lte","lt","enums","multiCheckNS","filterValuesForField","flatFilterValues","distinct","getter","seen","hasOwnProperty","multiCheckMobileTemplate","checkAll","clearAll","selectedItemsFormat","FilterMultiCheck","dataSelector","dataTextField","checkSource","_foreignKeyValues","fetch","forceUnique","pageSize","toLowerCase","parseFloat","_link","serverPaging","_attachProgress","checkChangeHandler","empty","_filter","_progressHandler","progress","_progressHideHandler","_input","_clearTypingTimeout","_typingTimeout","setTimeout","_clearSearch","searchTextBox","clearTimeout","ignoreCase","searchString","labels","style","visibility","parentNode","display","label","labelText","textContent","innerText","indexOf","checkMobileHtml","applyStylesFromKendoAttributes","_mobileCheckAll","kendoPopup","clearSearchButton","createCheckAllItem","itemTemplate","mobile","checkAllContainer","all","prepend","checkBoxAll","checkAllHandler","updateCheckAllState","state","createIsNullItem","valueField","isNullContainer","isNull","getFilterArray","toggleClass","action","autoSync","is","createCheckBoxes","checkValues","templateOptions","boolDataFilter","booleanFilterHandler","_isServerGrouped","_flatData","itemsHtml","render","ele","checkBoxVal","getTime","checkbox","valueFormat","plugin","jQuery"],"mappings":"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","file":"kendo.filtermenu.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.datepicker.js'), require('kendo.numerictextbox.js'), require('kendo.dropdownlist.js'), require('kendo.buttongroup.js'), require('kendo.binder.js'), require('kendo.html.button.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.datepicker', 'kendo.numerictextbox', 'kendo.dropdownlist', 'kendo.buttongroup', 'kendo.binder', 'kendo.html.button', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendofiltermenu = global.kendofiltermenu || {}, global.kendofiltermenu.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"filtermenu\",\n        name: \"Filtering Menu\",\n        category: \"framework\",\n        depends: [ \"datepicker\", \"numerictextbox\", \"dropdownlist\", \"buttongroup\", \"binder\", \"html.button\", \"icons\" ],\n        advanced: true\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            support = kendo.support,\n            encode = kendo.htmlEncode,\n            AUTOCOMPLETEVALUE = support.browser.chrome ? \"disabled\" : \"off\",\n            POPUP = \"kendoPopup\",\n            INIT = \"init\",\n            OPEN = \"open\",\n            REFRESH = \"refresh\",\n            CHANGE = \"change\",\n            NS = \".kendoFilterMenu\",\n            COLUMN_HEADER_SELECTOR = \".k-table-th\",\n            EQ = \"Is equal to\",\n            NEQ = \"Is not equal to\",\n            roles = {\n                \"number\": \"numerictextbox\",\n                \"date\": \"datepicker\"\n            },\n            mobileRoles = {\n                \"string\": \"text\",\n                \"number\": \"number\",\n                \"date\": \"date\"\n            },\n            isFunction = kendo.isFunction,\n            Widget = ui.Widget;\n\n        var actionsFilterButtonsContainer = ({ actionsCssClass, messages }) =>\n        `<div class=\"k-actions-stretched ${actionsCssClass ? actionsCssClass : \"k-actions\"}\">` +\n            kendo.html.renderButton(`<button title=\"${messages.filter}\">${encode(messages.filter)}</button>`, { type: \"submit\", themeColor: \"primary\", icon: \"filter\" }) +\n            kendo.html.renderButton(`<button title=\"${messages.clear}\">${encode(messages.clear)}</button>`, { type: \"reset\", icon: \"filter-clear\" }) +\n        '</div>';\n        var booleanTemplate = ({ field, format, ns, messages, extra, operators, type, role, values, componentType }) =>\n            '<div class=\"k-filter-menu-container\">' +\n                `<div class=\"k-filter-help-text\">${encode(messages.info)}</div>` +\n                '<label>' +\n                    `<input type=\"radio\" data-${ns}bind=\"checked: filters[0].value\" value=\"true\" name=\"filters[0].value\"/>` +\n                    `${encode(messages.isTrue)}` +\n                '</label>' +\n                '<label>' +\n                    `<input type=\"radio\" data-${ns}bind=\"checked: filters[0].value\" value=\"false\" name=\"filters[0].value\"/>` +\n                    `${encode(messages.isFalse)}` +\n                '</label>' +\n                actionsFilterButtonsContainer({ messages }) +\n            '</div>';\n\n        var modernBooleanTemplate = ({ field, format, ns, messages, extra, operators, type, role, values, componentType }) => {\n            var inputIdForTrue = kendo.guid(), inputIdForFalse = kendo.guid();\n            return '<div class=\"k-filter-menu-container\">' +\n                '<div>' +\n                    '<ul class=\"k-radio-list k-reset\">' +\n                        '<li>' +\n                            `<input type=\"radio\" class=\"k-radio k-radio-md\" id=\"${inputIdForTrue}\" data-${ns}bind=\"checked: filters[0].value\" value=\"true\" name=\"filters[0].value\" />` +\n                            `<label class=\"k-radio-label\" for=\"${inputIdForTrue}\">${encode(messages.isTrue)}</label>` +\n                        '</li>' +\n                        '<li>' +\n                            `<input type=\"radio\" class=\"k-radio k-radio-md\" id=\"${inputIdForFalse}\" data-${ns}bind=\"checked: filters[0].value\" value=\"false\" name=\"filters[0].value\" />` +\n                            `<label class=\"k-radio-label\" for=\"${inputIdForFalse}\">${encode(messages.isFalse)}</label>` +\n                        '</li>' +\n                    '</ul>' +\n                    actionsFilterButtonsContainer({ actionsCssClass: \"k-columnmenu-actions\", messages }) +\n                '</div>' +\n            '</div>';\n        };\n\n        var customBooleanTemplate = ({ field, format, ns, messages, extra, operators, type, role, values, componentType }) =>\n            '<div class=\"k-filter-menu-container\">' +\n                `<div class=\"k-filter-help-text\">${encode(messages.info)}</div>` +\n                '<label>' +\n                    `<span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input class=\"k-input-inner\" data-${ns}bind=\"value: filters[0].value\" name=\"filters[0].value\"/></span>` +\n                '</label>' +\n                actionsFilterButtonsContainer({ messages }) +\n            '</div>';\n\n        var defaultTemplate = ({ field, format, ns, messages, extra, operators, type, role, values, componentType }) =>\n            '<div class=\"k-filter-menu-container\">' +\n                (componentType === \"classic\" ?\n                    `<div class=\"k-filter-help-text\">${encode(messages.info)}</div>`\n                : '') +\n                `<select title=\"${messages.operator}\" data-${ns}bind=\"value: filters[0].operator\" data-${ns}role=\"dropdownlist\">` +\n                    `${Object.keys(operators || {}).map((op) =>\n                    `<option value=\"${op}\">${operators[op]}</option>`\n                )}` +\n                '</select>' +\n                (values ?\n                `<select title=\"${messages.value}\" data-${ns}bind=\"value:filters[0].value\" data-${ns}text-field=\"text\" data-${ns}value-field=\"value\" data-${ns}source='${kendo.stringify(values).replace(/\\'/g,\"&#39;\")}' data-${ns}role=\"dropdownlist\" data-${ns}option-label=\"${messages.selectValue}\" data-${ns}value-primitive=\"true\">` +\n                '</select>'\n                :\n                `<input title=\"${messages.value}\" data-${ns}bind=\"value:filters[0].value\" class=\"k-input-inner\" type=\"text\" ${role ? `data-${ns}role=\"${role}\"` : \"\"} />`\n                ) +\n                (extra ?\n                    (componentType === \"modern\" ?\n                    `<ul data-${ns}role=\"buttongroup\" data-bind=\"events: { select: onLogicChange }\">` +\n                        `<li data-${ns}value=\"and\">And</li>` +\n                        `<li data-${ns}value=\"or\">Or</li>` +\n                    '</ul>'\n                    :\n                    `<select title=\"${messages.logic}\" class=\"k-filter-and\" data-${ns}bind=\"value: logic\" data-${ns}role=\"dropdownlist\">` +\n                        `<option value=\"and\">${encode(messages.and)}</option>` +\n                        `<option value=\"or\">${encode(messages.or)}</option>` +\n                    '</select>'\n                    ) +\n                    `<select title=\"${messages.additionalOperator}\" data-${ns}bind=\"value: filters[1].operator\" data-${ns}role=\"dropdownlist\">` +\n                        `${Object.keys(operators || {}).map((op) =>\n                        `<option value=\"${op}\">${encode(operators[op])}</option>`\n                    )}` +\n                    '</select>' +\n                    (values ?\n                    `<select title=\"${messages.additionalValue}\" data-${ns}bind=\"value:filters[1].value\" data-${ns}text-field=\"text\" data-${ns}value-field=\"value\" data-${ns}source='${kendo.stringify(values).replace(/\\'/g,\"&#39;\")}' data-${ns}role=\"dropdownlist\" data-${ns}option-label=\"${messages.selectValue}\" data-${ns}value-primitive=\"true\">` +\n                    '</select>'\n                    :\n                    `<input title=\"${messages.additionalValue}\" data-${ns}bind=\"value: filters[1].value\" class=\"k-input-inner\" type=\"text\" ${role ? `data-${ns}role=\"${role}\"` : \"\"}/>`\n                    )\n                : '') +\n                actionsFilterButtonsContainer({ messages }) +\n            '</div>';\n\n        var defaultMobileTemplate = ({ field, title, format, ns, messages, extra, operators, filterMenuGuid, type, role, inputType, values }) =>\n            `<div data-${ns}role=\"view\" class=\"k-grid-filter-menu\">` +\n                `<div data-${ns}role=\"header\" class=\"k-header\">` +\n                    `<a href=\"#\" class=\"k-header-cancel k-link\" title=\"${messages.cancel}\" ` +\n                    `aria-label=\"${messages.cancel}\">${kendo.ui.icon(\"chevron-left\")}</a>` +\n                    `${encode(messages.filter)} ${encode(messages.into)} ${encode(title)}` +\n                    `<a href=\"#\" class=\"k-header-done k-link\" title=\"${messages.done}\" ` +\n                    `aria-label=\"${messages.done}\">${kendo.ui.icon(\"check\")}</a>` +\n                '</div>' +\n                `<form title=\"${messages.title}\" class=\"k-filter-menu\">` +\n                    '<ul class=\"k-reset\">' +\n                        '<li>' +\n                            `<span class=\"k-list-title k-filter-help-text\">${encode(messages.info)}</span>` +\n                            '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                                '<li class=\"k-item k-listgroup-item\">' +\n                                    '<label class=\"k-listgroup-form-row k-label\">' +\n                                        `<span class=\"k-listgroup-form-field-label k-filter-operator-text\">${messages.operator}</span>` +\n                                        '<span class=\"k-listgroup-form-field-wrapper\">' +\n                                            `<select id=\"operator_${filterMenuGuid}\" title=\"${messages.operator}\" class=\"k-filter-operator\" data-${ns}bind=\"value: filters[0].operator\" autocomplete=\"${AUTOCOMPLETEVALUE}\" >` +\n                                                `${Object.keys(operators || {}).map((op) =>\n                                                `<option value=\"${op}\">${encode(operators[op])}</option>`\n                                            )}` +\n                                            '</select>' +\n                                        '</span>' +\n                                    '</label>' +\n                                '</li>' +\n                                '<li class=\"k-item k-listgroup-item\">' +\n                                    '<label class=\"k-listgroup-form-row k-label\">' +\n                                        `<span class=\"k-listgroup-form-field-label k-filter-input-text\">${messages.value}</span>` +\n                                        '<span class=\"k-listgroup-form-field-wrapper\">' +\n                                            (values ?\n                                            `<select id=\"value_${filterMenuGuid}\" title=\"${messages.value}\" data-${ns}bind=\"value:filters[0].value\" autocomplete=\"${AUTOCOMPLETEVALUE}\" >` +\n                                                `<option value=\"\">${messages.selectValue}</option>` +\n                                                `${Object.keys(values || {}).map((val) =>\n                                                `<option value=\"${values[val].value}\">${encode(values[val].text)}</option>`\n                                            )}` +\n                                            '</select>'\n                                            :\n                                            `<input id=\"value_${filterMenuGuid}\" title=\"${messages.value}\" data-${ns}bind=\"value:filters[0].value\" class=\"k-value-input\" type=\"${inputType}\" autocomplete=\"${AUTOCOMPLETEVALUE}\" />`\n                                            ) +\n                                        '</span>' +\n                                    '</label>' +\n                                '</li>' +\n                            '</ul>' +\n                            (extra ?\n                            '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                                '<li class=\"k-item k-listgroup-item\">' +\n                                    '<label class=\"k-listgroup-form-row k-label\">' +\n                                        `<span class=\"k-listgroup-form-field-label k-filter-logic-and-text\">${messages.and}</span>` +\n                                        '<span class=\"k-listgroup-form-field-wrapper\">' +\n                                            `<input id=\"and_${filterMenuGuid}\" title=\"${messages.and}\" type=\"radio\" name=\"logic\"data-${ns}bind=\"checked: logic\" value=\"and\" autocomplete=\"${AUTOCOMPLETEVALUE}\" />` +\n                                        '</span>' +\n                                    '</label>' +\n                                '</li>' +\n                                '<li class=\"k-item k-listgroup-item\">' +\n                                    '<label class=\"k-listgroup-form-row k-label\">' +\n                                        `<span class=\"k-listgroup-form-field-label k-filter-logic-or-text\">${messages.or}</span>` +\n                                        '<span class=\"k-listgroup-form-field-wrapper\">' +\n                                            `<input id=\"or_${filterMenuGuid}\" title=\"${messages.or}\" type=\"radio\" name=\"logic\" data-${ns}bind=\"checked: logic\" value=\"or\" autocomplete=\"${AUTOCOMPLETEVALUE}\" />` +\n                                        '</span>' +\n                                    '</label>' +\n                                '</li>' +\n                            '</ul>' +\n                            '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                                '<li class=\"k-item k-listgroup-item\">' +\n                                    '<label class=\"k-listgroup-form-row k-label\">' +\n                                        `<span class=\"k-listgroup-form-field-label k-filter-operator-text\">${messages.additionalOperator}</span>` +\n                                        '<span class=\"k-listgroup-form-field-wrapper\">' +\n                                            `<select id=\"additionalOperator_${filterMenuGuid}\" title=\"${messages.additionalOperator}\" class=\"k-filter-operator\" data-${ns}bind=\"value: filters[1].operator\" autocomplete=\"${AUTOCOMPLETEVALUE}\" >` +\n                                                `${Object.keys(operators || {}).map((op) =>\n                                                `<option value=\"${op}\">${operators[op]}</option>`\n                                            )}` +\n                                            '</select>' +\n                                        '</span>' +\n                                    '</label>' +\n                                '</li>' +\n                                '<li class=\"k-item k-listgroup-item\">' +\n                                    '<label class=\"k-listgroup-form-row k-label\">' +\n                                        `<span class=\"k-listgroup-form-field-label k-filter-input-text\">${messages.additionalValue}</span>` +\n                                        '<span class=\"k-listgroup-form-field-wrapper\">' +\n                                            (values ?\n                                            `<select id=\"additionalValue_${filterMenuGuid}\" title=\"${messages.additionalValue}\" data-${ns}bind=\"value:filters[1].value\" autocomplete=\"${AUTOCOMPLETEVALUE}\" >` +\n                                                `<option value=\"\">${messages.selectValue}</option>` +\n                                                `${Object.keys(values || {}).map((val) =>\n                                                `<option value=\"${values[val].value}\">${encode(values[val].text)}</option>`\n                                            )}` +\n                                            '</select>'\n                                            :\n                                            `<input id=\"additionalValue_${filterMenuGuid}\" title=\"${messages.additionalValue}\" data-${ns}bind=\"value:filters[1].value\" class=\"k-value-input\" type=\"${inputType}\" autocomplete=\"${AUTOCOMPLETEVALUE}\" />`\n                                            ) +\n                                        '</span>' +\n                                    '</label>' +\n                                '</li>' +\n                            '</ul>'\n                            : '') +\n                        '</li>' +\n                        '<li class=\"k-item k-clear-wrap\">' +\n                            '<span class=\"k-list-title\">&nbsp;</span>' +\n                            '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                                '<li class=\"k-listgroup-item\">' +\n                                    `<span class=\"k-link k-label k-clear\" title=\"${messages.clear}\" aria-label=\"${messages.clear}\">` +\n                                        `${encode(messages.clear)}` +\n                                    '</span>' +\n                                '</li>' +\n                            '</ul>' +\n                        '</li>' +\n                    '</ul>' +\n                '</form>' +\n            '</div>';\n\n        var booleanMobileTemplate = ({ field, title, format, ns, messages, extra, operators, filterMenuGuid, type, role, inputType, values }) =>\n            `<div data-${ns}role=\"view\" class=\"k-grid-filter-menu\">` +\n                `<div data-${ns}role=\"header\" class=\"k-header\">` +\n                    `<a href=\"#\" class=\"k-header-cancel k-link\" title=\"${messages.cancel}\" ` +\n                    `aria-label=\"${messages.cancel}\">${kendo.ui.icon(\"chevron-left\")}</a>` +\n                    `${encode(messages.filter)} ${encode(messages.into)} ${encode(title)}` +\n                    `<a href=\"#\" class=\"k-header-done k-link\" title=\"${messages.done}\" ` +\n                    `aria-label=\"${messages.done}\">${kendo.ui.icon(\"check\")}</a>` +\n                '</div>' +\n                `<form title=\"${messages.title}\" class=\"k-filter-menu\">` +\n                    '<ul class=\"k-reset\">' +\n                        '<li>' +\n                            `<span class=\"k-list-title k-filter-help-text\">${encode(messages.info)}</span>` +\n                            '<ul class=\"k-listgroup k-listgroup-flush k-multicheck-bool-wrap\">' +\n                                '<li class=\"k-item k-listgroup-item\">' +\n                                    '<label class=\"k-listgroup-form-row k-label\">' +\n                                        `<span class=\"k-listgroup-form-field-label k-item-title\">${encode(messages.isTrue)}</span>` +\n                                        '<span class=\"k-listgroup-form-field-wrapper\"></span>' +\n                                            `<input id=\"true_${filterMenuGuid}\" title=\"${messages.isTrue}\" type=\"radio\" data-${ns}bind=\"checked: filters[0].value\" value=\"true\" name=\"filters[0].value\" autocomplete=\"${AUTOCOMPLETEVALUE}\" />` +\n                                        '</span>' +\n                                    '</label>' +\n                                '</li>' +\n                                '<li class=\"k-item k-listgroup-item\">' +\n                                    '<label class=\"k-listgroup-form-row k-label\">' +\n                                        `<span for=\"false_${filterMenuGuid}\" class=\"k-listgroup-form-field-label k-item-title\">${encode(messages.isFalse)}</span>` +\n                                        '<span class=\"k-listgroup-form-field-wrapper\">' +\n                                            `<input id=\"false_${filterMenuGuid}\" title=\"${messages.isFalse}\" type=\"radio\" data-${ns}bind=\"checked: filters[0].value\" value=\"false\" name=\"filters[0].value\" autocomplete=\"${AUTOCOMPLETEVALUE}\" />` +\n                                        '</span>' +\n                                    '</label>' +\n                                '</li>' +\n                            '</ul>' +\n                        '</li>' +\n                        '<li class=\"k-item k-clear-wrap\">' +\n                            '<span class=\"k-list-title\">&nbsp;</span>' +\n                            '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                                '<li class=\"k-listgroup-item\">' +\n                                    `<span class=\"k-link k-label k-clear\" title=\"${messages.clear}\" aria-label=\"${messages.clear}\">` +\n                                        `${encode(messages.clear)}` +\n                                    '</span>' +\n                                '</li>' +\n                            '</ul>' +\n                        '</li>' +\n                    '</ul>' +\n                '</form>' +\n            '</div>';\n\n        function removeFiltersForField(expression, field) {\n            if (expression.filters) {\n                expression.filters = $.grep(expression.filters, function(filter) {\n                    removeFiltersForField(filter, field);\n                    if (filter.filters) {\n                        return filter.filters.length;\n                    } else {\n                        return filter.field != field;\n                    }\n                });\n            }\n        }\n\n        function convertItems(items) {\n            var idx,\n                length,\n                item,\n                value,\n                text,\n                result;\n\n            if (items && items.length) {\n                result = [];\n                for (idx = 0, length = items.length; idx < length; idx++) {\n                    item = items[idx];\n                    text = item.text !== \"\" ? item.text || item.value || item : item.text;\n                    value = item.value == null ? (item.text || item) : item.value;\n\n                    result[idx] = { text: text, value: value };\n                }\n            }\n            return result;\n        }\n\n\n        function clearFilter(filters, field) {\n            return $.grep(filters, function(expr) {\n                if (expr.filters) {\n                    expr.filters = $.grep(expr.filters, function(nested) {\n                        return nested.field != field;\n                    });\n\n                    return expr.filters.length;\n                }\n                return expr.field != field;\n            });\n        }\n\n        var FilterMenu = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    type = \"string\",\n                    operators,\n                    initial,\n                    field,\n                    columnHeader;\n\n                options = options || {};\n                options.componentType = options.componentType || \"classic\";\n                Widget.fn.init.call(that, element, options);\n\n                operators = that.operators = options.operators || {};\n\n                element = that.element;\n                options = that.options;\n\n                that.dataSource = DataSource.create(options.dataSource);\n\n                that.field = options.field || element.attr(kendo.attr(\"field\"));\n\n                columnHeader = $(element.closest(COLUMN_HEADER_SELECTOR));\n                if (columnHeader.length) {\n                    that.appendTo = columnHeader.find(options.appendTo);\n                } else {\n                    that.appendTo = $(options.appendTo);\n                }\n\n                that.link = that._createLink() || $();\n\n                that.model = that.dataSource.reader.model;\n\n                that._parse = function(value) {\n                     return value != null ? (value + \"\") : value;\n                };\n\n                if (that.model && that.model.fields) {\n                    field = that.model.fields[that.field];\n\n                    if (field) {\n                        type = field.type || \"string\";\n                        if (field.parse) {\n                            that._parse = field.parse.bind(field);\n                        }\n                    }\n                }\n\n                if (options.values) {\n                    type = \"enums\";\n                }\n\n                that.type = type;\n\n                operators = operators[type] || options.operators[type];\n\n                for (initial in operators) { // get the first operator\n                    break;\n                }\n\n                that._defaultFilter = function() {\n                    return { field: that.field, operator: initial || \"eq\", value: \"\" };\n                };\n\n                that._refreshHandler = that.refresh.bind(that);\n\n                that.dataSource.bind(CHANGE, that._refreshHandler);\n\n                if (options.appendToElement) { // force creation if used in column menu\n                    that._init();\n                } else {\n                    that.refresh(); //refresh if DataSource is fitered before menu is created\n                }\n            },\n\n            _init: function() {\n                var that = this,\n                    ui = that.options.ui,\n                    setUI = isFunction(ui),\n                    attrRole = kendo.attr(\"role\"),\n                    role;\n\n                that.pane = that.options.pane;\n                if (that.pane) {\n                    that._isMobile = true;\n                }\n\n                if (!setUI) {\n                    role = ui || roles[that.type];\n                }\n\n                if (that._isMobile) {\n                    that._createMobileForm(role);\n                } else {\n                    that._createForm(role);\n                }\n\n                that.form\n                    .on(\"submit\" + NS, that._submit.bind(that))\n                    .on(\"reset\" + NS, that._reset.bind(that));\n\n                if (setUI) {\n                    that.form.find(\".k-input-inner\")\n                        .removeClass(\"k-input-inner\")\n                        .each(function() {\n                            ui($(this));\n                        });\n                } else {\n                    that.form\n                        .find(\".k-input-inner[\" + attrRole + \"]\")\n                        .removeClass(\"k-input-inner\");\n\n                    that.form\n                        .find(\".k-input-inner:not([data-role]):not(.k-numerictextbox>.k-input-inner)\")\n                        .wrap(\"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'></span>\");\n                }\n\n                that.refresh();\n\n                that.trigger(INIT, { field: that.field, container: that.form });\n\n                if (that.options.cycleForm) {\n                    kendo.cycleForm(that.form);\n                }\n            },\n\n            _createForm: function(role) {\n                var that = this,\n                    options = that.options,\n                    operators = that.operators || {},\n                    type = that.type;\n\n                operators = operators[type] || options.operators[type];\n\n                that.form = $('<form title=\"' + encode(that.options.messages.title) + '\" class=\"k-filter-menu\"/>')\n                    .html(kendo.template(that._getTemplate())({\n                        field: that.field,\n                        format: options.format,\n                        ns: kendo.ns,\n                        messages: options.messages,\n                        extra: options.extra,\n                        operators: operators,\n                        type: type,\n                        role: role,\n                        values: convertItems(options.values),\n                        componentType: that.options.componentType\n                    }));\n\n                if (!options.appendToElement) {\n                    that.popup = that.form[POPUP]({\n                        anchor: that.link,\n                        copyAnchorStyles: false,\n                        open: that._open.bind(that),\n                        activate: that._activate.bind(that),\n                        close: function() {\n                            if (that.options.closeCallback) {\n                                that.options.closeCallback(that.element);\n                            }\n                        }\n                    }).data(POPUP);\n                } else {\n                    that.element.append(that.form);\n                    that.popup = that.element.closest(\".k-column-menu.k-popup\").data(POPUP);\n                }\n\n                that.form\n                    .on(\"keydown\" + NS, that._keydown.bind(that));\n            },\n\n            _getTemplate: function() {\n                var that = this,\n                    hasCustomTemplate = isFunction(that.options.ui);\n\n                if (that.type === 'boolean') {\n                    if (hasCustomTemplate) {\n                        return customBooleanTemplate;\n                    } else if (that.options.componentType === 'modern') {\n                        return modernBooleanTemplate;\n                    } else {\n                        return booleanTemplate;\n                    }\n                } else {\n                    return defaultTemplate;\n                }\n            },\n\n            _createMobileForm: function(role) {\n                var that = this,\n                    options = that.options,\n                    operators = that.operators || {},\n                    filterMenuGuid = kendo.guid(),\n                    type = that.type;\n\n                operators = operators[type] || options.operators[type];\n\n                that.form = $(\"<div />\")\n                    .html(kendo.template(type === \"boolean\" ? booleanMobileTemplate : defaultMobileTemplate)({\n                        field: that.field,\n                        title: options.title || that.field,\n                        format: options.format,\n                        ns: kendo.ns,\n                        messages: options.messages,\n                        extra: options.extra,\n                        operators: operators,\n                        filterMenuGuid: filterMenuGuid,\n                        type: type,\n                        role: role,\n                        inputType: mobileRoles[type],\n                        values: convertItems(options.values)\n                    }));\n\n                that.view = that.pane.append(that.form.html());\n                that.form = that.view.element.find(\"form\");\n\n                that.view.element\n                    .on(\"click\", \".k-header-done\", function(e) {\n                        that.form.submit();\n                        e.preventDefault();\n                    })\n                    .on(\"click\", \".k-header-cancel\", function(e) {\n                        that._closeForm();\n                        e.preventDefault();\n                    })\n                    .on(\"click\", \".k-clear\", function(e) {\n                        that._mobileClear();\n                        e.preventDefault();\n                    });\n\n                that.view.bind(\"showStart\", function() {\n                    that.refresh();\n                });\n            },\n\n            _createLink: function() {\n                var that = this,\n                    element = that.element,\n                    appendTarget = that.appendTo.length ? element.find(that.appendTo) : element,\n                    options = that.options,\n                    title = kendo.format(options.messages.buttonTitle, that.options.title || that.field),\n                    link;\n\n                if (options.appendToElement) {\n                    return;\n                }\n\n                link = element.addClass(\"k-filterable\").find(\".k-grid-filter-menu\");\n\n                if (!link[0]) {\n                    link = appendTarget\n                        .append('<a class=\"k-grid-filter-menu k-grid-header-menu\" href=\"#\" aria-hidden=\"true\" title=\"' +\n                            title + '\" >' + kendo.ui.icon(\"filter\") + '</a>')\n                        .find(\".k-grid-filter-menu\");\n                }\n\n                link.attr(\"tabindex\", -1)\n                    .on(\"click\" + NS, that._click.bind(that));\n\n                return link;\n            },\n\n            refresh: function() {\n                var that = this,\n                    expression = that.dataSource.filter() || { filters: [], logic: \"and\" };\n\n                var defaultFilters = [ that._defaultFilter() ];\n                var defaultOperator = that._defaultFilter().operator;\n                if (that.options.extra || (defaultOperator !== \"isnull\" && defaultOperator !== \"isnullorempty\" && defaultOperator !== \"isnotnullorempty\" && defaultOperator !== \"isnotnull\" && defaultOperator !== \"isempty\" && defaultOperator !== \"isnotempty\")) {\n                    defaultFilters.push(that._defaultFilter());\n                }\n\n                that.filterModel = kendo.observable({\n                    logic: \"and\",\n                    filters: defaultFilters\n                });\n\n                if (that.form) {\n                    //NOTE: binding the form element directly causes weird error in IE when grid is bound through MVVM and column is sorted\n                    kendo.bind(that.form.children().first(), that.filterModel);\n\n                    if (that.options.componentType === \"modern\" && that.options.extra && that.type !== \"boolean\" && !that._isMobile) {\n                        that.filterModel.bind(\"change\", function() {\n                            var roleAttribute = kendo.attr(\"role\");\n                            var buttongroup = that.form.find(\"[\" + roleAttribute + \"='buttongroup']\").data('kendoButtonGroup');\n                            var index = this.logic === \"and\" ? 0 : 1;\n\n                            buttongroup.select(buttongroup.element.children().eq(index));\n                        });\n                        that.filterModel.set(\"onLogicChange\",that._logicChangeHandler);\n                    }\n                }\n\n                if (that._bind(expression)) {\n                    that.link.addClass(\"k-active\");\n                } else {\n                    that.link.removeClass(\"k-active\");\n                }\n            },\n\n            _logicChangeHandler: function(e) {\n                var valueAttribute = kendo.attr('value');\n                var logic = e.sender.current().attr(valueAttribute);\n\n                this.set('logic', logic);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                if (that.form) {\n                    kendo.unbind(that.form);\n                    kendo.destroy(that.form);\n                    that.form.off(NS);\n                    if (that.popup) {\n                        that.popup.destroy();\n                        that.popup = null;\n                    }\n                    that.form = null;\n                }\n\n                if (that.view) {\n                    that.view.purge();\n                    that.view = null;\n                }\n\n                that.link.off(NS);\n\n                if (that._refreshHandler) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler);\n                    that.dataSource = null;\n                }\n\n                that.element = that.link = that._refreshHandler = that.filterModel = null;\n            },\n\n            _bind: function(expression) {\n                var that = this,\n                    filters = expression.filters,\n                    idx,\n                    length,\n                    found = false,\n                    current = 0,\n                    filterModel = that.filterModel,\n                    currentFilter,\n                    filter;\n\n                for (idx = 0, length = filters.length; idx < length; idx++) {\n                    filter = filters[idx];\n                    if (filter.field == that.field) {\n                        filterModel.set(\"logic\", expression.logic);\n\n                        currentFilter = filterModel.filters[current];\n                        if (!currentFilter) {\n                            filterModel.filters.push({ field: that.field });\n                            currentFilter = filterModel.filters[current];\n                        }\n                        currentFilter.set(\"value\", that._parse(filter.value));\n                        currentFilter.set(\"operator\", filter.operator);\n\n                        current++;\n                        found = true;\n                    } else if (filter.filters) {\n                        found = found || that._bind(filter);\n                    }\n                }\n\n                return found;\n            },\n\n            _stripFilters: function(filters) {\n               return $.grep(filters, function(filter) {\n                   return (filter.value !== \"\" && filter.value != null) ||\n                   (filter.operator === \"isnull\" || filter.operator === \"isnotnull\" ||\n                       filter.operator === \"isempty\" || filter.operator === \"isnotempty\" ||\n                       filter.operator == \"isnullorempty\" || filter.operator == \"isnotnullorempty\");\n                });\n            },\n\n            _merge: function(expression) {\n                var that = this,\n                    logic = expression.logic || \"and\",\n                    filters = this._stripFilters(expression.filters),\n                    filter,\n                    result = that.dataSource.filter() || { filters: [], logic: \"and\" },\n                    idx,\n                    length;\n\n                removeFiltersForField(result, that.field);\n\n                for (idx = 0, length = filters.length; idx < length; idx++) {\n                    filter = filters[idx];\n                    filter.value = that._parse(filter.value);\n                }\n\n                if (filters.length) {\n                    if (result.filters.length) {\n                        expression.filters = filters;\n\n                        if (result.logic !== \"and\") {\n                            result.filters = [ { logic: result.logic, filters: result.filters }];\n                            result.logic = \"and\";\n                        }\n\n                        if (filters.length > 1) {\n                            result.filters.push(expression);\n                        } else {\n                            result.filters.push(filters[0]);\n                        }\n                    } else {\n                        result.filters = filters;\n                        result.logic = logic;\n                    }\n                }\n\n                return result;\n            },\n\n            filter: function(expression) {\n                var filters = this._stripFilters(expression.filters);\n                if (filters.length && this.trigger(\"change\", {\n                        filter: { logic: expression.logic, filters: filters },\n                        field: this.field\n                    })) {\n\n                    return;\n                }\n\n                expression = this._merge(expression);\n\n                if (expression.filters.length) {\n                    this.dataSource.filter(expression);\n                }\n            },\n\n            clear: function(expression) {\n                var that = this;\n                expression = expression || $.extend(true, {}, { filters: [] }, that.dataSource.filter()) || { filters: [] };\n\n                if (this.trigger(\"change\", { filter: null, field: that.field })) {\n                    return;\n                }\n\n                that._removeFilter(expression);\n            },\n\n            _mobileClear: function() {\n                var that = this;\n                var viewElement = that.view.element;\n\n                if (that.type === \"boolean\") {\n                    var booleanRadioButton = viewElement.find(\"[type='radio']:checked\");\n                    var booleanRadioButtonValue = booleanRadioButton.val();\n\n                    booleanRadioButton.val(\"\");\n                    booleanRadioButton.trigger(\"change\");\n                    booleanRadioButton.val(booleanRadioButtonValue);\n                    booleanRadioButton.prop(\"checked\", false);\n                } else {\n                    var operatorSelects = viewElement.find(\"select\");\n\n                    operatorSelects.each(function(i, e) {\n                        var input = $(e);\n\n                        input.val(input.find(\"option\").first().val());\n                        input.trigger(\"change\");\n                    });\n\n                    if (that.type === \"string\" || that.type === \"date\" || that.type === \"number\") {\n                        var valueInputs = viewElement.find(\".k-value-input\");\n\n                        valueInputs.each(function(i, e) {\n                            var input = $(e);\n\n                            input.val(\"\");\n                            input.trigger(\"change\");\n                        });\n                    }\n\n                    if (that.options.extra) {\n                        var andLogicRadio = viewElement.find(\"[name=logic]\").first();\n\n                        andLogicRadio.prop(\"checked\", true);\n                        andLogicRadio.trigger(\"change\");\n                    }\n                }\n            },\n\n            _removeFilter: function(expression) {\n                var that = this;\n                expression.filters = $.grep(expression.filters, function(filter) {\n                    if (filter.filters) {\n                        filter.filters = clearFilter(filter.filters, that.field);\n\n                        return filter.filters.length;\n                    }\n\n                    return filter.field != that.field;\n                });\n\n                if (!expression.filters.length) {\n                    expression = null;\n                }\n\n                that.dataSource.filter(expression);\n            },\n\n            _submit: function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                var expression = this.filterModel.toJSON();\n                var containsFilters = $.grep(expression.filters, function(filter) {\n                    return filter.value !== \"\" && filter.value !== null;\n                });\n\n                if (this._checkForNullOrEmptyFilter(expression) || (containsFilters && containsFilters.length)) {\n                    this.filter(expression);\n                } else {\n                    var currentExpression = this.dataSource.filter();\n\n                    if (currentExpression) {\n                        currentExpression.filters.push(expression);\n                        expression = currentExpression;\n                    }\n                    this.clear(expression);\n                }\n\n                this._closeForm();\n            },\n\n            _checkForNullOrEmptyFilter: function(expression) {\n                if (!expression || !expression.filters || !expression.filters.length) {\n                    return false;\n                }\n                var firstNullOrEmpty = false;\n                var secondNullOrEmpty = false;\n                var operator;\n\n                if (expression.filters[0]) {\n                    operator = expression.filters[0].operator;\n                    firstNullOrEmpty = operator == \"isnull\" || operator == \"isnotnull\" || operator == \"isnotempty\" ||\n                        operator == \"isempty\" || operator == \"isnullorempty\" || operator == \"isnotnullorempty\";\n                }\n                if (expression.filters[1]) {\n                    operator = expression.filters[1].operator;\n                    secondNullOrEmpty = operator == \"isnull\" || operator == \"isnotnull\" || operator == \"isnotempty\" ||\n                        operator == \"isempty\" || operator == \"isnullorempty\" || operator == \"isnotnullorempty\";\n                }\n\n                return (!this.options.extra && firstNullOrEmpty) || (this.options.extra && (firstNullOrEmpty || secondNullOrEmpty));\n            },\n\n            _reset: function() {\n                this.clear();\n\n                if (this.options.search && this.container) {\n                    this.container.find(\"label\").parent().show();\n                }\n                this._closeForm();\n            },\n\n            _closeForm: function() {\n                if (this._isMobile) {\n                    this.pane.navigate(\"\", this.options.animations.right);\n                } else {\n                    this.popup.close();\n                }\n            },\n\n            _click: function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                if (!this.popup && !this.pane) {\n                    this._init();\n                }\n\n                if (this._isMobile) {\n                    this.pane.navigate(this.view, this.options.animations.left);\n                } else {\n                    this.popup.toggle();\n                }\n            },\n\n            _open: function() {\n                var popup;\n\n                $(\".k-filter-menu\").not(this.form).each(function() {\n                    popup = $(this).data(POPUP);\n                    if (popup) {\n                        popup.close();\n                    }\n                });\n            },\n\n            _activate: function() {\n                this.form.find(\":kendoFocusable\").first().trigger(\"focus\");\n\n                this.trigger(OPEN, { field: this.field, container: this.form });\n            },\n\n            _keydown: function(e) {\n                var target = $(e.target),\n                    instance;\n\n                if (e.keyCode == kendo.keys.ESC) {\n                    instance = kendo.widgetInstance(target.find(\"select\"));\n\n                    if (target.hasClass(\"k-picker\") &&\n                        instance &&\n                        instance.popup.visible()) {\n                            e.stopPropagation();\n                            return;\n                    }\n\n                    target.closest(\".k-popup\").getKendoPopup().close();\n                }\n            },\n\n            events: [ INIT, \"change\", OPEN ],\n\n            options: {\n                name: \"FilterMenu\",\n                extra: true,\n                appendToElement: false,\n                type: \"string\",\n                operators: {\n                    string: {\n                        eq: EQ,\n                        neq: NEQ,\n                        startswith: \"Starts with\",\n                        contains: \"Contains\",\n                        doesnotcontain: \"Does not contain\",\n                        endswith: \"Ends with\",\n                        isnull: \"Is null\",\n                        isnotnull: \"Is not null\",\n                        isempty: \"Is empty\",\n                        isnotempty: \"Is not empty\",\n                        isnullorempty: \"Has no value\",\n                        isnotnullorempty: \"Has value\"\n                    },\n                    number: {\n                        eq: EQ,\n                        neq: NEQ,\n                        gte: \"Is greater than or equal to\",\n                        gt: \"Is greater than\",\n                        lte: \"Is less than or equal to\",\n                        lt: \"Is less than\",\n                        isnull: \"Is null\",\n                        isnotnull: \"Is not null\"\n                    },\n                    date: {\n                        eq: EQ,\n                        neq: NEQ,\n                        gte: \"Is after or equal to\",\n                        gt: \"Is after\",\n                        lte: \"Is before or equal to\",\n                        lt: \"Is before\",\n                        isnull: \"Is null\",\n                        isnotnull: \"Is not null\"\n                    },\n                    enums: {\n                        eq: EQ,\n                        neq: NEQ,\n                        isnull: \"Is null\",\n                        isnotnull: \"Is not null\"\n                    }\n                },\n                messages: {\n                    info: \"Show items with value that:\",\n                    title: \"Show items with value that:\",\n                    isTrue: \"is true\",\n                    isFalse: \"is false\",\n                    filter: \"Filter\",\n                    clear: \"Clear\",\n                    and: \"And\",\n                    or: \"Or\",\n                    selectValue: \"-Select value-\",\n                    operator: \"Operator\",\n                    value: \"Value\",\n                    additionalValue: \"Additional value\",\n                    additionalOperator: \"Additional operator\",\n                    logic: \"Filters logic\",\n                    cancel: \"Cancel\",\n                    done: \"Done\",\n                    into: \"in\",\n                    buttonTitle: \"{0} filter column settings\"\n                },\n                animations: {\n                    left: \"slide\",\n                    right: \"slide:right\"\n                },\n                componentType: 'classic',\n                cycleForm: true,\n                appendTo: null\n            }\n        });\n\n        var multiCheckNS = \".kendoFilterMultiCheck\";\n\n        function filterValuesForField(expression, field) {\n\n            if (expression.filters) {\n                expression.filters = $.grep(expression.filters, function(filter) {\n                    filterValuesForField(filter, field);\n                    if (filter.filters) {\n                        return filter.filters.length;\n                    } else {\n                        return filter.field == field && filter.operator == \"eq\";\n                    }\n                });\n            }\n        }\n\n        function flatFilterValues(expression) {\n            if (expression.logic == \"and\" && expression.filters.length > 1) {\n                return [];\n            }\n            if (expression.filters) {\n                return $.map(expression.filters, function(filter) {\n                    return flatFilterValues(filter);\n                });\n            } else if (expression.value !== undefined$1) {\n                return [expression.value];\n            } else {\n                return [];\n            }\n        }\n\n        function distinct(items, field) {\n            var getter = kendo.getter(field, true),\n                result = [],\n                index = 0,\n                seen = {};\n\n            while (index < items.length) {\n                var item = items[index++],\n                    text = getter(item);\n\n                if (text !== undefined$1 && !seen.hasOwnProperty(text)) {\n                    result.push(item);\n                    seen[text] = true;\n                }\n            }\n\n            return result;\n        }\n\n        function removeDuplicates(dataSelector, dataTextField) {\n\n            return function(e) {\n                var items = dataSelector(e);\n\n                return distinct(items, dataTextField);\n            };\n        }\n\n        var DataSource = kendo.data.DataSource;\n\n        var multiCheckMobileTemplate = ({ field, title, ns, messages, search, checkAll }) =>\n            `<div data-${ns}role=\"view\" class=\"k-grid-filter-menu\">` +\n                `<div data-${ns}role=\"header\" class=\"k-header\">` +\n                    `<a href=\"#\" class=\"k-header-cancel k-link\" title=\"${messages.cancel}\" ` +\n                    `aria-label=\"${messages.cancel}\">${kendo.ui.icon(\"chevron-left\")}</a>` +\n                    `${messages.filter} ${messages.into} ${title}` +\n                    `<a href=\"#\" class=\"k-header-done k-link\" title=\"${messages.done}\" ` +\n                    `aria-label=\"${messages.done}\">${kendo.ui.icon(\"check\")}</a>` +\n                '</div>' +\n                '<form class=\"k-filter-menu\">' +\n                    '<ul class=\"k-reset\">' +\n                        (search ?\n                        '<li class=\"k-space-right\">' +\n                            '<span class=\"k-searchbox k-textbox k-input k-input-md k-rounded-md k-input-solid\">' +\n                                `<input class=\"k-input-inner\" placeholder=\"${messages.search}\" title=\"${messages.search}\" autocomplete=\"${AUTOCOMPLETEVALUE}\"  />` +\n                                `<span class=\"k-input-suffix\">${kendo.ui.icon(\"search\")}` +\n                            '</span>' +\n                        '</li>'\n                        : '') +\n                        '<li class=\"k-filter-tools\">' +\n                            `<span ${checkAll ? \"\" : `${kendo.attr(\"style-visibility\")}=\"hidden\"`} class=\"k-label k-select-all\" title=\"${messages.checkAll}\" ` +\n                                `aria-label=\"${messages.checkAll}\">${messages.checkAll}</span>` +\n                            `<span class=\"k-label k-clear-all\" title=\"${messages.clearAll}\" ` +\n                                `aria-label=\"${messages.clearAll}\">${messages.clearAll}</span>` +\n                        '</li>' +\n                        (messages.selectedItemsFormat ?\n                        '<li>' +\n                            '<div class=\"k-filter-selected-items\"></div>' +\n                        '</li>'\n                        : '') +\n                        '<li>' +\n                            '<ul class=\"k-multicheck-wrap k-listgroup k-listgroup-flush\"></ul>' +\n                        '</li>' +\n                    '</ul>' +\n                '</form>' +\n            '</div>';\n\n        var FilterMultiCheck = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n                options = this.options;\n                this.element = $(element);\n                var columnHeader;\n                var field = this.field = this.options.field || this.element.attr(kendo.attr(\"field\"));\n                var checkSource = options.checkSource;\n                if (this._foreignKeyValues()) {\n                    this.checkSource = DataSource.create(options.values);\n                    this.checkSource.fetch();\n                } else if (options.forceUnique) {\n                    checkSource = $.extend(true, {}, options.dataSource.options);\n                    delete checkSource.pageSize;\n\n                    this.checkSource = DataSource.create(checkSource);\n                    this.checkSource.reader.data = removeDuplicates(this.checkSource.reader.data, this.field);\n                } else {\n                    this.checkSource = DataSource.create(checkSource);\n                }\n\n                this.dataSource = options.dataSource;\n                this.model = this.dataSource.reader.model;\n\n                this._parse = function(value) {\n                     return value + \"\";\n                };\n\n                if (this.model && this.model.fields) {\n                    field = this.model.fields[this.field];\n\n                    if (field) {\n                        if (field.type == \"number\") {\n                            this._parse = function(value) {\n                                if (typeof value === \"string\" && (value.toLowerCase() === \"null\" || this._foreignKeyValues() && value === \"\")) {\n                                    return null;\n                                }\n                                return parseFloat(value);\n                            };\n                        } else if (field.parse) {\n                            this._parse = field.parse.bind(field);\n                        }\n                        this.type = field.type || \"string\";\n                    }\n                }\n\n                columnHeader = $(element.closest(COLUMN_HEADER_SELECTOR));\n                if (columnHeader.length) {\n                    this.appendTo = columnHeader.find(options.appendTo);\n                } else {\n                    this.appendTo = $(options.appendTo);\n                }\n\n                if (!options.appendToElement) {\n                    this._createLink();\n                } else {\n                    this._init();\n                }\n\n                this._refreshHandler = this.refresh.bind(this);\n                this.dataSource.bind(CHANGE, this._refreshHandler);\n\n            },\n            _createLink: function() {\n                var element = this.element;\n                var appendTarget = this.appendTo.length ? element.find(this.appendTo) : element;\n                var link = element.addClass(\"k-filterable\").find(\".k-grid-filter-menu\");\n                var title = encode(kendo.format(this.options.messages.buttonTitle, this.options.title || this.field));\n\n                if (!link[0]) {\n                    link = appendTarget\n                        .append('<a class=\"k-grid-filter-menu k-grid-header-menu\" href=\"#\" title=\"' +\n                            title + '\" aria-hidden=\"true\"' +\n                            '\">' + kendo.ui.icon(\"filter\") + '</a>')\n                        .find(\".k-grid-filter-menu\");\n                }\n\n                this._link = link.attr(\"tabindex\", -1)\n                    .on(\"click\" + NS, this._click.bind(this));\n            },\n            _init: function() {\n                var that = this;\n                var forceUnique = this.options.forceUnique;\n\n                var options = this.options;\n                this.pane = options.pane;\n\n                if (this.pane) {\n                    this._isMobile = true;\n                }\n\n                this._createForm();\n\n                if (this._foreignKeyValues()) {\n                    this.refresh();\n                } else if (forceUnique && !this.checkSource.options.serverPaging && this.dataSource.data().length) {\n                    this.checkSource.data(distinct(this.dataSource.data(),this.field));\n                    this.refresh();\n                } else {\n                    this._attachProgress();\n\n                    this.checkSource.fetch(function() {\n                        that.refresh.call(that);\n                    });\n                }\n\n                if (!this.options.forceUnique) {\n                    this.checkChangeHandler = function() {\n                        that.container.empty();\n                        that.refresh();\n                    };\n                    this.checkSource.bind(CHANGE, this.checkChangeHandler);\n                }\n\n                this.form.on(\"keydown\" + multiCheckNS, this._keydown.bind(this))\n                            .on(\"submit\" + multiCheckNS, this._filter.bind(this))\n                            .on(\"reset\" + multiCheckNS, this._reset.bind(this));\n\n                this.trigger(INIT, { field: this.field, container: this.form });\n            },\n\n            _attachProgress: function() {\n                var that = this;\n\n                this._progressHandler = function() {\n                    ui.progress(that.container, true);\n                };\n\n                this._progressHideHandler = function() {\n                    ui.progress(that.container, false);\n                };\n\n                this.checkSource\n                    .bind(\"progress\", this._progressHandler)\n                    .bind(\"change\", this._progressHideHandler);\n            },\n\n            _input: function() {\n                var that = this;\n                that._clearTypingTimeout();\n                that._typingTimeout = setTimeout(function() { that.search(); }, 100);\n            },\n\n            _clearSearch: function() {\n                var that = this;\n                that.searchTextBox.val(\"\");\n                that.search();\n            },\n\n            _clearTypingTimeout: function() {\n                if (this._typingTimeout) {\n                    clearTimeout(this._typingTimeout);\n                    this._typingTimeout = null;\n                }\n            },\n\n            search: function() {\n                var ignoreCase = this.options.ignoreCase;\n                var searchString = this.searchTextBox[0].value;\n                var labels = this.container.find(\"label\");\n\n                if (ignoreCase) {\n                    searchString = searchString.toLowerCase();\n                }\n                var i = 0;\n                if (this.options.checkAll && labels.length)\n                {\n                    if (!this._isMobile) {\n                        labels[0].parentNode.style.display = searchString ? \"none\" : \"\";\n                        i++;\n                    } else {\n                        this.view.element.find(\".k-select-all\")[0].style.visibility = searchString ? \"hidden\" : \"\";\n                    }\n                }\n\n                while (i < labels.length) {\n                    var label = labels[i];\n                    var labelText = label.textContent || label.innerText;\n                    if (ignoreCase) {\n                        labelText = labelText.toLowerCase();\n                    }\n                    label.parentNode.style.display = labelText.indexOf(searchString) >= 0 ? \"\" : \"none\";\n                    i++;\n                }\n            },\n            _activate: function() {\n                this.form.find(\":kendoFocusable\").first().trigger(\"focus\");\n\n                this.trigger(OPEN, { field: this.field, container: this.form });\n            },\n            _createForm: function() {\n                var options = this.options;\n                var html = \"\";\n                var that = this;\n\n                if (!this._isMobile) {\n                    html += \"<div class='k-filter-menu-container'>\";\n                    if (options.search) {\n                        html += \"<span class='k-searchbox k-textbox k-input k-input-md k-rounded-md k-input-solid'>\" +\n                                    kendo.ui.icon(\"search\") +\n                                    \"<input class='k-input-inner' type='text' placeholder='\" + encode(options.messages.search) + \"' />\" +\n                                    \"<span class='k-input-suffix'>\" +\n                                        \"<span class='k-clear-value'>\" + kendo.ui.icon(\"x\") + \"</span>\" +\n                                    \"</span>\" +\n                                \"</span>\";\n                    }\n                    html += \"<ul class='k-reset k-multicheck-wrap'></ul>\";\n                    if (options.messages.selectedItemsFormat) {\n                        html += \"<div class='k-filter-selected-items'>\" + kendo.format(options.messages.selectedItemsFormat, 0) + \"</div>\";\n                    }\n                    html += \"<div class='k-actions'>\";\n                    html += \"<button type='submit' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'><span class='k-button-text'>\" + encode(options.messages.filter) + \"</span></button>\";\n                    html += \"<button type='reset' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'><span class='k-button-text'>\" + encode(options.messages.clear) + \"</span></button>\";\n                    html += \"</div>\";\n                    html += \"</div>\";\n\n                    this.form = $('<form class=\"k-filter-menu\"/>').html(html);\n                    this.container = this.form.find(\".k-multicheck-wrap\");\n                }\n                if (this._isMobile) {\n                    let checkMobileHtml = $(kendo.template(multiCheckMobileTemplate)({\n                        field: that.field,\n                        title: options.title || that.field,\n                        ns: kendo.ns,\n                        messages: options.messages,\n                        search: options.search,\n                        checkAll: options.checkAll\n                    }));\n\n                    kendo.applyStylesFromKendoAttributes(checkMobileHtml, [\"visibility\"]);\n                    that.form = $(\"<div />\").append(checkMobileHtml);\n\n                    that.view = that.pane.append(that.form.html());\n                    that.form = that.view.element.find(\"form\");\n                    var element = this.view.element;\n                    this.container = element.find(\".k-multicheck-wrap\");\n\n                    element\n                        .on(\"click\", \".k-header-done\", function(e) {\n                            that.form.submit();\n                            e.preventDefault();\n                        })\n                        .on(\"click\", \".k-header-cancel\", function(e) {\n                            that._closeForm();\n                            e.preventDefault();\n                        })\n                        .on(\"click\", \".k-clear-all\", function(e) {\n                            that._mobileCheckAll(false);\n                            e.preventDefault();\n                        })\n                        .on(\"click\", \".k-select-all\", function(e) {\n                            that._mobileCheckAll(true);\n                            e.preventDefault();\n                        });\n\n                    that.view.bind(\"showStart\", function() {\n                        that.refresh();\n                    });\n                } else {\n                    if (!options.appendToElement) {\n                        that.popup = that.form.kendoPopup({\n                            anchor: that._link,\n                            copyAnchorStyles: false,\n                            open: that._open.bind(that),\n                            activate: that._activate.bind(that),\n                            close: function() {\n                                if (that.options.closeCallback) {\n                                    that.options.closeCallback(that.element);\n                                }\n                            }\n                        }).data(POPUP);\n                    } else {\n                        this.popup = this.element.closest(\".k-column-menu.k-popup\").data(POPUP);\n                        this.element.append(this.form);\n                    }\n                }\n\n                if (options.search) {\n                    this.searchTextBox = this.form.find(\".k-searchbox input\");\n                    this.searchTextBox.on(\"input\" + multiCheckNS, this._input.bind(this));\n                    this.clearSearchButton = this.form.find(\".k-searchbox .k-clear-value\");\n                    this.clearSearchButton.on(\"click\" + multiCheckNS, this._clearSearch.bind(this));\n                }\n            },\n            _open: function() {\n                var popup;\n\n                $(\".k-filter-menu\").not(this.form).each(function() {\n                    popup = $(this).data(POPUP);\n                    if (popup) {\n                        popup.close();\n                    }\n                });\n            },\n            createCheckAllItem: function() {\n                var options = this.options;\n                var template = kendo.template(options.itemTemplate({ field: \"all\", mobile: this._isMobile }));\n                var checkAllContainer = $(template({ all: options.messages.checkAll }));\n                this.container.prepend(checkAllContainer);\n\n                checkAllContainer.addClass(\"k-check-all-wrap\");\n                this.checkBoxAll = checkAllContainer.find(\":checkbox\").eq(0).addClass(\"k-check-all\");\n                this.checkAllHandler = this.checkAll.bind(this);\n                this.checkBoxAll.on(CHANGE + multiCheckNS, this.checkAllHandler);\n            },\n            updateCheckAllState: function() {\n                if (this.options.messages.selectedItemsFormat) {\n                    this.form.find(\".k-filter-selected-items\").text(kendo.format(this.options.messages.selectedItemsFormat, this.container.find(\":checked:not(.k-check-all)\").length));\n                }\n                if (this.checkBoxAll) {\n                    var state = this.container.find(\":checkbox:not(.k-check-all)\").length == this.container.find(\":checked:not(.k-check-all)\").length;\n                    this.checkBoxAll.prop(\"checked\", state);\n                }\n            },\n            createIsNullItem: function() {\n                var options = this.options;\n                var template = kendo.template(options.itemTemplate({ field: \"isNull\", mobile: this._isMobile, valueField: \"value\" }));\n                var isNullContainer = $(template({ isNull: options.messages.isNull, value: null }));\n                this.container.append(isNullContainer);\n            },\n            refresh: function(e) {\n                var forceUnique = this.options.forceUnique;\n                var dataSource = this.dataSource;\n                var filters = this.getFilterArray();\n\n                if (this._link) {\n                    this._link.toggleClass(\"k-active\", filters.length !== 0);\n                }\n\n                if (this.form) {\n                    if (e && forceUnique && e.sender === dataSource && !dataSource.options.serverPaging &&\n                         (e.action == \"itemchange\" || e.action == \"add\" || e.action == \"remove\" || (dataSource.options.autoSync && e.action === \"sync\")) &&\n                             !this._foreignKeyValues()) {\n                        this.checkSource.data(distinct(this.dataSource.data(),this.field));\n                        this.container.empty();\n                    }\n\n                    if (this.container.is(\":empty\")) {\n                        this.createCheckBoxes();\n                    }\n                    this.checkValues(filters);\n                    this.trigger(REFRESH);\n                }\n            },\n            getFilterArray: function() {\n                var expression = $.extend(true, {}, { filters: [], logic: \"and\" }, this.dataSource.filter());\n                filterValuesForField(expression, this.field);\n                var flatValues = flatFilterValues(expression);\n                return flatValues;\n            },\n            createCheckBoxes: function() {\n                var options = this.options;\n                var data;\n                var templateOptions = {\n                    field: this.field,\n                    format: options.format,\n                    mobile: this._isMobile,\n                    type: this.type\n                };\n                var boolDataFilter = booleanFilterHandler.bind(this);\n\n                if (!this.options.forceUnique) {\n                    data = this.checkSource.view();\n                } else if (this._foreignKeyValues()) {\n                    data = this.checkSource.data();\n                    templateOptions.valueField = \"value\";\n                    templateOptions.field = \"text\";\n                } else if (this.checkSource._isServerGrouped()) {\n                    data = distinct(this.checkSource._flatData(this.checkSource.data()), this.field);\n                } else {\n                    data = this.checkSource.data();\n                }\n\n                if (this.type === \"boolean\") {\n                    this.createIsNullItem();\n                    data = data.filter(boolDataFilter);\n                }\n\n                var template = kendo.template(options.itemTemplate(templateOptions));\n                var itemsHtml = kendo.render(template, data);\n\n                this.container.on(CHANGE + multiCheckNS, \":checkbox\", this.updateCheckAllState.bind(this));\n                this.container.prepend(itemsHtml);\n\n                if (options.checkAll && !this._isMobile) {\n                    this.createCheckAllItem();\n                }\n            },\n            checkAll: function() {\n                var state = this.checkBoxAll.is(\":checked\");\n                this.container.find(\":checkbox\").prop(\"checked\", state);\n            },\n            checkValues: function(values) {\n                var that = this;\n\n                $($.grep(this.container.find(\":checkbox\").prop(\"checked\", false), function(ele) {\n                    var found = false;\n                    if ($(ele).is(\".k-check-all\")) {\n                        return;\n                    }\n                    var checkBoxVal = that._parse($(ele).val());\n                    for (var i = 0; i < values.length; i++) {\n                        if (that.type == \"date\") {\n                            if (values[i] && checkBoxVal) {\n                                found = values[i].getTime() == checkBoxVal.getTime();\n                            } else if (values[i] === null && checkBoxVal === null) {\n                                found = true;\n                            } else {\n                                found = false;\n                            }\n                        } else {\n                            found = values[i] == checkBoxVal;\n                        }\n                        if (found) {\n                            return found;\n                        }\n                    }\n                })).prop(\"checked\", true);\n                this.updateCheckAllState();\n            },\n\n            _mobileCheckAll: function(state) {\n                var that = this;\n                var checkboxes = that.container.find(\":checkbox\");\n\n                checkboxes.each(function(i, e) {\n                    var checkbox = $(e);\n\n                    checkbox.prop(\"checked\", state);\n                    checkbox.trigger(\"change\");\n                });\n            },\n\n            _filter: function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                var expression = { logic: \"or\" };\n\n                var that = this;\n                expression.filters = $.map(this.form.find(\":checkbox:checked:not(.k-check-all)\"), function(item) {\n                    return { value: $(item).val(), operator: \"eq\", field: that.field };\n                });\n\n                if (this.trigger(\"change\", { filter: expression, field: that.field })) {\n                    return;\n                }\n\n                expression = this._merge(expression);\n                if (expression.filters.length) {\n                    this.dataSource.filter(expression);\n                } else {\n                    that._removeFilter(that.dataSource.filter() || { filters: [] });\n                }\n\n                this._closeForm();\n            },\n\n            _stripFilters: function(filters) {\n               return $.grep(filters, function(filter) {\n                    return filter.value != null;\n                });\n            },\n\n            _foreignKeyValues: function() {\n                var options = this.options;\n                return options.values && !options.checkSource;\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                if (that.form) {\n                    kendo.unbind(that.form);\n                    kendo.destroy(that.form);\n                    that.form.off(multiCheckNS);\n                    if (that.popup) {\n                        that.popup.destroy();\n                        that.popup = null;\n                    }\n                    that.form = null;\n                    if (that.container) {\n                        that.container.off(multiCheckNS);\n                        that.container = null;\n                    }\n\n                    if (that.checkBoxAll) {\n                        that.checkBoxAll.off(multiCheckNS);\n                    }\n                }\n\n                if (that.view) {\n                    that.view.purge();\n                    that.view = null;\n                }\n\n                if (that._link) {\n                    that._link.off(NS);\n                }\n\n                if (that._refreshHandler) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler);\n                    that.dataSource = null;\n                }\n\n                if (that.checkChangeHandler) {\n                    that.checkSource.unbind(CHANGE, that.checkChangeHandler);\n                }\n\n                if (that._progressHandler) {\n                    that.checkSource.unbind(\"progress\", that._progressHandler);\n                }\n\n                if (that._progressHideHandler) {\n                    that.checkSource.unbind(\"change\", that._progressHideHandler);\n                }\n\n                this._clearTypingTimeout();\n\n                if (this.searchTextBox) {\n                    this.searchTextBox.off(multiCheckNS);\n                    this.searchTextBox = null;\n                }\n\n                if (this.clearSearchButton) {\n                    this.clearSearchButton.off(multiCheckNS);\n                    this.clearSearchButton = null;\n                }\n\n                that.element = that.checkSource = that.container = that.checkBoxAll = that._link = that._refreshHandler = that.checkAllHandler = null;\n            },\n            options: {\n                name: \"FilterMultiCheck\",\n                itemTemplate: ({ field, mobile, valueField, format, type }) => {\n                    var valueFormat = \"\";\n\n                    if (valueField === undefined$1) {\n                        valueField = field;\n                    }\n\n                    if (type == \"date\") {\n                        valueFormat = \":yyyy-MM-ddTHH:mm:sszzz\";\n                    }\n\n                    if (mobile) {\n                        return (data) =>\n                            \"<li class='k-item k-listgroup-item'>\" +\n                                \"<label class='k-label k-listgroup-form-row k-checkbox-label'>\" +\n                                    `<span class='k-listgroup-form-field-label k-item-title '>${encode(kendo.format(format ? format : \"{0}\", kendo.getter(field)(data)))}</span>` +\n                                    '<span class=\"k-listgroup-form-field-wrapper\">' +\n                                        `<input type='checkbox' class='k-checkbox k-checkbox-md k-rounded-md' value='${encode(kendo.format(`{0${valueFormat}}`, kendo.getter(valueField)(data)))}'/>` +\n                                    '</span>' +\n                                \"</label>\" +\n                            \"</li>\";\n                    }\n\n                    return (data) =>\n                        \"<li class='k-item'>\" +\n                            \"<label class='k-label k-checkbox-label'>\" +\n                                `<input type='checkbox' class='k-checkbox k-checkbox-md k-rounded-md' value='${encode(kendo.format(`{0${valueFormat}}`, kendo.getter(valueField)(data)))}'/>` +\n                                `<span>${encode(kendo.format(format ? format : \"{0}\", kendo.getter(field)(data)))}</span>` +\n                            \"</label>\" +\n                        \"</li>\";\n                },\n                checkAll: true,\n                search: false,\n                ignoreCase: true,\n                appendToElement: false,\n                messages: {\n                    checkAll: \"Select All\",\n                    isNull: \"is empty\",\n                    clearAll: \"Clear All\",\n                    clear: \"Clear\",\n                    filter: \"Filter\",\n                    search: \"Search\",\n                    cancel: \"Cancel\",\n                    selectedItemsFormat: \"{0} items selected\",\n                    done: \"Done\",\n                    into: \"in\",\n                    buttonTitle: \"{0} filter column settings\"\n                },\n                forceUnique: true,\n                animations: {\n                    left: \"slide\",\n                    right: \"slide:right\"\n                },\n                appendTo: null\n            },\n            events: [ INIT, REFRESH, \"change\", OPEN ]\n        });\n\n        function booleanFilterHandler(item) {\n            return item[this.field] !== null;\n        }\n\n        $.extend(FilterMultiCheck.fn, {\n            _click: FilterMenu.fn._click,\n            _keydown: FilterMenu.fn._keydown,\n            _reset: FilterMenu.fn._reset,\n            _closeForm: FilterMenu.fn._closeForm,\n            _removeFilter: FilterMenu.fn._removeFilter,\n            clear: FilterMenu.fn.clear,\n\n            _merge: FilterMenu.fn._merge\n        });\n\n        ui.plugin(FilterMenu);\n        ui.plugin(FilterMultiCheck);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}