{"version":3,"sources":["raw-js/kendo.wizard.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendowizard","js","this","$","undefined$1","kendo","window","Widget","ui","extend","encode","htmlEncode","WIZARD","CLICK","ACTIVATE","SELECT","RESET","SUBMIT","PREVIOUS","NEXT","DONE","ERROR","CONTENTLOAD","FORM_VALIDATE_FAILED","HIDDEN","STEPPER_STEP_LINK","ARIA_SELECTED","ARIA_HIDDEN","ARIA_LABEL","BOTTOM","RIGHT","LEFT","DOT","ID","ROLE","DATA_WIZARD_PREFIX","wizardClasses","Step","Class","init","options","actionBar","_processButtons","_render","name","index","content","contentUrl","contentId","markupContainer","form","buttons","pager","selected","enabled","className","totalSteps","wizardId","formTag","messages","_defaultButtonsConfiguration","first","middle","last","_pagerTemplate","step","currentStep","of","_buttons","load","_ajaxRequest","resetButtons","buttonsContainer","element","find","destroy","remove","_buttonsContainer","wizard","triggerActivate","that","url","ajaxOptions","type","cache","dataType","data","error","xhr","status","_triggerError","complete","_triggerActivate","success","contentElement","html","_triggerContentLoad","e","ajax","_ariaAttributes","label","attr","_buttonFactory","buttonOptions","button","kendoButton","themeColor","primary","getKendoButton","buttonElement","text","click","bind","enable","position","_leftButtonsContainer","append","_rightButtonsContainer","push","addClass","map","_pager","_content","loadFromRemote","prepend","_form","formElement","hide","formOptions","buttonsTemplate","kendoForm","getKendoForm","show","_iterateButton","charAt","toUpperCase","slice","pagerData","template","buttonsOptions","defaultButtons","length","Wizard","fn","call","_wrapper","_createSteps","_stepper","_attachEvents","contentPosition","loadOnDemand","reloadOnSelect","validateForms","stepper","steps","reset","previous","next","done","events","wrapper","off","activeStep","enableStep","stepIndex","value","targetStep","isNaN","_steps","Number","insertAt","stepOptions","stepperStepOptions","alteredStep","numberOfSteps","_mapStepForStepper","is","forEach","i","splice","_insertStepElementAtIndex","_stepperAriaAttributes","_iterateAriaStep","stepsLength","currentStepIndex","_select","_selectStepper","removeAt","newSelectedStepIndex","stepContentElement","get","hasClass","select","clickBeforeSubmit","_doneClicked","_stepperSelectHandler","on","_resetClickHandler","_previousClickHandler","_nextClickHandler","_doneHandler","_changeStep","removeClass","removeAttr","_createStep","stepsFromMarkup","total","stepsFromMarkupTitles","children","title","textContent","toString","stepsContainer","stepsOptions","progress","empty","_refreshEditorWidgets","forms","validator","validate","preventDefault","trigger","sender","originalEvent","target","stepElement","after","_isEmpty","trim","stepperStep","ajaxLoad","validateOnPrevious","editorElements","getKendoEditor","refresh","targetLink","stepperElement","prependTo","stepperOptions","orientation","selectOnFocus","kendoKeydown","keyCode","keys","TAB","preventKendoKeydown","kendoStepper","getKendoStepper","wrapperId","stepperSteps","getIndex","plugin","jQuery"],"mappings":"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","file":"kendo.wizard.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.stepper.js'), require('kendo.button.js'), require('kendo.form.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.stepper', 'kendo.button', 'kendo.form'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendowizard = global.kendowizard || {}, global.kendowizard.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"wizard\",\n        name: \"Wizard\",\n        category: \"web\",\n        description: \"The Wizard widget serves as a container of stepped process.\",\n        depends: [ \"stepper\", \"button\", \"form\" ],\n        features: [{\n            id: \"wizard-form-dropdowns\",\n            name: \"DropDowns\",\n            description: \"Support for DropDown editors in Wizard From\",\n            depends: [ \"autocomplete\", \"combobox\", \"multiselect\", \"dropdowntree\", \"multicolumncombobox\" ]\n        }, {\n            id: \"wizard-form-datepickers\",\n            name: \"DatePickers\",\n            description: \"Support for DatePicker editors in Wizard From\",\n            depends: [ \"dateinput\", \"datepicker\", \"datetimepicker\", \"timepicker\" ]\n        }, {\n            id: \"wizard-form-inputs\",\n            name: \"Inputs\",\n            description: \"Support for Input editors in Wizard From\",\n            depends: [ \"numerictextbox\", \"maskedtextbox\", \"switch\", \"rating\", \"slider\", \"colorpicker\" ]\n        }, {\n            id: \"wizard-form-editor\",\n            name: \"Editor\",\n            description: \"Support for Editor editor in Wizard From\",\n            depends: [ \"editor\" ]\n        }]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n\n            WIZARD = \".kendoWizard\",\n\n            CLICK = \"click\",\n            ACTIVATE = \"activate\",\n            SELECT = \"select\",\n            RESET = \"reset\",\n            SUBMIT = \"submit\",\n            PREVIOUS = \"previous\",\n            NEXT = \"next\",\n            DONE = \"done\",\n            ERROR = \"error\",\n            CONTENTLOAD = \"contentLoad\",\n            FORM_VALIDATE_FAILED = \"formValidateFailed\",\n\n            HIDDEN = \"k-hidden\",\n            STEPPER_LIST = \"k-step-list\",\n            STEPPER_STEP_LINK = \"k-step-link\",\n\n\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_CONTROLS = \"aria-controls\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_LABEL = \"aria-label\",\n\n            VERTICAL = \"vertical\",\n            HORIZONTAL = \"horizontal\",\n            BOTTOM = \"bottom\",\n            RIGHT = \"right\",\n            LEFT = \"left\",\n\n            DOT = \".\",\n            SPACE = \" \",\n            DASH = \"-\",\n            ID = \"id\",\n            TABINDEX = \"tabindex\",\n            ROLE = \"role\",\n            DATA_WIZARD_PREFIX = \"data-wizard-\";\n\n        var wizardClasses = {\n            wizard: \"k-wizard\",\n            horizontalWizard: \"k-wizard-horizontal\",\n            verticalWizard: \"k-wizard-vertical\",\n            rightWizard: \"k-wizard-right\",\n            leftWizard: \"k-wizard-left\",\n            wizardStepsContainer: \"k-wizard-steps\",\n            wizardStep: \"k-wizard-step\",\n            wizardContent: \"k-wizard-content\",\n            wizardButtons: \"k-wizard-buttons\",\n            wizardLeftButtons: \"k-wizard-buttons-left\",\n            wizardRightButtons: \"k-wizard-buttons-right\",\n            wizardPager: \"k-wizard-pager\"\n        };\n\n        var Step = kendo.Class.extend({\n            init: function(options) {\n                this.options = extend({}, this.options, options);\n\n                if (this.options.actionBar) {\n                    this._processButtons();\n                }\n\n                this._render();\n            },\n\n            options: {\n                name: \"WizardStep\",\n                index: 0,\n                content: \"\",\n                contentUrl: null,\n                contentId: null,\n                markupContainer: null,\n                form: null,\n                actionBar: true,\n                buttons: [],\n                pager: true,\n                selected: false,\n                enabled: true,\n                className: \"\",\n                totalSteps: 1,\n                wizardId: \"wizard\",\n                formTag: \"form\",\n                messages: {}\n            },\n\n            _defaultButtonsConfiguration: {\n                first: [RESET,NEXT],\n                middle: [RESET,PREVIOUS,NEXT],\n                last: [RESET,PREVIOUS,DONE]\n            },\n\n            _pagerTemplate: ({ step, currentStep, of, totalSteps }) =>\n            '<span class=\"k-wizard-pager\">' +\n                `${encode(step)} ` +\n                `${encode(currentStep)} ` +\n                `${encode(of)} ` +\n                `${encode(totalSteps)}` +\n            '</span>',\n\n            buttons: function() {\n                return this._buttons;\n            },\n\n            load: function() {\n                if (this.options.contentUrl) {\n                    this._ajaxRequest();\n                }\n            },\n\n            resetButtons: function() {\n                var buttonsContainer = this.element.find(DOT + wizardClasses.wizardButtons);\n\n                kendo.destroy(buttonsContainer);\n                buttonsContainer.remove();\n\n                this.options.buttons = [];\n                this._processButtons();\n                this._buttonsContainer();\n            },\n\n            _ajaxRequest: function(wizard, triggerActivate) {\n                var that = this,\n                    url = that.options.contentUrl,\n                    data = {},\n                    element = that.element;\n\n                var ajaxOptions = {\n                    type: \"GET\",\n                    cache: false,\n                    url: url,\n                    dataType: \"html\",\n                    data: data,\n\n                    error: function(xhr, status) {\n                        if (wizard) {\n                            wizard._triggerError(xhr, status, that);\n                        }\n                    },\n\n                    complete: function() {\n                        if (wizard && triggerActivate) {\n                            wizard._triggerActivate(that);\n                        }\n                    },\n\n                    success: function(content) {\n                        var contentElement = element.find(DOT + wizardClasses.wizardContent);\n\n                        try {\n                            kendo.destroy(contentElement);\n                            contentElement.html(content);\n\n                            if (wizard) {\n                                wizard._triggerContentLoad(that);\n                            }\n                        } catch (e) {\n                            this.error(this.xhr, \"error\");\n                        }\n                    }\n                };\n\n                if (typeof url === \"object\") {\n                    ajaxOptions = $.extend(true, {}, ajaxOptions, url);\n                }\n\n                $.ajax(ajaxOptions);\n            },\n\n            _ariaAttributes: function() {\n                var element = this.element,\n                    options = this.options,\n                    messages = options.messages,\n                    label = messages.step + \" \" + (options.index + 1) + \" \" + messages.of + \" \" + options.totalSteps;\n\n                element.attr(ROLE, \"tabpanel\")\n                    .attr(TABINDEX, 0)\n                    .attr(ID, options.wizardId + DASH + options.index)\n                    .attr(ARIA_LABEL, label);\n            },\n\n            _buttonFactory: function(buttonOptions) {\n                var button = $(\"<button type='button'><span></span></button>\").kendoButton({\n                        themeColor: buttonOptions.primary ? \"primary\" : \"base\"\n                    }).getKendoButton(),\n                    buttonElement = button.element;\n\n                buttonElement.attr(DATA_WIZARD_PREFIX + buttonOptions.name, \"\");\n                buttonElement.find(\"span\").text(buttonOptions.text);\n\n                if (buttonOptions.click) {\n                    button.bind(CLICK, buttonOptions.click);\n                }\n                if (buttonOptions.enabled === false) {\n                    button.enable(false);\n                }\n\n                if (buttonOptions.position === LEFT) {\n                    this._leftButtonsContainer.append(buttonElement);\n                } else {\n                    this._rightButtonsContainer.append(buttonElement);\n                }\n\n                if (buttonOptions.name === \"done\" && this.options.formTag !== \"form\") {\n                    button.element.attr(\"type\", SUBMIT);\n                }\n\n                this._buttons.push(button);\n            },\n\n            _buttonsContainer: function() {\n                var buttonsContainer = $(\"<div>\").addClass(wizardClasses.wizardButtons);\n\n                this._leftButtonsContainer = $(\"<span>\").addClass(wizardClasses.wizardLeftButtons);\n                this._rightButtonsContainer = $(\"<span>\").addClass(wizardClasses.wizardRightButtons);\n\n                buttonsContainer.append(this._leftButtonsContainer);\n                buttonsContainer.append(this._rightButtonsContainer);\n\n                this.element.append(buttonsContainer);\n\n                this._buttons = [];\n\n                this.options.buttons.map(this._buttonFactory.bind(this));\n\n                if (this.options.pager) {\n                    this._pager();\n                }\n            },\n\n            _content: function() {\n                var options = this.options,\n                    loadFromRemote = !!options.contentUrl,\n                    contentElement = $(\"<div>\").addClass(wizardClasses.wizardContent);\n\n                if (!loadFromRemote && options.contentId) {\n                    contentElement.html($(\"#\" + options.contentId).html());\n                } else if (!loadFromRemote && options.content) {\n                    contentElement.append(options.content);\n                }\n\n                if (options.markupContainer) {\n                    if (!loadFromRemote && !options.contentId && !options.content) {\n                        contentElement.append(options.markupContainer.html());\n                    }\n\n                    kendo.destroy(options.markupContainer);\n                    options.markupContainer.remove();\n                }\n\n                this.element.prepend(contentElement);\n            },\n\n            _form: function() {\n                var formTag = \"<\" + this.options.formTag + \">\",\n                    formElement = $(formTag).hide(),\n                    contentElement = $(\"<div>\").addClass(wizardClasses.wizardContent),\n                    formOptions = this.options.form;\n\n                $(\"body\").append(formElement);\n                this.element.prepend(contentElement);\n\n                formOptions.buttonsTemplate = formOptions.buttonsTemplate || (() =>\"\");\n                this.form = formElement.kendoForm(formOptions).getKendoForm();\n\n                contentElement.append(formElement.show());\n            },\n\n            _iterateButton: function(button) {\n                var messages = this.options.messages;\n\n                if (typeof button === \"string\") {\n                    button = {\n                        name: button\n                    };\n                }\n                if (!button.text) {\n                    button.text = messages[button.name] || button.name.charAt(0).toUpperCase() + button.name.slice(1);\n                }\n                if (button.primary !== false && (button.name === DONE || button.name === NEXT)) {\n                    button.primary = true;\n                }\n                if (!button.position && button.name === RESET) {\n                    button.position = LEFT;\n                } else if (!button.position) {\n                    button.position = RIGHT;\n                }\n\n                return button;\n            },\n\n            _pager: function() {\n                var options = this.options,\n                    messages = options.messages,\n                    pagerData = {\n                        step: messages.step,\n                        currentStep: options.index + 1,\n                        of: messages.of,\n                        totalSteps: options.totalSteps\n                    },\n                    pager = kendo.template(this._pagerTemplate)(pagerData);\n\n                this._leftButtonsContainer.append(pager);\n            },\n\n            _processButtons: function() {\n                var options = this.options,\n                    buttonsOptions = options.buttons,\n                    defaultButtons = this._defaultButtonsConfiguration;\n\n                if (!buttonsOptions || !buttonsOptions.length || buttonsOptions.length === 0) {\n                    this.options.defaultButtons = true;\n\n                    if (options.index === 0) {\n                        buttonsOptions = defaultButtons.first;\n                    } else if (options.index + 1 === options.totalSteps) {\n                        buttonsOptions = defaultButtons.last;\n                    } else {\n                        buttonsOptions = defaultButtons.middle;\n                    }\n                }\n\n                this.options.buttons = buttonsOptions.map(this._iterateButton.bind(this));\n            },\n\n            _render: function() {\n                this.element = $(\"<div>\").addClass(wizardClasses.wizardStep);\n\n                if (this.options.className) {\n                    this.element.addClass(this.options.className);\n                }\n\n                this._ariaAttributes();\n\n                if (!this.options.selected) {\n                    this.element.addClass(HIDDEN);\n                    this.element.attr(ARIA_HIDDEN, true);\n                }\n\n                if (this.options.actionBar) {\n                    this._buttonsContainer();\n                }\n\n                if (this.options.form) {\n                    this._form();\n                } else {\n                    this._content();\n                }\n            }\n        });\n\n        var Wizard = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                Widget.fn.init.call(that, element, options);\n\n                that._wrapper();\n                that._createSteps();\n                that._stepper();\n                that._attachEvents();\n            },\n\n            options: {\n                name: \"Wizard\",\n                contentPosition: BOTTOM,\n                actionBar: true,\n                pager: true,\n                loadOnDemand: false,\n                reloadOnSelect: false,\n                validateForms: true,\n                stepper: {},\n                steps: [],\n                messages: {\n                    reset: \"Reset\",\n                    previous: \"Previous\",\n                    next: \"Next\",\n                    done: \"Done\",\n                    step: \"Step\",\n                    of: \"of\"\n                }\n            },\n\n            events: [\n                ACTIVATE,\n                SELECT,\n                RESET,\n                DONE,\n                ERROR,\n                CONTENTLOAD,\n                FORM_VALIDATE_FAILED\n            ],\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that.stepper);\n                Widget.fn.destroy.call(that);\n\n                that.wrapper.off(WIZARD);\n            },\n\n            activeStep: function() {\n                return this.currentStep;\n            },\n\n            enableStep: function(stepIndex, value) {\n                var that = this,\n                    targetStep;\n\n                if (stepIndex === undefined$1 || stepIndex === null || isNaN(stepIndex) || stepIndex >= that._steps.length || stepIndex < 0) {\n                    return;\n                }\n\n                stepIndex = Number(stepIndex);\n                targetStep = that._steps[stepIndex];\n\n                if (targetStep.options.enabled === value) {\n                    return;\n                } else {\n                    targetStep.options.enabled = value;\n                    that.stepper.steps()[stepIndex].enable(value);\n                }\n            },\n\n            insertAt: function(index, stepOptions) {\n                var steps = this._steps,\n                    numberOfSteps = steps.length,\n                    messages = this.options.messages,\n                    step, stepperStepOptions, alteredStepIndex, alteredStep,\n                    iterateStep = function(step, i) {\n                        var label;\n\n                        if (i >= index) {\n                            step.options.index += 1;\n                        }\n                        step.options.totalSteps += 1;\n                        step.element.find(DOT + wizardClasses.wizardPager).remove();\n                        step._pager();\n\n                        label = messages.step + \" \" + (step.options.index + 1) + \" \" + messages.of + \" \" + (numberOfSteps + 1);\n                        step.element.attr(ARIA_LABEL, label);\n                    };\n\n                if (index === null || index === undefined$1 || isNaN(index) || index < 0 || index > numberOfSteps) {\n                    return;\n                }\n                if (!stepOptions) {\n                    return;\n                }\n\n                stepperStepOptions = this._mapStepForStepper(stepOptions);\n                this.stepper.insertAt(index, stepperStepOptions);\n\n                stepOptions.totalSteps = numberOfSteps + 1;\n                stepOptions.messages = messages;\n                stepOptions.index = index;\n                stepOptions.formTag = this.wrapper.is(\"form\") ? \"div\" : \"form\";\n\n                if (this.options.pager === false && stepOptions.pager !== true) {\n                    stepOptions.pager = false;\n                }\n\n                step = new Step(stepOptions);\n                steps.forEach(iterateStep);\n                steps.splice(index, 0, step);\n\n                if (index === 0 || index === numberOfSteps) {\n                    alteredStepIndex = index === 0 ? 1 : numberOfSteps - 1;\n                    alteredStep = steps[alteredStepIndex];\n\n                    if (alteredStep.options.defaultButtons) {\n                        alteredStep.resetButtons();\n                    }\n                }\n\n                this._insertStepElementAtIndex(index, step.element);\n                this._stepperAriaAttributes();\n                this._steps.forEach(this._iterateAriaStep);\n            },\n\n            next: function() {\n                var that = this,\n                    stepsLength = that._steps.length,\n                    currentStepIndex = that.currentStep.options.index;\n\n                if (currentStepIndex + 1 === stepsLength) {\n                    return;\n                } else if (!that.steps()[currentStepIndex + 1].options.enabled) {\n                    return;\n                } else {\n                    that._select(currentStepIndex + 1);\n                    that._selectStepper(currentStepIndex + 1);\n                }\n\n            },\n\n            previous: function() {\n                var that = this,\n                    currentStepIndex = that.currentStep.options.index;\n\n                if (currentStepIndex === 0) {\n                    return;\n                } else if (!that.steps()[currentStepIndex - 1].options.enabled) {\n                    return;\n                } else {\n                    that._select(currentStepIndex - 1);\n                    that._selectStepper(currentStepIndex - 1);\n                }\n            },\n\n            removeAt: function(index) {\n                var steps = this._steps,\n                    numberOfSteps = steps.length,\n                    stepContentElement = $(this.element.find(DOT + wizardClasses.wizardStep).get(index)),\n                    removedStep, newSelectedStepIndex, alteredStepIndex, alteredStep, i, step, label,\n                    messages = this.options.messages;\n\n                if (index === null || index === undefined$1 || isNaN(index) || index < 0 || index > numberOfSteps || numberOfSteps === 1) {\n                    return;\n                }\n\n                this.stepper.removeAt(index);\n                removedStep = steps.splice(index, 1)[0];\n\n                if (!stepContentElement.hasClass(HIDDEN)) {\n                    newSelectedStepIndex = index === 0 ? 0 : index - 1;\n                    this.select(newSelectedStepIndex);\n                }\n\n                kendo.destroy(stepContentElement);\n                stepContentElement.remove();\n\n                for (i = 0; i < numberOfSteps - 1; i += 1) {\n                    step = steps[i];\n                    step.options.index = i;\n                    step.options.totalSteps = numberOfSteps - 1;\n                    step.element.find(DOT + wizardClasses.wizardPager).remove();\n                    step._pager();\n                    label = messages.step + \" \" + (i + 1) + \" \" + messages.of + \" \" + (numberOfSteps - 1);\n                    step.element.attr(ARIA_LABEL, label);\n                }\n\n                if (index === 0 || index === numberOfSteps - 1) {\n                    alteredStepIndex = index === 0 ? 0 : numberOfSteps - 2;\n                    alteredStep = steps[alteredStepIndex];\n\n                    if (alteredStep.options.defaultButtons) {\n                        alteredStep.resetButtons();\n                    }\n                }\n\n                this._stepperAriaAttributes();\n                this._steps.forEach(this._iterateAriaStep);\n            },\n\n            select: function(stepIndex) {\n                var that = this,\n                    targetStep;\n\n                if (stepIndex === undefined$1 || stepIndex === null || isNaN(stepIndex) || stepIndex >= that._steps.length || stepIndex < 0) {\n                    return;\n                }\n\n                stepIndex = Number(stepIndex);\n                targetStep = that._steps[stepIndex];\n\n                if (!targetStep.options.enabled) {\n                    return;\n                }\n\n                that._select(stepIndex);\n                that._selectStepper(stepIndex);\n            },\n\n            steps: function() {\n                return this._steps;\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    clickBeforeSubmit = function() {\n                        that._doneClicked = true;\n                    };\n\n                that.stepper.bind(SELECT, that._stepperSelectHandler.bind(that));\n\n                that.wrapper\n                    .on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + RESET + \"]\", that._resetClickHandler.bind(that))\n                    .on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + PREVIOUS + \"]\", that._previousClickHandler.bind(that))\n                    .on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + NEXT + \"]\", that._nextClickHandler.bind(that));\n\n                if (that.wrapper.is(\"form\")) {\n                    that.wrapper.on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + DONE + \"]\", clickBeforeSubmit);\n                    that.wrapper.on(SUBMIT + WIZARD, that._doneHandler.bind(that));\n                } else {\n                    that.wrapper.on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + DONE + \"]\", clickBeforeSubmit);\n                    that.wrapper.on(CLICK + WIZARD, \"[\" + DATA_WIZARD_PREFIX + DONE + \"]\", that._doneHandler.bind(that));\n                }\n            },\n\n            _changeStep: function(step) {\n                var steps = this.wrapper.find(DOT + wizardClasses.wizardStep);\n\n                this.currentStep = step;\n\n                steps.addClass(HIDDEN);\n                steps.attr(ARIA_HIDDEN, true);\n\n                step.element.removeClass(HIDDEN);\n                step.element.removeAttr(ARIA_HIDDEN);\n            },\n\n            _createStep: function(options, index, stepsFromMarkup, total) {\n                var wrapper = this.wrapper,\n                    stepsFromMarkupTitles = this.wrapper.children(\"ol, ul\").children(\"li\");\n\n                if (typeof options === \"string\") {\n                    options = {\n                        title: options\n                    };\n                }\n\n                options.totalSteps = total;\n                options.messages = this.options.messages;\n                options.index = index;\n                options.formTag = this.wrapper.is(\"form\") ? \"div\" : \"form\";\n\n                if (index === 0) {\n                    options.selected = true;\n                }\n                if (this.options.actionBar === false) {\n                    options.actionBar = false;\n                }\n                if (stepsFromMarkup.length > 0 && stepsFromMarkup[index]) {\n                    options.markupContainer = $(stepsFromMarkup[index]);\n\n                    if (!options.title) {\n                        options.title = stepsFromMarkupTitles[index] ? stepsFromMarkupTitles[index].textContent : (index + 1).toString();\n\n                        if (!this.options.steps) {\n                            this.options.steps = [];\n                        }\n\n                    }\n                }\n                if (wrapper.attr(ID)) {\n                    options.wizardId = wrapper.attr(ID);\n                }\n                if (this.options.pager === false && options.pager !== true) {\n                    options.pager = false;\n                }\n\n                this.options.steps[index] = extend(true, {}, options);\n\n                return new Step(options);\n            },\n\n            _createSteps: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    stepsOptions = that.options.steps,\n                    stepsFromMarkup = wrapper.children(\"div\"),\n                    stepsContainer, i, stepOptions, step;\n\n                stepsContainer = $(\"<div>\").addClass(wizardClasses.wizardStepsContainer);\n\n                that._steps = [];\n\n                if (!stepsOptions || stepsOptions.length === 0) {\n                    stepsOptions = [];\n                    for (i = 0; i < stepsFromMarkup.length; i += 1) {\n                        stepsOptions.push({});\n                    }\n                }\n\n                for (i = 0; i < stepsOptions.length; i += 1) {\n                    stepOptions = stepsOptions[i];\n\n                    step = that._createStep(stepOptions, i, stepsFromMarkup, stepsOptions.length);\n\n                    if (stepOptions.contentUrl && (i === 0 || !that.options.loadOnDemand )) {\n                        kendo.ui.progress(that.wrapper, true);\n                        step._ajaxRequest(that);\n                    }\n\n                    stepsContainer.append(step.element);\n\n                    that._steps.push(step);\n                }\n\n                wrapper.children(\"ol, ul\").remove();\n\n                wrapper.empty();\n                wrapper.append(stepsContainer);\n                that._refreshEditorWidgets();\n\n                that.currentStep = that._steps[0];\n            },\n\n            _doneHandler: function(e) {\n                var steps = this._steps,\n                    currentStep = this.currentStep,\n                    forms = [],\n                    form, i;\n\n                if (!this._doneClicked) {\n                    return;\n                }\n\n                this._doneClicked = false;\n\n                if (!!this.options.validateForms && !!currentStep.form && !currentStep.form.validator.validate()) {\n                    e.preventDefault();\n                    this.trigger(FORM_VALIDATE_FAILED, { sender: this, step: currentStep, form: currentStep.form });\n                    return;\n                }\n\n                for (i = 0; i < steps.length; i += 1) {\n                    form = steps[i].form;\n                    if (form) {\n                        forms.push(form);\n                    }\n                }\n\n                this.trigger(DONE, { sender: this, forms: forms, originalEvent: e, button: $(e.target).getKendoButton() });\n            },\n\n            _insertStepElementAtIndex: function(index, stepElement) {\n                var stepsContainer = this.wrapper.find(DOT + wizardClasses.wizardStepsContainer);\n\n                if (index === 0) {\n                    stepsContainer.prepend(stepElement);\n                } else {\n                    stepsContainer.find(DOT + wizardClasses.wizardStep + \":nth-child(\" + index + \")\").after(stepElement);\n                }\n            },\n\n            _isEmpty: function(element) {\n                return !kendo.trim(element.html());\n            },\n\n            _iterateAriaStep: function(step) {\n                step._ariaAttributes();\n            },\n\n            _mapStepForStepper: function(step) {\n                var stepperStep = extend(true, {}, step );\n\n                stepperStep.label = stepperStep.title;\n\n                delete stepperStep.buttons;\n                delete stepperStep.pager;\n                delete stepperStep.content;\n                delete stepperStep.contentUrl;\n                delete stepperStep.contentId;\n                delete stepperStep.formTag;\n                delete stepperStep.wizardId;\n                delete stepperStep.messages;\n\n                return stepperStep;\n            },\n\n            _select: function(index) {\n                var targetStep = this._steps[index],\n                    options = this.options;\n\n                if (targetStep.options.contentUrl &&\n                    (options.reloadOnSelect ||\n                        (options.loadOnDemand && this._isEmpty(targetStep.element.find(DOT + wizardClasses.wizardContent))))) {\n                    this.ajaxLoad = true;\n                    kendo.ui.progress(this.wrapper, true);\n                    targetStep._ajaxRequest(this, true);\n                } else {\n                    this._changeStep(targetStep);\n                }\n            },\n\n            _nextClickHandler: function(e) {\n                var that = this,\n                    steps = that._steps,\n                    numberOfSteps = that._steps.length,\n                    currentStep = that.currentStep,\n                    currentStepIndex = currentStep.options.index,\n                    button = $(e.target).getKendoButton(),\n                    targetStep = steps[currentStepIndex + 1];\n\n                if (numberOfSteps === currentStepIndex + 1 || !targetStep.options.enabled) {\n                    return;\n                }\n\n                if (!!that.options.validateForms && !!currentStep.form && !currentStep.form.validator.validate()) {\n                    that.trigger(FORM_VALIDATE_FAILED, { sender: that, step: currentStep, form: currentStep.form });\n                    return;\n                }\n\n                if (!that.trigger(SELECT, {\n                    sender: that,\n                    originalEvent: e.originalEvent,\n                    step: targetStep,\n                    button: button\n                })) {\n                    that._select(currentStepIndex + 1);\n                    that._selectStepper(currentStepIndex + 1);\n\n                    if (!that.ajaxLoad) {\n                        that.trigger(ACTIVATE, { sender: that, step: targetStep });\n                    }\n\n                    that.ajaxLoad = false;\n                }\n            },\n\n            _previousClickHandler: function(e) {\n                var that = this,\n                    validateForms = that.options.validateForms,\n                    steps = that._steps,\n                    currentStep = that.currentStep,\n                    currentStepIndex = currentStep.options.index,\n                    button = $(e.target).getKendoButton(),\n                    targetStep = steps[currentStepIndex - 1];\n\n                if (currentStepIndex === 0 || !targetStep.options.enabled) {\n                    return;\n                }\n\n                if (!!validateForms && validateForms.validateOnPrevious !== false && !!currentStep.form && !currentStep.form.validator.validate()) {\n                    that.trigger(FORM_VALIDATE_FAILED, { sender: that, step: currentStep, form: currentStep.form });\n                    return;\n                }\n\n                if (!that.trigger(SELECT, {\n                    sender: that,\n                    originalEvent: e.originalEvent,\n                    step: targetStep,\n                    button: button\n                })) {\n                    that._select(currentStepIndex - 1);\n                    that._selectStepper(currentStepIndex - 1);\n\n                    if (!that.ajaxLoad) {\n                        that.trigger(ACTIVATE, { sender: that, step: targetStep });\n                    }\n\n                    that.ajaxLoad = false;\n                }\n            },\n\n            _refreshEditorWidgets: function() {\n                var editorElements = this.wrapper.find(\"[data-role='editor']\"),\n                    i, element;\n\n                for (i = 0; i < editorElements.length; i += 1) {\n                    element = $(editorElements[i]);\n                    element.getKendoEditor().refresh();\n                }\n            },\n\n            _resetClickHandler: function(e) {\n                this.trigger(RESET, { sender: this, originalEvent: e, button: $(e.target).getKendoButton() });\n            },\n\n            _selectStepper: function(index) {\n                var stepper = this.stepper,\n                    targetStep = stepper.steps()[index],\n                    targetLink = targetStep.element.find(DOT + STEPPER_STEP_LINK);\n\n                stepper.select(index);\n\n                stepper.wrapper.find(DOT + STEPPER_STEP_LINK).attr(ARIA_SELECTED, false);\n                targetLink.attr(ARIA_SELECTED, true).trigger(\"focus\");\n            },\n\n            _stepper: function() {\n                var wrapper = this.wrapper,\n                    stepperElement = $(\"<div>\").prependTo(wrapper),\n                    options = this.options,\n                    stepperOptions = options.stepper,\n                    stepsOptions = options.steps.map(this._mapStepForStepper);\n\n                stepperOptions.steps = stepsOptions;\n                stepperOptions.orientation = options.contentPosition === BOTTOM ? HORIZONTAL : VERTICAL;\n                stepperOptions.selectOnFocus = true;\n                stepperOptions.kendoKeydown = function(e) {\n                    if (e.keyCode === kendo.keys.TAB) {\n                        e.preventKendoKeydown = true;\n                    }\n                };\n\n                this.stepper = stepperElement.kendoStepper(stepperOptions).getKendoStepper();\n\n                this._stepperAriaAttributes();\n            },\n\n            _stepperAriaAttributes: function() {\n                var stepper = this.stepper,\n                    wrapperId = this.wrapper.attr(ID) || \"wizard\",\n                    stepperSteps = stepper.steps(),\n                    selected, step, i;\n\n                if (!stepperSteps) {\n                    return;\n                }\n\n                stepper.element.find(DOT + STEPPER_LIST).attr(ROLE, \"tablist\");\n\n                for (i = 0; i < stepperSteps.length; i += 1) {\n                    selected = false;\n\n                    if (i === 0) {\n                        selected = true;\n                    }\n\n                    step = stepperSteps[i];\n                    step.element.attr(ROLE, \"none\")\n                        .find(\"a\").attr(ROLE, \"tab\")\n                        .attr(ARIA_CONTROLS, wrapperId + DASH + i)\n                        .attr(ARIA_SELECTED, selected);\n                }\n            },\n\n            _stepperSelectHandler: function(e) {\n                var that = this,\n                    validateForms = that.options.validateForms,\n                    stepper = e.sender,\n                    stepperStep = e.step,\n                    currentStepIndex = that.currentStep.options.index,\n                    stepIndex = stepperStep.getIndex(),\n                    wizardSteps = that._steps,\n                    step = wizardSteps[stepIndex],\n                    currentStep = that.currentStep;\n\n                if (stepIndex > currentStepIndex && !!validateForms && !!currentStep.form && !currentStep.form.validator.validate()) {\n                    e.preventDefault();\n                    that.trigger(FORM_VALIDATE_FAILED, { sender: that, step: currentStep, form: currentStep.form });\n                    return;\n                }\n\n                if (stepIndex < currentStepIndex && !!validateForms && validateForms.validateOnPrevious !== false && !!currentStep.form && !currentStep.form.validator.validate()) {\n                    e.preventDefault();\n                    that.trigger(FORM_VALIDATE_FAILED, { sender: that, step: currentStep, form: currentStep.form });\n                    return;\n                }\n\n                if (!that.trigger(SELECT, { sender: that, originalEvent: e.originalEvent, step: step, stepper: stepper })) {\n                    that._select(stepIndex);\n\n                    stepper.wrapper.find(DOT + STEPPER_STEP_LINK).attr(ARIA_SELECTED, false);\n                    stepperStep.element.find(DOT + STEPPER_STEP_LINK).attr(ARIA_SELECTED, true);\n\n                    if (!that.ajaxLoad) {\n                        that.trigger(ACTIVATE, { sender: that, step: step });\n                    }\n\n                    that.ajaxLoad = false;\n                } else {\n                    e.preventDefault();\n                }\n            },\n\n            _triggerActivate: function(step) {\n                this._changeStep(step);\n                this.trigger(ACTIVATE, { sender: this, step: step });\n            },\n\n            _triggerError: function(xhr, status, step) {\n                kendo.ui.progress(this.wrapper, false);\n                this.trigger(ERROR, { sender: this, xhr: xhr, status: status, step: step });\n            },\n\n            _triggerContentLoad: function(step) {\n                kendo.ui.progress(this.wrapper, false);\n                this.trigger(CONTENTLOAD, { sender: this, step: step });\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    contentPosition = that.options.contentPosition;\n\n                that.wrapper = element;\n                that.wrapper.addClass(wizardClasses.wizard);\n\n                if (contentPosition === RIGHT) {\n                    that.wrapper.addClass(wizardClasses.verticalWizard + SPACE + wizardClasses.rightWizard);\n                } else if (contentPosition === LEFT) {\n                    that.wrapper.addClass(wizardClasses.verticalWizard + SPACE + wizardClasses.leftWizard);\n                } else {\n                    that.wrapper.addClass(wizardClasses.horizontalWizard);\n                }\n            }\n        });\n\n        kendo.wizard = {\n            Step: Step\n        };\n\n        kendo.ui.plugin(Wizard);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}