{"version":3,"sources":["raw-js/kendo.multiviewcalendar.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendomultiviewcalendar","js","this","$","undefined$1","kendo","window","calendar","support","isInRange","toDateObject","createDate","isEqualDate","getToday","keys","ui","Widget","Selectable","RangeSelectable","template","mobileOS","ns","CLICK","ID","MONTH","DOT","EMPTY","CENTURY","CHANGE","NAVIGATE","VALUE","FOCUSED","SELECTED","HOVER","DISABLED","TODAY","EMPTYCELL","CALENDAR_VIEW","CELLSELECTOR","CELLSELECTORVALID","BLUR","FOCUS","MOUSEENTER","touch","MOUSELEAVE_NS","PREVARROW","NEXTARROW","START","END","TABLE","TBODY","THEAD","TD_NOT_WEEK_CELL","TD","TH","ROLE","NONE","ARIA_DISABLED","ARIA_LABEL","ARIA_ACTIVEDESCENDANT","DATE","Date","views","month","year","decade","century","MultiViewCalendar","extend","init","element","options","id","culture","that","fn","call","wrapper","disableDates","disabled","getCulture","format","_extractFormat","calendars","standard","patterns","d","_templates","_header","_wrapper","addClass","getValidCssClass","size","weekNumber","on","_move","bind","_focus","_blur","e","link","currentTarget","firstChild","data","indexOf","preventDefault","_click","attr","guid","_cellID","_calendarWidth","width","_range","range","start","end","target","_initViews","viewName","value","_selectable","_footer","footer","_selectDates","_addSelectedCellsToArray","_isMultipleSelection","selectDates","length","_restoreSelection","_isRangeSelection","selectRange","notify","name","min","max","dates","allowReverse","showOtherMonthDays","centuryCellsFormat","showViewHeader","selectable","depth","messages","weekColumnHeader","orientation","events","setOptions","normalize","i","_views","off","remove","destroy","_cell","_currentView","_current","header","_title","rangeSelectable","_today","current","focus","tablesWrapper","trigger","_option","view","navigateToPast","_navigate","navigateToFuture","navigateUp","index","_index","hasClass","navigate","navigateDown","_value","isNaN","viewsEnum","restrictValue","_aria","tables","find","rowGroups","first","add","removeAttr","role","_ariaMonth","rows","noHeaderRows","not","noHeaderCells","columnHeaderCells","rowHeaderCells","outOfRange","each","row","prev","$row","numberOfEmpty","owned","children","filter","eq","j","cell","$cell","push","join","_updateHeader","lastDate","prevDisabled","nextDisabled","title","_firstViewValue","visibleRange","_visibleRange","shiftDate","html","getFullYear","last","toggleClass","compare","_navContainer","icon","iconClass","appendTo","removeClass","prevent","lastActive","cellIndex","triggerChange","key","keyCode","focusedCell","table","closest","currentValue","isRtl","RIGHT","LEFT","UP","DOWN","SPACEBAR","HOME","_focusCell","next","_todayClick","ctrlKey","metaKey","_cellByDate","ENTER","_toggleSelection","shiftKey","_isSingleSelection","setDate","_nextNavigatable","getMonth","getDate","_dateInViews","_selectRange","_lastActive","_end","is","_start","selectFrom","selectTo","change","event","PAGEUP","PAGEDOWN","_visualizeSelectedDatesInView","cells","selectedDates","toDateString","clear","_selectElement","isDisabled","navigatableDate","getTime","_unselect","option","parseDate","_toggle","mode","parseOptions","widget","cellSelector","cellSelectorValid","_rangeSelection","reverse","resetOnStart","inputSelectors","aria","dragToSelect","multiple","selectableClass","_selection","relatedTarget","_onRelatedTarget","unselect","_unselecting","_getFirstViewDate","currentView","ranges","_canRenderNextView","viewDate","fullYear","date","maxYear","maxMonth","viewOptions","_table","content","url","showHeader","isWeekColumnVisible","contentClasses","sender","useEnd","_useEnd","useStart","_useStart","initialRange","_preventChange","selectElements","domEvent","isCell","_validateValue","_deselect","item","currentDateIndex","map","Number","splice","firstDateInView","lastDateInView","_fillRange","daysDifference","startDate","endDate","temp","fromDateUTC","UTC","endDateUTC","Math","ceil","MS_PER_DAY","daysBetweenTwoDates","array","numberOfDays","fromDate","nextDay","addDaysToArray","buttons","prependTo","mousetoggle","_calendarTitleClick","_prevViewClick","_nextViewClick","insertAfter","empty","cssClass","linkClass","dateString","useWithBlock","toString","today","hide","show","arrow","modifier","offset","originaValue","setFullYear","toggle","isTodayDisabled","adjustDST","contains","cellId","removeAttribute","_updateAria","ariaTemplate","text","valueType","clearSelection","single","validSelectedDates","datesUnique","position","time","grep","setHours","startInRange","endInRange","mid","type","dimension","numberOfViews","abs","setMonth","plugin","jQuery"],"mappings":";;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,EAAAG,QAAA,iBAAAA,QAAA,uBAAAA,QAAA,qBAAAA,QAAA,mBACA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,iBAAA,uBAAA,qBAAA,mBAAAJ,KACAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,uBAAAT,EAAAS,wBAAA,CAAA,EAAAT,EAAAS,uBAAAC,GAAAT,IACA,CAJA,CAIAU,MAAA,WA4sDA,OAnsDA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAE,SACAC,EAAAH,EAAAG,QACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,aACAC,EAAAJ,EAAAI,WACAC,EAAAL,EAAAK,YACAC,EAAAN,EAAAM,SACAC,EAAAT,EAAAS,KACAC,EAAAV,EAAAU,GACAC,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,WACAC,EAAAH,EAAAG,gBACAC,EAAAd,EAAAc,SACAC,EAAAZ,EAAAY,SACAC,EAAA,0BACAC,EAAA,QAEAC,EAAA,KAEAC,EAAA,QACAC,EAAA,IACAC,EAAA,IACAC,EAAA,UAEAC,EAAA,SACAC,EAAA,WACAC,EAAA,QACAC,EAAA,UACAC,EAAA,aACAC,EAAA,UACAC,EAAA,aACAC,EAAA,uBAEAC,EAAA,UACAC,EAAA,kBACAC,EAAA,wBAAAF,EAAA,gBACAG,EAAA,wBAAAL,EAAA,UAAAE,EAAA,gBACAI,EAAA,OACAC,EAAA,QACAC,EAAAlC,EAAAmC,MAAA,aAAA,aACAC,EAAApC,EAAAmC,MAAA,WAAAtB,EAAA,aAAAA,EAAA,aAAAA,EACAwB,EAAA,aACAC,EAAA,aAGAC,EAAA,QACAC,EAAA,MAEAC,EAAA,QACAC,EAAA,QACAC,EAAA,QAGAC,EAAAC,iBACAC,EAAA,KACAC,EAAA,OACAC,EAAA,OAMAC,EAAA,gBACAC,EAAA,aAEAC,EAAA,wBAEAC,GAAAC,KACAC,GAAA,CACAC,MAAA,EACAC,KAAA,EACAC,OAAA,EACAC,QAAA,GAGA,IAAAC,GAAAnD,EAAAoD,OAAA,CACAC,KAAA,SAAAC,EAAAC,GACA,IACAC,EACAC,EAFAC,EAAAxE,KAIAc,EAAA2D,GAAAN,KAAAO,KAAAF,EAAAJ,EAAAC,GAEAD,EAAAI,EAAAG,QAAAH,EAAAJ,QACAC,EAAAG,EAAAH,QAEAG,EAAAH,QAAAO,aAAAvE,EAAAwE,SAAAL,EAAAH,QAAAO,cAEAL,EAAApE,EAAA2E,WAAAT,EAAAE,SACAF,EAAAU,OAAA5E,EAAA6E,eAAAX,EAAAU,QAAAR,EAAAU,UAAAC,SAAAC,SAAAC,GAEAZ,EAAAa,aAEAb,EAAAc,UAEAd,EAAAe,YAEAjB,EAAAF,EACAoB,SAAA,+BAAArF,EAAAsF,iBAAA,cAAA,OAAAjB,EAAAH,QAAAqB,MAAA,aAAArB,EAAAsB,WAAA,iBAAA,KACAC,GAnFA,UAmFAzE,EAAAI,EAAAY,EAAAqC,EAAAqB,MAAAC,KAAAtB,IACAoB,GAAArD,EAAApB,EAAAI,EAAAY,EAAAqC,EAAAuB,OAAAD,KAAAtB,IACAoB,GAAAtD,EAAAnB,EAAAI,EAAAY,EAAAqC,EAAAwB,MAAAF,KAAAtB,IACAoB,GAAAxE,EAAAD,EAAAkB,GAAA,SAAA4D,GACA,IAAAC,EAAAD,EAAAE,cAAAC,YAEA,GAAAnG,EAAAiG,GAAAG,KAAA,QAAAC,QAAA,MACAL,EAAAM,iBAGA/B,EAAAgC,OAAAvG,EAAAiG,GACA,IACAO,KAAApF,MAGAiD,EAAAnE,EAAAuG,QAGAlC,EAAAmC,QAAArC,EAAA,iBAEAE,EAAAoC,eAAApC,EAAAJ,QAAAyC,QAEArC,EAAAsC,OAAAzC,EAAA0C,MAEAvC,EAAAsC,QAAAtC,EAAAsC,OAAAE,QAAAxC,EAAAsC,OAAAG,MACAzC,EAAAsC,OAAAI,OAAApE,GAGA0B,EAAA2C,WAAA,CAAAC,SAAA/C,EAAA2C,MAAAK,MAAAhD,EAAAgD,QACA7C,EAAA8C,cAEA9C,EAAA+C,QAAA/C,EAAAgD,QACAhD,EAAAiD,aAAA,GACAjD,EAAA6C,MAAAhD,EAAAgD,OACA7C,EAAAkD,2BAEAlD,EAAAmD,yBACAnD,EAAAiD,aAAApD,EAAAuD,YAAAC,OAAAxD,EAAAuD,YAAApD,EAAAiD,aACAjD,EAAAsD,qBAGAtD,EAAAuD,qBACAvD,EAAAwD,YAAAxD,EAAAsC,QAGA3G,EAAA8H,OAAAzD,EACA,EAEAH,QAAA,CACA6D,KAAA,oBACAb,MAAA,KACAc,IAAA,IAAAzE,GAAA,KAAA,EAAA,GACA0E,IAAA,IAAA1E,GAAA,KAAA,GAAA,IACA2E,MAAA,GACAC,cAAA,EACA1D,aAAA,KACA2D,oBAAA,EACAC,mBAAA,OACAjE,QAAA,GACAiD,OAAA,GACAzC,OAAA,GACAlB,MAAA,CAAA,EACAkD,MAAA,CAAAC,MAAA,KAAAC,IAAA,KAAAC,OAAArE,GACA8C,YAAA,EACA/B,MAAA,EACA6E,gBAAA,EACAC,WAzHA,SA0HAd,YAAA,GACAZ,MAAA1F,EACAqH,MAAArH,EACAsH,SAAA,CACAC,iBAAA,IAEAnD,KAAA,SACAoD,YAAA,cAGAC,OAAA,CACArH,EACAC,GAGAqH,WAAA,SAAA3E,GACA,IAAAG,EAAAxE,KAEAK,EAAA4I,UAAA5E,GAEAA,EAAAO,aAAAvE,EAAAwE,SAAAR,EAAAO,cAEA9D,EAAA2D,GAAAuE,WAAAtE,KAAAF,EAAAH,GAEAG,EAAA8C,cAEA9C,EAAAa,aAEAb,EAAA+C,QAAA/C,EAAAgD,QAEA,IAAA,IAAA0B,EAAA,EAAAA,EAAA1E,EAAA2E,OAAAtB,OAAAqB,IACA1E,EAAA2E,OAAAD,GAAAE,IAAAjI,GAAAkI,SAGA7E,EAAA2C,WAAA,CAAAC,SAAA/C,EAAA2C,MAAAK,MAAAhD,EAAAgD,QAEA7C,EAAAsC,OAAAzC,EAAA0C,OAAA,CAAAC,MAAA,KAAAC,IAAA,MAEAzC,EAAAsD,oBAEAtD,EAAAuD,qBACAvD,EAAAwD,YAAAxD,EAAAsC,OAEA,EAEAwC,QAAA,WACA,IAAA9E,EAAAxE,KAMA,GAJAwE,EAAA+E,MAAA,KACA/E,EAAAgF,aAAA,KACAhF,EAAAiF,SAAA,KAEAjF,EAAA2E,OACA,IAAA,IAAAD,EAAA,EAAAA,EAAA1E,EAAA2E,OAAAtB,OAAAqB,IACA1E,EAAA2E,OAAAD,GAAAE,IAAAjI,GAAAkI,SAIA7E,EAAAJ,QAAAgF,IAAAjI,GAEAqD,EAAAkF,SACAlF,EAAAkF,OAAAN,IAAAjI,GACAqD,EAAAmF,OAAA,KACAnF,EAAAkF,OAAA,MAGAlF,EAAAkE,aACAlE,EAAAkE,WAAAY,UACA9E,EAAAkE,WAAA,MAGAlE,EAAAoF,kBACApF,EAAAoF,gBAAAN,UACA9E,EAAAoF,gBAAA,MAGApF,EAAAqF,QACA1J,EAAAmJ,QAAA9E,EAAAqF,OAAAT,IAAAjI,IAGAqD,EAAA2E,OAAA,KAEArI,EAAA2D,GAAA6E,QAAA5E,KAAAF,EACA,EAEAsF,QAAA,WACA,OAAA9J,KAAAyJ,QACA,EAEAM,MAAA,WACA/J,KAAAgK,cAAAC,QAAA,QACA,EAEA9B,IAAA,SAAAd,GACA,OAAArH,KAAAkK,QAlPA,MAkPA7C,EACA,EAEAe,IAAA,SAAAf,GACA,OAAArH,KAAAkK,QAAA,MAAA7C,EACA,EAEA8C,KAAA,WACA,OAAAnK,KAAAwJ,YACA,EAEAY,eAAA,WACApK,KAAAqK,UAAA1H,GAAA,EACA,EAEA2H,iBAAA,WACAtK,KAAAqK,UAAAzH,EAAA,EACA,EAEA2H,WAAA,WACA,IAAA/F,EAAAxE,KACAwK,EAAAhG,EAAAiG,OAEAjG,EAAAmF,OAAAe,SAAA1I,IAIAwC,EAAAmG,SAAAnG,EAAAiF,WAAAe,EACA,EAEAI,aAAA,SAAAvD,GACA,IAAA7C,EAAAxE,KACAwK,EAAAhG,EAAAiG,OACA9B,EAAAnE,EAAAH,QAAAsE,MAEAtB,IAIAmD,IAAA5G,GAAA+E,GAQAnE,EAAAmG,SAAAtD,IAAAmD,GAPA9J,EAAA8D,EAAAqG,OAAArG,EAAAiF,WAAA/I,EAAA8D,EAAAqG,OAAAxD,KACA7C,EAAA6C,MAAAA,GACA7C,EAAAyF,QAAAvI,IAMA,EAEAiJ,SAAA,SAAAtD,EAAA8C,GACAA,EAAAW,MAAAX,GAAA9J,EAAAuD,MAAAvD,EAAA0K,UAAAZ,IAAA9J,EAAAuD,MAAAuG,GAEA,IAAA3F,EAAAxE,KACAqE,EAAAG,EAAAH,QACA8D,EAAA9D,EAAA8D,IACAC,EAAA/D,EAAA+D,IAKA5D,EAAAiF,SAHApC,IACAA,EAAA,IAAA3D,IAAArD,EAAA2K,cAAA3D,EAAAc,EAAAC,KAKA+B,IAAAjK,IACAiK,EAAA3F,EAAAgF,cAGAhF,EAAAgF,aAAAW,EAEA,IAAA,IAAAjB,EAAA,EAAAA,EAAA1E,EAAA2E,OAAAtB,OAAAqB,IACA1E,EAAA2E,OAAAD,GAAAE,IAAAjI,GAAAkI,SAGA7E,EAAA2C,WAAA,CAAAC,SAAA+C,EAAAjC,KAAAb,MAAAA,IAEA7C,EAAAsD,mBACA,EAEAmD,MAAA,WACA,IAAAC,EAAAlL,KAAAgK,cAAAmB,KAAApI,GACAqI,EAAAF,EAAAG,QAAAF,KAAAlI,GAAAqI,IAAAJ,EAAAC,KAAAnI,IACAoE,EAAApH,KAAAwJ,aAAAtB,KAEAgD,EAAAK,WAzSA,YA2SAL,EAAAzE,KAAA,CACA+E,KAAAlI,IAGA8H,EAAA3E,KAAA,CACA+E,KAtSA,aAySApE,IAAA9F,GACAtB,KAAAyL,YAEA,EAEAA,WAAA,WACA,IAAAP,EAAAlL,KAAAgK,cAAAmB,KAAApI,GAEA2I,EADAR,EAAAG,QAAAF,KAAAlI,GAAAqI,IAAAJ,EAAAC,KAAAnI,IACAmI,KAvTA,MAwTAQ,EAAAT,EAAAU,IAAA,UAAAT,KAAAlI,EAAAzB,EAxTA,MAyTAqK,EAAAF,EAAAR,KAAA/H,GACA0I,EAAAZ,EAAAG,QAAAF,KAAAlI,EAAAzB,EAAA4B,GACA2I,EAAAb,EAAAC,KAAAnI,EAAAxB,EAAAwB,YACAgJ,EAAAd,EAAAC,KAAA5J,EAAAW,GA2CA4J,EAAArF,KAAA,CACA+E,KAjWA,iBAoWAO,EAAAtF,KAAA,CACA+E,KApWA,cAuWAQ,EAAAT,WAAAlI,GACAsI,EAAAJ,WAAAlI,GACAwI,EAAAN,WAAA/H,GAAA+H,WAAAlI,GAEAqI,EAAAO,MAtDA,SAAA/C,EAAAgD,GACA,IAGAC,EAHAC,EAAAnM,EAAAiM,GACAG,EAAAD,EAAAjB,KAAA5J,EAAAW,GAAA2F,OACAyE,EAAA,GAGA,IAAApD,EACAkD,EAAAG,WACAC,OAAAjL,EAAAW,GACAuE,KAAA,CACA,cAAA,QACA+E,KA/TA,aAiUA,IAAAa,GACAD,EAAAb,WAAAlI,GACA+I,EAAAjB,KAAA/H,GAAAmI,WAAAlI,IACAgJ,EAAA,GAAAA,EAAA,GAAAD,EAAAG,WAAAX,IAAAxI,GAAAiI,QAAAX,SAAAxI,KACAkK,EAAAjB,KAAA/H,GAAAmI,WAAAlI,IACA8I,EAAAT,EAAAe,GAAAvD,EAAA,IAEAzC,KAAApD,IAAA8I,EAAA1F,KAAApD,KAAAC,IACA6I,EAAAT,EAAAe,GAAAvD,EAAA,IAGAkD,EAAAG,WAAAX,IAAAxI,GAEA6I,MAAA,SAAAS,EAAAC,GACA,IACArI,EADAsI,EAAA3M,EAAA0M,GAGAC,EAAAlC,SAAAxI,KACAoC,EAAA,SAAA4E,EAAA,IAAAwD,EACAE,EAAAnG,KAAApF,EAAAiD,GACAgI,EAAAO,KAAAvI,GAEA,IAEA8H,EAAAb,WAAAlI,GACA8I,EAAA1F,KAtVA,YAsVA6F,EAAAQ,KAAA,MAEA,GAeA,EAEAC,cAAA,WACA,IASAC,EACAnI,EACAoI,EACAC,EAZA1I,EAAAxE,KACAmK,EAAA3F,EAAAgF,aACA2D,EAAA3I,EAAAmF,OACAtC,EAAA7C,EAAA4I,gBACA/I,EAAAG,EAAAH,QACAgJ,EAAA7I,EAAA8I,gBACA/I,EAAAF,EAAAE,QACA4D,EAAA9D,EAAA8D,IACAC,EAAA/D,EAAA+D,IA3ZA,WAiaA+B,EAAAjC,MAAAiC,EAAAjC,OAAAzG,GACAuL,EAAAO,GAAAlG,EAAA8C,EAAAjC,KAAA7D,EAAAT,MAAA,GACArD,EAAAyM,EAAA7E,EAAAC,KACA4E,EAAA5E,GAGA+E,EAAAK,KAAA,+BAAArD,EAAAkB,MAAAhE,GAAAoG,cAAA,MAAAtD,EAAAuD,KAAAV,GAAAS,cAAA,YAEAN,EAAAK,KAAA,+BAAArD,EAAAgD,MAAA9F,EAAAc,EAAAC,EAAA7D,GAAA,MAAA4F,EAAAgD,MAAAI,GAAAlG,EAAA8C,EAAAjC,KAAA7D,EAAAT,MAAA,GAAAuE,EAAAC,EAAA7D,GAAA,WAGAM,EAAAsF,EAAAjC,OAAAzG,EACA0L,EAAAQ,YAAA3L,EAAA6C,GAAA4B,KAAAlD,EAAAsB,GAEAoI,EAAA9C,EAAAyD,QAAAP,EAAArG,MAAAxC,EAAAH,QAAA8D,KAAA,EACA+E,EAAA/C,EAAAyD,QAAAP,EAAApG,IAAAzC,EAAAH,QAAA+D,MAAA,EAEA6E,GAAAC,EACA1I,EAAAqJ,gBACArJ,EAAAqJ,cAAAxE,SACA7E,EAAAqJ,cAAA,OAGArJ,EAAAqJ,gBACArJ,EAAAqJ,cAAA5N,EACA,gGAAAE,EAAAsF,iBAAA,YAAA,OAAAjB,EAAAH,QAAAqB,MAAA,8FAAAlC,EAAA,eAAArD,EAAAU,GAAAiN,KAAA,CAAAA,KAAA,eAAAC,UAAA,2BACA,mEAAA5N,EAAAsF,iBAAA,YAAA,OAAAjB,EAAAH,QAAAqB,MAAA,8FAAAlC,EAAA,WAAArD,EAAAU,GAAAiN,KAAA,CAAAA,KAAA,gBAAAC,UAAA,mCACAC,SAAAxJ,EAAAkF,QACAlF,EAAA7B,GAAA6B,EAAAqJ,cAAA1C,KAAA,wBACA3G,EAAA5B,GAAA4B,EAAAqJ,cAAA1C,KAAA,yBAGA3G,EAAA7B,GAAAgL,YAAA3L,EAAAiL,GAAAxG,KAAAlD,EAAA0J,GACAzI,EAAA7B,GAAA+H,SAAA1I,IACAwC,EAAA7B,GAAAsL,YAAAlM,GAGAyC,EAAA5B,GAAA+K,YAAA3L,EAAAkL,GAAAzG,KAAAlD,EAAA2J,GACA1I,EAAA5B,GAAA8H,SAAA1I,IACAwC,EAAA5B,GAAAqL,YAAAlM,GAGA,EAEA8D,MAAA,SAAAI,GACA,IAWAoB,EAAA6G,EAAAvB,EAAAwB,EAAAC,EAAAC,EAXA7J,EAAAxE,KACAqE,EAAAG,EAAAH,QACAiK,EAAArI,EAAAsI,QACA/D,EAAAhG,EAAAiG,OACAtC,EAAA9D,EAAA8D,IACAC,EAAA/D,EAAA+D,IACAoG,EAAAhK,EAAAJ,QAAA+G,KAAA5J,EAAAM,GACA4M,EAAAD,EAAAE,QAAA3L,GACA4L,EAAA,IAAAjL,KAAAc,EAAAiF,UAAAjJ,EAAAgO,EAAArD,KAAA,WACAyD,EAAAzO,EAAAG,QAAAsO,MAAApK,EAAAG,SACAgG,GAAA,EAqDA,GAlDA2D,GAAA1N,EAAAiO,QAAAD,GAAAN,GAAA1N,EAAAkO,MAAAF,GACAvH,EAAA,EACA6G,GAAA,GACAI,GAAA1N,EAAAkO,OAAAF,GAAAN,GAAA1N,EAAAiO,OAAAD,GACAvH,GAAA,EACA6G,GAAA,GACAI,GAAA1N,EAAAmO,IACA1H,EAAA,IAAAmD,GAAA,GAAA,EACA0D,GAAA,GACAI,GAAA1N,EAAAoO,MACA3H,EAAA,IAAAmD,EAAA,EAAA,EACA0D,GAAA,GACAI,GAAA1N,EAAAqO,UACA5H,EAAA,EACA6G,GAAA,GACAI,GAAA1N,EAAAsO,MACAhB,GAAA,GACAvB,EAAA8B,EAAAtD,KAAA9I,GAAAoK,GAAA,IACA/B,SAAA7I,IACA4M,EAAAA,EAAAtC,QACAtE,OACArD,EAAA2K,WAAAV,EAAAtD,KAAA9I,GAAAoK,GAAA,KAEA9B,EAAAnG,EAAA7B,KAAA6B,EAAA7B,GAAA+H,SAAA1I,GACAwC,EAAA6F,UAAA1H,GAAA,GACA6B,EAAA2K,WAAA3K,EAAAJ,QAAA+G,KAAApI,GAAAsI,QAAAF,KAAA9I,GAAAgJ,UAGA7G,EAAA2K,WAAAxC,IAEA2B,GAAA1N,EAAAkC,KACAoL,GAAA,GACAvB,EAAA8B,EAAAtD,KAAA9I,GAAAqL,QACAhD,SAAA7I,IACA4M,EAAAA,EAAAW,QACAvH,OACArD,EAAA2K,WAAAV,EAAAtD,KAAA9I,GAAAqL,SAEA/C,EAAAnG,EAAA5B,KAAA4B,EAAA5B,GAAA8H,SAAA1I,GACAwC,EAAA6F,UAAAzH,EAAA,GACA4B,EAAA2K,WAAA3K,EAAAJ,QAAA+G,KAAApI,GAAA2K,OAAAvC,KAAA9I,GAAAqL,SAGAlJ,EAAA2K,WAAAxC,IAEA,KAAA2B,IACA9J,EAAA6K,YAAApJ,GACAiI,GAAA,GAGAjI,EAAAqJ,SAAArJ,EAAAsJ,QACAjB,GAAA1N,EAAAiO,QAAAD,GAAAN,GAAA1N,EAAAkO,MAAAF,GACAjE,EAAAnG,EAAA5B,KAAA4B,EAAA5B,GAAA8H,SAAA1I,GACAwC,EAAA6F,UAAAzH,EAAA,GACAsL,GAAA,GACAI,GAAA1N,EAAAkO,OAAAF,GAAAN,GAAA1N,EAAAiO,OAAAD,GACAjE,EAAAnG,EAAA7B,KAAA6B,EAAA7B,GAAA+H,SAAA1I,GACAwC,EAAA6F,UAAA1H,GAAA,GACAuL,GAAA,GACAI,GAAA1N,EAAAmO,IACApE,GAAAnG,EAAAmF,OAAAe,SAAA1I,GACAwC,EAAA+F,aACA/F,EAAA2K,WAAA3K,EAAAgL,YAAAhL,EAAAiF,WACAyE,GAAA,GACAI,GAAA1N,EAAAoO,MACAxK,EAAAgF,aAAAtB,OAAA5G,EACAkD,EAAA6C,MAAAsH,IAEAnK,EAAAoG,aAAA+D,GACAnK,EAAA2K,WAAA3K,EAAAgL,YAAAhL,EAAAiF,WACAkB,GAAA,GAEAuD,GAAA,GACAI,GAAA1N,EAAA6O,OAAAnB,GAAA1N,EAAAqO,UACAzK,EAAAmD,wBACAnD,EAAAkL,iBAAAzJ,QAGA,GAAAA,EAAA0J,WAAAnL,EAAAoL,sBACA,GAAAvI,IAAAnH,EAAA,CAKA,GAHAsE,EAAAgF,aAAAqG,QAAAlB,EAAAtH,GAGA7C,EAAAgF,aAAAtB,OAAA5G,EACA,OAGA+C,EAAAO,aAAA+J,KACAA,EAAAnK,EAAAsL,iBAAAnB,EAAAtH,IAGAc,EAAA1H,EAAA0H,EAAAsF,cAAAtF,EAAA4H,WAAA5H,EAAA6H,WAEAzP,EAAAoO,EAAAxG,EAAAC,KACA5D,EAAAyL,aAAAtB,KACAtH,EAAA,GACAsD,EAAAnG,EAAA5B,KAAA4B,EAAA5B,GAAA8H,SAAA1I,GACAwC,EAAA6F,UAAAzH,EAAA,KAEA+H,EAAAnG,EAAA7B,KAAA6B,EAAA7B,GAAA+H,SAAA1I,GACAwC,EAAA6F,UAAA1H,GAAA,KAGAgK,EAAAnI,EAAAgL,YAAAb,GACAnK,EAAAiF,SAAAkF,EAEAnK,EAAAkE,aACAlE,EAAA0L,aAAA1P,GAAAgE,EAAAkE,WAAAyH,aAAA3B,GAAArD,KAAA,SAAAwD,GACAnK,EAAAkE,WAAAyH,cACA3L,EAAAkE,WAAAyH,YAAA3B,GAEAhK,EAAAyF,QAAAvI,GACA8C,EAAA2K,WAAAxC,IAGAnI,EAAAoF,kBACAuE,EAAA3N,GAAAgE,EAAAoF,gBAAAuG,aAAA3B,GAAArD,KAAA,SACA3G,EAAAyL,aAAA9B,IAQA3J,EAAAoF,gBAAAwG,MAAA5L,EAAAoF,gBAAAwG,KAAAC,GAAA9O,EAAAM,GACA2C,EAAAoF,gBAAAuG,YAAA3L,EAAAoF,gBAAA0G,OAEA9L,EAAAoF,gBAAAuG,YAAA3L,EAAAgL,YAAArB,GAEA3J,EAAAoF,gBAAA7C,MAAAvC,EAAAoF,gBAAAuG,YAAAxD,KAZAwB,GAAAQ,GACAnK,EAAAoF,gBAAAwG,KAAA5L,EAAAoF,gBAAAuG,YACA3L,EAAAoF,gBAAA2G,WAAA5D,IAEAnI,EAAAoF,gBAAA4G,SAAA7D,GAUAnI,EAAAoF,gBAAA6G,SACAjM,EAAA2K,WAAAxC,IAGA,OAEA2B,GAAA1N,EAAA6O,OAAAnB,GAAA1N,EAAAqO,UACAzK,EAAAgF,aAAAtB,OAAA5G,GACA+M,GAAAG,EAAA9D,SAAA5I,IAAA0C,EAAAJ,QAAA+G,KAAA5J,EAAAO,GAAA+F,OAAA,EACArD,EAAA6C,MAAAsH,GACAnK,EAAAkE,aACAlE,EAAAkE,WAAAyH,YAAA3L,EAAAgL,YAAAb,GACAN,GACA7J,EAAAkE,WAAAuB,QAAAvI,EAAA,CAAAgP,MAAAzK,KAGAzB,EAAAoF,iBACApF,EAAAoF,gBAAA6G,UAGAjM,EAAAgC,OAAAvG,EAAAuE,EAAA+E,MAAA,GAAAnD,aAEA8H,GAAA,GACAI,GAAA1N,EAAA+P,QAAArC,GAAA1N,EAAAgQ,WACA1C,GAAA,EACAE,EAAAK,EAAAtD,KAAA9I,GAAAmI,MAAAgE,IACAC,EAAAH,GAAA1N,EAAA+P,OAAAlC,EAAAtC,OAAAsC,EAAAW,QACAvH,SACAyG,GAAA1N,EAAA+P,QACAhG,EAAAnG,EAAA7B,KAAA6B,EAAA7B,GAAA+H,SAAA1I,GACAwC,EAAA4F,iBACAqE,EAAAjK,EAAAJ,QAAA+G,KAAApI,GAAAsI,UAEAV,EAAAnG,EAAA5B,KAAA4B,EAAA5B,GAAA8H,SAAA1I,GACAwC,EAAA8F,mBACAmE,EAAAjK,EAAAJ,QAAA+G,KAAApI,GAAA2K,UAGAf,EAAA8B,EAAAtD,KAAA9I,GAAAoK,GAAA2B,IACAvG,OACArD,EAAA2K,WAAAxC,GAEAnI,EAAA2K,WAAAV,EAAAtD,KAAA9I,GAAAqL,SAIArG,IAEA7C,EAAAgF,aAAAqG,QAAAlB,EAAAtH,GAGAc,EAAA1H,EAAA0H,EAAAsF,cAAAtF,EAAA4H,WAAA5H,EAAA6H,WAEAzP,EAAAoO,EAAAxG,EAAAC,KACA5D,EAAAkE,YAAArE,EAAAO,aAAA+J,KACAA,EAAAnK,EAAAsL,iBAAAnB,EAAAtH,IAEA7C,EAAAyL,aAAAtB,KACAtH,EAAA,GACAsD,EAAAnG,EAAA5B,KAAA4B,EAAA5B,GAAA8H,SAAA1I,GACAwC,EAAA6F,UAAAzH,EAAA,KAEA+H,EAAAnG,EAAA7B,KAAA6B,EAAA7B,GAAA+H,SAAA1I,GACAwC,EAAA6F,UAAAzH,GAAA,KAGA+J,EAAAnI,EAAAgL,YAAAb,GACAnK,EAAAiF,SAAAkF,EACAnK,EAAA2K,WAAAxC,KAaA,OARAhC,GACAnG,EAAAyF,QAAAtI,GAGAuM,GACAjI,EAAAM,iBAGA/B,EAAAiF,QAEA,EAEAoH,8BAAA,WACA,IAEAC,EAFAtM,EAAAxE,KACA+Q,EAAA,CAAA,EAGA9Q,EAAAgM,KAAAzH,EAAAiD,cAAA,SAAA+C,EAAAnD,GACA0J,EAAA5Q,EAAAE,SAAAuD,MAAA,GAAAoN,aAAA3J,IAAAA,CACA,IACA7C,EAAAkE,WAAAuI,SACAH,EAAAtM,EAAAJ,QAAA+G,KAAApI,GACAoI,KAAA/I,GACAoK,QAAA,SAAAhC,EAAApG,GACA,OAAA2M,EAAA9Q,EAAAmE,EAAAgC,YAAAK,KAAAtG,EAAAsG,KAAA7E,IACA,KAEAiG,OAAA,GACArD,EAAAkE,WAAAwI,eAAAJ,GAAA,EAEA,EAEAhB,iBAAA,SAAAnB,EAAAtH,GACA,IAAA7C,EAAAxE,KACA6E,GAAA,EACAsF,EAAA3F,EAAAgF,aACArB,EAAA3D,EAAAH,QAAA8D,IACAC,EAAA5D,EAAAH,QAAA+D,IACA+I,EAAA3M,EAAAH,QAAAO,aACAwM,EAAA,IAAAzN,KAAAgL,EAAA0C,WAGA,IADAlH,EAAA0F,QAAAuB,GAAA/J,GACAxC,GAAA,CAEA,GADAsF,EAAA0F,QAAAlB,EAAAtH,IACA9G,EAAAoO,EAAAxG,EAAAC,GAAA,CACAuG,EAAAyC,EACA,KACA,CACAvM,EAAAsM,EAAAxC,EACA,CACA,OAAAA,CACA,EAEAe,iBAAA,SAAAgB,GACA,IAAAlM,EAAAxE,KAEAwE,EAAAkE,WAAAyH,YAAAlQ,EAAAuE,EAAA+E,MAAA,IAEAtJ,EAAAuE,EAAA+E,MAAA,IAAAmB,SAAA5I,GACA0C,EAAAkE,WAAA4I,UAAArR,EAAAuE,EAAA+E,MAAA,KAGA/E,EAAAkE,WAAArB,MAAApH,EAAAuE,EAAA+E,MAAA,KAEA/E,EAAAkE,WAAAuB,QAAAvI,EAAA,CAAAgP,MAAAA,GACA,EAEAxG,QAAA,SAAAqH,EAAAlK,GACA,IAAA7C,EAAAxE,KACAqE,EAAAG,EAAAH,QACAsK,EAAAnK,EAAAqG,QAAArG,EAAAiF,SAGA,GAAApC,IAAAnH,EACA,OAAAmE,EAAAkN,IAGAlK,EAAAlH,EAAAqR,UAAAnK,EAAAhD,EAAAU,OAAAV,EAAAE,YAMAF,EAAAkN,GAAA,IAAA7N,IAAA2D,IAjwBA,QAmwBAkK,EACAlK,EAAAsH,EAEAA,EAAAtH,KAIA7C,EAAAqG,OAAA,MAGArG,EAAAmG,SAAAnG,EAAAqG,QAEArG,EAAAiN,UACA,EAEAjC,YAAA,SAAAnI,GAIA,OAHAA,aAAA1D,OACA0D,EAAArH,KAAAwJ,aAAAwH,aAAA3J,IAEArH,KAAAoE,QAAA+G,KAAApI,GAAAoI,KAAA,0BACAqB,QAAA,WACA,OAAAvM,EAAAD,KAAAoG,YAAAK,KAAAtG,EAAAsG,KAAA7E,MAAAyF,CACA,GACA,EAEAC,YAAA,WACA,IAAA9C,EAAAxE,KACA0I,EAAAlE,EAAAH,QAAAqE,WACAgJ,EAAA3Q,EAAA4Q,aAAAjJ,GAEAlE,EAAAkE,aACAlE,EAAAkE,WAAAY,UACA9E,EAAAkE,WAAA,MAGAlE,EAAAoF,kBACApF,EAAAoF,gBAAAN,UACA9E,EAAAoF,gBAAA,MAGA8H,EAAA3K,MACAvC,EAAAoF,gBAAA,IAAA5I,EAAAwD,EAAAG,QAAA,CACAiN,OAAApN,EACAgI,OAAA,+BAAAnK,EACAwP,aAAAzP,EACA0P,kBAAAzP,EACAoO,OAAAjM,EAAAuN,gBAAAjM,KAAAtB,GACAwN,QAAAxN,EAAAH,QAAAiE,aACA2J,aAAAvJ,EAAAuJ,eAAA/R,GAAAwI,EAAAuJ,aACA9Q,GAAAA,EACA+Q,eArwBA,iOAwwBA1N,EAAAkE,WAAA,IAAA3H,EAAAyD,EAAAG,QAAA,CACAwN,MAAA,EACAC,cAAA,EACAC,SAAAX,EAAAW,SACA7F,OAAA,0BAAAnK,EACAiQ,gBAAA,aACA7B,OAAAjM,EAAA+N,WAAAzM,KAAAtB,GACAgO,cAAAhO,EAAAiO,iBAAA3M,KAAAtB,GACAkO,SAAAlO,EAAAmO,aAAA7M,KAAAtB,IAGA,EAEAiO,iBAAA,SAAAvL,GACAlH,KAEA0I,WAAArE,QAAAgO,UAAAnL,EAAAmJ,GAAAhO,IAAA6E,EAAAW,OAAA,GAFA7H,KAGAmP,WAAAjI,EAAAmE,SAAA,EAEA,EAEAuH,kBAAA,SAAAC,GACA,IAGA7L,EACAC,EAEAiC,EANA1E,EAAAxE,KACAqE,EAAAG,EAAAH,QACAyO,EAAA,GAGAhJ,EAAA,IAAAnG,MAAAa,EAAAiF,UAGA,IAAAP,EAAA,EAAAA,EAAA7E,EAAAT,MAAAsF,IAAA,CAIA,GAHAlC,EAAA6L,EAAAxH,MAAAvB,KACA7C,EAAA4L,EAAAnF,KAAA5D,KAEAzF,EAAA+D,IAAA,EACApB,IAAA3C,EAAA+D,KACA0K,EAAAjG,KAAA,CAAA7F,MAAAA,EAAAC,IAAA,IAAAtD,MAAAU,EAAA+D,OAEA,KACA,CAEA0K,EAAAjG,KAAA,CAAA7F,MAAAA,EAAAC,IAAAA,IAEA6C,EAAA,IAAAnG,MAAA4J,GAAAtG,EAAA4L,EAAA3K,KAAA,GACA,CAIA,IAFA4B,EAAA,IAAAnG,MAAAa,EAAAiF,UAEAP,EAAA,EAAAA,EAAA7E,EAAAT,MAAAsF,IAAA,CAIA,GAHAlC,EAAA6L,EAAAxH,MAAAvB,GACA7C,EAAA4L,EAAAnF,KAAA5D,IAEA9C,GAAA3C,EAAA8D,IAAA,EACAlB,IAAA5C,EAAA8D,KACA2K,EAAAjG,KAAA,CAAA7F,MAAA,IAAArD,MAAAU,EAAA8D,KAAAlB,IAAAA,IAEA,KACA,CAEA6L,EAAAjG,KAAA,CAAA7F,MAAAA,EAAAC,IAAAA,IAEA6C,EAAA,IAAAnG,MAAA4J,GAAAvG,EAAA6L,EAAA3K,MAAA,GACA,CAIA,IAFAlB,EAAA8L,EAAA,GAAA9L,MAEAkC,EAAA,EAAAA,EAAA7E,EAAAT,MAAA,GACAkP,EAAA5J,GADAA,KAKAlC,GAAA8L,EAAA5J,GAAAlC,QACAA,EAAA8L,EAAA5J,GAAAlC,OAIA,OAAA,IAAArD,MAAAqD,EACA,EAEA+L,mBAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAvF,cACA5J,EAAAmP,EAAAjD,WACAmD,EAAAF,EAAAhD,UACA5H,EAAApI,KAAAqE,QAAA+D,IACA+K,EAAA/K,EAAAqF,cACA2F,EAAAhL,EAAA2H,WAGA,OAAAkD,EAAAE,IAIAF,IAAAE,GAAAtP,EAAAuP,IAIAH,IAAAE,GAAAtP,IAAAuP,GAAAF,EAAA9K,EAAA4H,WAIAiD,IAAAE,GAAAtP,IAAAuP,GAAAF,IAAA9K,EAAA4H,WAKA,EAEA7I,WAAA,SAAAkM,GACA,IAIAL,EAJAxO,EAAAxE,KACAqE,EAAAG,EAAAH,QACAmG,EAAAnK,EAAA0K,UAAAsI,EAAAjM,UACAyL,EAAAxS,EAAAuD,MAAA4G,GAGAhG,EAAAiF,SAAA,IAAA/F,IAAArD,EAAA2K,cAAAqI,EAAAhM,MAAAhD,EAAA8D,IAAA9D,EAAA+D,MACA5D,EAAA2E,OAAA,GACA3E,EAAAiG,OAAAD,GACAwI,EAAAxO,EAAAoO,kBAAAC,IACAhD,QAAA,GAEArL,EAAA4I,gBAAA,IAAAzJ,MAAAqP,GAEA,IAAA,IAAA9J,EAAA,EAAAA,EAAA7E,EAAAT,SACAoP,EAAA9J,EAAAqE,GAAAyF,EAAAH,EAAA3K,KAAA,GAAA8K,GACAnD,QAAA,GAEArL,EAAAuO,mBAAAC,IAJA9J,IAQA1E,EAAA8O,OAAArT,EAAA4S,EAAAU,QAAAtT,EAAAiE,OAAA,CACAiE,IAAA9D,EAAA8D,IACAC,IAAA/D,EAAA+D,IACA8K,KAAAF,EACAQ,IAAAnP,EAAAmP,IACAnL,MAAAhE,EAAAgE,MACAtD,OAAAV,EAAAU,OACAR,QAAAF,EAAAE,QACAK,aAAAP,EAAAO,aACA6O,WAAApP,EAAAoE,eACAiL,oBAAArP,EAAAsB,WACA4C,mBAAAlE,EAAAkE,mBACAC,mBAAAnE,EAAAmE,mBACAI,SAAAvE,EAAAuE,SACA+K,eAAA,oBACAnP,EAAAqO,EAAA3K,SAEA1D,EAAA8O,OAAAtF,SAAAxJ,EAAAwF,eACAxF,EAAA2E,OAAA0D,KAAArI,EAAA8O,QAGA9O,EAAAgF,aAAAqJ,EAEArO,EAAAwF,cAAAvD,KAAA,QAAA,8BAAAoM,EAAA3K,KAAA,QAAA,YAAA1D,EAAAH,QAAAyE,YAAA,WAAA,2DAEAtE,EAAAuI,gBAEAvI,EAAAyG,OACA,EAEA8G,gBAAA,SAAA9L,GACA,IAKAe,EACAC,EANAzC,EAAAxE,KACA+G,EAAAd,EAAA2N,OAAA7M,QACA8M,EAAA5N,EAAA2N,OAAAE,QACAC,EAAA9N,EAAA2N,OAAAI,UACAC,EAAAzP,EAAAwD,eAAA,CAAA,EAGAd,EAAA+M,EAAA/M,OAEAH,EAAAC,OAAAD,EAAAC,MAAAa,SACAb,EAAAxG,EAAAuG,EAAAC,MAAAmE,KAAA,UAGApE,EAAAE,KAAAF,EAAAE,IAAAY,SACAZ,EAAAzG,EAAAuG,EAAAE,IAAAkE,KAAA,UAIAjE,EADAA,IAAApE,EACAD,EAEAC,EAGA0B,EAAAsC,OAAA,CAAAE,MAAA+M,EAAAE,EAAAjN,MAAAA,EAAAC,IAAA4M,EAAAI,EAAAhN,IAAAA,EAAAC,OAAAA,GAEA1C,EAAA0P,gBACA1P,EAAAyF,QAAAvI,EAEA,EAEA6Q,WAAA,SAAAtM,GACA,IAKA0I,EALAnK,EAAAxE,KACAmU,EAAAlO,EAAA2N,OAAAvM,QACA+M,EAAAnO,EAAAyK,MACAvK,EAAAlG,EAAAmU,GAAAA,EAAAjO,eACAkO,EAAAlO,EAAAkK,GAAAnN,GAGAsB,EAAAoL,sBACApL,EAAA8P,eAAAH,EAAA,GAAA3T,EAAA2T,EAAA9I,QAAAF,KAAA,SAAAlF,EAAA2N,OAAAzD,YAAA3P,EAAAyF,EAAA2N,OAAAzD,YAAAhF,KAAA,SAAA3G,EAAA6C,SAGA7C,EAAAmD,yBAEA0M,IACA1F,EAAAnO,EAAA2F,EAAAgF,KAAA,UAGAiJ,GAAAA,EAAA9E,QACA+E,EACAlO,EAAAuE,SAAA5I,GACA0C,EAAAiD,aAAAoF,KAAA8B,GAEAnK,EAAA+P,UAAA5F,IAGAnK,EAAAJ,QAAA+G,KAAA,SAAA9I,GAAA4J,MAAA,SAAAzB,EAAApG,GACA,IAAAiD,EAAA7G,EAAAP,EAAAmE,GAAA+G,KAAA,SACA3G,EAAA+P,UAAAlN,EACA,IACA7C,EAAAkD,4BAEA0M,GAAAA,EAAAzE,SACAnL,EAAA0L,aAAA1P,EAAAyF,EAAA2N,OAAAzD,YAAAlK,EAAA2N,OAAAzD,YAAAhF,KAAA,QAAAgJ,EAAA9I,QAAAF,KAAA,SAAAwD,GACA0F,GACA7P,EAAAiD,aAAA,GACAjD,EAAAiD,aAAAoF,KAAA8B,KAEAnK,EAAAiD,aAAA,GACAjD,EAAAkD,6BAIAlD,EAAA0P,gBACA1P,EAAAyF,QAAAvI,EAEA,EAEAgG,yBAAA,WACA,IAAAlD,EAAAxE,KACAwE,EAAAkE,YAGAlE,EAAAkE,WAAArB,QAAA4E,MAAA,SAAAzB,EAAAgK,GACA,IAAAtB,EAAA1S,EAAAP,EAAAuU,EAAApO,aACA5B,EAAAH,QAAAO,aAAAsO,IACA1O,EAAAiD,aAAAoF,KAAAqG,EAEA,GACA,EAEAqB,UAAA,SAAArB,GACA,IACAuB,EADAzU,KACAyH,aAAAiN,IAAAC,QAAArO,SAAA4M,IACA,GAAAuB,GAFAzU,KAGAyH,aAAAmN,OAAAH,EAAA,EAEA,EAEA9B,aAAA,SAAA1M,GACA,IACA7B,EAAA6B,EAAA7B,QADApE,KAGA4P,uBAAA1O,GAAAkD,EAAAsG,SAAA7I,IACAoE,EAAAM,gBAEA,EAEA+G,cAAA,WACA,IAAApC,EAAAlL,KAAAoE,QAAA+G,KAAA5J,EAAAY,EAAAX,EAAAuB,GAGA,MAAA,CAAAiE,MAFAxG,EAAA0K,EAAAG,QAAAF,KAAA/I,GAAAiJ,QAAAF,KAAA,SAEAlE,IADAzG,EAAA0K,EAAAwC,OAAAvC,KAAA/I,GAAAsL,OAAAvC,KAAA,SAEA,EAEA8E,aAAA,SAAAiD,GACA,IACAhI,EADAlL,KACAoE,QAAA+G,KAAA5J,EAAAY,EAAAX,EAAAuB,GACA8R,EAAArU,EAAA0K,EAAAG,QAAAF,KAAA/I,GAAAiJ,QAAAF,KAAA,SACA2J,EAAAtU,EAAA0K,EAAAwC,OAAAvC,KAAA/I,GAAAsL,OAAAvC,KAAA,SAEA,GAAA+H,EAMA,QAFAA,EAAA,IAAAvP,KAAAuP,EAAAlC,mBAEA8D,IAAA5B,IAAA2B,CACA,EAEAE,WAAA,SAAA/N,EAAAC,GACA,IACA+N,EADAxQ,EAAAxE,KAGAwE,EAAAiD,aAAA,GACAuN,EAwhBA,SAAAC,EAAAC,GACA,IAAAA,GAAAD,EAAA,CACA,IAAAE,GAAAF,EACA5U,EAAAuD,MAAA,GAAAiM,QAAAoF,EAAAC,GACA7U,EAAAuD,MAAA,GAAAiM,QAAAqF,EAAA,IAAAvR,KAAAwR,GACA,CACA,IAAAC,EAAAzR,KAAA0R,IAAAJ,EAAAxH,cAAAwH,EAAAlF,WAAAkF,EAAAjF,WACAsF,EAAA3R,KAAA0R,IAAAH,EAAAzH,cAAAyH,EAAAnF,WAAAmF,EAAAlF,WAEA,OAAAuF,KAAAC,OAAAF,GAAAF,GAAAjV,EAAA+S,KAAAuC,WACA,CAliBAC,CAAA1O,EAAAC,GA8gBA,SAAA0O,EAAAC,EAAAC,EAAAjR,GACA,IAAA,IAAAsE,EAAA,EAAAA,GAAA0M,EAAA1M,IAAA,CACA,IAAA4M,EAAA,IAAAnS,KAAAkS,EAAAxE,WAEAzM,EADAkR,EAAA,IAAAnS,KAAAmS,EAAAjG,QAAAiG,EAAA9F,UAAA9G,MAEAyM,EAAA9I,KAAAiJ,EAEA,CACA,CArhBAC,CAAAvR,EAAAiD,aAAAuN,EAAAhO,EAAAxC,EAAAH,QAAAO,aACA,EAEAsL,aAAA,SAAAlJ,EAAAC,GACA,IACA6C,GAEA7C,GAAAD,IACA8C,EAAA7C,EACAA,EAAAD,EACAA,EAAA8C,GANA9J,KASA+U,WAAA/N,EAAAC,GATAjH,KAUA6Q,+BACA,EAEAvL,QAAA,WACA,IAEA0Q,EAFAxR,EAAAxE,KACAoE,EAAAI,EAAAJ,QAEAsF,EAAAtF,EAAA+G,KAAA,sBAEAzB,EAAA7B,SACA6B,EAAAzJ,EACA,uIAAAE,EAAAsF,iBAAA,YAAA,OAAAjB,EAAAH,QAAAqB,MAAA,oNAGAvF,EAAAsF,iBAAA,YAAA,OAAAjB,EAAAH,QAAAqB,MAAA,8FAAAlC,EAAA,eAAArD,EAAAU,GAAAiN,KAAA,CAAAA,KAAA,eAAAC,UAAA,2BACA,mEAAA5N,EAAAsF,iBAAA,YAAA,OAAAjB,EAAAH,QAAAqB,MAAA,8FAAAlC,EAAA,WAAArD,EAAAU,GAAAiN,KAAA,CAAAA,KAAA,gBAAAC,UAAA,yCAEAkI,UAAA7R,IAGAI,EAAAkF,OAAAA,EAEAA,EAAA9D,GAAApD,EAAArB,EAAA,IAAAuB,EAAA,IAAAH,EAAApB,EAAA,IAAAmB,EAAAnB,EAAA,YAAA+U,IACAtQ,GAAAxE,GAAA,WAAA,OAAA,CAAA,IACAwE,GAAAxE,EAAAD,EAAA,6BAAAqD,EAAA2R,oBAAArQ,KAAAtB,IACAoB,GAAAxE,EAAAD,EAAA,gCAAAqD,EAAA4R,eAAAtQ,KAAAtB,IACAoB,GAAAxE,EAAAD,EAAA,gCAAAqD,EAAA6R,eAAAvQ,KAAAtB,IAEAwR,EAAAtM,EAAAyB,KAAA,aAEA3G,EAAAmF,OAAAqM,EAAAxJ,OAAA,qBACAhI,EAAAqJ,cAAAnE,EAAAyB,KAAA,mBACA3G,EAAA7B,GAAAqT,EAAAxJ,OAAA,wBACAhI,EAAA5B,GAAAoT,EAAAxJ,OAAA,uBACA,EAEA2J,oBAAA,WACAnW,KAAAuK,aACAvK,KAAA+J,QACA/J,KAAAiK,QAAAtI,EACA,EAEAyU,eAAA,SAAAnQ,GACAA,EAAAM,iBACAvG,KAAAoK,iBACApK,KAAA+J,QACA/J,KAAAiK,QAAAtI,EACA,EAEA0U,eAAA,SAAApQ,GACAA,EAAAM,iBACAvG,KAAAsK,mBACAtK,KAAA+J,QACA/J,KAAAiK,QAAAtI,EACA,EAEA4D,SAAA,WACAvF,KAAAgK,cAAA/J,EAAA,6FAAAqW,YAAAtW,KAAAoE,QAAA,GAAAgC,WACA,EAEAf,WAAA,WACA,IAEAxB,EAFA7D,KACAqE,QACAR,MACA0P,EAAA1P,EAAA0P,QACA5N,EAAA9B,EAAA8B,WACA4Q,EAAA1S,EAAA0S,MALAvW,KAOA6D,MAAA,CACA0P,QAAAtS,GAAAoF,GAAA,cAAAA,EAAAmQ,8DAAAnQ,EAAAoQ,yBAAApQ,EAAAmN,QAAArT,EAAAsG,KAAA7E,OAAAyE,EAAAqQ,sBAAArQ,EAAA8G,UAAAoG,EAAApT,EAAAc,SAAAsS,EAAA,CAAAoD,eAAApD,GAAApT,CAAAkG,GAAAA,EAAAgB,qBAAA,CAAAsP,eAAApD,IACAgD,MAAAtV,GAAAoF,GAAA,sBAAAkQ,EAAA,IAAA,oCAAAA,EAAApW,EAAAc,SAAAsV,EAAA,CAAAI,eAAAJ,GAAApW,CAAAkG,GAAA,kBAAA,CAAAsQ,eAAAJ,IACA5Q,WAAA1E,GAAAoF,GAAA,mCAAAV,EAAAxF,EAAAc,SAAA0E,EAAA,CAAAgR,eAAAhR,GAAAxF,CAAAkG,GAAAA,EAAAV,mBAAA,CAAAgR,eAAAhR,IAEA,EAEA4B,QAAA,WACA,IAAA/C,EAAAxE,KACAqE,EAAAG,EAAAH,QACApD,GAAA,IAAAoD,EAAAmD,OAAArH,EAAAc,SAAAuD,EAAAH,QAAAmD,QAAA,CAAAnB,GAAAlG,EAAAyW,SAAAvQ,EAAA,IAAAhC,EAAAE,UAAA,CAAAoS,cAAA,IAAA,KACAE,EAAAlW,IACAyD,EAAAI,EAAAJ,QACAoD,EAAApD,EAAA+G,KAAA,sBAEA,IAAAlK,EAGA,OAFAuD,EAAAiN,SAAA,QACAjK,EAAAsP,OAIAtP,EAAA,KACAA,EAAAvH,EAAA,mHACAE,EAAAsF,iBAAA,YAAA,OAAAjB,EAAAH,QAAAqB,MAAA,oLAGAsI,SAAA5J,IAGAI,EAAAqF,OAAArC,EAAAuP,OACA5L,KAAA,0BACA1E,KAAA,QAAAtG,EAAAyW,SAAAC,EAAA,IAAArS,EAAAH,QAAAE,UAEAiD,EAAA2D,KAAA,kBACAqC,KAAAvM,EAAA4V,IAEArS,EAAAiN,SACA,EAEApH,UAAA,SAAA2M,EAAAC,GACA,IAIAC,EAJA1S,EAAAxE,KACAwK,EAAAhG,EAAAiG,OAAA,EACAkE,EAAA,IAAAjL,IAAAc,EAAAiF,UACA0N,EAAA,IAAAzT,IAAAc,EAAAiF,UAGAuN,EAAAxS,EAAAwS,GAEAE,EAAA1S,EAAAgL,YAAAb,GAAAD,QAAA3L,GAAAyH,QAEAyM,EAAA,EACAC,EAAA,EAAAA,EAEAA,GAAA,EAGAF,GAAAA,EAAAtM,SAAA1I,KACAwI,EAAA,EACAmE,EAAAyI,YAAAzI,EAAAlB,cAAAwJ,EAAAC,EAAA,KAEA7W,EAAAuD,MAAA4G,GAAAqF,QAAAlB,EAAAsI,EAAAC,GAGA1S,EAAAmG,SAAAgE,GAEAnK,EAAAyL,aAAAkH,IACA3S,EAAA2K,WAAA3K,EAAAgL,YAAA2H,IACA3S,EAAAiF,SAAA0N,IAEA3M,EAAA,EACA2M,EAAAC,YAAAD,EAAA1J,cAAA,IAAAwJ,GAEA5W,EAAAuD,MAAA4G,GAAAqF,QAAAsH,EAAAF,GAEAzS,EAAA2K,WAAA3K,EAAAgL,YAAA2H,IACA3S,EAAAiF,SAAA0N,GAGA,EAEA1F,QAAA,SAAA4F,GACA,IAAA7S,EAAAxE,KACAqE,EAAAG,EAAAH,QACAiT,EA7uCA,UA6uCAjT,EAAAqE,YAAAlE,EAAAH,QAAAO,aAAAjE,KACAuF,EAAA1B,EAAAqF,OAEAwN,IAAAnX,IACAmX,EAAA9W,EAAAI,IAAA0D,EAAA8D,IAAA9D,EAAA+D,MAGAlC,IACAA,EAAAkD,IAAAhI,EAAAD,GAEAkW,IAAAC,EACApR,EAAAV,SAAAvD,GACAgM,YAAAjM,GACA4D,GAAAxE,EAAAD,GAAA,SAAA8E,GAAAzB,EAAA6K,YAAApJ,GAAAzB,EAAAuF,OAAA,IAEA7D,EAAA+H,YAAAhM,GACAuD,SAAAxD,GACA4D,GAAAxE,EAAAD,GAAA,SAAA8E,GACAA,EAAAM,gBACA,IAGA,EAEAC,OAAA,SAAAN,GACA,IAAA1B,EAAAxE,KACAqE,EAAAG,EAAAH,QACAsK,EAAA,IAAAhL,MAAAa,EAAAiF,UACApC,EAAA7G,EAAA0F,GAEA/F,EAAA+S,KAAAqE,UAAAlQ,EAAA,GAEA7C,EAAAgF,aAAAqG,QAAAlB,EAAAtH,GACA7C,EAAAiF,SAAApC,EAEA7C,EAAAgF,aAAAtB,OAAA7D,EAAAsE,OACAnE,EAAAoG,aAAAvK,EAAA2K,cAAA2D,EAAAtK,EAAA8D,IAAA9D,EAAA+D,MACA5D,EAAA2K,WAAA3K,EAAAgL,YAAAhL,EAAAiF,WACAjF,EAAAyF,QAAAtI,IAEA6C,EAAA2K,WAAAjJ,EAAAwI,QAAAxL,IAGAsB,EAAAuF,OACA,EAEA/D,MAAA,WACAhG,KAEAuJ,OAFAvJ,KAGAuJ,MAAA0E,YAAApM,EAEA,EAEAkE,OAAA,WACA,IAAA4G,EAAA3M,KAAAuJ,MAEAoD,GAAA1M,EAAAuX,SAAAxX,KAAAgK,cAAA,GAAA2C,EAAA,MAEAA,EADA3M,KAAAyJ,UAAAzJ,KAAAiQ,aAAAjQ,KAAAyJ,UACAzJ,KAAAwP,YAAAxP,KAAAyJ,UAEAzJ,KAAAgK,cAAAmB,KAAA9I,GAAAgJ,SAIArL,KAAAmP,WAAAxC,EACA,EAEAwC,WAAA,SAAAxC,GACA,IAAAnI,EAAAxE,KACAyX,EAAAjT,EAAAmC,QAEAnC,EAAA+E,OAAA/E,EAAA+E,MAAA1B,SACArD,EAAA+E,MAAA,GAAAmO,gBAAAlU,GACAgB,EAAA+E,MAAA0E,YAAApM,GACA2C,EAAAwF,cAAAuB,WAAA9H,GAEAe,EAAA+E,MAAA9C,KAAApF,KAAAoW,GACAjT,EAAA+E,MAAA,GAAAmO,gBAAArW,IAIAmD,EAAA+E,MAAAoD,EAEAA,EAAAlG,KAAApF,GACAmD,EAAAwF,cAAAvD,KAAAhD,EAAAkJ,EAAAlG,KAAApF,IACAoW,IACA9K,EAAAlG,KAAApF,EAAAoW,GACAjT,EAAAwF,cAAAvD,KAAAhD,EAAAgU,IAGA9K,EAAAnH,SAAA3D,GAEA8K,EAAA9E,QAAArD,EAAAgF,aAAAtB,MAAA5G,IACAkD,EAAAiF,SAAAjJ,EAAAmM,EAAAxB,KAAA,SAEA,EAEAkE,YAAA,SAAApJ,GACA,IAAAzB,EAAAxE,KACA6E,EAAAL,EAAAH,QAAAO,aACAiS,EAAAlW,IACAgK,GAAA,EAEA1E,EAAAM,iBAEA1B,EAAAgS,KAIArS,EAAAqG,OAAAgM,EAEArS,EAAAmD,yBACAnD,EAAAiD,aAAA,CAAAoP,IAGArS,EAAAuD,sBACAvD,EAAAoF,gBAAAqH,OAAA,GACAzM,EAAAsC,OAAA,CAAAE,MAAA6P,EAAA5P,IAAA,OAGAzC,EAAAgF,aAAAtB,MAAA5G,GAAAkD,EAAAyL,aAAA4G,KACAlM,GAAA,GAGAnG,EAAAmG,SAAAkM,EAAArS,EAAAH,QAAAsE,OAEAnE,EAAAoL,uBACApL,EAAAkE,WAAAyH,YAAA,MAGAxF,GACAnG,EAAAyF,QAAAtI,GAGA6C,EAAAyF,QAAAvI,GACA,EAEA4S,eAAA,SAAAjN,GACA,IAAA7C,EAAAxE,KACAqE,EAAAG,EAAAH,QACA8D,EAAA9D,EAAA8D,IACAC,EAAA/D,EAAA+D,IAkBA,OAdA,QAFAf,EAAAlH,EAAAqR,UAAAnK,EAAAhD,EAAAU,OAAAV,EAAAE,YAGA8C,EAAA,IAAA3D,IAAA2D,GAEA9G,EAAA8G,EAAAc,EAAAC,KACAf,EAAA,OAIA,OAAAA,GAAA7C,EAAAH,QAAAO,aAAA,IAAAjB,MAAA0D,IAEA7C,EAAAqG,SAAA3K,IACAsE,EAAAqG,OAAA,MAFArG,EAAAqG,OAAAxD,EAKA7C,EAAAqG,MACA,EAEA8M,YAAA,SAAAC,EAAA1E,GACA,IAIA2E,EAJArT,EAAAxE,KACA2M,EAAAnI,EAAAgL,YAAA0D,GAAA1O,EAAAsF,WACAgO,EAAAtT,EAAA2F,OAAA2N,YACAhO,EAAAoJ,GAAA1O,EAAAsF,UAcA,OAXAtF,EAAA2K,WAAAxC,GAGAkL,EADAC,IAAAxW,EACAnB,EAAAyW,SAAA9M,EAAA,QACA,SAAAgO,EACA3X,EAAAyW,SAAA9M,EAAA,KAEA6C,EAAAkL,OAGAlL,EAAAlG,KAAAjD,EAAAoU,EAAA,CAAA9N,QAAAA,EAAAgO,UAAAA,EAAAD,KAAAA,KACAlL,EAAAlG,KAAApF,EACA,EAEA0W,eAAA,WACA,IAAAvT,EAAAxE,KAEAwE,EAAAkE,YACAlE,EAAAJ,QAAA+G,KAAA5J,EAAAO,GAAAmM,YAAAnM,GAAAyJ,WAv5CA,iBA05CA/G,EAAAoF,iBACApF,EAAAoF,gBAAAqH,OAAA,EAEA,EAEAnJ,kBAAA,WACA,IACAf,EADAvC,EAAAxE,KAGA,GAAAwE,EAAAgF,aAAAtB,OAAA1D,EAAAH,QAAAsE,MAAA,CAMA,GAFAnE,EAAA0P,gBAAA,EAEA1P,EAAAuD,oBAAA,CAGA,KAFAhB,EAAAvC,EAAAwD,iBAEAjB,EAAAC,MAEA,YADAxC,EAAA0P,gBAAA,GAIA1P,EAAAwD,YAAAjB,EACA,CAEAvC,EAAAoL,sBAAApL,EAAA6C,SACA7C,EAAAkE,WAAArB,MAAA7C,EAAAgL,YAAAhL,EAAA6C,UAGA7C,EAAAmD,wBACAnD,EAAAqM,gCAGArM,EAAA0P,gBAAA,CAvBA,CAwBA,EAEAvM,qBAAA,WACA,IAAAe,EAAA1I,KAAAqE,QAAAqE,WAEA,OADA3H,EAAA4Q,aAAAjJ,GACA2J,QACA,EAEAtK,kBAAA,WACA,IAAAW,EAAA1I,KAAAqE,QAAAqE,WAEA,OADA3H,EAAA4Q,aAAAjJ,GACA3B,KACA,EAEA6I,mBAAA,WACA,IAAAlH,EAAA1I,KAAAqE,QAAAqE,WAEA,OADA3H,EAAA4Q,aAAAjJ,GACAsP,MACA,EAEA3Q,MAAA,SAAAA,GACA,IACAsF,EADAnI,EAAAxE,KAGA,GAAAqH,IAAAnH,EACA,OAAAsE,EAAAqG,OAGAxD,EAAA7C,EAAA8P,eAAAjN,GAEA7C,EAAAuT,iBAEA1Q,IAAA7C,EAAAyL,aAAA5I,IACA7C,EAAAmG,SAAAtD,GAGA,OAAAA,GAAA7C,EAAAgF,aAAAtB,OAAA5G,IACAqL,EAAAnI,EAAAgL,YAAAnI,GAEA7C,EAAAkE,YACAlE,EAAAkE,WAAArB,MAAAsF,GAGAnI,EAAAoF,kBACApF,EAAAoF,gBAAA5C,MAAA2F,GACAnI,EAAAoF,gBAAAuG,YAAAxD,GAGA,EAEA/E,YAAA,SAAAS,GACA,IACA4P,EACAC,EAFA1T,EAAAxE,KAIA,GAAAqI,IAAAnI,EACA,OAAAsE,EAAAiD,aAGAyQ,EAAA7P,EACAqM,KAAA,SAAAxB,GAAA,OAAAA,EAAA7B,SAAA,IACA7E,QAAA,SAAA0G,EAAAiF,EAAAxC,GACA,OAAAA,EAAArP,QAAA4M,KAAAiF,CACA,IACAzD,KAAA,SAAA0D,GAAA,OAAA,IAAAzU,KAAAyU,EAAA,IAEAH,EAAAhY,EAAAoY,KAAAH,GAAA,SAAA7Q,GACA,GAAAA,EACA,OAAA7C,EAAA8P,eAAA,IAAA3Q,KAAA0D,EAAAiR,SAAA,EAAA,EAAA,EAAA,OAAAjR,CAEA,IACA7C,EAAAiD,aAAAwQ,EAAApQ,OAAA,EAAAoQ,EAAA,IAAAC,EAAArQ,OAAAqQ,EAAA1T,EAAAiD,aACAjD,EAAAqM,+BACA,EAEA7I,YAAA,SAAAjB,GACA,IACAwR,EACAC,EACAnL,EAHA7I,EAAAxE,KAKA,GAAA+G,IAAA7G,EACA,OAAAsE,EAAAsC,OAGAtC,EAAAsC,OAAAC,EAEAsG,EAAA7I,EAAA8I,gBAEAiL,EAAA/T,EAAAyL,aAAAlJ,EAAAC,OACAwR,EAAAzR,EAAAE,KAAAzC,EAAAyL,aAAAlJ,EAAAE,KAEAsR,IACAC,EACAzR,EAAAC,MACAxC,EAAAoF,gBAAA4G,SAAAhM,EAAAgL,YAAAzI,EAAAE,OAEAzC,EAAAoF,gBAAAqH,OAAA,GACAzM,EAAAoF,gBAAA3C,IAAAzC,EAAAgL,YAAAzI,EAAAE,OAEAF,EAAAC,OACAxC,EAAAoF,gBAAA5C,MAAAxC,EAAAgL,YAAAzI,EAAAC,SAIAuR,GAAAC,GACAhU,EAAAoF,gBAAA7C,MAAAvC,EAAAgL,YAAAzI,EAAAC,OAAAxC,EAAAgL,YAAAzI,EAAAE,MAAA,EAAAzC,EAAAH,QAAAiE,cAGAvB,EAAAE,KAAAsR,IAAAC,GACAhU,EAAAoF,gBAAA2G,WAAA/L,EAAAgL,YAAAzI,EAAAC,SAGAD,EAAAE,KAAAsR,IACA/T,EAAAoF,gBAAAqH,OAAA,GACAzM,EAAAoF,gBAAA5C,MAAAxC,EAAAgL,YAAAzI,EAAAC,UAGAqG,EAAArG,OAAAD,EAAAC,QAAAqG,EAAApG,KAAAF,EAAAE,KACAzC,EAAAoF,gBAAA6O,IAAAjU,EAAAJ,QAAA+G,KAAA9I,GAEA,IAKA,SAAA6T,GAAAjQ,GACAhG,EAAAD,MAAA0K,SAAA,eAGAzK,EAAAD,MAAA2N,YAAA5L,EAAAS,EAAA8D,QAAAL,EAAAyS,OAAA,GAAAzS,EAAAyS,MAAAnW,EAEA,CAwBA,SAAAgL,GAAAlG,EAAAsR,EAAAC,GACA,IAAA9O,EACA,OAAA6O,IAAArX,IACAwI,EAAA,IAAApG,GAAA2D,EAAAoG,cAAApG,EAAA0I,WAAA6I,EAAAvR,EAAA2I,YACAoH,YAAA/P,EAAAoG,gBACA8H,KAAAsD,IAAA/O,EAAAiG,WAAA1I,EAAA0I,YAAA6I,GAAAA,EAAA,MACA9O,EAAAgP,SAAAzR,EAAA0I,WAAA6I,GACA9O,EAAAzJ,EAAAuD,MAAA,GAAA8J,KAAA5D,IAEAA,GACA,SAAA6O,IACA7O,EAAA,IAAApG,GAAA,EAAA2D,EAAA0I,WAAA1I,EAAA2I,YACAoH,YAAA/P,EAAAoG,cAAAmL,GACArD,KAAAsD,IAAA/O,EAAA2D,cAAApG,EAAAoG,eAAAmL,KACA9O,EAAA,IAAApG,GAAA,EAAA2D,EAAA0I,WAAA,IACAqH,YAAA/P,EAAAoG,cAAAmL,GACA9O,EAAAzJ,EAAAuD,MAAA,GAAA8J,KAAA5D,IAEAA,GACA,WAAA6O,IACA7O,EAAA,IAAApG,GAAA,EAAA2D,EAAA0I,WAAA1I,EAAA2I,YACAoH,YAAA/P,EAAAoG,cAAA,GAAAmL,GACArD,KAAAsD,IAAA/O,EAAA2D,cAAApG,EAAAoG,eAAA,GAAAmL,KACA9O,EAAA,IAAApG,GAAA,EAAA2D,EAAA0I,WAAA,IACAqH,YAAA/P,EAAAoG,cAAA,GAAAmL,GACA9O,EAAAzJ,EAAAuD,MAAA,GAAA8J,KAAA5D,IAEAA,GACA,YAAA6O,IACA7O,EAAA,IAAApG,GAAA,EAAA2D,EAAA0I,WAAA1I,EAAA2I,YACAoH,YAAA/P,EAAAoG,cAAA,IAAAmL,GACArD,KAAAsD,IAAA/O,EAAA2D,cAAApG,EAAAoG,eAAA,IAAAmL,KACA9O,EAAA,IAAApG,GAAA,EAAA2D,EAAA0I,WAAA,IACAqH,YAAA/P,EAAAoG,cAAA,IAAAmL,GACA9O,EAAAzJ,EAAAuD,MAAA,GAAA8J,KAAA5D,IAEAA,QARA,CAUA,CAtEA3J,EAAAU,GAAAkY,OAAA9U,GAwEA,CAhsDA,CAgsDA7D,OAAAD,MAAA6Y,QACA7Y,KAIA","file":"kendo.multiviewcalendar.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.selectable.js'), require('kendo.calendar.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.selectable', 'kendo.calendar', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendomultiviewcalendar = global.kendomultiviewcalendar || {}, global.kendomultiviewcalendar.js = factory()));\n})(this, (function () {\n    let __meta__ = {\n        id: \"multiviewcalendar\",\n        name: \"MultiViewCalendar\",\n        category: \"web\",\n        description: \"Multi-view calendar.\",\n        depends: [ \"core\", \"selectable\", \"calendar\" ]\n    };\n\n    (function($, undefined$1) {\n        let kendo = window.kendo,\n            calendar = kendo.calendar,\n            support = kendo.support,\n            isInRange = calendar.isInRange,\n            toDateObject = calendar.toDateObject,\n            createDate = calendar.createDate,\n            isEqualDate = calendar.isEqualDate,\n            getToday = calendar.getToday,\n            keys = kendo.keys,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            Selectable = ui.Selectable,\n            RangeSelectable = ui.RangeSelectable,\n            template = kendo.template,\n            mobileOS = support.mobileOS,\n            ns = \".kendoMultiViewCalendar\",\n            CLICK = \"click\",\n            KEYDOWN = \"keydown\",\n            ID = \"id\",\n            MIN = \"min\",\n            MONTH = \"month\",\n            DOT = \".\",\n            EMPTY = \" \",\n            CENTURY = \"century\",\n            DECADE = \"decade\",\n            CHANGE = \"change\",\n            NAVIGATE = \"navigate\",\n            VALUE = \"value\",\n            FOCUSED = \"k-focus\",\n            SELECTED = \"k-selected\",\n            HOVER = \"k-hover\",\n            DISABLED = \"k-disabled\",\n            TODAY = \"k-calendar-nav-today\",\n            OTHERMONTH = \"k-other-month\",\n            EMPTYCELL = \"k-empty\",\n            CALENDAR_VIEW = \"k-calendar-view\",\n            CELLSELECTOR = \"td:has(.k-link):not(.\" + EMPTYCELL + \"):not(.k-alt)\",\n            CELLSELECTORVALID = \"td:has(.k-link):not(.\" + DISABLED + \"):not(.\" + EMPTYCELL + \"):not(.k-alt)\",\n            BLUR = \"blur\",\n            FOCUS = \"focus\",\n            MOUSEENTER = support.touch ? \"touchstart\" : \"mouseenter\",\n            MOUSELEAVE_NS = support.touch ? \"touchend\" + ns + \" touchmove\" + ns : \"mouseleave\" + ns,\n            PREVARROW = \"_prevArrow\",\n            NEXTARROW = \"_nextArrow\",\n            RANGE = \"range\",\n            SINGLE = \"single\",\n            START = \"start\",\n            END = \"end\",\n            TABINDEX = \"tabindex\",\n            TABLE = \"table\",\n            TBODY = \"tbody\",\n            THEAD = \"thead\",\n            TR = \"tr\",\n            TD = \"td\",\n            TD_NOT_WEEK_CELL = TD + \":not(.k-alt)\",\n            TH = \"th\",\n            ROLE = \"role\",\n            NONE = \"none\",\n            ROWGROUP = \"rowgroup\",\n            COLUMNHEADER = \"columnheader\",\n            ROWHEADER = \"rowheader\",\n            GRIDCELL = \"gridcell\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_OWNS = \"aria-owns\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            INPUTSELECTOR = \"input,a,span,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,span.k-svg-icon.k-svg-i-caret-alt-down,span.k-svg-icon.k-svg-i-caret-alt-up\",\n            DATE = Date,\n            views = {\n                month: 0,\n                year: 1,\n                decade: 2,\n                century: 3\n            };\n\n        var MultiViewCalendar = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                var id;\n                var culture;\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n                options = that.options;\n\n                that.options.disableDates = calendar.disabled(that.options.disableDates);\n\n                culture = kendo.getCulture(options.culture);\n                options.format = kendo._extractFormat(options.format || culture.calendars.standard.patterns.d);\n\n                that._templates();\n\n                that._header();\n\n                that._wrapper();\n\n                id = element\n                    .addClass(`k-calendar k-calendar-range ${kendo.getValidCssClass(\"k-calendar-\", \"size\", that.options.size || \"medium\")}` + (options.weekNumber ? \" k-week-number\" : \"\"))\n                    .on(KEYDOWN + ns, DOT + CALENDAR_VIEW, that._move.bind(that))\n                    .on(FOCUS + ns, DOT + CALENDAR_VIEW, that._focus.bind(that))\n                    .on(BLUR + ns, DOT + CALENDAR_VIEW, that._blur.bind(that))\n                    .on(CLICK + ns, CELLSELECTORVALID, function(e) {\n                        var link = e.currentTarget.firstChild;\n\n                        if ($(link).data(\"href\").indexOf(\"#\") != -1) {\n                            e.preventDefault();\n                        }\n\n                        that._click($(link));\n                    })\n                    .attr(ID);\n\n                if (!id) {\n                    id = kendo.guid();\n                }\n\n                that._cellID = id + \"_cell_selected\";\n\n                that._calendarWidth = that.element.width();\n\n                that._range = options.range;\n\n                if (that._range && that._range.start && !that._range.end) {\n                    that._range.target = END;\n                }\n\n                that._initViews({ viewName: options.start, value: options.value });\n                that._selectable();\n\n                that._footer(that.footer);\n                that._selectDates = [];\n                that.value(options.value);\n                that._addSelectedCellsToArray();\n\n                if (that._isMultipleSelection()) {\n                    that._selectDates = options.selectDates.length ? options.selectDates : that._selectDates;\n                    that._restoreSelection();\n                }\n\n                if (that._isRangeSelection()) {\n                    that.selectRange(that._range);\n                }\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"MultiViewCalendar\",\n                value: null,\n                min: new DATE(1900, 0, 1),\n                max: new DATE(2099, 11, 31),\n                dates: [],\n                allowReverse: false,\n                disableDates: null,\n                showOtherMonthDays: false,\n                centuryCellsFormat: \"long\",\n                culture: \"\",\n                footer: \"\",\n                format: \"\",\n                month: {},\n                range: { start: null, end: null, target: START },\n                weekNumber: false,\n                views: 2,\n                showViewHeader: false,\n                selectable: SINGLE,\n                selectDates: [],\n                start: MONTH,\n                depth: MONTH,\n                messages: {\n                    weekColumnHeader: \"\"\n                },\n                size: \"medium\",\n                orientation: \"horizontal\"\n            },\n\n            events: [\n                CHANGE,\n                NAVIGATE\n            ],\n\n            setOptions: function(options) {\n                var that = this;\n\n                calendar.normalize(options);\n\n                options.disableDates = calendar.disabled(options.disableDates);\n\n                Widget.fn.setOptions.call(that, options);\n\n                that._selectable();\n\n                that._templates();\n\n                that._footer(that.footer);\n\n                for (var i = 0; i < that._views.length; i++) {\n                    that._views[i].off(ns).remove();\n                }\n\n                that._initViews({ viewName: options.start, value: options.value });\n\n                that._range = options.range || { start: null, end: null };\n\n                that._restoreSelection();\n\n                if (that._isRangeSelection()) {\n                    that.selectRange(that._range);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that._cell = null;\n                that._currentView = null;\n                that._current = null;\n\n                if (that._views) {\n                    for (var i = 0; i < that._views.length; i++) {\n                        that._views[i].off(ns).remove();\n                    }\n                }\n\n                that.element.off(ns);\n\n                if (that.header) {\n                    that.header.off(ns);\n                    that._title = null;\n                    that.header = null;\n                }\n\n                if (that.selectable) {\n                    that.selectable.destroy();\n                    that.selectable = null;\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.destroy();\n                    that.rangeSelectable = null;\n                }\n\n                if (that._today) {\n                    kendo.destroy(that._today.off(ns));\n                }\n\n                that._views = null;\n\n                Widget.fn.destroy.call(that);\n            },\n\n            current: function() {\n                return this._current;\n            },\n\n            focus: function() {\n                this.tablesWrapper.trigger(\"focus\");\n            },\n\n            min: function(value) {\n                return this._option(MIN, value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            view: function() {\n                return this._currentView;\n            },\n\n            navigateToPast: function() {\n                this._navigate(PREVARROW, -1);\n            },\n\n            navigateToFuture: function() {\n                this._navigate(NEXTARROW, 1);\n            },\n\n            navigateUp: function() {\n                var that = this,\n                index = that._index;\n\n                if (that._title.hasClass(DISABLED)) {\n                    return;\n                }\n\n                that.navigate(that._current, ++index);\n            },\n\n            navigateDown: function(value) {\n                var that = this,\n                index = that._index,\n                depth = that.options.depth;\n\n                if (!value) {\n                    return;\n                }\n\n                if (index === views[depth]) {\n                    if (!isEqualDate(that._value, that._current) || !isEqualDate(that._value, value)) {\n                        that.value(value);\n                        that.trigger(CHANGE);\n                    }\n                    return;\n                }\n\n                that.navigate(value, --index);\n            },\n\n            navigate: function(value, view) {\n                view = isNaN(view) ? calendar.views[calendar.viewsEnum[view]] : calendar.views[view];\n\n                var that = this;\n                var options = that.options;\n                var min = options.min;\n                var max = options.max;\n\n                if (!value) {\n                    that._current = value = new DATE(+calendar.restrictValue(value, min, max));\n                } else {\n                    that._current = value;\n                }\n\n                if (view === undefined$1) {\n                    view = that._currentView;\n                }\n\n                that._currentView = view;\n\n                for (var i = 0; i < that._views.length; i++) {\n                    that._views[i].off(ns).remove();\n                }\n\n                that._initViews({ viewName: view.name, value: value });\n\n                that._restoreSelection();\n            },\n\n            _aria: function() {\n                var tables = this.tablesWrapper.find(TABLE),\n                    rowGroups = tables.first().find(THEAD).add(tables.find(TBODY)),\n                    viewName = this._currentView.name;\n\n                tables.removeAttr(TABINDEX);\n\n                tables.attr({\n                    role: NONE\n                });\n\n                rowGroups.attr({\n                    role: ROWGROUP\n                });\n\n                if (viewName === MONTH) {\n                    this._ariaMonth();\n                }\n            },\n\n            _ariaMonth: function() {\n                var tables = this.tablesWrapper.find(TABLE),\n                    rowGroups = tables.first().find(THEAD).add(tables.find(TBODY)),\n                    rows = rowGroups.find(TR),\n                    noHeaderRows = tables.not(\":eq(0)\").find(THEAD + EMPTY + TR),\n                    noHeaderCells = noHeaderRows.find(TH),\n                    columnHeaderCells = tables.first().find(THEAD + EMPTY + TH),\n                    rowHeaderCells = tables.find(TBODY + EMPTY + TD + \".k-alt\"),\n                    outOfRange = tables.find(DOT + EMPTYCELL),\n                    ariaDataCells = function(i, row) {\n                        var $row = $(row),\n                            numberOfEmpty = $row.find(DOT + EMPTYCELL).length,\n                            owned = [],\n                            prev, cells;\n\n                        if (i === 1) {\n                            $row.children()\n                                .filter(DOT + EMPTYCELL)\n                                .attr({\n                                    \"aria-hidden\": \"false\",\n                                    role: GRIDCELL\n                                });\n                        } else if (numberOfEmpty === 7) {\n                            $row.removeAttr(ROLE);\n                            $row.find(TH).removeAttr(ROLE);\n                        } else if (numberOfEmpty > 0 && numberOfEmpty < 7 && $row.children().not(TH).first().hasClass(EMPTYCELL)) {\n                            $row.find(TH).removeAttr(ROLE);\n                            prev = rows.eq(i - 1);\n\n                            if (!prev.attr(ROLE) || prev.attr(ROLE) === NONE) {\n                                prev = rows.eq(i - 2);\n                            }\n\n                            cells = $row.children().not(TH);\n\n                            cells.each(function(j, cell) {\n                                var $cell = $(cell),\n                                    id;\n\n                                if (!$cell.hasClass(EMPTYCELL)) {\n                                    id = \"owned_\" + i + \"_\" + j;\n                                    $cell.attr(ID, id);\n                                    owned.push(id);\n                                }\n                            });\n\n                            $row.removeAttr(ROLE);\n                            prev.attr(ARIA_OWNS, owned.join(\" \"));\n                        }\n                    };\n\n                columnHeaderCells.attr({\n                    role: COLUMNHEADER\n                });\n\n                rowHeaderCells.attr({\n                    role: ROWHEADER\n                });\n\n                outOfRange.removeAttr(ROLE);\n                noHeaderRows.removeAttr(ROLE);\n                noHeaderCells.removeAttr(ARIA_LABEL).removeAttr(ROLE);\n\n                rows.each(ariaDataCells);\n            },\n\n            _updateHeader: function() {\n                let that = this,\n                    view = that._currentView,\n                    title = that._title,\n                    value = that._firstViewValue,\n                    options = that.options,\n                    visibleRange = that._visibleRange(),\n                    culture = options.culture,\n                    min = options.min,\n                    max = options.max,\n                    lastDate,\n                    disabled,\n                    prevDisabled,\n                    nextDisabled;\n\n                if (view.name === DECADE || view.name === CENTURY) {\n                    lastDate = shiftDate(value, view.name, options.views - 1);\n                    if (!isInRange(lastDate, min, max)) {\n                        lastDate = max;\n                    }\n\n                    title.html('<span class=\"k-button-text\">' + view.first(value).getFullYear() + \" - \" + view.last(lastDate).getFullYear() + \"</span>\");\n                } else {\n                    title.html('<span class=\"k-button-text\">' + view.title(value, min, max, culture) + \" - \" + view.title(shiftDate(value, view.name, options.views - 1), min, max, culture) + \"</span>\");\n                }\n\n                disabled = view.name === CENTURY;\n                title.toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n                prevDisabled = view.compare(visibleRange.start, that.options.min) < 1;\n                nextDisabled = view.compare(visibleRange.end, that.options.max) > -1;\n\n                if (prevDisabled && nextDisabled) {\n                    if (that._navContainer) {\n                        that._navContainer.remove();\n                        that._navContainer = null;\n                    }\n                } else {\n                    if (!that._navContainer) {\n                        that._navContainer = $(`<span class=\"k-calendar-nav\">` +\n                        `<span tabindex=\"-1\" data-href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-nav-prev\" ` + ARIA_LABEL + `=\"Previous\">${kendo.ui.icon({ icon: \"chevron-left\", iconClass: \"k-button-icon\" })}</span>` +\n                        `<span tabindex=\"-1\" data-href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-nav-next\" ` + ARIA_LABEL + `=\"Next\">${kendo.ui.icon({ icon: \"chevron-right\", iconClass: \"k-button-icon\" })}</span>` +\n                        '</span>').appendTo(that.header);\n                        that[PREVARROW] = that._navContainer.find(\".k-calendar-nav-prev\");\n                        that[NEXTARROW] = that._navContainer.find(\".k-calendar-nav-next\");\n                    }\n\n                    that[PREVARROW].toggleClass(DISABLED, prevDisabled).attr(ARIA_DISABLED, prevDisabled);\n                    if (that[PREVARROW].hasClass(DISABLED)) {\n                        that[PREVARROW].removeClass(HOVER);\n                    }\n\n                    that[NEXTARROW].toggleClass(DISABLED, nextDisabled).attr(ARIA_DISABLED, nextDisabled);\n                    if (that[NEXTARROW].hasClass(DISABLED)) {\n                        that[NEXTARROW].removeClass(HOVER);\n                    }\n                }\n            },\n\n            _move: function(e) {\n                var that = this;\n                var options = that.options;\n                var key = e.keyCode;\n                var index = that._index;\n                var min = options.min;\n                var max = options.max;\n                var focusedCell = that.element.find(DOT + FOCUSED);\n                var table = focusedCell.closest(TABLE);\n                var currentValue = new DATE(+(that._current || toDateObject(focusedCell.find(\"span\"))));\n                var isRtl = kendo.support.isRtl(that.wrapper);\n                var navigate = false;\n                var value, prevent, method, cell, lastActive, cellIndex, triggerChange;\n\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    value = 1;\n                    prevent = true;\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    value = -1;\n                    prevent = true;\n                } else if (key == keys.UP) {\n                    value = index === 0 ? -7 : -4;\n                    prevent = true;\n                } else if (key == keys.DOWN) {\n                    value = index === 0 ? 7 : 4;\n                    prevent = true;\n                } else if (key == keys.SPACEBAR) {\n                    value = 0;\n                    prevent = true;\n                } else if (key == keys.HOME) {\n                    prevent = true;\n                    cell = table.find(CELLSELECTORVALID).eq(0);\n                    if (cell.hasClass(FOCUSED)) {\n                        table = table.prev();\n                        if (table.length) {\n                            that._focusCell(table.find(CELLSELECTORVALID).eq(0));\n                        } else {\n                            navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                            that._navigate(PREVARROW, -1);\n                            that._focusCell(that.element.find(TABLE).first().find(CELLSELECTORVALID).first());\n                        }\n                    } else {\n                        that._focusCell(cell);\n                    }\n                } else if (key == keys.END) {\n                    prevent = true;\n                    cell = table.find(CELLSELECTORVALID).last();\n                    if (cell.hasClass(FOCUSED)) {\n                        table = table.next();\n                        if (table.length) {\n                            that._focusCell(table.find(CELLSELECTORVALID).last());\n                        } else {\n                            navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                            that._navigate(NEXTARROW, 1);\n                            that._focusCell(that.element.find(TABLE).last().find(CELLSELECTORVALID).last());\n                        }\n                    } else {\n                        that._focusCell(cell);\n                    }\n                } else if (key === 84) {\n                    that._todayClick(e);\n                    prevent = true;\n                }\n\n                if (e.ctrlKey || e.metaKey) {\n                    if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                        navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                        that._navigate(NEXTARROW, 1);\n                        prevent = true;\n                    } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                        navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                        that._navigate(PREVARROW, -1);\n                        prevent = true;\n                    } else if (key == keys.UP) {\n                        navigate = !that._title.hasClass(DISABLED);\n                        that.navigateUp();\n                        that._focusCell(that._cellByDate(that._current));\n                        prevent = true;\n                    } else if (key == keys.DOWN) {\n                        if (that._currentView.name === MONTH) {\n                            that.value(currentValue);\n                        } else {\n                            that.navigateDown(currentValue);\n                            that._focusCell(that._cellByDate(that._current));\n                            navigate = true;\n                        }\n                        prevent = true;\n                    } else if ((key == keys.ENTER || key == keys.SPACEBAR)) {\n                        if (that._isMultipleSelection()) {\n                            that._toggleSelection(e);\n                        }\n                    }\n                } else if (e.shiftKey && !that._isSingleSelection()) {\n                    if (value !== undefined$1 || method) {\n                        if (!method) {\n                            that._currentView.setDate(currentValue, value);\n                        }\n\n                        if (that._currentView.name !== MONTH) {\n                            return;\n                        }\n\n                        if (options.disableDates(currentValue)) {\n                            currentValue = that._nextNavigatable(currentValue, value);\n                        }\n\n                        min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n                        if (isInRange(currentValue, min, max)) {\n                            if (!that._dateInViews(currentValue)) {\n                                if (value > 0) {\n                                    navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                                    that._navigate(NEXTARROW, 1);\n                                } else {\n                                    navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                                    that._navigate(PREVARROW, -1);\n                                }\n                            }\n                            cell = that._cellByDate(currentValue);\n                            that._current = currentValue;\n\n                            if (that.selectable) {\n                                that._selectRange(toDateObject((that.selectable._lastActive || focusedCell).find(\"span\")), currentValue);\n                                if (!that.selectable._lastActive) {\n                                    that.selectable._lastActive = focusedCell;\n                                }\n                                that.trigger(CHANGE);\n                                that._focusCell(cell);\n                            }\n\n                            if (that.rangeSelectable) {\n                                lastActive = toDateObject((that.rangeSelectable._lastActive || focusedCell).find(\"span\"));\n                                if (!that._dateInViews(lastActive)) {\n                                    if (+lastActive > +currentValue) {\n                                        that.rangeSelectable._end = that.rangeSelectable._lastActive;\n                                        that.rangeSelectable.selectFrom(cell);\n                                    } else {\n                                        that.rangeSelectable.selectTo(cell);\n                                    }\n                                } else {\n                                    if (that.rangeSelectable._end && that.rangeSelectable._end.is(DOT + FOCUSED)) {\n                                        that.rangeSelectable._lastActive = that.rangeSelectable._start;\n                                    } else {\n                                        that.rangeSelectable._lastActive = that._cellByDate(lastActive);\n                                    }\n                                    that.rangeSelectable.range(that.rangeSelectable._lastActive, cell);\n                                }\n                                that.rangeSelectable.change();\n                                that._focusCell(cell);\n                            }\n                        }\n                    }\n                } else {\n                    if (key == keys.ENTER || key == keys.SPACEBAR) {\n                        if (that._currentView.name === MONTH) {\n                            triggerChange = !focusedCell.hasClass(SELECTED) || that.element.find(DOT + SELECTED).length > 1;\n                            that.value(currentValue);\n                            if (that.selectable) {\n                                that.selectable._lastActive = that._cellByDate(currentValue);\n                                if (triggerChange) {\n                                    that.selectable.trigger(CHANGE, { event: e });\n                                }\n                            }\n                            if (that.rangeSelectable) {\n                                that.rangeSelectable.change();\n                            }\n                        } else {\n                            that._click($(that._cell[0].firstChild));\n                        }\n                        prevent = true;\n                    } else if (key == keys.PAGEUP || key == keys.PAGEDOWN) {\n                        prevent = true;\n                        cellIndex = table.find(CELLSELECTORVALID).index(focusedCell);\n                        table = key == keys.PAGEUP ? table.prev() : table.next();\n                        if (!table.length) {\n                            if (key == keys.PAGEUP) {\n                                navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                                that.navigateToPast();\n                                table = that.element.find(TABLE).first();\n                            } else {\n                                navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                                that.navigateToFuture();\n                                table = that.element.find(TABLE).last();\n                            }\n                        }\n                        cell = table.find(CELLSELECTORVALID).eq(cellIndex);\n                        if (cell.length) {\n                            that._focusCell(cell);\n                        } else {\n                            that._focusCell(table.find(CELLSELECTORVALID).last());\n                        }\n                    }\n\n                    if (value || method) {\n                        if (!method) {\n                            that._currentView.setDate(currentValue, value);\n                        }\n\n                        min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n                        if (isInRange(currentValue, min, max)) {\n                            if (that.selectable && options.disableDates(currentValue)) {\n                                currentValue = that._nextNavigatable(currentValue, value);\n                            }\n                            if (!that._dateInViews(currentValue)) {\n                                if (value > 0) {\n                                    navigate = that[NEXTARROW] && !that[NEXTARROW].hasClass(DISABLED);\n                                    that._navigate(NEXTARROW, 1);\n                                } else {\n                                    navigate = that[PREVARROW] && !that[PREVARROW].hasClass(DISABLED);\n                                    that._navigate(NEXTARROW, -1);\n                                }\n                            }\n                            cell = that._cellByDate(currentValue);\n                            that._current = currentValue;\n                            that._focusCell(cell);\n                        }\n                    }\n                }\n\n                if (navigate) {\n                    that.trigger(NAVIGATE);\n                }\n\n                if (prevent) {\n                    e.preventDefault();\n                }\n\n                return that._current;\n\n            },\n\n            _visualizeSelectedDatesInView: function() {\n                var that = this;\n                var selectedDates = {};\n                var cells;\n\n                $.each(that._selectDates, function(index, value) {\n                    selectedDates[kendo.calendar.views[0].toDateString(value)] = value;\n                });\n                that.selectable.clear();\n                cells = that.element.find(TABLE)\n                    .find(CELLSELECTOR)\n                    .filter(function(index, element) {\n                        return selectedDates[$(element.firstChild).attr(kendo.attr(VALUE))];\n                    });\n\n                if (cells.length > 0) {\n                    that.selectable._selectElement(cells, true);\n                }\n            },\n\n            _nextNavigatable: function(currentValue, value) {\n                var that = this;\n                var disabled = true;\n                var view = that._currentView;\n                var min = that.options.min;\n                var max = that.options.max;\n                var isDisabled = that.options.disableDates;\n                var navigatableDate = new Date(currentValue.getTime());\n\n                view.setDate(navigatableDate, -value);\n                while (disabled) {\n                    view.setDate(currentValue, value);\n                     if (!isInRange(currentValue, min, max)) {\n                        currentValue = navigatableDate;\n                        break;\n                    }\n                    disabled = isDisabled(currentValue);\n                }\n                return currentValue;\n            },\n\n            _toggleSelection: function(event) {\n                var that = this;\n\n                that.selectable._lastActive = $(that._cell[0]);\n\n                if ($(that._cell[0]).hasClass(SELECTED)) {\n                    that.selectable._unselect($(that._cell[0]));\n                }\n                else {\n                    that.selectable.value($(that._cell[0]));\n                }\n                that.selectable.trigger(CHANGE, { event: event });\n            },\n\n            _option: function(option, value) {\n                var that = this;\n                var options = that.options;\n                var currentValue = that._value || that._current;\n                var isBigger;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = kendo.parseDate(value, options.format, options.culture);\n\n                if (!value) {\n                    return;\n                }\n\n                options[option] = new DATE(+value);\n\n                if (option === MIN) {\n                    isBigger = value > currentValue;\n                } else {\n                    isBigger = currentValue > value;\n                }\n\n                if (isBigger) {\n                    that._value = null;\n                }\n\n                that.navigate(that._value);\n\n                that._toggle();\n            },\n\n            _cellByDate: function(value) {\n                if (value instanceof Date) {\n                    value = this._currentView.toDateString(value);\n                }\n                return this.element.find(TABLE).find(\"td:not(.\" + OTHERMONTH + \")\")\n                .filter(function() {\n                    return $(this.firstChild).attr(kendo.attr(VALUE)) === value;\n                });\n            },\n\n            _selectable: function() {\n                let that = this,\n                    selectable = that.options.selectable,\n                    mode = Selectable.parseOptions(selectable);\n\n                if (that.selectable) {\n                    that.selectable.destroy();\n                    that.selectable = null;\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.destroy();\n                    that.rangeSelectable = null;\n                }\n\n                if (mode.range) {\n                    that.rangeSelectable = new RangeSelectable(that.wrapper, {\n                        widget: that,\n                        filter: \".k-calendar-monthview table \" + CELLSELECTORVALID,\n                        cellSelector: CELLSELECTOR,\n                        cellSelectorValid: CELLSELECTORVALID,\n                        change: that._rangeSelection.bind(that),\n                        reverse: that.options.allowReverse,\n                        resetOnStart: selectable.resetOnStart !== undefined$1 ? selectable.resetOnStart : true,\n                        ns: ns,\n                        inputSelectors: INPUTSELECTOR\n                    });\n                } else {\n                    that.selectable = new Selectable(that.wrapper, {\n                        aria: true,\n                        dragToSelect: false,\n                        multiple: mode.multiple,\n                        filter: \"table.k-calendar-table \" + CELLSELECTORVALID,\n                        selectableClass: \"k-calendar\",\n                        change: that._selection.bind(that),\n                        relatedTarget: that._onRelatedTarget.bind(that),\n                        unselect: that._unselecting.bind(that)\n                    });\n                }\n            },\n\n            _onRelatedTarget: function(target) {\n                var that = this;\n\n                if (that.selectable.options.multiple && target.is(CELLSELECTORVALID) && target.length > 1) {\n                    that._focusCell(target.first(), true);\n                }\n            },\n\n            _getFirstViewDate: function(currentView) {\n                var that = this;\n                var options = that.options;\n                var ranges = [];\n                var start;\n                var end;\n                var current = new Date(+that._current);\n                var i;\n\n                for (i = 0; i < options.views; i++) {\n                    start = currentView.first(current);\n                    end = currentView.last(current);\n\n                    if (+end > +options.max) {\n                        if (+start <= +options.max) {\n                            ranges.push({ start: start, end: new Date(+options.max) });\n                        }\n                        break;\n                    }\n\n                    ranges.push({ start: start, end: end });\n\n                    current = new Date(+shiftDate(end, currentView.name, 1));\n                }\n\n                current = new Date(+that._current);\n\n                for (i = 0; i < options.views; i++) {\n                    start = currentView.first(current);\n                    end = currentView.last(current);\n\n                    if (+start < +options.min) {\n                        if (+end >= +options.min) {\n                            ranges.push({ start: new Date(+options.min), end: end });\n                        }\n                        break;\n                    }\n\n                    ranges.push({ start: start, end: end });\n\n                    current = new Date(+shiftDate(start, currentView.name, -1));\n                }\n\n                start = ranges[0].start;\n\n                for (i = 0; i < options.views + 1; i++) {\n                    if (!ranges[i]) {\n                        break;\n                    }\n\n                    if (+start > +ranges[i].start) {\n                        start = ranges[i].start;\n                    }\n                }\n\n                return new Date(+start);\n            },\n\n            _canRenderNextView: function(viewDate) {\n                var fullYear = viewDate.getFullYear();\n                var month = viewDate.getMonth();\n                var date = viewDate.getDate();\n                var max = this.options.max;\n                var maxYear = max.getFullYear();\n                var maxMonth = max.getMonth();\n\n\n                if (fullYear < maxYear) {\n                    return true;\n                }\n\n                if (fullYear === maxYear && month < maxMonth) {\n                    return true;\n                }\n\n                if (fullYear === maxYear && month === maxMonth && date < max.getDate()) {\n                    return true;\n                }\n\n                if (fullYear === maxYear && month === maxMonth && date === max.getDate()) {\n                    return true;\n                }\n\n                return false;\n            },\n\n            _initViews: function(viewOptions) {\n                var that = this;\n                var options = that.options;\n                var index = calendar.viewsEnum[viewOptions.viewName];\n                var currentView = calendar.views[index];\n                var viewDate;\n\n                that._current = new DATE(+calendar.restrictValue(viewOptions.value, options.min, options.max));\n                that._views = [];\n                that._index = index;\n                viewDate = that._getFirstViewDate(currentView);\n                viewDate.setDate(1);\n\n                that._firstViewValue = new Date(+viewDate);\n\n                for (var i = 0; i < options.views; i++) {\n                    viewDate = i ? shiftDate(viewDate, currentView.name, 1) : viewDate;\n                    viewDate.setDate(1);\n\n                    if (!that._canRenderNextView(viewDate)) {\n                        break;\n                    }\n\n                    that._table = $(currentView.content($.extend({\n                        min: options.min,\n                        max: options.max,\n                        date: viewDate,\n                        url: options.url,\n                        dates: options.dates,\n                        format: options.format,\n                        culture: options.culture,\n                        disableDates: options.disableDates,\n                        showHeader: options.showViewHeader,\n                        isWeekColumnVisible: options.weekNumber,\n                        showOtherMonthDays: options.showOtherMonthDays,\n                        centuryCellsFormat: options.centuryCellsFormat,\n                        messages: options.messages,\n                        contentClasses: \"k-calendar-table\"\n                    }, that[currentView.name])));\n\n                    that._table.appendTo(that.tablesWrapper);\n                    that._views.push(that._table);\n                }\n\n                that._currentView = currentView;\n\n                that.tablesWrapper.attr(\"class\", \"k-calendar-view k-calendar-\" + currentView.name + `view ${that.options.orientation != \"vertical\" ? \"k-hstack\" : \"k-vstack\"} k-align-items-start k-justify-content-center`);\n\n                that._updateHeader();\n\n                that._aria();\n            },\n\n            _rangeSelection: function(e) {\n                let that = this,\n                    range = e.sender.range(),\n                    useEnd = e.sender._useEnd,\n                    useStart = e.sender._useStart,\n                    initialRange = that.selectRange() || {},\n                    start,\n                    end,\n                    target = initialRange.target;\n\n                if (range.start && range.start.length) {\n                    start = toDateObject(range.start.find(\"span\"));\n                }\n\n                if (range.end && range.end.length) {\n                    end = toDateObject(range.end.find(\"span\"));\n                }\n\n                if (target === END) {\n                    target = START;\n                } else {\n                    target = END;\n                }\n\n                that._range = { start: useStart ? initialRange.start : start, end: useEnd ? initialRange.end : end, target: target };\n\n                if (!that._preventChange) {\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _selection: function(e) {\n                let that = this,\n                    selectElements = e.sender.value(),\n                    domEvent = e.event,\n                    currentTarget = $(domEvent && domEvent.currentTarget),\n                    isCell = currentTarget.is(TD_NOT_WEEK_CELL),\n                    currentValue;\n\n                if (that._isSingleSelection()) {\n                    that._validateValue(selectElements[0] ? toDateObject(selectElements.first().find(\"span\")) : e.sender._lastActive ? toDateObject(e.sender._lastActive.find(\"span\")) : that.value());\n                }\n\n                if (that._isMultipleSelection()) {\n\n                    if (isCell) {\n                        currentValue = toDateObject(currentTarget.find(\"span\"));\n                    }\n\n                    if (domEvent && domEvent.ctrlKey) {\n                        if (isCell) {\n                            if (currentTarget.hasClass(SELECTED)) {\n                                that._selectDates.push(currentValue);\n                            } else {\n                                that._deselect(currentValue);\n                            }\n                        } else {\n                            that.element.find(\"table \" + CELLSELECTORVALID).each(function(index, element) {\n                                var value = toDateObject($(element).find(\"span\"));\n                                that._deselect(value);\n                            });\n                            that._addSelectedCellsToArray();\n                        }\n                    } else if (domEvent && domEvent.shiftKey) {\n                        that._selectRange(toDateObject(e.sender._lastActive ? e.sender._lastActive.find(\"span\") : selectElements.first().find(\"span\")), currentValue);\n                    } else if (isCell) {\n                        that._selectDates = [];\n                        that._selectDates.push(currentValue);\n                    } else {\n                        that._selectDates = [];\n                        that._addSelectedCellsToArray();\n                    }\n                }\n\n                if (!that._preventChange) {\n                    that.trigger(CHANGE);\n                }\n            },\n\n            _addSelectedCellsToArray: function() {\n                var that = this;\n                if (!that.selectable) {\n                    return;\n                }\n                that.selectable.value().each(function(index, item) {\n                    var date = toDateObject($(item.firstChild));\n                    if (!that.options.disableDates(date)) {\n                        that._selectDates.push(date);\n                    }\n                });\n            },\n\n            _deselect: function(date) {\n                var that = this;\n                var currentDateIndex = that._selectDates.map(Number).indexOf(+date);\n                 if (currentDateIndex != -1) {\n                    that._selectDates.splice(currentDateIndex, 1);\n                }\n            },\n\n            _unselecting: function(e) {\n                var that = this;\n                var element = e.element;\n\n                if (that._isSingleSelection() && !mobileOS && element.hasClass(FOCUSED)) {\n                    e.preventDefault();\n                }\n            },\n\n            _visibleRange: function() {\n                var tables = this.element.find(DOT + CALENDAR_VIEW + EMPTY + TABLE);\n                var firstDateInView = toDateObject(tables.first().find(CELLSELECTOR).first().find(\"span\"));\n                var lastDateInView = toDateObject(tables.last().find(CELLSELECTOR).last().find(\"span\"));\n                return { start: firstDateInView, end: lastDateInView };\n            },\n\n            _dateInViews: function(date) {\n                var that = this;\n                var tables = that.element.find(DOT + CALENDAR_VIEW + EMPTY + TABLE);\n                var firstDateInView = toDateObject(tables.first().find(CELLSELECTOR).first().find(\"span\"));\n                var lastDateInView = toDateObject(tables.last().find(CELLSELECTOR).last().find(\"span\"));\n\n                if (!date) {\n                    return;\n                }\n\n                date = new Date(date.toDateString());\n\n                return +date <= +lastDateInView && +date >= +firstDateInView;\n            },\n\n            _fillRange: function(start, end) {\n                var that = this;\n                var daysDifference;\n\n                that._selectDates = [];\n                daysDifference = daysBetweenTwoDates(start, end);\n                addDaysToArray(that._selectDates, daysDifference, start, that.options.disableDates);\n            },\n\n            _selectRange: function(start, end) {\n                var that = this;\n                var current;\n\n                if (+end < +start) {\n                    current = end;\n                    end = start;\n                    start = current;\n                }\n\n                that._fillRange(start, end);\n                that._visualizeSelectedDatesInView();\n            },\n\n            _header: function() {\n                var that = this;\n                var element = that.element;\n                var buttons;\n                var header = element.find(\".k-calendar-header\");\n\n                if (!header.length) {\n                    header = $(`<div class=\"k-calendar-header\">` +\n                        `<span id=\"calendar-title\" tabindex=\"-1\" data-href=\"#\" role=\"button\" class=\"k-calendar-title k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-primary\" aria-live=\"polite\"></span>` +\n                        '<span class=\"k-spacer\"></span>' +\n                        `<span class=\"k-calendar-nav\">` +\n                            `<span tabindex=\"-1\" data-href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-nav-prev\" ` + ARIA_LABEL + `=\"Previous\">${kendo.ui.icon({ icon: \"chevron-left\", iconClass: \"k-button-icon\" })}</span>` +\n                            `<span tabindex=\"-1\" data-href=\"#\" role=\"button\" class=\"k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-rounded-md k-button-flat k-button-flat-base k-icon-button k-calendar-nav-next\" ` + ARIA_LABEL + `=\"Next\">${kendo.ui.icon({ icon: \"chevron-right\", iconClass: \"k-button-icon\" })}</span>` +\n                        '</span>' +\n                    '</div>').prependTo(element);\n                }\n\n                that.header = header;\n\n                header.on(MOUSEENTER + ns + \" \" + MOUSELEAVE_NS + \" \" + FOCUS + ns + \" \" + BLUR + ns, \".k-button\", mousetoggle)\n                    .on(CLICK, function() { return false; })\n                    .on(CLICK + ns, \".k-button.k-calendar-title\", that._calendarTitleClick.bind(that))\n                    .on(CLICK + ns, \".k-button.k-calendar-nav-prev\", that._prevViewClick.bind(that))\n                    .on(CLICK + ns, \".k-button.k-calendar-nav-next\", that._nextViewClick.bind(that));\n\n                buttons = header.find(\".k-button\");\n\n                that._title = buttons.filter(\".k-calendar-title\");\n                that._navContainer = header.find(\".k-calendar-nav\");\n                that[PREVARROW] = buttons.filter(\".k-calendar-nav-prev\");\n                that[NEXTARROW] = buttons.filter(\".k-calendar-nav-next\");\n            },\n\n            _calendarTitleClick: function() {\n                this.navigateUp();\n                this.focus();\n                this.trigger(NAVIGATE);\n            },\n\n            _prevViewClick: function(e) {\n                e.preventDefault();\n                this.navigateToPast();\n                this.focus();\n                this.trigger(NAVIGATE);\n            },\n\n            _nextViewClick: function(e) {\n                e.preventDefault();\n                this.navigateToFuture();\n                this.focus();\n                this.trigger(NAVIGATE);\n            },\n\n            _wrapper: function() {\n                this.tablesWrapper = $('<div tabindex=\"0\" role=\"grid\" class=\"k-calendar-view\" aria-labelledby=\"calendar-title\" />').insertAfter(this.element[0].firstChild);\n            },\n\n            _templates: function() {\n                var that = this;\n                var options = that.options;\n                var month = options.month;\n                var content = month.content;\n                var weekNumber = month.weekNumber;\n                var empty = month.empty;\n\n                that.month = {\n                    content: template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link${data.linkClass}\" data-href=\"${data.url}\" ${kendo.attr(VALUE)}=\"${data.dateString}\" title=\"${data.title}\">${content ? kendo.template(content, { useWithBlock: !!content })(data) : data.value}</span></td>`, { useWithBlock: !!content }),\n                    empty: template((data) => `<td role=\"gridcell\"${empty ? '>' : ' class=\"k-calendar-td k-empty\">'}${(empty ? kendo.template(empty, { useWithBlock: !!empty })(data) : \"</span>\")}</td>`, { useWithBlock: !!empty }),\n                    weekNumber: template((data) => `<td class=\"k-calendar-td k-alt\">${weekNumber ? kendo.template(weekNumber, { useWithBlock: !!weekNumber })(data) : data.weekNumber}</td>`, { useWithBlock: !!weekNumber })\n                };\n            },\n\n            _footer: function() {\n                var that = this;\n                var options = that.options;\n                var template = options.footer !== false ? kendo.template(that.options.footer || ((data) => kendo.toString(data,\"D\", options.culture)), { useWithBlock: false }) : null;\n                var today = getToday();\n                var element = that.element;\n                var footer = element.find(\".k-calendar-footer\");\n\n                if (!template) {\n                    that._toggle(false);\n                    footer.hide();\n                    return;\n                }\n\n                if (!footer[0]) {\n                    footer = $(`<div class=\"k-calendar-footer\">\n                    <button tabindex=\"-1\" class=\"k-calendar-nav-today k-button ${kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size || \"medium\")} k-button-flat k-button-flat-primary k-rounded-md\">\n                        <span class=\"k-button-text\"></span>\n                    </button>\n                </div>`).appendTo(element);\n                }\n\n                that._today = footer.show()\n                    .find(\".k-button-flat-primary\")\n                    .attr(\"title\", kendo.toString(today, \"D\", that.options.culture));\n\n                footer.find(\".k-button-text\")\n                    .html(template(today));\n\n                that._toggle();\n            },\n\n            _navigate: function(arrow, modifier) {\n                var that = this;\n                var index = that._index + 1;\n                var currentValue = new DATE(+that._current);\n                var originaValue = new DATE(+that._current);\n                var offset;\n\n                arrow = that[arrow];\n\n                offset = that._cellByDate(currentValue).closest(TABLE).index();\n\n                if (modifier > 0) {\n                    offset = 1 - offset;\n                } else {\n                    offset = offset + 1;\n                }\n\n                if (!arrow || !arrow.hasClass(DISABLED)) {\n                    if (index > 3) {\n                        currentValue.setFullYear(currentValue.getFullYear() + 100 * (modifier * offset));\n                    } else {\n                        calendar.views[index].setDate(currentValue, (modifier * offset));\n                    }\n\n                    that.navigate(currentValue);\n\n                    if (that._dateInViews(originaValue)) {\n                        that._focusCell(that._cellByDate(originaValue));\n                        that._current = originaValue;\n                    } else {\n                        if (index > 3) {\n                            originaValue.setFullYear(originaValue.getFullYear() + 100 * modifier);\n                        } else {\n                            calendar.views[index].setDate(originaValue, modifier);\n                        }\n                        that._focusCell(that._cellByDate(originaValue));\n                        that._current = originaValue;\n                    }\n                }\n            },\n\n            _toggle: function(toggle) {\n                var that = this;\n                var options = that.options;\n                var isTodayDisabled = options.selectable !== RANGE && that.options.disableDates(getToday());\n                var link = that._today;\n\n                if (toggle === undefined$1) {\n                    toggle = isInRange(getToday(), options.min, options.max);\n                }\n\n                if (link) {\n                    link.off(CLICK + ns);\n\n                    if (toggle && !isTodayDisabled) {\n                        link.addClass(TODAY)\n                        .removeClass(DISABLED)\n                        .on(CLICK + ns, function(e) { that._todayClick(e); that.focus(); });\n                    } else {\n                        link.removeClass(TODAY)\n                        .addClass(DISABLED)\n                        .on(CLICK + ns, function prevent(e) {\n                            e.preventDefault();\n                        });\n                    }\n                }\n            },\n\n            _click: function(link) {\n                var that = this;\n                var options = that.options;\n                var currentValue = new Date(+that._current);\n                var value = toDateObject(link);\n\n                kendo.date.adjustDST(value, 0);\n\n                that._currentView.setDate(currentValue, value);\n                that._current = value;\n\n                if (that._currentView.name !== options.depth) {\n                    that.navigateDown(calendar.restrictValue(currentValue, options.min, options.max));\n                    that._focusCell(that._cellByDate(that._current));\n                    that.trigger(NAVIGATE);\n                } else {\n                    that._focusCell(link.closest(TD_NOT_WEEK_CELL));\n                }\n\n                that.focus();\n            },\n\n            _blur: function() {\n                var that = this;\n\n                if (that._cell) {\n                    that._cell.removeClass(FOCUSED);\n                }\n            },\n\n            _focus: function() {\n                var cell = this._cell;\n\n                if (!cell || !$.contains(this.tablesWrapper[0], cell[0])) {\n                    if (this._current && this._dateInViews(this._current)) {\n                        cell = this._cellByDate(this._current);\n                    } else {\n                        cell = this.tablesWrapper.find(CELLSELECTORVALID).first();\n                    }\n                }\n\n                this._focusCell(cell);\n            },\n\n            _focusCell: function(cell) {\n                var that = this;\n                var cellId = that._cellID;\n\n                if (that._cell && that._cell.length) {\n                    that._cell[0].removeAttribute(ARIA_LABEL);\n                    that._cell.removeClass(FOCUSED);\n                    that.tablesWrapper.removeAttr(ARIA_ACTIVEDESCENDANT);\n\n                    if (that._cell.attr(ID) === cellId) {\n                        that._cell[0].removeAttribute(ID);\n                    }\n                }\n\n                that._cell = cell;\n\n                if (cell.attr(ID)) {\n                    that.tablesWrapper.attr(ARIA_ACTIVEDESCENDANT, cell.attr(ID));\n                } else if (cellId) {\n                    cell.attr(ID, cellId);\n                    that.tablesWrapper.attr(ARIA_ACTIVEDESCENDANT, cellId);\n                }\n\n                cell.addClass(FOCUSED);\n\n                if (cell.length && that._currentView.name == MONTH) {\n                    that._current = toDateObject(cell.find(\"span\"));\n                }\n            },\n\n            _todayClick: function(e) {\n                var that = this;\n                var disabled = that.options.disableDates;\n                var today = getToday();\n                var navigate = false;\n\n                e.preventDefault();\n\n                if (disabled(today)) {\n                    return;\n                }\n\n                that._value = today;\n\n                if (that._isMultipleSelection()) {\n                    that._selectDates = [today];\n                }\n\n                if (that._isRangeSelection()) {\n                    that.rangeSelectable.clear(true);\n                    that._range = { start: today, end: null };\n                }\n\n                if (that._currentView.name != MONTH || !that._dateInViews(today)) {\n                    navigate = true;\n                }\n\n                that.navigate(today, that.options.depth);\n\n                if (that._isSingleSelection()) {\n                    that.selectable._lastActive = null;\n                }\n\n                if (navigate) {\n                    that.trigger(NAVIGATE);\n                }\n\n                that.trigger(CHANGE);\n            },\n\n            _validateValue: function(value) {\n                var that = this;\n                var options = that.options;\n                var min = options.min;\n                var max = options.max;\n\n                value = kendo.parseDate(value, options.format, options.culture);\n\n                if (value !== null) {\n                    value = new DATE(+value);\n\n                    if (!isInRange(value, min, max)) {\n                        value = null;\n                    }\n                }\n\n                if (value === null || !that.options.disableDates(new Date(+value))) {\n                    that._value = value;\n                } else if (that._value === undefined$1) {\n                    that._value = null;\n                }\n\n                return that._value;\n            },\n\n            _updateAria: function(ariaTemplate, date) {\n                var that = this;\n                var cell = that._cellByDate(date || that.current());\n                var valueType = that.view().valueType();\n                var current = date || that.current();\n                var text;\n\n                that._focusCell(cell);\n\n                if (valueType === MONTH) {\n                    text = kendo.toString(current, \"MMMM\");\n                } else if (valueType === \"date\") {\n                    text = kendo.toString(current, \"D\");\n                } else {\n                    text = cell.text();\n                }\n\n                cell.attr(ARIA_LABEL, ariaTemplate({ current: current, valueType: valueType, text: text }));\n                return cell.attr(ID);\n            },\n\n            clearSelection: function() {\n                var that = this;\n\n                if (that.selectable) {\n                    that.element.find(DOT + SELECTED).removeClass(SELECTED).removeAttr(ARIA_SELECTED);\n                }\n\n                if (that.rangeSelectable) {\n                    that.rangeSelectable.clear(true);\n                }\n            },\n\n            _restoreSelection: function() {\n                var that = this;\n                var range;\n\n                if (that._currentView.name !== that.options.depth) {\n                    return;\n                }\n\n                that._preventChange = true;\n\n                if (that._isRangeSelection()) {\n                    range = that.selectRange();\n\n                    if (!range || !range.start) {\n                        that._preventChange = false;\n                        return;\n                    }\n\n                    that.selectRange(range);\n                }\n\n                if (that._isSingleSelection() && that.value()) {\n                    that.selectable.value(that._cellByDate(that.value()));\n                }\n\n                if (that._isMultipleSelection()) {\n                    that._visualizeSelectedDatesInView();\n                }\n\n                that._preventChange = false;\n            },\n\n            _isMultipleSelection: function() {\n                let selectable = this.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n                return selectableOptions.multiple;\n            },\n\n            _isRangeSelection: function() {\n                let selectable = this.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n                return selectableOptions.range;\n            },\n\n            _isSingleSelection: function() {\n                let selectable = this.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n                return selectableOptions.single;\n            },\n\n            value: function(value) {\n                var that = this;\n                var cell;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                value = that._validateValue(value);\n\n                that.clearSelection();\n\n                if (value && !that._dateInViews(value)) {\n                    that.navigate(value);\n                }\n\n                if (value !== null && that._currentView.name === MONTH) {\n                    cell = that._cellByDate(value);\n\n                    if (that.selectable) {\n                        that.selectable.value(cell);\n                    }\n\n                    if (that.rangeSelectable) {\n                        that.rangeSelectable.start(cell);\n                        that.rangeSelectable._lastActive = cell;\n                    }\n                }\n            },\n\n            selectDates: function(dates) {\n                var that = this;\n                var validSelectedDates;\n                var datesUnique;\n\n                if (dates === undefined$1) {\n                    return that._selectDates;\n                }\n\n                datesUnique = dates\n                    .map(function(date) { return date.getTime(); })\n                    .filter(function(date, position, array) {\n                        return array.indexOf(date) === position;\n                    })\n                    .map(function(time) { return new Date(time); });\n\n                validSelectedDates = $.grep(datesUnique, function(value) {\n                    if (value) {\n                        return +that._validateValue(new Date(value.setHours(0, 0, 0, 0))) === +value;\n                    }\n                });\n                that._selectDates = validSelectedDates.length > 0 ? validSelectedDates : (datesUnique.length === 0 ? datesUnique : that._selectDates);\n                that._visualizeSelectedDatesInView();\n            },\n\n            selectRange: function(range) {\n                let that = this,\n                    startInRange,\n                    endInRange,\n                    visibleRange;\n\n                if (range === undefined$1) {\n                    return that._range;\n                }\n\n                that._range = range;\n\n                visibleRange = that._visibleRange();\n\n                startInRange = that._dateInViews(range.start);\n                endInRange = range.end && that._dateInViews(range.end);\n\n                if (!startInRange) {\n                    if (endInRange) {\n                        if (range.start) {\n                            that.rangeSelectable.selectTo(that._cellByDate(range.end));\n                        } else {\n                            that.rangeSelectable.clear(true);\n                            that.rangeSelectable.end(that._cellByDate(range.end));\n                        }\n                    } else if (range.start) {\n                        that.rangeSelectable.start(that._cellByDate(range.start));\n                    }\n                }\n\n                if (startInRange && endInRange) {\n                    that.rangeSelectable.range(that._cellByDate(range.start), that._cellByDate(range.end), false, that.options.allowReverse);\n                }\n\n                if (range.end && startInRange && !endInRange) {\n                    that.rangeSelectable.selectFrom(that._cellByDate(range.start));\n                }\n\n                if (!range.end && startInRange) {\n                    that.rangeSelectable.clear(true);\n                    that.rangeSelectable.start(that._cellByDate(range.start));\n                }\n\n                if (+visibleRange.start > +range.start && +visibleRange.end < +range.end) {\n                    that.rangeSelectable.mid(that.element.find(CELLSELECTORVALID));\n                }\n            }\n        });\n\n        kendo.ui.plugin(MultiViewCalendar);\n\n        function mousetoggle(e) {\n            var disabled = $(this).hasClass(\"k-disabled\");\n\n            if (!disabled) {\n                $(this).toggleClass(HOVER, MOUSEENTER.indexOf(e.type) > -1 || e.type == FOCUS);\n            }\n        }\n\n        function addDaysToArray(array, numberOfDays, fromDate, disableDates) {\n            for (var i = 0; i <= numberOfDays; i++) {\n                var nextDay = new Date(fromDate.getTime());\n                nextDay = new Date(nextDay.setDate(nextDay.getDate() + i));\n                if (!disableDates(nextDay)) {\n                    array.push(nextDay);\n                }\n            }\n        }\n\n        function daysBetweenTwoDates(startDate, endDate) {\n            if (+endDate < +startDate) {\n                var temp = +startDate;\n                calendar.views[0].setDate(startDate, endDate);\n                calendar.views[0].setDate(endDate, new Date(temp));\n            }\n            var fromDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\n            var endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\n\n            return Math.ceil((+endDateUTC - +fromDateUTC) / kendo.date.MS_PER_DAY);\n        }\n\n        function shiftDate(value, dimension, numberOfViews) {\n            var current;\n            if (dimension === MONTH) {\n                current = new DATE(value.getFullYear(), value.getMonth() + numberOfViews, value.getDate());\n                current.setFullYear(value.getFullYear());\n                if (Math.abs(current.getMonth() - value.getMonth()) > numberOfViews || numberOfViews > 10) {\n                    current.setMonth(value.getMonth() + numberOfViews);\n                    current = calendar.views[0].last(current);\n                }\n                return current;\n            } else if (dimension === \"year\") {\n                current = new DATE(1, value.getMonth(), value.getDate());\n                current.setFullYear(value.getFullYear() + numberOfViews);\n                if (Math.abs(current.getFullYear() - value.getFullYear()) > numberOfViews) {\n                    current = new DATE(1, value.getMonth(), 1);\n                    current.setFullYear(value.getFullYear() + numberOfViews);\n                    current = calendar.views[1].last(current);\n                }\n                return current;\n            } else if (dimension === \"decade\") {\n                current = new DATE(1, value.getMonth(), value.getDate());\n                current.setFullYear(value.getFullYear() + 10 * numberOfViews);\n                if (Math.abs(current.getFullYear() - value.getFullYear()) > 10 * numberOfViews) {\n                    current = new DATE(1, value.getMonth(), 1);\n                    current.setFullYear(value.getFullYear() + 10 * numberOfViews);\n                    current = calendar.views[2].last(current);\n                }\n                return current;\n            } else if (dimension === \"century\") {\n                current = new DATE(1, value.getMonth(), value.getDate());\n                current.setFullYear(value.getFullYear() + 100 * numberOfViews);\n                if (Math.abs(current.getFullYear() - value.getFullYear()) > 100 * numberOfViews) {\n                    current = new DATE(1, value.getMonth(), 1);\n                    current.setFullYear(value.getFullYear() + 100 * numberOfViews);\n                    current = calendar.views[3].last(current);\n                }\n                return current;\n            }\n        }\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}