{"version":3,"sources":["raw-js/kendo.listview.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendolistview","js","this","$","undefined$1","kendo","window","CHANGE","CANCEL","DATABOUND","DATABINDING","Widget","ui","keys","EMPTY_STRING_TEMPLATE","FOCUSSELECTOR","PROGRESS","ERROR","FOCUSED","SELECTED","KEDITITEM","PAGER_CLASS","ITEM_CLASS","ARIA_ROLE","ARIA_LABEL","ARIA_MULTISELECTABLE","ARIA_ACTIVEDESCENDANT","EDIT","REMOVE","SAVE","TOUCHSTART","NS","activeElement","_activeElement","progress","DataSource","data","ListView","DataBoundWidget","extend","init","element","options","that","Array","isArray","dataSource","fn","call","wrapper","id","_itemId","guid","_element","_layout","_dataSource","_setContentHeight","_templates","_navigatable","_selectable","_pageable","_crudHandlers","_scrollable","autoBind","fetch","notify","events","name","ariaLabel","selectable","navigatable","pageable","height","template","altTemplate","editTemplate","contentTemplate","contentElement","bordered","borders","layout","flex","direction","wrap","grid","scrollable","setOptions","destroy","_item","action","content","children","items","dataItem","attr","uid","closest","getByUid","setDataSource","_bindScrollable","_unbindDataSource","unbind","_refreshHandler","_progressHandler","_errorHandler","isPlainObject","pageSize","refresh","bind","_progress","_error","create","toggle","opacity","addClass","document","createElement","appendTo","css","elementClassNames","contentClassNames","add","removeClass","index","className","indexOf","push","contentPadding","cols","rows","rowHeight","gutter","join","is","innerHeight","e","item","idx","length","view","html","role","active","endlessAppend","_endlessFetchInProgress","_skipRerenderItemsCount","trigger","_destroyEditable","append","not","_ariaAttributes","eq","total","_focusNext","current","next","find","removeAttr","_hasBindingTarget","editable","filter","replaceWith","_ariaLabelValue","Selectable","parseOptions","multiple","pagerWrap","settings","position","format","prependTo","pager","Pager","pagerId","multi","aria","change","on","target","keyCode","SPACEBAR","currentTarget","preventDefault","ctrlKey","hasClass","clear","value","originalPageSize","_endlessPageSize","off","scrollTop","clientHeight","scrollHeight","endless","candidate","_current","_scrollTo","container","UseJQueryoffset","SCROLL","scrollDirectionFunc","dimension","elementOffset","offset","toLowerCase","elementDimension","containerScrollAmount","containerDimension","_tabindex","key","canHandle","isTextBox","editItem","ESC","ENTER","UP","LEFT","prev","DOWN","RIGHT","PAGEUP","page","PAGEDOWN","HOME","END","blur","save","one","edit","cancel","focusElement","clearSelection","select","first","_modelFromElement","_closeEditable","kendoEditable","model","clearContainer","errorTemplate","end","sync","remove","cancelChanges","hide","insert","touchstartNs","clickNs","setTimeout","plugin","jQuery"],"mappings":"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","file":"kendo.listview.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.data.js'), require('kendo.editable.js'), require('kendo.selectable.js'), require('kendo.pager.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.data', 'kendo.editable', 'kendo.selectable', 'kendo.pager'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendolistview = global.kendolistview || {}, global.kendolistview.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"listview\",\n        name: \"ListView\",\n        category: \"web\",\n        description: \"The ListView widget offers rich support for interacting with data.\",\n        depends: [ \"data\" ],\n        features: [ {\n            id: \"listview-editing\",\n            name: \"Editing\",\n            description: \"Support for record editing\",\n            depends: [ \"editable\" ]\n        }, {\n            id: \"listview-selection\",\n            name: \"Selection\",\n            description: \"Support for selection\",\n            depends: [ \"selectable\" ]\n        }, {\n            id: \"listview-paging\",\n            name: \"Paging\",\n            description: \"Support for paging\",\n            depends: [ \"pager\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            CHANGE = \"change\",\n            KENDO_KEYDOWN = \"kendoKeydown\",\n            CANCEL = \"cancel\",\n            DATABOUND = \"dataBound\",\n            DATABINDING = \"dataBinding\",\n            Widget = kendo.ui.Widget,\n            keys = kendo.keys,\n            EMPTY_STRING = \"\",\n            EMPTY_STRING_TEMPLATE = () => EMPTY_STRING,\n            DOT = \".\",\n            FOCUSSELECTOR = \"> *:not(.k-loading-mask)\",\n            PROGRESS = \"progress\",\n            ERROR = \"error\",\n            FOCUSED = \"k-focus\",\n            SELECTED = \"k-selected\",\n            KEDITITEM = \"k-edit-item\",\n            PAGER_CLASS = \"k-listview-pager\",\n            ITEM_CLASS = \"k-listview-item\",\n            ARIA_SETSIZE = \"aria-setsize\",\n            ARIA_POSINSET = \"aria-posinset\",\n            ARIA_ROLE = \"role\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_MULTISELECTABLE = \"aria-multiselectable\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            EDIT = \"edit\",\n            REMOVE = \"remove\",\n            SAVE = \"save\",\n            MOUSEDOWN = \"mousedown\",\n            CLICK = \"click\",\n            TOUCHSTART = \"touchstart\",\n            NS = \".kendoListView\",\n            activeElement = kendo._activeElement,\n            progress = kendo.ui.progress,\n            DataSource = kendo.data.DataSource;\n\n        var ListView = kendo.ui.DataBoundWidget.extend( {\n            init: function(element, options) {\n                var that = this;\n\n                options = Array.isArray(options) ? { dataSource: options } : options;\n\n                Widget.fn.init.call(that, element, options);\n\n                options = that.options;\n\n                that.wrapper = element = that.element;\n\n                if (element[0].id) {\n                    that._itemId = element[0].id + \"_lv_active\";\n                } else {\n                    that._itemId = kendo.guid() + \"_lv_active\";\n                }\n\n                that._element();\n\n                that._layout();\n\n                that._dataSource();\n\n                that._setContentHeight();\n\n                that._templates();\n\n                that._navigatable();\n\n                that._selectable();\n\n                that._pageable();\n\n                that._crudHandlers();\n\n                that._scrollable();\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CHANGE,\n                CANCEL,\n                DATABINDING,\n                DATABOUND,\n                EDIT,\n                REMOVE,\n                SAVE,\n                KENDO_KEYDOWN\n            ],\n\n            options: {\n                name: \"ListView\",\n                ariaLabel: null,\n                autoBind: true,\n                selectable: false,\n                navigatable: false,\n                pageable: false,\n                height: null,\n                template: EMPTY_STRING_TEMPLATE,\n                altTemplate: null,\n                editTemplate: null,\n                contentTemplate: () => \"<div data-content='true' />\",\n                contentElement: \"div\",\n                bordered: true,\n                borders: \"\",\n                layout: \"\",\n                flex: {\n                    direction: \"row\",\n                    wrap: \"nowrap\"\n                },\n                grid: {},\n                scrollable: false\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                this._layout();\n\n                this._templates();\n\n                if (this.selectable) {\n                    this.selectable.destroy();\n                    this.selectable = null;\n                }\n\n                this._selectable();\n            },\n\n            _templates: function() {\n                var options = this.options;\n\n                this.template = kendo.template(options.template || EMPTY_STRING_TEMPLATE);\n                this.altTemplate = kendo.template(options.altTemplate || options.template || EMPTY_STRING_TEMPLATE);\n                this.editTemplate = kendo.template(options.editTemplate || EMPTY_STRING_TEMPLATE);\n            },\n\n            _item: function(action) {\n                return this.content.children()[action]();\n            },\n\n            items: function() {\n                return this.content.children(\":not(.k-loading-mask)\");\n            },\n\n            dataItem: function(element) {\n                var attr = kendo.attr(\"uid\");\n                var uid = $(element).closest(\"[\" + attr + \"]\").attr(attr);\n\n                return this.dataSource.getByUid(uid);\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n\n                this._pageable();\n\n                if (this.options.autoBind) {\n                    dataSource.fetch();\n                }\n\n                if (this.options.scrollable === \"endless\") {\n                    this._bindScrollable();\n                }\n            },\n\n            _unbindDataSource: function() {\n                var that = this;\n\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                                .unbind(PROGRESS, that._progressHandler)\n                                .unbind(ERROR, that._errorHandler);\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    pageable = that.options.pageable,\n                    dataSource = that.options.dataSource || {};\n\n                if ($.isPlainObject(pageable) && pageable.pageSize !== undefined$1) {\n                    dataSource.pageSize = pageable.pageSize;\n                }\n\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._progress.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = DataSource.create(dataSource)\n                                    .bind(CHANGE, that._refreshHandler)\n                                    .bind(PROGRESS, that._progressHandler)\n                                    .bind(ERROR, that._errorHandler);\n            },\n\n            _progress: function(toggle) {\n                var element = this.wrapper;\n                if (toggle && this.content.height()) {\n                    element = this.content;\n                }\n                progress(element, toggle, { opacity: true });\n            },\n\n            _error: function() {\n                progress(this.content, false);\n            },\n\n            _element: function() {\n                var options = this.options;\n                var height = options.height;\n\n                this.element.addClass(\"k-listview\");\n\n\n                if (options.contentElement) {\n                    this.content = $(document.createElement(options.contentElement)).appendTo(this.element);\n                } else {\n                    this.content = this.element;\n                }\n\n                if (height) {\n                    this.element.css(\"height\", height);\n                }\n            },\n\n            _layout: function() {\n                var that = this;\n                var options = that.options;\n                var flex = options.flex;\n                var grid = options.grid;\n                var element = that.element;\n                var elementClassNames = [\"k-listview\"];\n                var content = that.content;\n                var contentClassNames = [\"k-listview-content\"];\n\n                element.add(content).removeClass(function(index, className) {\n                    if (className.indexOf(\"k-\") >= 0) {\n                        return true;\n                    }\n                });\n\n                // Element class names\n                if (options.bordered === true) {\n                    elementClassNames.push(\"k-listview-bordered\");\n                }\n\n                if (typeof options.borders === \"string\" && options.borders !== EMPTY_STRING) {\n                    elementClassNames.push(\"k-listview-borders-\" + options.borders);\n                }\n\n\n                // Content class names\n                if (typeof options.contentPadding === \"string\" && options.contentPadding !== EMPTY_STRING) {\n                    contentClassNames.push(\"k-listview-content-padding-\" + options.contentPadding);\n                }\n\n                if (typeof options.layout === \"string\" && options.layout !== EMPTY_STRING) {\n                    contentClassNames.push(\"k-d-\" + options.layout);\n                }\n\n                if (options.layout === \"flex\" && typeof flex === \"object\") {\n                    if (typeof flex.direction === \"string\" && flex.direction !== \"\") {\n                        contentClassNames.push(\"k-flex-\" + flex.direction);\n                    }\n\n                    if (typeof flex.wrap === \"string\" && flex.wrap !== \"\") {\n                        contentClassNames.push(\"k-flex-\" + flex.wrap);\n                    }\n                }\n\n                if (options.layout === \"grid\" && typeof grid === \"object\") {\n                    if (typeof grid.cols === \"number\") {\n                        content.css(\"grid-template-columns\", \"repeat(\" + grid.cols + \", 1fr)\");\n                    } else if (typeof grid.cols === \"string\") {\n                        content.css(\"grid-template-columns\", grid.cols);\n                    }\n\n                    if (typeof grid.rows === \"number\") {\n                        content.css(\"grid-template-rows\", \"repeat(\" + grid.rows + \", \" + (grid.rowHeight !== undefined$1 ? grid.rowHeight : \"1fr\") + \")\");\n                    } else if (typeof grid.rows === \"string\") {\n                        content.css(\"grid-template-rows\", grid.rows);\n                    }\n\n                    if (typeof grid.gutter === \"number\") {\n                        content.css(\"grid-gap\", grid.gutter);\n                    } else if (typeof grid.gutter === \"string\") {\n                        content.css(\"grid-gap\", grid.gutter);\n                    }\n                }\n\n                that.element.addClass(elementClassNames.join(\" \"));\n                that.content.addClass(contentClassNames.join(\" \"));\n\n            },\n\n            _setContentHeight: function() {\n                var that = this,\n                    options = that.options,\n                    height;\n\n                if (options.scrollable && that.wrapper.is(\":visible\")) {\n\n                    height = that.wrapper.innerHeight();\n                    that.content.height(height);\n                }\n            },\n\n            refresh: function(e) {\n                var that = this,\n                    view = that.dataSource.view(),\n                    data,\n                    items,\n                    item,\n                    html = \"\",\n                    idx,\n                    length,\n                    template = that.template,\n                    altTemplate = that.altTemplate,\n                    options = that.options,\n                    role = options.selectable ? \"option\" : \"listitem\",\n                    active = activeElement(),\n                    endlessAppend = that._endlessFetchInProgress,\n                    index = endlessAppend ? that._skipRerenderItemsCount : 0,\n                    scrollable = that.options.scrollable;\n\n                e = e || {};\n\n                if (e.action === \"itemchange\") {\n                    if (!that._hasBindingTarget() && !that.editable) {\n                        data = e.items[0];\n                        item = that.items().filter(\"[\" + kendo.attr(\"uid\") + \"=\" + data.uid + \"]\");\n\n                        if (item.length > 0) {\n                            idx = item.index();\n\n                            item.replaceWith(template(data));\n                            item = that.items().eq(idx);\n                            item.attr(kendo.attr(\"uid\"), data.uid);\n\n                            that.trigger(\"itemChange\", {\n                                item: item,\n                                data: data\n                            });\n                        }\n                    }\n\n                    return;\n                }\n\n                if (that.trigger(DATABINDING, { action: e.action || \"rebind\", items: e.items, index: e.index })) {\n                    return;\n                }\n\n                if (!endlessAppend) {\n                    that._destroyEditable();\n                }\n\n                for (idx = index, length = view.length; idx < length; idx++) {\n                    if (idx % 2) {\n                        html += altTemplate(view[idx]);\n                    } else {\n                        html += template(view[idx]);\n                    }\n                }\n\n                if (endlessAppend) {\n                    that.content.append(html);\n                } else {\n                    that.content.html(html);\n                }\n\n                items = that.items().not(\".k-loading-mask\");\n\n                that._ariaAttributes(view.length);\n\n                for (idx = index, length = view.length; idx < length; idx++) {\n                    item = items.eq(idx);\n\n                    item.addClass(ITEM_CLASS);\n\n                    item.attr(kendo.attr(\"uid\"), view[idx].uid)\n                        .attr(ARIA_ROLE, role);\n\n                    if (that.options.selectable) {\n                        item.attr(\"aria-selected\", \"false\");\n                    }\n\n                    if (that.options.pageable) {\n                        item.attr(ARIA_SETSIZE, that.dataSource.total());\n                        item.attr(ARIA_POSINSET, that.dataSource.indexOf(that.dataItem(item)) + 1);\n                    }\n                }\n\n                if (that.content[0] === active && that.options.navigatable) {\n                    if (that._focusNext) {\n                        that.current(that.current().next());\n                    } else {\n                        if (!scrollable) {\n                            that.current(items.eq(0));\n                        }\n                    }\n                }\n\n                if (that.element.attr(ARIA_ACTIVEDESCENDANT) &&\n                    that.element.find(\"#\" + that.element.attr(ARIA_ACTIVEDESCENDANT)).length === 0) {\n                        that.element.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                that._setContentHeight();\n\n                that._progress(false);\n                that._endlessFetchInProgress = null;\n\n                that.trigger(DATABOUND, { action: e.action || \"rebind\", items: e.items, index: e.index });\n            },\n\n            _ariaAttributes: function(length) {\n                var content = this.content,\n                    options = this.options,\n                    selectable = options.selectable;\n\n                this._ariaLabelValue = this._ariaLabelValue || this.options.ariaLabel;\n\n                if (length === 0) {\n                    content.removeAttr(ARIA_ROLE);\n                    content.removeAttr(ARIA_MULTISELECTABLE);\n\n                    if (content.attr(ARIA_LABEL)) {\n                        this._ariaLabelValue = content.attr(ARIA_LABEL);\n                        content.removeAttr(ARIA_LABEL);\n                    }\n                } else {\n                    content.attr(ARIA_ROLE, selectable ? \"listbox\" : \"list\");\n\n                    if (selectable && kendo.ui.Selectable.parseOptions(selectable).multiple) {\n                        content.attr(ARIA_MULTISELECTABLE, true);\n                    }\n\n                    if (this._ariaLabelValue) {\n                        content.attr(ARIA_LABEL, this._ariaLabelValue);\n                    }\n                }\n            },\n\n            _pageable: function() {\n                var that = this,\n                    pageable = that.options.pageable,\n                    navigatable = that.options.navigatable,\n                    pagerWrap,\n                    settings;\n\n                if (!pageable) {\n                    return;\n                }\n\n                pagerWrap = that.wrapper.find(DOT + PAGER_CLASS);\n\n                if (!pagerWrap.length) {\n                    pagerWrap = $('<div />').addClass(PAGER_CLASS);\n                }\n\n                if (pageable.position === \"top\") {\n                    pagerWrap\n                        .addClass(kendo.format(\"{0}-{1}\", PAGER_CLASS, pageable.position))\n                        .prependTo(that.wrapper);\n                } else {\n                    pagerWrap.appendTo(that.wrapper);\n                }\n\n                if (that.pager) {\n                    that.pager.destroy();\n                }\n\n                if (typeof pageable === \"object\" && pageable instanceof kendo.ui.Pager) {\n                    that.pager = pageable;\n                } else {\n                    pagerWrap = pageable.pagerId ? $(\"#\" + pageable.pagerId) : pagerWrap;\n\n                    settings = $.extend({}, pageable, {\n                        dataSource: that.dataSource,\n                        navigatable: navigatable,\n                        pagerId: null\n                    });\n\n                    that.pager = new kendo.ui.Pager(pagerWrap, settings);\n                }\n            },\n\n            _selectable: function() {\n                var that = this,\n                    multi,\n                    current,\n                    selectable = that.options.selectable,\n                    navigatable = that.options.navigatable;\n\n                if (selectable) {\n                    multi = kendo.ui.Selectable.parseOptions(selectable).multiple;\n\n                    that.selectable = new kendo.ui.Selectable(that.element, {\n                        aria: true,\n                        multiple: multi,\n                        filter: that.options.contentElement ? \".k-listview-content \" + FOCUSSELECTOR : FOCUSSELECTOR,\n                        change: function() {\n                            that.trigger(CHANGE);\n                        }\n                    });\n\n                    if (navigatable) {\n                        that.element.on(\"keydown\" + NS, function(e) {\n\n                            if (!$(e.target).is(that.element)) { return; }\n\n                            if (e.keyCode === keys.SPACEBAR) {\n                                current = that.current();\n\n                                if (e.target == e.currentTarget) {\n                                    e.preventDefault();\n                                }\n\n                                if (multi) {\n                                    if (!e.ctrlKey) {\n                                        that.selectable.clear();\n                                    } else {\n                                        if (current && current.hasClass(SELECTED)) {\n                                            current.removeClass(SELECTED);\n                                            that.trigger(CHANGE);\n                                            return;\n                                        }\n                                    }\n                                } else {\n                                    that.selectable.clear();\n                                }\n\n                                that.selectable.value(current);\n                                that.trigger(CHANGE);\n                            }\n                        });\n                    }\n                }\n            },\n\n            _scrollable: function() {\n                var that = this;\n                var scrollable = that.options.scrollable;\n\n                if (scrollable) {\n\n                    that.content.css({\n                        \"overflow-y\": \"scroll\",\n                        \"position\": \"relative\",\n                        \"-webkit-overflow-scrolling\": \"touch\"\n                    });\n\n                    if (scrollable === \"endless\") {\n                        that._bindScrollable();\n                    }\n                }\n            },\n\n            _bindScrollable: function() {\n                var that = this;\n                var originalPageSize = that._endlessPageSize = that.dataSource.options.pageSize;\n\n                that.content\n                    .off(\"scroll\" + NS)\n                    .on(\"scroll\" + NS, function() {\n                        if (this.scrollTop + this.clientHeight - this.scrollHeight >= -15 &&\n                        !that._endlessFetchInProgress &&\n                        that._endlessPageSize < that.dataSource.total()) {\n                            that._skipRerenderItemsCount = that._endlessPageSize;\n                            that._endlessPageSize = that._skipRerenderItemsCount + originalPageSize;\n                            that.dataSource.options.endless = true;\n                            that._endlessFetchInProgress = true;\n                            that.dataSource.pageSize(that._endlessPageSize);\n                        }\n                    });\n            },\n\n            current: function(candidate) {\n                var that = this,\n                    element = that.element,\n                    current = that._current,\n                    id = that._itemId;\n\n                if (candidate === undefined$1) {\n                    return current;\n                }\n\n                if (current && current[0]) {\n                    if (current[0].id === id) {\n                        current.removeAttr(\"id\");\n                    }\n\n                    current.removeClass(FOCUSED);\n                    element.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                if (candidate && candidate[0]) {\n                    id = candidate[0].id || id;\n\n                    that._scrollTo(candidate[0]);\n\n                    element.attr(ARIA_ACTIVEDESCENDANT, id);\n                    candidate.addClass(FOCUSED).attr(\"id\", id);\n                }\n\n                that._current = candidate;\n            },\n\n            _scrollTo: function(element) {\n                var that = this,\n                    content = that.content,\n                    container,\n                    UseJQueryoffset = false,\n                    SCROLL = \"scroll\";\n\n                if (content.css(\"overflow\") === \"auto\" || content.css(\"overflow\") === SCROLL || content.css(\"overflow-y\") === SCROLL) {\n                    container = content[0];\n                } else {\n                    container = window;\n                    UseJQueryoffset = true;\n                }\n\n                var scrollDirectionFunc = function(direction, dimension) {\n\n                    var elementOffset = UseJQueryoffset ? $(element).offset()[direction.toLowerCase()] : element[\"offset\" + direction],\n                        elementDimension = element[\"client\" + dimension],\n                        containerScrollAmount = $(container)[SCROLL + direction](),\n                        containerDimension = $(container)[dimension.toLowerCase()]();\n\n                    if (elementOffset + elementDimension > containerScrollAmount + containerDimension) {\n                        $(container)[SCROLL + direction](elementOffset + elementDimension - containerDimension);\n                    } else if (elementOffset < containerScrollAmount) {\n                        $(container)[SCROLL + direction](elementOffset);\n                    }\n                };\n\n                scrollDirectionFunc(\"Top\", \"Height\");\n                scrollDirectionFunc(\"Left\", \"Width\");\n            },\n\n            _navigatable: function() {\n                var that = this,\n                    navigatable = that.options.navigatable,\n                    element = that.element,\n                    content = that.content,\n                    clickCallback = function(e) {\n                        that.current($(e.currentTarget));\n                        if (!$(e.target).is(\":button, a, :input, a > .k-icon, a > k-svg-icon, textarea\")) {\n                            kendo.focusElement(element);\n                        }\n                    };\n\n                if (navigatable) {\n                    that._tabindex();\n\n                    element\n                        .on(\"focus\" + NS, function() {\n                            var current = that._current;\n\n                            if (!current || !current.is(\":visible\")) {\n                                current = that._item(\"first\");\n                            }\n\n                            that.current(current);\n                        })\n                        .on(\"focusout\" + NS, function() {\n                            if (that._current) {\n                                that._current.removeClass(FOCUSED);\n                            }\n                        })\n                        .on(\"keydown\" + NS, that, function(e) {\n                            var key = e.keyCode,\n                                current = that.current(),\n                                target = $(e.target),\n                                canHandle = !target.is(\":button, textarea, a, a > .t-icon, input\"),\n                                isTextBox = target.is(\":text, :password\"),\n                                preventDefault = kendo.preventDefault,\n                                editItem = content.find(\".\" + KEDITITEM),\n                                active = activeElement(), idx,\n                                scrollable = that.options.scrollable;\n\n                            if (target.hasClass(PAGER_CLASS) || (!canHandle && !isTextBox && key !== keys.ESC) || (isTextBox && key !== keys.ESC && key !== keys.ENTER)) {\n                                return;\n                            }\n\n                            if (key === keys.UP || key === keys.LEFT) {\n                                if (current && current[0]) {\n                                    current = current.prev();\n                                }\n\n                                if (current && current[0]) {\n                                    that.current(current);\n                                }\n                                else if (!scrollable) {\n                                    that.current(that._item(\"last\"));\n                                }\n                                preventDefault(e);\n                            }\n\n                            if (key === keys.DOWN || key === keys.RIGHT) {\n                                if (scrollable) {\n                                    if (that.options.scrollable === \"endless\" && !current.next().length) {\n                                        that.content[0].scrollTop = that.content[0].scrollHeight;\n                                        that._focusNext = true;\n                                    } else {\n                                        current = current.next();\n\n                                        if (current && current[0]) {\n                                            that.current(current);\n                                        }\n                                    }\n                                }\n                                else {\n                                    current = current.next();\n                                    that.current(!current || !current[0] ? that._item(\"first\") : current);\n                                }\n                                preventDefault(e);\n                            }\n\n                            if (key === keys.PAGEUP) {\n                                that.current(null);\n                                that.dataSource.page(that.dataSource.page() - 1);\n                                preventDefault(e);\n                            }\n\n                            if (key === keys.PAGEDOWN) {\n                                that.current(null);\n                                that.dataSource.page(that.dataSource.page() + 1);\n                                preventDefault(e);\n                            }\n\n                            if (key === keys.HOME) {\n                                that.current(that._item(\"first\"));\n                                preventDefault(e);\n                            }\n\n                            if (key === keys.END) {\n                                that.current(that._item(\"last\"));\n                                preventDefault(e);\n                            }\n\n                            if (key === keys.ENTER) {\n                                if (editItem.length !== 0 && (canHandle || isTextBox)) {\n                                    idx = that.items().index(editItem);\n\n                                    if (active) {\n                                        active.blur();\n                                    }\n\n                                    that.save();\n\n                                    var focusAgain = function() {\n                                        that.element.trigger(\"focus\");\n                                        that.current(that.items().eq(idx));\n                                    };\n\n                                    that.one(\"dataBound\", focusAgain);\n                                } else if (that.options.editTemplate) {\n                                    that.edit(current);\n                                }\n                            }\n\n                            if (key === keys.ESC) {\n                                editItem = content.find(\".\" + KEDITITEM);\n\n                                if (editItem.length === 0) {\n                                    return;\n                                }\n\n                                idx = that.items().index(editItem);\n                                that.cancel();\n                                that.element.trigger(\"focus\");\n                                that.current(that.items().eq(idx));\n                            }\n                        });\n\n                    element.on(MOUSEDOWN + NS + \" \" + TOUCHSTART + NS, that.options.contentElement ? \".k-listview-content \" + FOCUSSELECTOR : FOCUSSELECTOR, clickCallback.bind(that));\n                }\n            },\n\n            clearSelection: function() {\n                var that = this;\n                that.selectable.clear();\n            },\n\n            select: function(items) {\n                var that = this,\n                    selectable = that.selectable;\n\n                items = $(items);\n\n                if (items.length) {\n                    if (!selectable.options.multiple) {\n                        selectable.clear();\n                        items = items.first();\n                    }\n                    selectable.value(items);\n                    return;\n                }\n\n                return selectable.value();\n            },\n\n            _destroyEditable: function() {\n                var that = this;\n                if (that.editable) {\n                    that.editable.destroy();\n                    delete that.editable;\n                }\n            },\n\n            _modelFromElement: function(element) {\n                var uid = element.attr(kendo.attr(\"uid\"));\n\n                return this.dataSource.getByUid(uid);\n            },\n\n            _closeEditable: function() {\n                var that = this,\n                    editable = that.editable,\n                    options = that.options,\n                    role = options.selectable ? \"option\" : \"listitem\",\n                    data,\n                    item,\n                    index,\n                    template = that.template;\n\n                if (editable) {\n                    if (editable.element.index() % 2) {\n                        template = that.altTemplate;\n                    }\n\n                    data = that._modelFromElement(editable.element);\n                    that._destroyEditable();\n\n                    index = editable.element.index();\n                    editable.element.replaceWith(template(data));\n                    item = that.items().eq(index);\n                    item.addClass(ITEM_CLASS);\n                    item.attr(kendo.attr(\"uid\"), data.uid);\n                    item.attr(ARIA_ROLE, role);\n\n                    if (that._hasBindingTarget()) {\n                        kendo.bind(item, data);\n                    }\n                }\n                return true;\n            },\n\n            edit: function(item) {\n                var that = this,\n                    data = that._modelFromElement(item),\n                    container,\n                    uid = data.uid,\n                    index;\n\n                that.cancel();\n\n                item = that.items().filter(\"[\" + kendo.attr(\"uid\") + \"=\" + uid + \"]\");\n                index = item.index();\n                item.replaceWith(that.editTemplate(data));\n                container = that.items().eq(index).addClass(KEDITITEM).attr(kendo.attr(\"uid\"), data.uid);\n                that.editable = container.kendoEditable({\n                    model: data,\n                    clearContainer: false,\n                    errorTemplate: false,\n                    target: that\n                }).data(\"kendoEditable\");\n\n                that.trigger(EDIT, { model: data, item: container });\n            },\n\n            save: function() {\n                var that = this,\n                    editable = that.editable,\n                    model;\n\n                if (!editable) {\n                    return;\n                }\n\n                var container = editable.element;\n                model = that._modelFromElement(container);\n\n                if (editable.end() && !that.trigger(SAVE, { model: model, item: container })) {\n                    that._closeEditable();\n                    that.dataSource.sync();\n                }\n            },\n\n            remove: function(item) {\n                var that = this,\n                    dataSource = that.dataSource,\n                    data = that._modelFromElement(item);\n\n                if (that.editable) {\n                    dataSource.cancelChanges(that._modelFromElement(that.editable.element));\n                    that._closeEditable();\n                }\n\n                if (!that.trigger(REMOVE, { model: data, item: item })) {\n                    if (item.attr(\"id\") === that.element.attr(ARIA_ACTIVEDESCENDANT)) {\n                        that.element.removeAttr(ARIA_ACTIVEDESCENDANT);\n                    }\n\n                    item.hide();\n                    dataSource.remove(data);\n                    dataSource.sync();\n                }\n            },\n\n            add: function() {\n                var that = this,\n                    dataItem,\n                    dataSource = that.dataSource,\n                    index = dataSource.indexOf((dataSource.view() || [])[0]);\n\n                if (index < 0) {\n                    index = 0;\n                }\n\n                that.cancel();\n                dataItem = dataSource.insert(index, {});\n                that.edit(that.element.find(\"[data-uid='\" + dataItem.uid + \"']\"));\n            },\n\n            cancel: function() {\n                var that = this,\n                    dataSource = that.dataSource;\n\n                if (that.editable) {\n                    var container = that.editable.element;\n                    var model = that._modelFromElement(container);\n\n                    if (!that.trigger(CANCEL, { model: model, container: container })) {\n                        dataSource.cancelChanges(model);\n                        that._closeEditable();\n                    }\n                }\n            },\n\n            _crudHandlers: function() {\n                var that = this,\n                    touchstartNs = TOUCHSTART + NS,\n                    clickNs = CLICK + NS;\n\n                that.content.on(touchstartNs + \" \" + clickNs, \".k-edit-button\", function(e) {\n                    e.preventDefault();\n                    var item = $(this).closest(\"[\" + kendo.attr(\"uid\") + \"]\");\n                    setTimeout(function() {\n                        that.edit(item);\n                    });\n                });\n\n\n                that.content.on(touchstartNs + \" \" + clickNs, \".k-delete-button\", function(e) {\n                    e.preventDefault();\n                    var item = $(this).closest(\"[\" + kendo.attr(\"uid\") + \"]\");\n                     setTimeout(function() {\n                        that.remove(item);\n                     });\n                });\n\n                that.content.on(clickNs, \".k-update-button\", function(e) {\n                    that.save();\n                    e.preventDefault();\n                });\n\n                that.content.on(clickNs, \".k-cancel-button\", function(e) {\n                    that.cancel();\n                    e.preventDefault();\n                });\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that._unbindDataSource();\n\n                that._destroyEditable();\n\n                that.element.off(NS);\n                that.content.off(NS);\n\n                that._endlessFetchInProgress = that._endlessPageSize = that._skipRerenderItemsCount = that._focusNext = null;\n\n                if (that.pager) {\n                    that.pager.destroy();\n                }\n\n                kendo.destroy(that.element);\n            }\n        });\n\n        kendo.ui.plugin(ListView);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}