{"version":3,"sources":["raw-js/kendo.imageeditor.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoimageeditor","js","this","$","undefined$1","kendo","window","extend","Class","NS","paneStyles","round","f","Math","Pane","init","imageeditor","that","currentPaneTool","destroy","element","addClass","open","commonMessages","options","messages","common","paneWrapper","append","formWidget","ui","Form","formSettings","buttonsTemplate","html","renderButton","confirm","icon","themeColor","cancel","bindButtonEvents","show","buttons","find","_clickHandler","_click","bind","on","ev","action","target","closest","data","toolbar","trigger","console","error","refresh","off","hide","CropPane","fn","call","buildCropModel","canvasUI","model","_model","toJSON","executeCommand","command","cropMessages","panes","crop","aspectRatioItems","aspectRatioDS","key","push","value","text","formData","change","onChange","items","type","label","title","layout","grid","cols","gutter","aspectRatio","field","editor","editorOptions","dataValueField","dataTextField","dataSource","colSpan","orientation","_orientationEditor","width","attributes","style","format","max","min","height","lockAspectRatio","container","_orientationWidget","appendTo","kendoButtonGroup","portrait","selected","landscape","select","sender","wrapper","set","canvas","getCanvasElement","top","left","canvasContainer","cropOverlay","cropElement","handle","handles","zoomLevel","getZoomLevel","i","length","handleElm","attr","_initResizeHandle","_canvasUI","borderWidth","parseInt","css","backgroundImage","_image","src","backgroundSize","backgroundClip","backgroundPosition","kendoDraggable","ignore","drag","_adjustTopLeft","offsetTop","y","delta","offsetLeft","x","newModel","$target","oldModel","adjustments","correctedLeft","correctedTop","indexOf","offsetWidth","offsetHeight","compare","compareModel","maxWidth","maxHeight","originalRatio","gcd","_gcd","tempModel","newSize","_calcSize","force","size","isPortrait","ratios","split","map","wRatio","hRatio","expectedRatio","realRatio","sizeByRatio","a","b","remove","ResizePane","buildResizeModel","originalWidth","originalHeight","measure","resizeMessages","resize","encoded","pixels","percents","measureW","measureH","ratio","aspectRatioLocked","resetNumericsTo","_preventChange","widthNumeric","heightNumeric","isPercent","setOptions","ImageEditorPane","jQuery","imageeditorNS","Command","OpenPaneImageEditorCommand","exec","pane","first","ZoomImageEditorCommand","zoomStep","spacing","newHeight","imgHeight","currentZoom","zoomInOut","isNaN","_processStringValue","parseFloat","_canvas","_zoomLevel","initialZoom","expectedHeight","canvasWrapper","CropImageEditorCommand","ctx","getCurrent2dContext","croppedImage","getImageData","clearRect","putImageData","drawImage","toDataURL","done","image","drawCanvas","fail","ResizeImageEditorCommand","getCurrentImage","UndoImageEditorCommand","undoStack","pop","redoStack","RedoImageEditorCommand","SaveImageEditorCommand","saveAs","dataURI","OpenImageEditorCommand","upload","_upload","input","kendoUpload","onSelect","onError","multiple","validation","allowedExtensions","getKendoUpload","click","file","files","rawFile","reader","FileReader","addEventListener","result","_initUndoRedoStack","_toggleTools","readAsDataURL","ImageEditorCommand","commands","isPlainObject","Widget","outerHeight","_outerHeight","ERROR","IMAGELOADED","IMAGERENDERED","EXECUTE","CANVAS_TEMPLATE","imageEditorStyles","ImageEditor","_wrapper","_renderHeader","_contentWrapper","_keyHandler","imageUrl","_drawCanvas","notify","name","imageLabel","fileName","save","undo","redo","zoomIn","zoomOut","zoomDropdown","zoomActualSize","zoomFitToScreen","events","defaultTools","showText","toggleCondition","separator","separator1","overflow","component","componentOptions","placeholder","valuePrimitive","template","htmlEncode","commandOn","optionLabel","dataBound","e","list","_resizeHandler","onResize","header","_initToolbar","_tabIndex","toolbarElement","toolbarOptions","tools","Object","keys","parentMessages","ToolBar","toggleTools","_toolbarClick","val","contentWrapper","toolbarHeight","prevent","ctrlKey","keyCode","preventDefault","canRedo","canUndo","hasImage","canExport","enable","deferred","Deferred","Image","onload","progress","resolve","onerror","reject","arguments","promise","getContext","_ctx","args","commandName","commandOptions","plugin"],"mappings":";;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,EAAAG,QAAA,yBAAAA,QAAA,oBAAAA,QAAA,iBAAAA,QAAA,iBAAAA,QAAA,wBAAAA,QAAA,wBAAAA,QAAA,wBAAAA,QAAA,oBACA,mBAAAC,QAAAA,OAAAC,IAAAD,OAAA,CAAA,yBAAA,oBAAA,iBAAA,iBAAA,wBAAA,wBAAA,wBAAA,oBAAAJ,KACAD,EAAA,oBAAAO,WAAAA,WAAAP,GAAAQ,MAAAC,iBAAAT,EAAAS,kBAAA,CAAA,EAAAT,EAAAS,iBAAAC,GAAAT,IACA,CAJA,CAIAU,MAAA,YACA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAJ,EAAAI,OACAC,EAAAH,EAAAG,MAEAC,EAAA,sBAIAC,EACA,0BADAA,EAEA,4BAFAA,EAGA,oCAHAA,EAIA,6BAJAA,EAKA,qBALAA,EAMA,kBANAA,EAOA,YAGAC,EAAA,SAAAC,GACA,OAAAC,KAAAF,MAAA,IAAAC,GAAA,GACA,EAEAE,EAAAN,EAAAD,OAAA,CACAQ,KAAA,SAAAC,GACA,IAAAC,EAAAf,KAEAe,EAAAD,YAAAA,EAEAC,EAAAD,YAAAE,iBACAD,EAAAD,YAAAE,gBAAAC,UAGAF,EAAAG,QAAAjB,EAAA,yDAAAkB,SAAAX,EACA,EACAY,KAAA,WACA,IAAAL,EAAAf,KACAc,EAAAC,EAAAD,YACAO,EAAAP,EAAAQ,QAAAC,SAAAC,OAEAV,EAAAW,YAAAC,OAAAX,EAAAG,SACAH,EAAAY,WAAA,IAAAxB,EAAAyB,GAAAC,KAAAd,EAAAG,QAAAb,EAAAU,EAAAe,eAAA,CACAC,gBAAA,IACA5B,EAAA6B,KAAAC,aAAA,kBAAAzB,KAAAA,4BAAAa,EAAAa,mBAAA,CACAC,KAAA,QACAC,WAAA,YAEAjC,EAAA6B,KAAAC,aAAA,kBAAAzB,2BAAAa,EAAAgB,kBAAA,CACAF,KAAA,sBAIApB,EAAAuB,mBACAxB,EAAAW,YAAAc,OACAzB,EAAAE,gBAAAD,CACA,EACAuB,iBAAA,WACA,IAAAvB,EAAAf,KAEAwC,EADAzB,EAAAY,WACAT,QAAAuB,KAAA,IAAAjC,GAEAO,EAAA2B,cAAA3B,EAAA4B,OAAAC,KAAA7B,GAEAyB,EAAAK,GAxDA,QAwDAtC,EAAAQ,EAAA2B,cACA,EACAC,OAAA,SAAAG,GACA,IAEAC,EADA9C,EAAA6C,EAAAE,QAAAC,QAAA,IAAAzC,GACA0C,KAAA,UAFAlD,KAIA+C,IAJA/C,KAKA+C,IAEA,EACAV,OAAA,WACArC,KAAAc,YAAAqC,QAAAjC,QAAAuB,KAAA,gBAAAW,QAAA,SACApD,KAAAiB,SACA,EACAiB,QAAA,WACA9B,OAAAiD,QAAAC,MAAA,6CACAtD,KAAAiB,SACA,EACAsC,QAAA,WACA,EACAtC,QAAA,WACA,IAAAF,EAAAf,KACAc,EAAAC,EAAAD,YAEAC,EAAAY,WAAAT,QAAAuB,KAAA,IAAAjC,GAAAgD,IAAAjD,GACAQ,EAAAY,WAAAV,UACAH,EAAAW,YAAAO,KAAA,IACAlB,EAAAW,YAAAgC,cACA3C,EAAAE,eACA,IAGA0C,EAAA9C,EAAAP,OAAA,CACAQ,KAAA,SAAAC,GACA,IAAAC,EAAAf,KACAY,EAAA+C,GAAA9C,KAAA+C,KAAA7C,EAAAD,GACAC,EAAA8C,iBACA9C,EAAA+C,UACA,EACA5B,QAAA,WACA,IAAAnB,EAAAf,KACA+D,EAAAhD,EAAAY,WAAAqC,OAAAC,SAEAlD,EAAAE,UAEAF,EAAAD,YAAAoD,eAAA,CAAAC,QAAA,yBAAA7C,QAAAyC,GACA,EACAjC,aAAA,WACA,IAAAf,EAAAf,KACAoE,EAAArD,EAAAD,YAAAQ,QAAAC,SAAA8C,MAAAC,KACAjD,EAAAN,EAAAD,YAAAQ,QAAAC,SAAAC,OACA+C,EAAAH,EAAAG,iBACAC,EAAA,GAEA,GAAAD,EACA,IAAA,IAAAE,KAAAF,EACAC,EAAAE,KAAA,CAAAC,MAAAF,EAAAG,KAAAL,EAAAE,UAGAD,EAAA,CACA,CAAAG,MAAA,gBAAAC,KAAA,kBACA,CAAAD,MAAA,MAAAC,KAAA,gBACA,CAAAD,MAAA,MAAAC,KAAA,cACA,CAAAD,MAAA,MAAAC,KAAA,OACA,CAAAD,MAAA,MAAAC,KAAA,aACA,CAAAD,MAAA,OAAAC,KAAA,SAIA,MAAA,CACAC,SAAA9D,EAAAiD,OACAc,OAAA/D,EAAAgE,SAAAnC,KAAA7B,GACAiE,MAAA,CAAA,CACAC,KAAA,QACAC,MAAAd,EAAAe,OAAA,aACAC,OAAA,OACAC,KAAA,CAAAC,KAAA,EAAAC,OAAA,SACAP,MAAA,CAAA,CACAE,MAAAd,EAAAoB,aAAA,gBACAC,MAAA,cACAC,OAAA,eACAC,cAAA,CACAC,eAAA,QACAC,cAAA,OACAC,WAAAtB,GAEAuB,QAAA,GACA,CACAb,MAAAd,EAAA4B,YACAP,MAAA,cACAC,OAAA3E,EAAAkF,mBAAArD,KAAA7B,GACAgF,QAAA,GACA,CACAb,MAAA7D,EAAA6E,OAAA,SACAT,MAAA,QACAU,WAAA,CAAAC,MAAA,qBACAV,OAAA,iBACAC,cAAA,CACAU,OAAA,KACAC,IAAAvF,EAAAiD,OAAAkC,MACAK,IAAA,GAEAR,QAAA,GACA,CACAb,MAAA7D,EAAAmF,QAAA,UACAf,MAAA,SACAU,WAAA,CAAAC,MAAA,qBACAV,OAAA,iBACAC,cAAA,CACAU,OAAA,KACAC,IAAAvF,EAAAiD,OAAAwC,OACAD,IAAA,GAEAR,QAAA,GACA,CACAb,MAAA7D,EAAAoF,iBAAA,oBACAhB,MAAA,kBACAM,QAAA,MAKA,EACAE,mBAAA,SAAAS,EAAApF,GACA,IACA8C,EADApE,KACAc,YAAAQ,QAAAC,SAAA8C,MAAAC,KACAK,EAAArD,EAAAyC,MAAAzC,EAAAmE,OAFAzF,KAIA2G,mBAAA1G,EAAA,cAAAqB,EAAAmE,MAAA,YACAmB,SAAAF,GACAG,iBAAA,CACA7B,MAAA,CACA,CAAAJ,KAAAR,EAAA0C,UAAA,WAAAX,WAAA,CAAA,aAAA,YAAAY,SAAA,aAAApC,GACA,CAAAC,KAAAR,EAAA4C,WAAA,YAAAb,WAAA,CAAA,aAAA,aAAAY,SAAA,cAAApC,IAEAsC,OAAA,SAAAnE,GACA,IAAA6B,EAAA7B,EAAAoE,OAAAC,QAAA1E,KAAA,eAAAS,KAAA,SACA5B,EAAAyC,MAAAqD,IAAA9F,EAAAmE,MAAAd,EACA,IACAzB,KAAA,mBACA,EACAW,eAAA,WACA,IAEAwD,EAFArH,KACAc,YACAwG,mBACApB,EAAAmB,EAAAnB,MACAM,EAAAa,EAAAb,OAJAxG,KAMAgE,OAAA,CACAuD,IAAA,EACAC,KAAA,EACAhC,YAAA,gBACAU,MAAAA,EACAM,OAAAA,EACAR,YAAAE,EAAAM,EAAA,EAAA,WAAA,YACAC,iBAAA,EAEA,EACA3C,SAAA,WAUA,IATA,IAAA/C,EAAAf,KACAc,EAAAC,EAAAD,YACA2G,EAAA1G,EAAAD,YAAA2G,gBACAC,EAAAzH,EAAA,eAAAkB,SAAAX,GACAmH,EAAA1H,EAAA,eAAAkB,SAAAX,GACAoH,EAAA,gBAAApH,EAAA,YACAqH,EAAA,CAAA,KAAA,IAAA,KAAA,IAAA,IAAA,KAAA,IAAA,MACAC,EAAAhH,EAAAiH,eAEAC,EAAA,EAAAA,EAAAH,EAAAI,OAAAD,IAAA,CACA,IAAAE,EAAAjI,EAAA2H,GACAzG,SAAAX,EAAAqH,EAAAG,IACAG,KAAA,mBAAAN,EAAAG,IAEAjH,EAAAqH,kBAAAF,GAEAP,EAAAjG,OAAAwG,EACA,CAEAnH,EAAA4G,YAAAA,EAEA5G,EAAAsH,UAAAX,EACAhG,OAAAiG,GACAf,SAAAa,GAEA,IAAAvB,EAAAvF,KAAAF,MAAAM,EAAAiD,OAAAkC,MAAA4B,GACAtB,EAAA7F,KAAAF,MAAAM,EAAAiD,OAAAwC,OAAAsB,GACAQ,EAAAC,SAAAxH,EAAA4G,YAAAa,IAAA,oBAAA,IAEAzH,EAAA4G,YAAAa,IAAA,CACAtC,MAAAA,EACAM,OAAAA,EACAiC,gBAAA,QAAA3H,EAAA4H,OAAAC,IAAA,KACAC,eAAAzI,EAAAkG,OAAA,cAAAH,EAAAM,GACAqC,eAAA,cACAC,mBAAA3I,EAAAkG,OAAA,gBAAAiC,KAGAvH,EAAA4G,YAAAoB,eAAA,CACAC,OAAA,IAAAxI,EACAyI,KAAA,SAAAnG,GACA/B,EAAAmI,eAAApG,EAAAE,OAAAmG,UAAArG,EAAAsG,EAAAC,MAAAvG,EAAAE,OAAAsG,WAAAxG,EAAAyG,EAAAF,MACA,GAEA,EACA9F,QAAA,WACA,IAAAxC,EAAAf,KACAwJ,EAAAzI,EAAAY,WAAAqC,OACA8D,EAAA/G,EAAAD,YAAAiH,eACA7B,EAAAvF,KAAAF,MAAA+I,EAAAtD,MAAA4B,GACAtB,EAAA7F,KAAAF,MAAA+I,EAAAhD,OAAAsB,GACAP,EAAA5G,KAAAF,MAAA+I,EAAAjC,IAAAO,GACAN,EAAA7G,KAAAF,MAAA+I,EAAAhC,KAAAM,GACAQ,EAAAC,SAAAxH,EAAA4G,YAAAa,IAAA,oBAAA,IAEAzH,EAAA4G,YAAAa,IAAA,CACAjB,IAAAA,EACAC,KAAAA,EACAtB,MAAAA,EACAM,OAAAA,EACAoC,eAAAzI,EAAAkG,OAAA,cAAAtF,EAAAiD,OAAAkC,MAAA4B,EAAA/G,EAAAiD,OAAAwC,OAAAsB,GACAgB,mBAAA3I,EAAAkG,OAAA,gBAAAmB,EAAAc,EAAAf,EAAAe,IAEA,EACAF,kBAAA,SAAAR,GACA,IAAA7G,EAAAf,KAEA4H,EAAAmB,eAAA,CACAE,KAAA,SAAAnG,GACA,IAAA2G,EAAAxJ,EAAA6C,EAAAoE,OAAAhG,SACAsI,EAAAzI,EAAAY,WAAAqC,OACA0F,EAAA3I,EAAAiD,OACAgC,EAAAyD,EAAAvG,KAAA,eACAyG,EAAA,CAAA,EACA7B,EAAA/G,EAAAD,YAAAiH,eACA6B,EAAAJ,EAAAhC,KAAAM,EACA+B,EAAAL,EAAAjC,IAAAO,EAEA9B,EAAA8D,QAAA,MAAA,GACAH,EAAAnC,KAAAzG,EAAA4G,YAAA,GAAA2B,WAAAxG,EAAAyG,EAAAF,MACAM,EAAAzD,MAAAnF,EAAA4G,YAAA,GAAAoC,YAAAjH,EAAAyG,EAAAF,OACArD,EAAA8D,QAAA,MAAA,IACAH,EAAAzD,MAAAnF,EAAA4G,YAAA,GAAAoC,YAAAjH,EAAAyG,EAAAF,OAGArD,EAAA8D,QAAA,MAAA,GACAH,EAAApC,IAAAxG,EAAA4G,YAAA,GAAAwB,UAAArG,EAAAsG,EAAAC,MACAM,EAAAnD,OAAAzF,EAAA4G,YAAA,GAAAqC,aAAAlH,EAAAsG,EAAAC,OACArD,EAAA8D,QAAA,MAAA,IACAH,EAAAnD,OAAAzF,EAAA4G,YAAA,GAAAqC,aAAAlH,EAAAsG,EAAAC,OAGAM,EAAAzD,QAAAyD,EAAAnC,MAAAoC,GAAAD,EAAAzD,OAAAwD,EAAAxD,MAAA4B,GACA0B,EAAApC,IAAA,QAAAzG,KAAAF,MAAAkJ,EAAAzD,MAAA4B,IAGA6B,EAAAnD,SAAAmD,EAAApC,KAAAsC,GAAAF,EAAAnD,QAAAkD,EAAAlD,OAAAsB,GACA0B,EAAApC,IAAA,SAAAzG,KAAAF,MAAAkJ,EAAAnD,OAAAsB,KAGA6B,EAAApC,KAAAoC,EAAAnC,OACAzG,EAAAmI,eAAAS,EAAApC,IAAAoC,EAAAnC,KAEA,GAEA,EACA0B,eAAA,SAAA3B,EAAAC,EAAAyC,GACA,IAAAlJ,EAAAf,KACAkK,EAAAD,GAAAlJ,EAAAY,WAAAqC,OACAwF,EAAAzI,EAAAY,WAAAqC,OACA0F,EAAA3I,EAAAiD,OACA8D,EAAA/G,EAAAD,YAAAiH,eAEAR,GAAA,GAAAA,EAAAO,EAAAoC,EAAA1D,QAAAkD,EAAAlD,QACAgD,EAAApC,IAAA,MAAAzG,KAAAF,MAAA8G,EAAAO,IAGAN,GAAA,GAAAA,EAAAM,EAAAoC,EAAAhE,OAAAwD,EAAAxD,OACAsD,EAAApC,IAAA,OAAAzG,KAAAF,MAAA+G,EAAAM,GAEA,EACA/C,SAAA,SAAAjC,GACA,IAAA/B,EAAAf,KACA8H,EAAA/G,EAAAD,YAAAiH,eACAyB,EAAA1G,EAAAoE,OAAAlD,OACA0F,EAAA3I,EAAAiD,OACAmG,EAAAT,EAAAxD,MACAkE,EAAAV,EAAAlD,OACA6D,GAAAX,EAAAxD,MAAAwD,EAAAlD,QACA8D,EAAAvJ,EAAAwJ,KAAAb,EAAAxD,MAAAwD,EAAAlD,QAIA,GAFA6D,EAAAX,EAAAxD,MAAAoE,EAAA,IAAAZ,EAAAlD,OAAA8D,EAEA,gBAAAxH,EAAA2C,OAAA,kBAAA3C,EAAA6B,MACA6E,EAAApC,IAAA,MAAA,GACAoC,EAAApC,IAAA,OAAA,GACAoC,EAAApC,IAAA,cAAAsC,EAAA1D,aACAwD,EAAApC,IAAA,QAAAsC,EAAAxD,OACAsD,EAAApC,IAAA,SAAAsC,EAAAlD,aACA,GAAA,gBAAA1D,EAAA2C,MAAA,CACA,IAAA+E,EAAAnK,EAAA,CAAA,EAAAmJ,EAAA,CACAtD,MAAAsD,EAAAhD,OACAA,OAAAgD,EAAAtD,QAGAuE,EAAA1J,EAAA2J,UAAAF,EAAAH,EAAAF,EAAAC,GAEAZ,EAAApC,IAAA,QAAAqD,EAAAvE,OACAsD,EAAApC,IAAA,SAAAqD,EAAAjE,QACAzF,EAAA4F,mBAAAM,OAAA,aAAAnE,EAAA6B,MAAA,EAAA,EACA,MAAA,GAAA6E,EAAA/C,gBAAA,CACA,IAAAkE,EAAA7H,EAAA2C,MACAmF,EAAA7J,EAAA2J,UAAAlB,EAAAa,EAAAF,EAAAC,EAAAO,GACAnB,EAAApC,IAAA,QAAAwD,EAAA1E,OACAsD,EAAApC,IAAA,SAAAwD,EAAApE,OACA,CAEA,IAAAN,EAAAvF,KAAAF,MAAA+I,EAAAtD,MAAA4B,GACAtB,EAAA7F,KAAAF,MAAA+I,EAAAhD,OAAAsB,GACAP,EAAA5G,KAAAF,MAAA+I,EAAAjC,IAAAO,GACAN,EAAA7G,KAAAF,MAAA+I,EAAAhC,KAAAM,GACAQ,EAAAC,SAAAxH,EAAA4G,YAAAa,IAAA,oBAAA,IAEAzH,EAAA4G,YAAAa,IAAA,CACAjB,IAAAA,EACAC,KAAAA,EACAtB,MAAAA,EACAM,OAAAA,EACAsC,mBAAA3I,EAAAkG,OAAA,gBAAAmB,EAAAc,EAAAf,EAAAe,IAEA,EACAoC,UAAA,SAAA3G,EAAAsG,EAAAF,EAAAC,EAAAO,GACA,IAAAzE,EAAAvF,KAAA4F,IAAAxC,EAAAmC,MAAAiE,GACA3D,EAAA7F,KAAA4F,IAAAxC,EAAAyC,OAAA4D,GACAS,EAAA,aAAA9G,EAAAiC,YACA8E,EAAA/G,EAAAyB,YAEAsF,EAAAhB,QAAA,KAAA,IACAgB,EAAAT,GAGAS,EAAAA,EAAAC,MAAA,KAAAC,KAAA,SAAArG,GACA,OAAA4D,SAAA5D,EAAA,GACA,IAEA,IAAAsG,EAAAJ,EAAAlK,KAAA4F,IAAAuE,EAAA,GAAAA,EAAA,IAAAnK,KAAA2F,IAAAwE,EAAA,GAAAA,EAAA,IACAI,EAAAL,EAAAlK,KAAA2F,IAAAwE,EAAA,GAAAA,EAAA,IAAAnK,KAAA4F,IAAAuE,EAAA,GAAAA,EAAA,IACAK,EAAA1K,EAAAwK,EAAAC,GACAE,EAAA3K,EAAAyF,EAAAM,GAEA6E,EAAA,CACAnF,MAAAvF,KAAAF,MAAA+F,EAAA2E,GACA3E,OAAA7F,KAAAF,MAAAyF,EAAAiF,IAGA,MAAA,UAAAR,EACA,CACAzE,MAAAA,EACAM,OAAA6E,EAAA7E,QAIA,WAAAmE,EACA,CACAzE,MAAAmF,EAAAnF,MACAM,OAAAA,IAIA4E,EAAAD,EACAjF,EAAAmF,EAAAnF,MACAkF,EAAAD,IACA3E,EAAA6E,EAAA7E,QAGA,CACAN,MAAAA,EACAM,OAAAA,GAEA,EACA+D,KAAA,SAAAe,EAAAC,GACA,OAAA,IAAAA,EAAAD,EAAAtL,KAAAuK,KAAAgB,EAAAD,EAAAC,EACA,EACAtK,QAAA,WACAd,EAAAc,QAAAjB,KAAAqI,WACArI,KAAAqI,UAAAmD,SACA5K,EAAA+C,GAAA1C,QAAA2C,KAAA5D,KACA,IAGAyL,EAAA7K,EAAAP,OAAA,CACAQ,KAAA,SAAAC,GACAF,EAAA+C,GAAA9C,KAAA+C,KAAA5D,KAAAc,GACAd,KAAA0L,kBACA,EACAxJ,QAAA,WACA,IAAAnB,EAAAf,KACA2L,EAAA5K,EAAAiD,OAAAkC,MACA0F,EAAA7K,EAAAiD,OAAAwC,OACAzC,EAAAhD,EAAAY,WAAAqC,OAAAC,SAEA,aAAAF,EAAA8H,UACA9H,EAAAmC,MAAAyF,GAAA5H,EAAAmC,MAAA,KACAnC,EAAAyC,OAAAoF,GAAA7H,EAAAyC,OAAA,MAGAzF,EAAAD,YAAAoD,eAAA,CAAAC,QAAA,2BAAA7C,QAAAyC,IACAhD,EAAAE,SACA,EACAa,aAAA,WACA,IAAAf,EAAAf,KACA8L,EAAA/K,EAAAD,YAAAQ,QAAAC,SAAA8C,MAAA0H,OACA1K,EAAAN,EAAAD,YAAAQ,QAAAC,SAAAC,OAEA,MAAA,CACAqD,SAAA9D,EAAAiD,OACAc,OAAA/D,EAAAgE,SAAAnC,KAAA7B,GACAiE,MAAA,CAAA,CACAC,KAAA,QACAC,MAAA4G,EAAA3G,OAAA,eACAC,OAAA,OACAC,KAAA,CAAAC,KAAA,EAAAC,OAAA,SACAP,MAAA,CAAA,CACAE,MAAA7D,EAAA6E,OAAA,SACAT,MAAA,QACAU,WAAA,CAAAC,MAAA,qBACAV,OAAA,iBACAC,cAAA,CACAU,OAAA,KACAE,IAAA,GAEAR,QAAA,GACA,CACAN,MAAA,WACAC,OAAA,eACAS,WAAA,CAAAC,MAAA,qBACAlB,MAAA,CAAAN,KAAA,SAAAoH,SAAA,GACArG,cAAA,CACAE,cAAA,OACAD,eAAA,QACAE,WAAA,CACA,CAAAlB,KAAAkH,EAAAG,QAAA,SAAAtH,MAAA,UACA,CAAAC,KAAAkH,EAAAI,UAAA,WAAAvH,MAAA,cAGAoB,QAAA,GACA,CACAb,MAAA7D,EAAAmF,QAAA,UACAf,MAAA,SACAU,WAAA,CAAAC,MAAA,qBACAV,OAAA,iBACAC,cAAA,CACAU,OAAA,KACAE,IAAA,GAEAR,QAAA,GACA,CACAN,MAAA,WACAP,MAAA,CAAAN,KAAA,SAAAoH,SAAA,GACA7F,WAAA,CAAAC,MAAA,qBACAV,OAAA,eACAC,cAAA,CACAE,cAAA,OACAD,eAAA,QACAE,WAAA,CACA,CAAAlB,KAAAkH,EAAAG,QAAA,SAAAtH,MAAA,UACA,CAAAC,KAAAkH,EAAAI,UAAA,WAAAvH,MAAA,cAGAoB,QAAA,GACA,CACAb,MAAA7D,EAAAoF,iBAAA,oBACAhB,MAAA,kBACAM,QAAA,MAIA,EACA2F,iBAAA,WACA,IAEArE,EAFArH,KACAc,YACAwG,mBACApB,EAAAmB,EAAAnB,MACAM,EAAAa,EAAAb,OAJAxG,KAMAgE,OAAA,CACAkC,MAAAA,EACAM,OAAAA,EACAqF,QAAA,SACAM,SAAA,SACAC,SAAA,SACA3F,iBAAA,EACA4F,MAAA5L,EAAAyF,EAAAM,GAEA,EACAzB,SAAA,SAAAjC,GACA,IAAA/B,EAAAf,KACAwJ,EAAA1G,EAAAoE,OAAAlD,OACAsI,EAAA9C,EAAA/C,gBAEA,aAAA3D,EAAA2C,OAAA,aAAA3C,EAAA2C,OACA+D,EAAApC,IAAA,WAAAtE,EAAA6B,OACA6E,EAAApC,IAAA,WAAAtE,EAAA6B,OACA6E,EAAApC,IAAA,UAAAtE,EAAA6B,QACA,YAAA7B,EAAA2C,MACA1E,EAAAwL,gBAAAzJ,EAAA6B,OACA,UAAA7B,EAAA2C,OAAA6G,IAAAvL,EAAAyL,eACAhD,EAAApC,IAAA,SAAAoC,EAAAtD,MAAAsD,EAAA6C,OACA,WAAAvJ,EAAA2C,OAAA6G,IAAAvL,EAAAyL,gBACAhD,EAAApC,IAAA,QAAAoC,EAAAhD,OAAAgD,EAAA6C,OAGA7C,EAAApC,IAAA,QAAA3G,EAAA+I,EAAAtD,MAAAsD,EAAAhD,QACA,EACA+F,gBAAA,SAAAtH,GACA,IAAAlE,EAAAf,KACA2L,EAAA5K,EAAAiD,OAAAkC,MACA0F,EAAA7K,EAAAiD,OAAAwC,OACA7E,EAAAZ,EAAAY,WACAoC,EAAApC,EAAAqC,OACAyI,EAAA9K,EAAAT,QAAAuB,KAAA,gBAAAS,KAAA,uBACAwJ,EAAA/K,EAAAT,QAAAuB,KAAA,iBAAAS,KAAA,uBACAyJ,EAAA,aAAA1H,EACA3D,EAAA,CACA4K,SAAA,CACA7F,OAAA,QAEA4F,OAAA,CACA5F,OAAA,OAKAoG,EAAAG,WAAAtL,EAAA2D,IACAyH,EAAAE,WAAAtL,EAAA2D,IAEAlE,EAAAyL,gBAAA,EACAzI,EAAAqD,IAAA,QAAAuF,EAAAhB,EAAAc,EAAA9H,QAAA,IAAAgH,GAAAc,EAAA9H,QAAA,MACAZ,EAAAqD,IAAA,SAAAuF,EAAAf,EAAAc,EAAA/H,QAAA,IAAAiH,GAAAc,EAAA/H,QAAA,MACA5D,EAAAyL,gBAAA,CACA,IAGAnM,EAAAF,EAAAyB,GAAA,CACAd,YAAA,CACA+L,gBAAAjM,EACAyD,MAAA,CACAC,KAAAZ,EACAqI,OAAAN,KAIA,CAvmBA,CAumBArL,OAAAD,MAAA2M,QAEA,SAAA7M,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACA4M,EAAA5M,EAAAyB,GAAAd,YACAT,EAAAJ,EAAAI,OAGA2M,EAFA7M,EAAAG,MAEAD,OAAA,CACAQ,KAAA,SAAAS,GACAtB,KAAAsB,QAAAjB,EAAA,CAAA,EAAAiB,EAAAtB,KAAAsB,SACAtB,KAAAc,YAAAQ,EAAAR,WACA,IAGAmM,EAAAD,EAAA3M,OAAA,CACAQ,KAAA,SAAAS,GACA0L,EAAArJ,GAAA9C,KAAA+C,KAAA5D,KAAAsB,EACA,EACA4L,KAAA,WACA,IACApM,EADAd,KACAc,YACAqM,EAAA,IAAAJ,EAAA1I,MAFArE,KAEAsB,QAAAqD,OAAA7D,GAEAqM,EAAA/L,OACA+L,EAAAjM,QAAAuB,KAAA,mBAAA2K,QAAAhK,QAAA,QACA,IAGAiK,EAAAL,EAAA3M,OAAA,CACAiB,QAAA,CACAgM,SAAA,IACAC,QAAA,IAEA1M,KAAA,SAAAS,GACA0L,EAAArJ,GAAA9C,KAAA+C,KAAA5D,KAAAsB,EACA,EACA4L,KAAA,WACA,IAMAM,EANAzM,EAAAf,KAEA2E,EADA5D,EAAAO,QACAqD,MACA7D,EAAAC,EAAAD,YACA2M,EAAA3M,EAAA4H,OAAAlC,OACAkH,EAAA5M,EAAAiH,eAEA4F,EAAA,WAAAhJ,GAAA,YAAAA,EAEAiJ,MAAAjJ,GAEA,iBAAAA,IACAA,EAAA5D,EAAA8M,oBAAAlJ,EAAA+I,IAFA/I,EAAAmJ,WAAAnJ,IAKA6I,EAAA7M,KAAAF,MAAAgN,EAAA9I,IAEA,IACA1E,EAAAa,EAAAiN,SAAAvF,IAAA,SAAAgF,GACA1M,EAAAkN,WAAArJ,GAGA7D,EAAAE,iBACAF,EAAAE,gBAAAuC,UAGAoK,GACA7M,EAAAqC,QAAAjC,QAAAuB,KAAA,gBAAAW,QAAA,QAEA,EACAyK,oBAAA,SAAAlJ,EAAAsJ,GACA,IACA3M,EADAtB,KACAsB,QACAR,EAFAd,KAEAc,YACA2M,EAAA3M,EAAA4H,OAAAlC,OACA0H,EAAApN,EAAAqN,cAAA3H,SAAAlF,EAAAiM,QACAD,EAAAhM,EAAAgM,SAEA,OAAA3I,GACA,IAAA,SACA,OAAAsJ,EAAAX,EACA,IAAA,UACA,OAAAW,EAAAX,EACA,IAAA,cACA,OAAA3M,KAAAF,MAAAyN,EAAAT,EAAA,KAAA,IACA,QACA,OAAA,EAEA,IAGAW,EAAApB,EAAA3M,OAAA,CACAQ,KAAA,SAAAS,GACA0L,EAAArJ,GAAA9C,KAAA+C,KAAA5D,KAAAsB,EACA,EACA4L,KAAA,WACA,IACA5L,EADAtB,KACAsB,QACAR,EAFAd,KAEAc,YACAuG,EAAAvG,EAAAwG,mBACA+G,EAAAvN,EAAAwN,sBACAC,EAAAF,EAAAG,aAAAlN,EAAAkG,KAAAlG,EAAAiG,IAAAjG,EAAA4E,MAAA5E,EAAAkF,QAEA6H,EAAAI,UAAA,EAAA,EAAApH,EAAAnB,MAAAmB,EAAAb,QACAa,EAAAnB,MAAA5E,EAAA4E,MACAmB,EAAAb,OAAAlF,EAAAkF,OACA6H,EAAAK,aAAAH,EAAA,EAAA,GAEAzN,EAAA6N,UAAAtH,EAAAuH,aAAAC,MAAA,SAAAC,GACAhO,EAAAiO,WAAAD,GACAhO,EAAAqC,QAAAjC,QAAAuB,KAAA,gBAAAW,QAAA,QACA,IAAA4L,MAAA,SAAAlM,GACAhC,EAAAsC,QAAA,QAAAN,EACA,GACA,IAGAmM,EAAAjC,EAAA3M,OAAA,CACAQ,KAAA,SAAAS,GACA0L,EAAArJ,GAAA9C,KAAA+C,KAAA5D,KAAAsB,EACA,EACA4L,KAAA,WACA,IACA5L,EADAtB,KACAsB,QACAR,EAFAd,KAEAc,YACAuG,EAAAvG,EAAAwG,mBACA+G,EAAAvN,EAAAwN,sBACAQ,EAAAhO,EAAAoO,kBAEAb,EAAAI,UAAA,EAAA,EAAApH,EAAAnB,MAAAmB,EAAAb,QACAa,EAAAnB,MAAA5E,EAAA4E,MACAmB,EAAAb,OAAAlF,EAAAkF,OACA6H,EAAAM,UAAAG,EAAA,EAAA,EAAAxN,EAAA4E,MAAA5E,EAAAkF,QAEA1F,EAAA6N,UAAAtH,EAAAuH,aAAAC,MAAA,SAAAC,GACAhO,EAAAiO,WAAAD,GACAhO,EAAAqC,QAAAjC,QAAAuB,KAAA,gBAAAW,QAAA,QACA,IAAA4L,MAAA,SAAAlM,GACAhC,EAAAsC,QAAA,QAAAN,EACA,GACA,IAGAqM,EAAAnC,EAAA3M,OAAA,CACA6M,KAAA,WACA,IACApM,EADAd,KACAc,YACAuG,EAAAvG,EAAAwG,mBACA+G,EAAAvN,EAAAwN,sBACAQ,EAAAhO,EAAAsO,UAAAC,MAEAP,IACAhO,EAAAwO,UAAA5K,KAAA5D,EAAAoO,0BACApO,EAAA4H,OAEA2F,EAAAI,UAAA,EAAA,EAAApH,EAAAnB,MAAAmB,EAAAb,QACAa,EAAAnB,MAAA4I,EAAA5I,MACAmB,EAAAb,OAAAsI,EAAAtI,OACA6H,EAAAM,UAAAG,EAAA,EAAA,EAAAA,EAAA5I,MAAA4I,EAAAtI,QAEA1F,EAAA6N,UAAAtH,EAAAuH,aAAAC,MAAA,SAAAC,GACAhO,EAAAiO,WAAAD,GACAhO,EAAAqC,QAAAjC,QAAAuB,KAAA,gBAAAW,QAAA,QACA,IAAA4L,MAAA,SAAAlM,GACAhC,EAAAsC,QAAA,QAAAN,EACA,IAEA,IAGAyM,EAAAvC,EAAA3M,OAAA,CACA6M,KAAA,WACA,IACApM,EADAd,KACAc,YACAuG,EAAAvG,EAAAwG,mBACA+G,EAAAvN,EAAAwN,sBACAQ,EAAAhO,EAAAwO,UAAAD,MAEAP,IACAhO,EAAAsO,UAAA1K,KAAA5D,EAAAoO,0BACApO,EAAA4H,OAEA2F,EAAAI,UAAA,EAAA,EAAApH,EAAAnB,MAAAmB,EAAAb,QACAa,EAAAnB,MAAA4I,EAAA5I,MACAmB,EAAAb,OAAAsI,EAAAtI,OACA6H,EAAAM,UAAAG,EAAA,EAAA,EAAAA,EAAA5I,MAAA4I,EAAAtI,QAEA1F,EAAA6N,UAAAtH,EAAAuH,aAAAC,MAAA,SAAAC,GACAhO,EAAAiO,WAAAD,GACAhO,EAAAqC,QAAAjC,QAAAuB,KAAA,gBAAAW,QAAA,QACA,IAAA4L,MAAA,SAAAlM,GACAhC,EAAAsC,QAAA,QAAAN,EACA,IAEA,IAGA0M,EAAAxC,EAAA3M,OAAA,CACA6M,KAAA,WACA,IACApM,EADAd,KACAc,YACAuG,EAAAvG,EAAAwG,mBAEAnH,EAAAsP,OAAApP,EAAA,CAAA,EAAAS,EAAAQ,QAAAmO,OAAA,CACAC,QAAArI,EAAAuH,eAGA9N,EAAAqC,QAAAjC,QAAAuB,KAAA,yCAAAW,QAAA,QACA,IAGAuM,EAAA3C,EAAA3M,OAAA,CACA6M,KAAA,WACA,IAAAnM,EAAAf,KACAc,EAAAC,EAAAD,YACA8O,EAAA9O,EAAA+O,QAEA,IAAAD,EAAA,CACA,IAAAE,EAAA7P,EAAA,yBACA6P,EAAAC,YAAA,CACA9I,OAAAlG,EAAAiP,SAAApN,KAAA7B,GACAuC,MAAAvC,EAAAkP,QAAArN,KAAA7B,GACAmP,UAAA,EACAC,WAAA,CACAC,kBAAA,CAAA,OAAA,QAAA,OAAA,OAAA,OAAA,QAAA,YAIAtP,EAAA+O,QAAAD,EAAAE,EAAAO,gBAEA,CAEAT,EAAA1O,QAAAoP,OACA,EACAN,SAAA,SAAAlN,GACA,IACAhC,EADAd,KACAc,YACAyP,EAAAzN,EAAA0N,MAAA,GAAAC,QACAC,EAAA,IAAAC,WAEAD,EAAAE,iBAAA,QAAA,WACA9P,EAAA6N,UAAA+B,EAAAG,QAAAhC,MAAA,SAAAC,GACAhO,EAAAsC,QAAA,cAAA,CAAA0L,MAAAA,MACAhO,EAAAiO,WAAAD,GACAhO,EAAAgQ,qBACAhQ,EAAAiQ,eAEA,IAAA/B,MAAA,SAAAlM,GACAhC,EAAAsC,QAAA,QAAAN,EACA,GACA,IAAA,GAGAyN,GACAG,EAAAM,cAAAT,EAGA,EACAN,QAAA,SAAAnN,GACA9C,KACAc,YAEAsC,QAAA,QAAAN,EACA,IAGAzC,EAAAF,EAAAyB,GAAAd,YAAA,CACAmQ,mBAAAjE,EACAkE,SAAA,CACAjE,2BAAAA,EACAI,uBAAAA,EACAe,uBAAAA,EACAa,yBAAAA,EACAE,uBAAAA,EACAI,uBAAAA,EACAC,uBAAAA,EACAG,uBAAAA,IAIA,CApRA,CAoRAvP,OAAAD,MAAA2M,QAmcA,OA1bA,SAAA7M,EAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAJ,EAAAI,OACA8Q,EAAAlR,EAAAkR,cACAC,EAAAjR,EAAAyB,GAAAwP,OACAxP,EAAAzB,EAAAyB,GAEArB,EAAA,oBAEA8Q,EAAAlR,EAAAmR,aAEAC,EAAA,QACAC,EAAA,cACAC,EAAA,gBACAC,EAAA,UAMAC,EAAAzM,GAAA,kCAAAA,6BAEA0M,EACA,yBADAA,EAEA,uBAFAA,EAGA,wBAHAA,EAIA,4BAJAA,EAKA,wBALAA,EAMA,iCANAA,EAOA,uBAGAC,EAAAT,EAAA/Q,OAAA,CACAQ,KAAA,SAAAK,EAAAI,GACA,IAAAP,EAAAf,KAEAoR,EAAAzN,GAAA9C,KAAA+C,KAAA7C,EAAAG,EAAAI,GACAA,EAAArB,EAAAI,QAAA,EAAA,CAAA,EAAAiB,GAEAP,EAAA+Q,WACA/Q,EAAAgR,gBACAhR,EAAAiR,kBACAjR,EAAAkR,cAEA3Q,EAAA4Q,UACAnR,EAAAoR,cAGApR,EAAA+P,qBACA/P,EAAAgQ,eAEA5Q,EAAAiS,OAAArR,EACA,EAEAO,QAAA,CACA+Q,KAAA,cACAnM,MAAA,OACAM,OAAA,IACA0L,SAAA,GACAI,WAAA,GACAnP,QAAA,CACA,EACAsM,OAAA,CACA8C,SAAA,aAEAhR,SAAA,CACA4B,QAAA,CACA/B,KAAA,aACAoR,KAAA,aACAC,KAAA,OACAC,KAAA,OACApO,KAAA,OACAyH,OAAA,SACA4G,OAAA,UACAC,QAAA,WACAC,aAAA,eACAC,eAAA,mBACAC,gBAAA,iBAEA1O,MAAA,CACAC,KAAA,CACAa,MAAA,aACAK,YAAA,gBACAjB,iBAAA,CACA8F,cAAA,iBACA,MAAA,eACA,MAAA,aACA,MAAA,MACA,MAAA,YACA,OAAA,QAEArE,YAAA,eACAc,SAAA,WACAE,UAAA,aAEA+E,OAAA,CACA5G,MAAA,eACA8G,OAAA,SACAC,SAAA,aAGA1K,OAAA,CACA0E,MAAA,SACAM,OAAA,UACAnE,OAAA,SACAH,QAAA,UACAuE,gBAAA,uBAKAuM,OAAA,CACAzB,EACAC,EACAC,EACAC,GAGAuB,aAAA,CACA7R,KAAA,CAAA6D,KAAA,SAAA9C,KAAA,SAAAkQ,KAAA,OAAAlO,QAAA,yBAAA+O,SAAA,YACAV,KAAA,CAAAvN,KAAA,SAAA9C,KAAA,WAAAkQ,KAAA,OAAAlO,QAAA,yBAAA+O,SAAA,WAAAC,gBAAA,aACAC,UAAA,CAAAnO,KAAA,aACAwN,KAAA,CAAAxN,KAAA,SAAA9C,KAAA,OAAAkQ,KAAA,OAAAlO,QAAA,yBAAA+O,SAAA,WAAAC,gBAAA,QACAT,KAAA,CAAAzN,KAAA,SAAA9C,KAAA,OAAAkQ,KAAA,OAAAlO,QAAA,yBAAA+O,SAAA,WAAAC,gBAAA,QACAE,WAAA,CAAApO,KAAA,aACAX,KAAA,CAAAW,KAAA,SAAA9C,KAAA,OAAAkQ,KAAA,OAAAlO,QAAA,6BAAA7C,QAAA,OAAA4R,SAAA,WAAAC,gBAAA,aACApH,OAAA,CAAA9G,KAAA,SAAA9C,KAAA,eAAAkQ,KAAA,SAAAlO,QAAA,6BAAA7C,QAAA,SAAA4R,SAAA,WAAAC,gBAAA,aACAR,OAAA,CAAA1N,KAAA,SAAA9C,KAAA,UAAAkQ,KAAA,SAAAlO,QAAA,yBAAA+O,SAAA,WAAA5R,QAAA,SAAA6R,gBAAA,UACAP,QAAA,CAAA3N,KAAA,SAAA9C,KAAA,WAAAkQ,KAAA,UAAAlO,QAAA,yBAAA+O,SAAA,WAAA5R,QAAA,UAAA6R,gBAAA,UACAN,aAAA,CACA5N,KAAA,YACAoN,KAAA,eACAlO,QAAA,yBACAgP,gBAAA,SACAG,SAAA,QACAC,UAAA,eACAC,iBAAA,CACAC,YAAA,SACAtR,KAAA,SACA2D,WAAA,CACA,CAAAuM,KAAA,iBAAAlQ,KAAA,mBAAAwC,MAAA,cACA,CAAA0N,KAAA,kBAAAlQ,KAAA,gBAAAwC,MAAA,gBAEAkB,cAAA,OACAD,eAAA,QACA8N,gBAAA,EACAC,SAAA,EAAAxR,OAAAyC,UAAA,GAAAzE,EAAAyB,GAAAO,KAAAhC,EAAAyT,WAAAzR,OAAAhC,EAAAyT,WAAAhP,KACAiP,UAAA,SACAC,YAAA,eACAC,UAAAC,IACAA,EAAA9M,OAAA+M,KAAAxR,KAAA,uBAAAgB,MAAA,KAMAqO,SAAA,WACA,IAAA/Q,EAAAf,KACAsB,EAAAP,EAAAO,QACA4E,EAAA5E,EAAA4E,MACAM,EAAAlF,EAAAkF,OAEAzF,EAAAoG,QAAApG,EAAAG,QACAC,SAAAyQ,GAEA1L,GACAnF,EAAAoG,QAAAjB,MAAAA,GAGAM,GACAzF,EAAAoG,QAAAX,OAAAA,GAGAzF,EAAAmT,eAAA/T,EAAAgU,UAAA,WACApT,EAAAgL,QAAA,EACA,GACA,EAEAgG,cAAA,WACA,IAAAhR,EAAAf,KACAsB,EAAAP,EAAAO,QAEAP,EAAAqT,OAAAnU,EAAA,WAAAkB,SAAAyQ,GACA7Q,EAAAoG,QAAAzF,OAAAX,EAAAqT,QAEA9S,EAAA6B,UACApC,EAAAsT,eACAtT,EAAAoC,QAAAmR,YAEA,EAEAD,aAAA,WACA,IAAAtT,EAAAf,KACAsB,EAAAP,EAAAO,QACAiT,EAAAtU,EAAA,eAAAkB,SAAAyQ,GACA4C,EAAAnU,EAAA,CAAA,EAAAiB,EAAA6B,SACAsR,EAAAD,EAAAxP,MAAAwP,EAAAxP,MAAA0P,OAAAC,KAAA5T,EAAAkS,cAeA,OAbAuB,EAAAC,MAAAA,EACAD,EAAAvB,aAAAlS,EAAAkS,aACAuB,EAAAI,eAAA7T,EAAAO,QAAAC,SAAA4B,QAEApC,EAAAqT,OAAA1S,OAAA6S,GACAxT,EAAAoC,QAAA,IAAAhD,EAAAyB,GAAAiT,QAAAN,EAAAC,GACAzT,EAAAO,QAAA6B,QAAApC,EAAAoC,QAAA7B,QACAP,EAAAoC,QAAA2R,cAEA/T,EAAAoC,QAAAP,KA/LA,QA+LA7B,EAAAgU,cAAAnS,KAAA7B,IACAA,EAAAoC,QAAAP,KA/LA,SA+LA7B,EAAAgU,cAAAnS,KAAA7B,IACAA,EAAAoC,QAAAP,KA/LA,SA+LA7B,EAAAgU,cAAAnS,KAAA7B,IAEAA,EAAAoC,OACA,EAEA4R,cAAA,SAAAjS,GACA,IAAAqB,EAAAlE,EAAA6C,EAAAE,QAAAE,KAAA,WACA5B,EAAArB,EAAA6C,EAAAE,QAAAE,KAAA,WAEA5B,EAAArB,EAAA6C,EAAAE,QAAAgS,OAAA1T,EAEA6C,GAIAnE,KAAAkE,eAAA,CACAC,QAAAA,EACA7C,QAAAA,GAEA,EAEA0Q,gBAAA,WACA,IAAAjR,EAAAf,KACAiV,EAAAhV,EAAA,eAAAkB,SAAAyQ,GACAzD,EAAAlO,EAAA,eAAAkB,SAAAyQ,GACAnK,EAAAxH,EAAA,eAAAkB,SAAAyQ,GACAnQ,EAAAxB,EAAA,eAAAkB,SAAAyQ,GAAAnO,OACAyR,EAAA7D,EAAAtQ,EAAAqT,QAEArT,EAAAoN,cAAAA,EACApN,EAAA0G,gBAAAA,EACA1G,EAAAU,YAAAA,EAEA0M,EAAAzM,OAAA+F,GAEAwN,EAAAzO,OAAA6K,EAAAtQ,EAAAoG,SAAA+N,GAEAD,EAAAvT,OAAAyM,GAAAzM,OAAAD,GACAV,EAAAoG,QAAAzF,OAAAuT,EACA,EAEAhD,YAAA,WACA,IAAAlR,EAAAf,KACAmV,GAAA,EAEApU,EAAAoG,QAAAtE,GAAA,UAAAtC,GAAA,SAAAuC,GACA,GAAAA,EAAAsS,QAAA,CACA,OAAAtS,EAAAuS,SACA,KAAA,GACAtU,EAAAmD,eAAA,CAAAC,QAAA,yBAAA7C,QAAA,gBACA6T,GAAA,EACA,MACA,KAAA,IACApU,EAAAmD,eAAA,CAAAC,QAAA,yBAAA7C,QAAA,YACA6T,GAAA,EACA,MACA,KAAA,IACApU,EAAAmD,eAAA,CAAAC,QAAA,yBAAA7C,QAAA,WACA6T,GAAA,EACA,MACA,KAAA,GACApU,EAAAmD,eAAA,CAAAC,QAAA,2BACAgR,GAAA,EACA,MACA,KAAA,GACApU,EAAAmD,eAAA,CAAAC,QAAA,2BACAgR,GAAA,EAIAA,GACArS,EAAAwS,gBAEA,CACA,GACA,EAEAnD,YAAA,WACA,IAAApR,EAAAf,KACAkS,EAAAnR,EAAAO,QAAA4Q,SAEAnR,EAAA4N,UAAAuD,GAAArD,MAAA,SAAAC,GACA/N,EAAAqC,QAAAoO,EAAA,CAAA1C,MAAAA,KACA/N,EAAAgO,WAAAD,EAEA,IAAAE,MAAA,SAAAlM,GACA/B,EAAAqC,QAAAmO,EAAAzO,EACA,GACA,EAEAgO,mBAAA,WACA9Q,KAEAoP,UAAA,GAFApP,KAGAsP,UAAA,EACA,EAEAyB,aAAA,WACA,IAAAhQ,EAAAf,KACAuV,EAAAxU,EAAAuO,UAAArH,OAAA,EACAuN,EAAAzU,EAAAqO,UAAAnH,OAAA,EACAwN,IAAA1U,EAAA2H,OACAgN,GAAA,EAEA,IACA3U,EAAAgN,QAAAa,WACA,CAAA,MAAAtL,GACAoS,GAAA,CACA,CAEA3U,EAAAoC,SACApC,EAAAoC,QAAA2R,YAAA,CACApC,KAAA6C,EACA9C,KAAA+C,EACAG,OAAAF,EACAC,UAAAA,GAGA,EAEA/G,UAAA,SAAAuD,GACA,IAAAnR,EAAAf,KACA4V,EAAA,IAAA3V,EAAA4V,SACA/G,EAAA,IAAAgH,MAgBA,OAdAhH,EAAAiH,OAAA,WACA5V,EAAAyB,GAAAoU,SAAAjV,EAAA0G,iBAAA,GACAmO,EAAAK,QAAAnH,EACA,EAEAA,EAAAoH,QAAA,WACA/V,EAAAyB,GAAAoU,SAAAjV,EAAA0G,iBAAA,GACAmO,EAAAO,OAAAC,UACA,EAEAjW,EAAAyB,GAAAoU,SAAAjV,EAAA0G,iBAAA,GAEAqH,EAAAnG,IAAAuJ,EAEA0D,EAAAS,SACA,EAEAtH,WAAA,SAAAD,GACA,IAAA/N,EAAAf,KACAqH,EAAApH,EAAAE,EAAAwT,SAAAhC,EAAAxR,CAAAY,EAAAO,QAAAgR,aAAA,GACAjE,EAAAhH,EAAAiP,WAAA,MAEAvV,EAAAgN,SACA9N,EAAAc,EAAAgN,SAAAvC,SAGAzK,EAAA2H,QACA3H,EAAAqO,UAAA1K,KAAA3D,EAAA2H,QAGA3H,EAAAgN,QAAA1G,EACAtG,EAAAwV,KAAAlI,EACAtN,EAAA2H,OAAAoG,EAEAzH,EAAAnB,MAAA4I,EAAA5I,MACAmB,EAAAb,OAAAsI,EAAAtI,OAEA6H,EAAAM,UAAAG,EAAA,EAAA,GAEA/N,EAAA0G,gBAAA/F,OAAA2F,GAEAyH,EAAAtI,OAAAzF,EAAAoN,cAAA3H,SACAzF,EAAAmD,eAAA,CAAAC,QAAA,yBAAA7C,QAAA,gBAEAP,EAAAmD,eAAA,CAAAC,QAAA,yBAAA7C,QAAAP,EAAAgH,iBAGAhH,EAAAqC,QAAAqO,EAAA,CACApK,OAAAA,EACAgH,IAAAA,EACAS,MAAAA,IAGA/N,EAAAgQ,cACA,EAEAzJ,iBAAA,WACA,OAAAtH,KAAA+N,OACA,EAEAO,oBAAA,WACA,OAAAtO,KAAAuW,IACA,EAEArH,gBAAA,WACA,OAAAlP,KAAA0I,MACA,EAEAxE,eAAA,SAAAsS,GACA,IAAAC,EAAAD,EAAArS,QACAuS,EAAArW,EAAA,CAAAS,YAAAd,MAAAmR,EAAAqF,EAAAlV,SAAAkV,EAAAlV,QAAA,CAAAqD,MAAA6R,EAAAlV,UACA6C,EAAA,IAAAvC,EAAAd,YAAAoQ,SAAAuF,GAAAC,GAEA,IAAA1W,KAAAoD,QAAAsO,EAAA8E,GAEA,OADAxW,KAAA+Q,eACA5M,EAAA+I,MAEA,EAEAnF,aAAA,WACA,OAAA/H,KAAAgO,YAAA,CACA,EAEA/M,QAAA,WACA,IAAAF,EAAAf,KAEAe,EAAAG,QAAAsC,IAAAjD,GAEAQ,EAAAC,iBACAD,EAAAC,gBAAAC,UAGAF,EAAAoC,SACApC,EAAAoC,QAAAlC,UAGAF,EAAA8O,SACA9O,EAAA8O,QAAA5O,UAIAmQ,EAAAzN,GAAA1C,QAAA2C,KAAA7C,EACA,IAEAa,EAAA+U,OAAA9E,EACA,CAvbA,CAubAzR,OAAAD,MAAA2M,QACA3M,KAIA","file":"kendo.imageeditor.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.dropdownlist.js'), require('kendo.toolbar.js'), require('kendo.core.js'), require('kendo.form.js'), require('kendo.html.button.js'), require('kendo.buttongroup.js'), require('kendo.draganddrop.js'), require('kendo.upload.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.dropdownlist', 'kendo.toolbar', 'kendo.core', 'kendo.form', 'kendo.html.button', 'kendo.buttongroup', 'kendo.draganddrop', 'kendo.upload'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoimageeditor = global.kendoimageeditor || {}, global.kendoimageeditor.js = factory()));\n})(this, (function () {\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            Class = kendo.Class,\n\n            NS = \".k-imageeditor-pane\",\n\n            CLICK = \"click\";\n\n        var paneStyles = {\n            form: \"k-imageeditor-pane-form\",\n            button: \"k-imageeditor-pane-button\",\n            confirmButton: \"k-imageeditor-pane-confirm-button\",\n            cropOverlay: \"k-imageeditor-crop-overlay\",\n            crop: \"k-imageeditor-crop\",\n            resizeHandle: \"k-resize-handle\",\n            resizeHandlePrefix: \"k-resize-\"\n        };\n\n        var round = function(f) {\n            return Math.round(f * 1000) / 1000;\n        };\n\n        var Pane = Class.extend({\n            init: function(imageeditor) {\n                var that = this;\n\n                that.imageeditor = imageeditor;\n\n                if (that.imageeditor.currentPaneTool) {\n                    that.imageeditor.currentPaneTool.destroy();\n                }\n\n                that.element = $(\"<div role='form' aria-label='Image edit pane.'></div>\").addClass(paneStyles.form);\n            },\n            open: function() {\n                var that = this,\n                    imageeditor = that.imageeditor,\n                    commonMessages = imageeditor.options.messages.common;\n\n                imageeditor.paneWrapper.append(that.element);\n                that.formWidget = new kendo.ui.Form(that.element, extend(that.formSettings(), {\n                    buttonsTemplate: () =>\n                        kendo.html.renderButton(`<button class='${paneStyles.button} ${paneStyles.confirmButton}' data-action='confirm'>${commonMessages.confirm}</button>`, {\n                            icon: 'check',\n                            themeColor: 'primary'\n                        }) +\n                        kendo.html.renderButton(`<button class='${paneStyles.button}' data-action='cancel'>${commonMessages.cancel}</button>`, {\n                            icon: 'cancel-outline'\n                        })\n                }));\n\n                that.bindButtonEvents();\n                imageeditor.paneWrapper.show();\n                imageeditor.currentPaneTool = that;\n            },\n            bindButtonEvents: function() {\n                var that = this,\n                    formWidget = that.formWidget,\n                    buttons = formWidget.element.find(\".\" + paneStyles.button);\n\n                that._clickHandler = that._click.bind(that);\n\n                buttons.on(CLICK + NS, that._clickHandler);\n            },\n            _click: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\".\" + paneStyles.button),\n                    action = target.data(\"action\");\n\n                if (that[action]) {\n                    that[action]();\n                }\n            },\n            cancel: function() {\n                this.imageeditor.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n                this.destroy();\n            },\n            confirm: function() {\n                window.console.error(\"Pane's confirm method is not implemented!\");\n                this.destroy();\n            },\n            refresh: function() {\n            },\n            destroy: function() {\n                var that = this,\n                    imageeditor = that.imageeditor;\n\n                that.formWidget.element.find(\".\" + paneStyles.button).off(NS);\n                that.formWidget.destroy();\n                imageeditor.paneWrapper.html(\"\");\n                imageeditor.paneWrapper.hide();\n                delete imageeditor.currentPaneTool;\n            }\n        });\n\n        var CropPane = Pane.extend({\n            init: function(imageeditor) {\n                var that = this;\n                Pane.fn.init.call(that, imageeditor);\n                that.buildCropModel();\n                that.canvasUI();\n            },\n            confirm: function() {\n                var that = this,\n                    model = that.formWidget._model.toJSON();\n\n                that.destroy();\n\n                that.imageeditor.executeCommand({ command: \"CropImageEditorCommand\", options: model });\n            },\n            formSettings: function() {\n                var that = this,\n                    cropMessages = that.imageeditor.options.messages.panes.crop,\n                    commonMessages = that.imageeditor.options.messages.common,\n                    aspectRatioItems = cropMessages.aspectRatioItems,\n                    aspectRatioDS = [];\n\n                if (aspectRatioItems) {\n                    for (var key in aspectRatioItems) {\n                        aspectRatioDS.push({ value: key, text: aspectRatioItems[key] });\n                    }\n                } else {\n                    aspectRatioDS = [\n                        { value: \"originalRatio\", text: \"Original ratio\" },\n                        { value: \"1:1\", text: \"1:1 (Square)\" },\n                        { value: \"4:5\", text: \"4:5 (8:10)\" },\n                        { value: \"5:7\", text: \"5:7\" },\n                        { value: \"2:3\", text: \"2:3 (4:6)\" },\n                        { value: \"16:9\", text: \"16:9\" }\n                    ];\n                }\n\n                return {\n                    formData: that._model,\n                    change: that.onChange.bind(that),\n                    items: [{\n                        type: \"group\",\n                        label: cropMessages.title || \"Crop Image\",\n                        layout: \"grid\",\n                        grid: { cols: 2, gutter: \"0 8px\" },\n                        items: [{\n                                label: cropMessages.aspectRatio || \"Aspect ratio:\",\n                                field: \"aspectRatio\",\n                                editor: \"DropDownList\",\n                                editorOptions: {\n                                    dataValueField: \"value\",\n                                    dataTextField: \"text\",\n                                    dataSource: aspectRatioDS\n                                },\n                                colSpan: 2\n                            }, {\n                                label: cropMessages.orientation,\n                                field: \"orientation\",\n                                editor: that._orientationEditor.bind(that),\n                                colSpan: 2\n                            }, {\n                                label: commonMessages.width || \"Width:\",\n                                field: \"width\",\n                                attributes: { style: \"max-width: 100px;\" },\n                                editor: \"NumericTextBox\",\n                                editorOptions: {\n                                    format: \"n0\",\n                                    max: that._model.width,\n                                    min: 0\n                                },\n                                colSpan: 1\n                            }, {\n                                label: commonMessages.height || \"Height:\",\n                                field: \"height\",\n                                attributes: { style: \"max-width: 100px;\" },\n                                editor: \"NumericTextBox\",\n                                editorOptions: {\n                                    format: \"n0\",\n                                    max: that._model.height,\n                                    min: 0\n                                },\n                                colSpan: 1\n                            }, {\n                                label: commonMessages.lockAspectRatio || \"Lock aspect ratio\",\n                                field: \"lockAspectRatio\",\n                                colSpan: 2\n                            }\n                        ]\n                    }]\n                };\n            },\n            _orientationEditor: function(container, options) {\n                var that = this,\n                    cropMessages = that.imageeditor.options.messages.panes.crop,\n                    value = options.model[options.field];\n\n                that._orientationWidget = $(\"<div name='\" + options.field + \"'></div>\")\n                    .appendTo(container)\n                    .kendoButtonGroup({\n                        items: [\n                            { text: cropMessages.portrait || \"Portrait\", attributes: { \"data-value\": \"portrait\" }, selected: value === \"portrait\" },\n                            { text: cropMessages.landscape || \"Landscape\", attributes: { \"data-value\": \"landscape\" }, selected: value === \"landscape\" }\n                        ],\n                        select: function(ev) {\n                            var value = ev.sender.wrapper.find(\".k-selected\").data(\"value\");\n                            options.model.set(options.field, value);\n                        }\n                    }).data(\"kendoButtonGroup\");\n            },\n            buildCropModel: function() {\n                var that = this,\n                    imageeditor = that.imageeditor,\n                    canvas = imageeditor.getCanvasElement(),\n                    width = canvas.width,\n                    height = canvas.height;\n\n                    that._model = {\n                        top: 0,\n                        left: 0,\n                        aspectRatio: \"originalRatio\",\n                        width: width,\n                        height: height,\n                        orientation: (width - height < 0) ? \"portrait\" : \"landscape\",\n                        lockAspectRatio: true\n                    };\n            },\n            canvasUI: function() {\n                var that = this,\n                    imageeditor = that.imageeditor,\n                    canvasContainer = that.imageeditor.canvasContainer,\n                    cropOverlay = $(\"<div></div>\").addClass(paneStyles.cropOverlay),\n                    cropElement = $(\"<div></div>\").addClass(paneStyles.crop),\n                    handle = \"<span class='\" + paneStyles.resizeHandle + \"'></span>\",\n                    handles = [ \"nw\", \"n\", \"ne\", \"w\", \"e\", \"sw\", \"s\", \"se\" ],\n                    zoomLevel = imageeditor.getZoomLevel();\n\n                for (var i = 0; i < handles.length; i++) {\n                    var handleElm = $(handle)\n                        .addClass(paneStyles.resizeHandlePrefix + handles[i])\n                        .attr(\"data-orientation\", handles[i]);\n\n                    that._initResizeHandle(handleElm);\n\n                    cropElement.append(handleElm);\n                }\n\n                that.cropElement = cropElement;\n\n                that._canvasUI = cropOverlay\n                    .append(cropElement)\n                    .appendTo(canvasContainer);\n\n                var width = Math.round(that._model.width * zoomLevel);\n                var height = Math.round(that._model.height * zoomLevel);\n                var borderWidth = parseInt(that.cropElement.css(\"border-top-width\"), 10);\n\n                that.cropElement.css({\n                    width: width,\n                    height: height,\n                    backgroundImage: \"url('\" + imageeditor._image.src + \"')\",\n                    backgroundSize: kendo.format(\"{0}px {1}px\", width, height),\n                    backgroundClip: \"content-box\",\n                    backgroundPosition: kendo.format(\"-{0}px -{0}px\", borderWidth)\n                });\n\n                that.cropElement.kendoDraggable({\n                    ignore: \".\" + paneStyles.resizeHandle,\n                    drag: function(ev) {\n                        that._adjustTopLeft(ev.target.offsetTop + ev.y.delta, ev.target.offsetLeft + ev.x.delta);\n                    }\n                });\n            },\n            refresh: function() {\n                var that = this,\n                    newModel = that.formWidget._model,\n                    zoomLevel = that.imageeditor.getZoomLevel(),\n                    width = Math.round(newModel.width * zoomLevel),\n                    height = Math.round(newModel.height * zoomLevel),\n                    top = Math.round(newModel.top * zoomLevel),\n                    left = Math.round(newModel.left * zoomLevel),\n                    borderWidth = parseInt(that.cropElement.css(\"border-top-width\"), 10);\n\n                that.cropElement.css({\n                    top: top,\n                    left: left,\n                    width: width,\n                    height: height,\n                    backgroundSize: kendo.format(\"{0}px {1}px\", that._model.width * zoomLevel, that._model.height * zoomLevel),\n                    backgroundPosition: kendo.format(\"-{0}px -{1}px\", left + borderWidth, top + borderWidth)\n                });\n            },\n            _initResizeHandle: function(handle) {\n                var that = this;\n\n                handle.kendoDraggable({\n                    drag: function(ev) {\n                        var $target = $(ev.sender.element),\n                            newModel = that.formWidget._model,\n                            oldModel = that._model,\n                            orientation = $target.data(\"orientation\"),\n                            adjustments = {},\n                            zoomLevel = that.imageeditor.getZoomLevel(),\n                            correctedLeft = newModel.left * zoomLevel,\n                            correctedTop = newModel.top * zoomLevel;\n\n                        if (orientation.indexOf(\"w\") >= 0) {\n                            adjustments.left = that.cropElement[0].offsetLeft + ev.x.delta;\n                            adjustments.width = that.cropElement[0].offsetWidth - ev.x.delta;\n                        } else if (orientation.indexOf(\"e\") >= 0) {\n                            adjustments.width = that.cropElement[0].offsetWidth + ev.x.delta;\n                        }\n\n                        if (orientation.indexOf(\"n\") >= 0) {\n                            adjustments.top = that.cropElement[0].offsetTop + ev.y.delta;\n                            adjustments.height = that.cropElement[0].offsetHeight - ev.y.delta;\n                        } else if (orientation.indexOf(\"s\") >= 0) {\n                            adjustments.height = that.cropElement[0].offsetHeight + ev.y.delta;\n                        }\n\n                        if (adjustments.width && ((adjustments.left || correctedLeft) + adjustments.width <= oldModel.width * zoomLevel)) {\n                            newModel.set(\"width\", Math.round(adjustments.width / zoomLevel));\n                        }\n\n                        if (adjustments.height && ((adjustments.top || correctedTop) + adjustments.height <= oldModel.height * zoomLevel)) {\n                            newModel.set(\"height\", Math.round(adjustments.height / zoomLevel));\n                        }\n\n                        if (adjustments.top || adjustments.left) {\n                            that._adjustTopLeft(adjustments.top, adjustments.left);\n                        }\n                    }\n                });\n            },\n            _adjustTopLeft: function(top, left, compare) {\n                var that = this,\n                    compareModel = compare || that.formWidget._model,\n                    newModel = that.formWidget._model,\n                    oldModel = that._model,\n                    zoomLevel = that.imageeditor.getZoomLevel();\n\n                if (top >= 0 && (top / zoomLevel) + compareModel.height <= oldModel.height) {\n                    newModel.set(\"top\", Math.round(top / zoomLevel));\n                }\n\n                if (left >= 0 && (left / zoomLevel) + compareModel.width <= oldModel.width) {\n                    newModel.set(\"left\", Math.round(left / zoomLevel));\n                }\n            },\n            onChange: function(ev) {\n                var that = this,\n                    zoomLevel = that.imageeditor.getZoomLevel(),\n                    newModel = ev.sender._model,\n                    oldModel = that._model,\n                    maxWidth = oldModel.width,\n                    maxHeight = oldModel.height,\n                    originalRatio = oldModel.width + \":\" + oldModel.height,\n                    gcd = that._gcd(oldModel.width, oldModel.height);\n\n                originalRatio = oldModel.width / gcd + \":\" + oldModel.height / gcd;\n\n                if (ev.field === \"aspectRatio\" && ev.value === \"originalRatio\") {\n                    newModel.set(\"top\", 0);\n                    newModel.set(\"left\", 0);\n                    newModel.set(\"orientation\", oldModel.orientation);\n                    newModel.set(\"width\", oldModel.width);\n                    newModel.set(\"height\", oldModel.height);\n                } else if (ev.field === \"orientation\") {\n                    var tempModel = extend({}, newModel, {\n                        width: newModel.height,\n                        height: newModel.width\n                    });\n\n                    var newSize = that._calcSize(tempModel, originalRatio, maxWidth, maxHeight);\n\n                    newModel.set(\"width\", newSize.width);\n                    newModel.set(\"height\", newSize.height);\n                    that._orientationWidget.select(ev.value === \"portrait\" ? 0 : 1);\n                } else if (newModel.lockAspectRatio) {\n                    var force = ev.field;\n                    var size = that._calcSize(newModel, originalRatio, maxWidth, maxHeight, force);\n                    newModel.set(\"width\", size.width);\n                    newModel.set(\"height\", size.height);\n                }\n\n                var width = Math.round(newModel.width * zoomLevel);\n                var height = Math.round(newModel.height * zoomLevel);\n                var top = Math.round(newModel.top * zoomLevel);\n                var left = Math.round(newModel.left * zoomLevel);\n                var borderWidth = parseInt(that.cropElement.css(\"border-top-width\"), 10);\n\n                that.cropElement.css({\n                    top: top,\n                    left: left,\n                    width: width,\n                    height: height,\n                    backgroundPosition: kendo.format(\"-{0}px -{1}px\", left + borderWidth, top + borderWidth)\n                });\n            },\n            _calcSize: function(model, originalRatio, maxWidth, maxHeight, force) {\n                var width = Math.min(model.width, maxWidth),\n                    height = Math.min(model.height, maxHeight),\n                    isPortrait = model.orientation === \"portrait\",\n                    ratios = model.aspectRatio;\n\n                if (ratios.indexOf(\":\") < 0) {\n                    ratios = originalRatio;\n                }\n\n                ratios = ratios.split(\":\").map(function(value) {\n                    return parseInt(value, 10);\n                });\n\n                var wRatio = isPortrait ? Math.min(ratios[0], ratios[1]) : Math.max(ratios[0], ratios[1]);\n                var hRatio = !isPortrait ? Math.min(ratios[0], ratios[1]) : Math.max(ratios[0], ratios[1]);\n                var expectedRatio = round(wRatio / hRatio);\n                var realRatio = round(width / height);\n\n                var sizeByRatio = {\n                    width: Math.round(height * expectedRatio),\n                    height: Math.round(width / expectedRatio)\n                };\n\n                if (force === \"width\") {\n                    return {\n                        width: width,\n                        height: sizeByRatio.height\n                    };\n                }\n\n                if (force === \"height\") {\n                    return {\n                        width: sizeByRatio.width,\n                        height: height\n                    };\n                }\n\n                if (realRatio > expectedRatio) {\n                    width = sizeByRatio.width;\n                } else if (realRatio < expectedRatio) {\n                    height = sizeByRatio.height;\n                }\n\n                return {\n                    width: width,\n                    height: height\n                };\n            },\n            _gcd: function(a, b) {\n                return (b === 0) ? a : this._gcd (b, a % b);\n            },\n            destroy: function() {\n                kendo.destroy(this._canvasUI);\n                this._canvasUI.remove();\n                Pane.fn.destroy.call(this);\n            }\n        });\n\n        var ResizePane = Pane.extend({\n            init: function(imageeditor) {\n                Pane.fn.init.call(this, imageeditor);\n                this.buildResizeModel();\n            },\n            confirm: function() {\n                var that = this,\n                    originalWidth = that._model.width,\n                    originalHeight = that._model.height,\n                    model = that.formWidget._model.toJSON();\n\n                if (model.measure === \"percents\") {\n                    model.width = originalWidth * (model.width / 100);\n                    model.height = originalHeight * (model.height / 100);\n                }\n\n                that.imageeditor.executeCommand({ command: \"ResizeImageEditorCommand\", options: model });\n                that.destroy();\n            },\n            formSettings: function() {\n                var that = this,\n                    resizeMessages = that.imageeditor.options.messages.panes.resize,\n                    commonMessages = that.imageeditor.options.messages.common;\n\n                return {\n                    formData: that._model,\n                    change: that.onChange.bind(that),\n                    items: [{\n                        type: \"group\",\n                        label: resizeMessages.title || \"Resize image\",\n                        layout: \"grid\",\n                        grid: { cols: 2, gutter: \"0 8px\" },\n                        items: [{\n                            label: commonMessages.width || \"Width:\",\n                            field: \"width\",\n                            attributes: { style: \"max-width: 100px;\" },\n                            editor: \"NumericTextBox\",\n                            editorOptions: {\n                                format: \"n0\",\n                                min: 0\n                            },\n                            colSpan: 1\n                        }, {\n                            field: \"measureW\",\n                            editor: \"DropDownList\",\n                            attributes: { style: \"max-width: 100px;\" },\n                            label: { text: \"&nbsp;\", encoded: false },\n                            editorOptions: {\n                                dataTextField: \"text\",\n                                dataValueField: \"value\",\n                                dataSource: [\n                                    { text: resizeMessages.pixels || \"Pixels\", value: \"pixels\" },\n                                    { text: resizeMessages.percents || \"Percents\", value: \"percents\" }\n                                ]\n                            },\n                            colSpan: 1\n                        }, {\n                            label: commonMessages.height || \"Height:\",\n                            field: \"height\",\n                            attributes: { style: \"max-width: 100px;\" },\n                            editor: \"NumericTextBox\",\n                            editorOptions: {\n                                format: \"n0\",\n                                min: 0\n                            },\n                            colSpan: 1\n                        }, {\n                            field: \"measureH\",\n                            label: { text: \"&nbsp;\", encoded: false },\n                            attributes: { style: \"max-width: 100px;\" },\n                            editor: \"DropDownList\",\n                            editorOptions: {\n                                dataTextField: \"text\",\n                                dataValueField: \"value\",\n                                dataSource: [\n                                    { text: resizeMessages.pixels || \"Pixels\", value: \"pixels\" },\n                                    { text: resizeMessages.percents || \"Percents\", value: \"percents\" }\n                                ]\n                            },\n                            colSpan: 1\n                        }, {\n                            label: commonMessages.lockAspectRatio || \"Lock aspect ratio\",\n                            field: \"lockAspectRatio\",\n                            colSpan: 2\n                        }]\n                    }]\n                };\n            },\n            buildResizeModel: function() {\n                var that = this,\n                    imageeditor = that.imageeditor,\n                    canvas = imageeditor.getCanvasElement(),\n                    width = canvas.width,\n                    height = canvas.height;\n\n                    that._model = {\n                        width: width,\n                        height: height,\n                        measure: \"pixels\",\n                        measureW: \"pixels\",\n                        measureH: \"pixels\",\n                        lockAspectRatio: true,\n                        ratio: round(width / height)\n                    };\n            },\n            onChange: function(ev) {\n                var that = this,\n                    newModel = ev.sender._model,\n                    aspectRatioLocked = newModel.lockAspectRatio;\n\n                if (ev.field === \"measureW\" || ev.field === \"measureH\") {\n                    newModel.set(\"measureW\", ev.value);\n                    newModel.set(\"measureH\", ev.value);\n                    newModel.set(\"measure\", ev.value);\n                } else if (ev.field === \"measure\") {\n                    that.resetNumericsTo(ev.value);\n                } else if (ev.field === \"width\" && aspectRatioLocked && !that._preventChange) {\n                    newModel.set(\"height\", newModel.width / newModel.ratio);\n                } else if (ev.field === \"height\" && aspectRatioLocked && !that._preventChange) {\n                    newModel.set(\"width\", newModel.height * newModel.ratio);\n                }\n\n                newModel.set(\"ratio\", round(newModel.width / newModel.height));\n            },\n            resetNumericsTo: function(type) {\n                var that = this,\n                    originalWidth = that._model.width,\n                    originalHeight = that._model.height,\n                    formWidget = that.formWidget,\n                    model = formWidget._model,\n                    widthNumeric = formWidget.element.find(\"[name=width]\").data(\"kendoNumericTextBox\"),\n                    heightNumeric = formWidget.element.find(\"[name=height]\").data(\"kendoNumericTextBox\"),\n                    isPercent = type === \"percents\",\n                    options = {\n                        percents: {\n                            format: \"#\\\\\\%\"\n                        },\n                        pixels: {\n                            format: \"n0\"\n                        }\n                    };\n\n\n                widthNumeric.setOptions(options[type]);\n                heightNumeric.setOptions(options[type]);\n\n                that._preventChange = true;\n                model.set(\"width\", isPercent ? (originalWidth / widthNumeric.value()) * 100 : originalWidth * (widthNumeric.value() / 100));\n                model.set(\"height\", isPercent ? (originalHeight / heightNumeric.value()) * 100 : originalHeight * (heightNumeric.value() / 100));\n                that._preventChange = false;\n            }\n        });\n\n        extend(kendo.ui, {\n            imageeditor: {\n                ImageEditorPane: Pane,\n                panes: {\n                    crop: CropPane,\n                    resize: ResizePane\n                }\n            }\n        });\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            imageeditorNS = kendo.ui.imageeditor,\n            extend = $.extend,\n            Class = kendo.Class;\n\n        var Command = Class.extend({\n            init: function(options) {\n                this.options = extend({}, options, this.options);\n                this.imageeditor = options.imageeditor;\n            }\n        });\n\n        var OpenPaneImageEditorCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    imageeditor = that.imageeditor,\n                    pane = new imageeditorNS.panes[that.options.value](imageeditor);\n\n                    pane.open();\n                    pane.element.find(\":kendoFocusable\").first().trigger(\"focus\");\n            }\n        });\n\n        var ZoomImageEditorCommand = Command.extend({\n            options: {\n                zoomStep: 0.05,\n                spacing: 20\n            },\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    value = options.value,\n                    imageeditor = that.imageeditor,\n                    imgHeight = imageeditor._image.height,\n                    currentZoom = imageeditor.getZoomLevel(),\n                    newHeight = imgHeight,\n                    zoomInOut = value === \"zoomIn\" || value === \"zoomOut\";\n\n                    if (!isNaN(value)) {\n                        value = parseFloat(value);\n                    } else if (typeof value === \"string\") {\n                        value = that._processStringValue(value, currentZoom);\n                    }\n\n                    newHeight = Math.round(imgHeight * value);\n\n                    if (newHeight > 0) {\n                        $(imageeditor._canvas).css(\"height\", newHeight);\n                        imageeditor._zoomLevel = value;\n                    }\n\n                    if (imageeditor.currentPaneTool) {\n                        imageeditor.currentPaneTool.refresh();\n                    }\n\n                    if (zoomInOut) {\n                        imageeditor.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n                    }\n            },\n            _processStringValue: function(value, initialZoom) {\n                var that = this,\n                    options = that.options,\n                    imageeditor = that.imageeditor,\n                    imgHeight = imageeditor._image.height,\n                    expectedHeight = imageeditor.canvasWrapper.height() - options.spacing,\n                    zoomStep = options.zoomStep;\n\n                switch (value) {\n                    case \"zoomIn\":\n                        return initialZoom + zoomStep;\n                    case \"zoomOut\":\n                        return initialZoom - zoomStep;\n                    case \"fitToScreen\":\n                        return Math.round((expectedHeight / imgHeight) * 100) / 100;\n                    default:\n                        return 1;\n                }\n            }\n        });\n\n        var CropImageEditorCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    imageeditor = that.imageeditor,\n                    canvas = imageeditor.getCanvasElement(),\n                    ctx = imageeditor.getCurrent2dContext(),\n                    croppedImage = ctx.getImageData(options.left, options.top, options.width, options.height);\n\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                canvas.width = options.width;\n                canvas.height = options.height;\n                ctx.putImageData(croppedImage, 0, 0);\n\n                imageeditor.drawImage(canvas.toDataURL()).done(function(image) {\n                    imageeditor.drawCanvas(image);\n                    imageeditor.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n                }).fail(function(ev) {\n                    imageeditor.trigger(\"error\", ev);\n                });\n            }\n        });\n\n        var ResizeImageEditorCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    imageeditor = that.imageeditor,\n                    canvas = imageeditor.getCanvasElement(),\n                    ctx = imageeditor.getCurrent2dContext(),\n                    image = imageeditor.getCurrentImage();\n\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                canvas.width = options.width;\n                canvas.height = options.height;\n                ctx.drawImage(image, 0, 0, options.width, options.height);\n\n                imageeditor.drawImage(canvas.toDataURL()).done(function(image) {\n                    imageeditor.drawCanvas(image);\n                    imageeditor.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n                }).fail(function(ev) {\n                    imageeditor.trigger(\"error\", ev);\n                });\n            }\n        });\n\n        var UndoImageEditorCommand = Command.extend({\n            exec: function() {\n                var that = this,\n                    imageeditor = that.imageeditor,\n                    canvas = imageeditor.getCanvasElement(),\n                    ctx = imageeditor.getCurrent2dContext(),\n                    image = imageeditor.undoStack.pop();\n\n                if (image) {\n                    imageeditor.redoStack.push(imageeditor.getCurrentImage());\n                    delete imageeditor._image;\n\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    canvas.width = image.width;\n                    canvas.height = image.height;\n                    ctx.drawImage(image, 0, 0, image.width, image.height);\n\n                    imageeditor.drawImage(canvas.toDataURL()).done(function(image) {\n                        imageeditor.drawCanvas(image);\n                        imageeditor.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n                    }).fail(function(ev) {\n                        imageeditor.trigger(\"error\", ev);\n                    });\n                }\n            }\n        });\n\n        var RedoImageEditorCommand = Command.extend({\n            exec: function() {\n                var that = this,\n                    imageeditor = that.imageeditor,\n                    canvas = imageeditor.getCanvasElement(),\n                    ctx = imageeditor.getCurrent2dContext(),\n                    image = imageeditor.redoStack.pop();\n\n                if (image) {\n                    imageeditor.undoStack.push(imageeditor.getCurrentImage());\n                    delete imageeditor._image;\n\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    canvas.width = image.width;\n                    canvas.height = image.height;\n                    ctx.drawImage(image, 0, 0, image.width, image.height);\n\n                    imageeditor.drawImage(canvas.toDataURL()).done(function(image) {\n                        imageeditor.drawCanvas(image);\n                        imageeditor.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n                    }).fail(function(ev) {\n                        imageeditor.trigger(\"error\", ev);\n                    });\n                }\n            }\n        });\n\n        var SaveImageEditorCommand = Command.extend({\n            exec: function() {\n                var that = this,\n                    imageeditor = that.imageeditor,\n                    canvas = imageeditor.getCanvasElement();\n\n                kendo.saveAs(extend({}, imageeditor.options.saveAs, {\n                    dataURI: canvas.toDataURL()\n                }));\n\n                imageeditor.toolbar.element.find(\"[data-command=SaveImageEditorCommand]\").trigger(\"focus\");\n            }\n        });\n\n        var OpenImageEditorCommand = Command.extend({\n            exec: function() {\n                var that = this,\n                    imageeditor = that.imageeditor,\n                    upload = imageeditor._upload;\n\n                if (!upload) {\n                    var input = $(\"<input type='file' />\");\n                    input.kendoUpload({\n                        select: that.onSelect.bind(that),\n                        error: that.onError.bind(that),\n                        multiple: false,\n                        validation: {\n                            allowedExtensions: [\".jpg\", \".jpeg\", \".gif\", \".png\", \".bmp\", \".tiff\", \".webp\"]\n                        }\n                    });\n\n                    imageeditor._upload = upload = input.getKendoUpload();\n\n                }\n\n                upload.element.click();\n            },\n            onSelect: function(ev) {\n                var that = this,\n                    imageeditor = that.imageeditor,\n                    file = ev.files[0].rawFile,\n                    reader = new FileReader();\n\n                reader.addEventListener(\"load\", function() {\n                    imageeditor.drawImage(reader.result).done(function(image) {\n                        if (!imageeditor.trigger(\"imageLoaded\", { image: image })) {\n                            imageeditor.drawCanvas(image);\n                            imageeditor._initUndoRedoStack();\n                            imageeditor._toggleTools();\n                        }\n                    }).fail(function(ev) {\n                        imageeditor.trigger(\"error\", ev);\n                    });\n                }, false);\n\n\n                if (file) {\n                    reader.readAsDataURL(file);\n                }\n\n            },\n            onError: function(ev) {\n                var that = this,\n                    imageeditor = that.imageeditor;\n\n                imageeditor.trigger(\"error\", ev);\n            }\n        });\n\n        extend(kendo.ui.imageeditor, {\n            ImageEditorCommand: Command,\n            commands: {\n                OpenPaneImageEditorCommand: OpenPaneImageEditorCommand,\n                ZoomImageEditorCommand: ZoomImageEditorCommand,\n                CropImageEditorCommand: CropImageEditorCommand,\n                ResizeImageEditorCommand: ResizeImageEditorCommand,\n                UndoImageEditorCommand: UndoImageEditorCommand,\n                RedoImageEditorCommand: RedoImageEditorCommand,\n                SaveImageEditorCommand: SaveImageEditorCommand,\n                OpenImageEditorCommand: OpenImageEditorCommand\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"imageeditor\",\n        name: \"ImageEditor\",\n        category: \"web\",\n        depends: [\"core\", \"toolbar\", \"dropdownlist\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            isPlainObject = $.isPlainObject,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n\n            NS = \".kendoImageEditor\",\n\n            outerHeight = kendo._outerHeight,\n\n            ERROR = \"error\",\n            IMAGELOADED = \"imageLoaded\",\n            IMAGERENDERED = \"imageRendered\",\n            EXECUTE = \"execute\",\n\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            CHANGE = \"change\",\n\n            CANVAS_TEMPLATE = (label) => `<canvas role='img' aria-label='${label}'>Canvas element</canvas>`;\n\n        var imageEditorStyles = {\n            wrapper: \"k-widget k-imageeditor\",\n            header: \"k-imageeditor-header\",\n            toolbar: \"k-imageeditor-toolbar\",\n            paneWrapper: \"k-imageeditor-action-pane\",\n            contentWrapper: \"k-imageeditor-content\",\n            canvasWrapper: \"k-imageeditor-canvas-container\",\n            canvasContainer: \"k-imageeditor-canvas\"\n        };\n\n        var ImageEditor = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n\n                that._wrapper();\n                that._renderHeader();\n                that._contentWrapper();\n                that._keyHandler();\n\n                if (options.imageUrl) {\n                    that._drawCanvas();\n                }\n\n                that._initUndoRedoStack();\n                that._toggleTools();\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: 'ImageEditor',\n                width: \"100%\",\n                height: 570,\n                imageUrl: \"\",\n                imageLabel: \"\",\n                toolbar: {\n                },\n                saveAs: {\n                    fileName: \"image.png\"\n                },\n                messages: {\n                    toolbar: {\n                        open: \"Open Image\",\n                        save: \"Save Image\",\n                        undo: \"Undo\",\n                        redo: \"Redo\",\n                        crop: \"Crop\",\n                        resize: \"Resize\",\n                        zoomIn: \"Zoom In\",\n                        zoomOut: \"Zoom Out\",\n                        zoomDropdown: \"Zoom options\",\n                        zoomActualSize: \"Show actual size\",\n                        zoomFitToScreen: \"Fit to screen\"\n                    },\n                    panes: {\n                        crop: {\n                            title: \"Crop Image\",\n                            aspectRatio: \"Aspect Ratio:\",\n                            aspectRatioItems: {\n                                \"originalRatio\": \"Original ratio\",\n                                \"1:1\": \"1:1 (Square)\",\n                                \"4:5\": \"4:5 (8:10)\",\n                                \"5:7\": \"5:7\",\n                                \"2:3\": \"2:3 (4:6)\",\n                                \"16:9\": \"16:9\"\n                            },\n                            orientation: \"Orientation:\",\n                            portrait: \"Portrait\",\n                            landscape: \"Landscape\"\n                        },\n                        resize: {\n                            title: \"Resize image\",\n                            pixels: \"Pixels\",\n                            percents: \"Percents\"\n                        }\n                    },\n                    common: {\n                        width: \"Width:\",\n                        height: \"Height:\",\n                        cancel: \"Cancel\",\n                        confirm: \"Confirm\",\n                        lockAspectRatio: \"Lock aspect ratio\"\n                    }\n                }\n            },\n\n            events: [\n                ERROR,\n                IMAGELOADED,\n                IMAGERENDERED,\n                EXECUTE\n            ],\n\n            defaultTools: {\n                open: { type: \"button\", icon: \"upload\", name: \"open\", command: \"OpenImageEditorCommand\", showText: \"overflow\" },\n                save: { type: \"button\", icon: \"download\", name: \"save\", command: \"SaveImageEditorCommand\", showText: \"overflow\", toggleCondition: \"canExport\" },\n                separator: { type: \"separator\" },\n                undo: { type: \"button\", icon: \"undo\", name: \"undo\", command: \"UndoImageEditorCommand\", showText: \"overflow\", toggleCondition: \"undo\" },\n                redo: { type: \"button\", icon: \"redo\", name: \"redo\", command: \"RedoImageEditorCommand\", showText: \"overflow\", toggleCondition: \"redo\" },\n                separator1: { type: \"separator\" },\n                crop: { type: \"button\", icon: \"crop\", name: \"crop\", command: \"OpenPaneImageEditorCommand\", options: \"crop\", showText: \"overflow\", toggleCondition: \"canExport\" },\n                resize: { type: \"button\", icon: \"image-resize\", name: \"resize\", command: \"OpenPaneImageEditorCommand\", options: \"resize\", showText: \"overflow\", toggleCondition: \"canExport\" },\n                zoomIn: { type: \"button\", icon: \"zoom-in\", name: \"zoomIn\", command: \"ZoomImageEditorCommand\", showText: \"overflow\", options: \"zoomIn\", toggleCondition: \"enable\" },\n                zoomOut: { type: \"button\", icon: \"zoom-out\", name: \"zoomOut\", command: \"ZoomImageEditorCommand\", showText: \"overflow\", options: \"zoomOut\", toggleCondition: \"enable\" },\n                zoomDropdown: {\n                    type: \"component\",\n                    name: \"zoomDropdown\",\n                    command: \"ZoomImageEditorCommand\",\n                    toggleCondition: \"enable\",\n                    overflow: \"never\",\n                    component: \"DropDownList\",\n                    componentOptions: {\n                        placeholder: \"Search\",\n                        icon: \"search\",\n                        dataSource: [\n                            { name: \"zoomActualSize\", icon: \"zoom-actual-size\", value: \"actualSize\" },\n                            { name: \"zoomFitToScreen\", icon: \"zoom-best-fit\", value: \"fitToScreen\" }\n                        ],\n                        dataTextField: \"text\",\n                        dataValueField: \"value\",\n                        valuePrimitive: true,\n                        template: ({ icon, text }) => `${kendo.ui.icon(kendo.htmlEncode(icon))} ${kendo.htmlEncode(text)}`,\n                        commandOn: \"change\",\n                        optionLabel: \"Zoom options\",\n                        dataBound: (e) => {\n                            e.sender.list.find(\".k-list-optionlabel\").hide();\n                        }\n                    }\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    width = options.width,\n                    height = options.height;\n\n                that.wrapper = that.element\n                    .addClass(imageEditorStyles.wrapper);\n\n                if (width) {\n                    that.wrapper.width(width);\n                }\n\n                if (height) {\n                    that.wrapper.height(height);\n                }\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize(true);\n                });\n            },\n\n            _renderHeader: function() {\n                var that = this,\n                    options = that.options;\n\n                that.header = $(\"<div />\").addClass(imageEditorStyles.header);\n                that.wrapper.append(that.header);\n\n                if (options.toolbar) {\n                    that._initToolbar();\n                    that.toolbar._tabIndex();\n                }\n            },\n\n            _initToolbar: function() {\n                var that = this,\n                    options = that.options,\n                    toolbarElement = $(\"<div></div>\").addClass(imageEditorStyles.toolbar),\n                    toolbarOptions = extend({}, options.toolbar),\n                    tools = toolbarOptions.items ? toolbarOptions.items : Object.keys(that.defaultTools);\n\n                toolbarOptions.tools = tools;\n                toolbarOptions.defaultTools = that.defaultTools;\n                toolbarOptions.parentMessages = that.options.messages.toolbar;\n\n                that.header.append(toolbarElement);\n                that.toolbar = new kendo.ui.ToolBar(toolbarElement, toolbarOptions);\n                that.options.toolbar = that.toolbar.options;\n                that.toolbar.toggleTools();\n\n                that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n                that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n\n                return that.toolbar;\n            },\n\n            _toolbarClick: function(ev) {\n                var command = $(ev.target).data(\"command\"),\n                    options = $(ev.target).data(\"options\");\n\n                options = $(ev.target).val() || options;\n\n                if (!command) {\n                    return;\n                }\n\n                this.executeCommand({\n                    command: command,\n                    options: options\n                });\n            },\n\n            _contentWrapper: function() {\n                var that = this,\n                    contentWrapper = $(\"<div></div>\").addClass(imageEditorStyles.contentWrapper),\n                    canvasWrapper = $(\"<div></div>\").addClass(imageEditorStyles.canvasWrapper),\n                    canvasContainer = $(\"<div></div>\").addClass(imageEditorStyles.canvasContainer),\n                    paneWrapper = $(\"<div></div>\").addClass(imageEditorStyles.paneWrapper).hide(),\n                    toolbarHeight = outerHeight(that.header);\n\n                that.canvasWrapper = canvasWrapper;\n                that.canvasContainer = canvasContainer;\n                that.paneWrapper = paneWrapper;\n\n                canvasWrapper.append(canvasContainer);\n\n                contentWrapper.height(outerHeight(that.wrapper) - toolbarHeight);\n\n                contentWrapper.append(canvasWrapper).append(paneWrapper);\n                that.wrapper.append(contentWrapper);\n            },\n\n            _keyHandler: function() {\n                var that = this,\n                    prevent = false;\n\n                that.wrapper.on(\"keydown\" + NS, function(ev) {\n                    if (ev.ctrlKey) {\n                        switch (ev.keyCode) {\n                            case 48: // ctrl+0\n                                that.executeCommand({ command: \"ZoomImageEditorCommand\", options: \"fitToScreen\" });\n                                prevent = true;\n                                break;\n                            case 189: // ctrl+-\n                                that.executeCommand({ command: \"ZoomImageEditorCommand\", options: \"zoomOut\" });\n                                prevent = true;\n                                break;\n                            case 187: // ctrl++\n                                that.executeCommand({ command: \"ZoomImageEditorCommand\", options: \"zoomIn\" });\n                                prevent = true;\n                                break;\n                            case 90: // ctrl+z\n                                that.executeCommand({ command: \"UndoImageEditorCommand\" });\n                                prevent = true;\n                                break;\n                            case 89: // ctrl+y\n                                that.executeCommand({ command: \"RedoImageEditorCommand\" });\n                                prevent = true;\n                                break;\n                        }\n\n                        if (prevent) {\n                            ev.preventDefault();\n                        }\n                    }\n                });\n            },\n\n            _drawCanvas: function() {\n                var that = this;\n                var imageUrl = that.options.imageUrl;\n\n                that.drawImage(imageUrl).done(function(image) {\n                    if (!that.trigger(IMAGELOADED, { image: image })) {\n                        that.drawCanvas(image);\n                    }\n                }).fail(function(ev) {\n                    that.trigger(ERROR, ev);\n                });\n            },\n\n            _initUndoRedoStack: function() {\n                var that = this;\n\n                that.undoStack = [];\n                that.redoStack = [];\n            },\n\n            _toggleTools: function() {\n                var that = this,\n                    canRedo = that.redoStack.length > 0,\n                    canUndo = that.undoStack.length > 0,\n                    hasImage = !!that._image,\n                    canExport = true;\n\n                try {\n                    that._canvas.toDataURL();\n                } catch (error) {\n                    canExport = false;\n                }\n\n                if (that.toolbar) {\n                    that.toolbar.toggleTools({\n                        redo: canRedo,\n                        undo: canUndo,\n                        enable: hasImage,\n                        canExport: canExport\n                    });\n                }\n            },\n\n            drawImage: function(imageUrl) {\n                var that = this,\n                    deferred = new $.Deferred(),\n                    image = new Image();\n\n                image.onload = function() {\n                    kendo.ui.progress(that.canvasContainer, false);\n                    deferred.resolve(image);\n                };\n\n                image.onerror = function() {\n                    kendo.ui.progress(that.canvasContainer, false);\n                    deferred.reject(arguments);\n                };\n\n                kendo.ui.progress(that.canvasContainer, true);\n\n                image.src = imageUrl;\n\n                return deferred.promise();\n            },\n\n            drawCanvas: function(image) {\n                var that = this;\n                var canvas = $(kendo.template(CANVAS_TEMPLATE)(that.options.imageLabel))[0];\n                var ctx = canvas.getContext('2d');\n\n                if (that._canvas) {\n                    $(that._canvas).remove();\n                }\n\n                if (that._image) {\n                    that.undoStack.push(that._image);\n                }\n\n                that._canvas = canvas;\n                that._ctx = ctx;\n                that._image = image;\n\n                canvas.width = image.width;\n                canvas.height = image.height;\n\n                ctx.drawImage(image, 0, 0);\n\n                that.canvasContainer.append(canvas);\n\n                if (image.height > that.canvasWrapper.height()) {\n                    that.executeCommand({ command: \"ZoomImageEditorCommand\", options: \"fitToScreen\" });\n                } else {\n                    that.executeCommand({ command: \"ZoomImageEditorCommand\", options: that.getZoomLevel() });\n                }\n\n                that.trigger(IMAGERENDERED, {\n                    canvas: canvas,\n                    ctx: ctx,\n                    image: image\n                });\n\n                that._toggleTools();\n            },\n\n            getCanvasElement: function() {\n                return this._canvas;\n            },\n\n            getCurrent2dContext: function() {\n                return this._ctx;\n            },\n\n            getCurrentImage: function() {\n                return this._image;\n            },\n\n            executeCommand: function(args) {\n                var commandName = args.command,\n                    commandOptions = extend({ imageeditor: this }, isPlainObject(args.options) ? args.options : { value: args.options }),\n                    command = new ui.imageeditor.commands[commandName](commandOptions);\n\n                if (!this.trigger(EXECUTE, args)) {\n                    this._toggleTools();\n                    return command.exec();\n                }\n            },\n\n            getZoomLevel: function() {\n                return this._zoomLevel || 1;\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.element.off(NS);\n\n                if (that.currentPaneTool) {\n                    that.currentPaneTool.destroy();\n                }\n\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                }\n\n                if (that._upload) {\n                    that._upload.destroy();\n                }\n\n\n                Widget.fn.destroy.call(that);\n            }\n        });\n        ui.plugin(ImageEditor);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}