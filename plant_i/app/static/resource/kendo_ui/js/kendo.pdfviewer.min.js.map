{"version":3,"sources":["raw-js/kendo.pdfviewer.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendopdfviewer","js","this","proxy","a","b","e","bind","el","event","callback","addEventListener","unbind","removeEventListener","noop","preventDefault","touchRegExp","normalizeEvent","type","match","pageX","changedTouches","pageY","clientX","clientY","originalEvent","isTouch","offsetX","offsetY","ctrlKey","shiftKey","altKey","Draggable","ref","this$1$1","press","drag","release","mouseOnly","_pressHandler","_dragHandler","_releaseHandler","_ignoreMouse","_mouseOnly","_touchstart","touches","length","_touchmove","_touchend","setTimeout","_restoreMouse","_mousedown","which","document","_mousemove","_mouseup","_pointerdown","isPrimary","button","_pointermove","_pointerup","prototypeAccessors","configurable","supportPointerEvent","window","PointerEvent","get","_element","ownerDocument","prototype","bindTo","element","_unbindFromCurrent","_bindToCurrent","_usePointers","update","destroy","Object","defineProperties","default","$","undefined$1","throttle","func","wait","options","timeout","context","args","result","previous","later","leading","Date","getTime","apply","now","remaining","arguments","clearTimeout","trailing","FRAMES_PER_SECOND","SCROLL","kendo","ui","PdfViewerCommon","Scroller","constructor","events","filter","panScrollThrottleDelay","scrollDirectionModifier","scrollThrottleDelay","onElementScroll","state","trackNextElementScroll","scrollTo","scrollLeft","scrollTop","onDragStart","dragStarted","shouldTrackPanEvents","target","selector","closest","matchesElementSelector","setState","location","locationDelta","x","y","onDrag","calculateEventLocationDelta","directionModifier","onDragEnd","assign","resetState","bindEvents","unbindEvents","initDraggable","destroyDraggable","throttledOnDrag","draggable","cancel","bindDraggableEvents","bindElementScroll","throttledOnElementScroll","unbindElementScroll","unbindDraggableEvents","newState","trackPanEvents","enablePanEventsTracking","disablePanEventsTracking","trackScrollEvent","currentPage","rootElement","scrollElement","querySelector","page","Math","floor","round","offsetHeight","offsetTop","scrollToPage","pageNumber","pages","querySelectorAll","HTMLDivElement","top","max","min","behavior","scrollToSearchMatch","matchElement","scroller","closestCharElement","closestTextElement","closestPageElement","offsetLeft","jQuery","extend","pdfviewer","pdfjs","lib","pdfjsLib","isLoaded","console","error","PDFJS","Class","atob","PDFJSProcessor","init","viewer","file","fetchDocument","that","deferred","Deferred","messages","errorMessages","_isBase64Data","data","getDocument","promise","then","pdf","pageSizes","pagePromises","_downloadData","getData","blob","Blob","resolve","i","numPages","push","getPage","Promise","all","map","pagePromise","viewport","getViewport","scale","width","height","total","catch","_triggerError","message","parseError","notFoundError","name","includes","alertMessage","notFound","_renderBlankPage","fetchPageData","number","downloadFile","fileName","progress","pageContainer","done","reader","FileReader","readAsDataURL","onload","saveAs","dataURI","proxyURL","navigateToDestination","dest","split","JSON","parse","decodeURI","isString","getDestination","explicitDest","_navigateToDest","zoom","getPageIndex","pageIndex","activatePage","_updateDocument","loadingTask","equalSign","test","indexOf","renderTextLayer","params","processor","parseJSON","UploadHelper","DPLProcessor","read","upload","download","ajax","url","dataType","success","stringify","xhr","responseText","pageField","geometries","fromJSON","json","_clearPages","_renderPages","resize","dpl","_initUpload","uploadElement","extendUploadOptions","uploadOptions","select","_onSelect","_onSuccess","_onError","complete","_onComplete","showFileList","multiple","validation","allowedExtensions","async","saveUrl","autoUpload","saveField","kendoUpload","getKendoUpload","response","isPlainObject","XMLHttpRequest","notSupported","fileToUpload","files","trigger","extension","toLowerCase","fromFile","onerror","readAsArrayBuffer","rawFile","drawing","Group","Surface","RENDER","geometryTypes","Path","MultiPath","Rect","Image","Text","Page","attr","_updatePageSize","ratio","pageElement","size","render","BlankPage","_externalDropZoneId","_uploadHelper","_upload","find","dropZone","DPLPage","draw","group","surface","_drawGeometries","load","loaded","_initSurface","surfaceOptions","view","kGeometry","geometry","_drawPath","_drawRect","_drawImage","_drawText","append","rectGeo","point","transform","_getMatrix","fill","fillOptions","stroke","strokeOptions","imageRect","src","font","content","path","paths","subPath","segments","moveTo","j","segment","points","lineTo","curveTo","closed","close","matrix","create","Matrix","PDFJSPage","canvas","css","fn","call","defaultScale","force","_scale","_page","_renderPromise","dpr","devicePixelRatio","getContext","_dpr","_renderTask","canvasContext","_renderTextLayer","textLayer","remove","getTextContent","normalizeWhitespace","textContent","html","container","textDivs","enhanceTextSelection","_renderAnnotationLayer","annotationLayer","position","left","overflow","pointerEvents","getAnnotations","intent","annotations","annotation","subtype","rect","boundingRect","convertToViewportPoint","encodeURI","forEach","link","span","display","SEARCH_HIGHLIGHT_MARK_CLASS","isArray","Array","SearchDOM","processDom","highlightClass","charClass","targets","textNodes","charIndex","text","traverseToTextNode","processTextNode","node","nodeType","childNodes","wrap","parent","empty","splitChars","children","unwrap","newHtml","innerHTML","search","value","matchCase","expression","RegExp","matches","resetMark","resetHighlight","resetMatchIndex","exec","startOffset","index","endOffset","highlightAll","mark","start","end","highlight","matchIndex","addClass","removeClass","removeAttr","currentIndex","wrapInner","contents","nextMatch","previousMatch","getMarkedIndex","getFirstMarked","eq","each","item","encode","htmlEncode","outerWidth","_outerWidth","EXTENSIONS","keys","ErrorDialog","actions","dialogs","okText","_dialog","kendoDialog","getKendoDialog","open","center","ExportAsDialog","fileFormats","description","exportAsDialog","png","svg","title","_initializeDialog","autoFocus","resizable","modal","preventScroll","maxWidth","template","labels","saveAsType","save","_updateModel","pagesCount","viewModel","set","dialogMessages","dialog","kendoWindow","getKendoWindow","observable","defaultFileName","SearchDialog","dragHandle","icon","iconClass","inputLabel","of","next","_showSearchDialog","_hideSearchDialog","innerWidth","kendoStop","kendoAnimate","effects","direction","fade","duration","ev","properties","hide","dialogElm","prepend","_draggable","axis","dragstart","wnd","containment","startPosition","client","getOffset","_innerWidth","parseInt","clientWidth","support","scrollbar","maxLeft","isNaN","toString","userEvents","stopPropagation","searchModel","boundValue","searchText","matchCaseClick","prev","onKeyup","key","keyCode","navigationFn","ENTER","ESC","onInput","Command","OpenCommand","click","PageChangeCommand","current","targetPage","_pageNum","Number","DownloadCommand","info","ExportCommand","_saveDialog","_initDialog","exportImage","exportSVG","EnableSelectionCommand","_toggleSelection","EnablePanCommand","OpenSearchCommand","searchDialog","pageContainerWrapper","offset","_open","_next","_prev","_close","changeHandler","_change","zoomStartHandler","_closeDialog","openFileHandler","_searchDOM","_initSearchDOM","searchEngine","_updateSearchModel","toolbar","field","model","_scrollToMark","marked","pdfScroller","ZoomCommand","loadedPagesHeight","containerHeight","clientHeight","updatedVisiblePagesCount","renderTasks","processingLib","_calculateZoom","updateViewer","_scrollingStarted","zoomScale","_setPageContainerScaleFactor","pageHeight","_visiblePages","_visiblePagesCount","_loadVisiblePages","_triggerZoomEnd","preventZoom","viewerOptions","visibleCanvas","calculatedDpr","scaleValue","_allowResize","_autoFit","zoomIn","zoomRate","zoomOut","_autoZoomScale","replace","zoomMin","zoomMax","updateComboBox","_updateZoomComboBox","PrintCommand","_renderPrintContainer","_loadAllPages","processAfterRender","printContainer","loadPromises","renderPromises","getRenderPromise","_originalScale","_renderPrintPages","_printDocument","_renderPrintImage","div","img","toDataURL","myWindow","browser","write","focus","print","chrome","chromiumEdge","on","popupBlocked","NS","getCurrentPage","PLUS","MINUS","ZERO","NUMPAD_ZERO","Widget","ERROR","KEYDOWN","MOUSEWHEEL","UPDATE","ZOOM_SCALE","PAGE_CHANGE","ZOOMCOMMAND","CLICK","PROCESSORS","styles","PREDEFINED_ZOOM_VALUES","PDFViewer","deepExtend","_processMessages","_wrapper","_renderToolbar","_initProcessor","_renderPageContainer","_loadDocument","notify","_showWatermarkOverlay","wrapper","pdfjsProcessing","dplProcessing","loadOnDemand","items","defaultPageSize","zoomLevel","actualWidth","autoWidth","fitToWidth","fitToPage","exportAs","pager","first","last","toggleSelection","togglePan","defaultTools","command","spacer","zoomInOut","fillMode","attributes","class","buttons","showText","component","componentOptions","enable","dataTextField","dataValueField","valuePrimitive","clearOnEscape","commandOn","togglable","selected","spacer2","exportAsTool","pagerTools","rounded","_keydown","_resizeHandler","onResize","plusShortcuts","NUMPAD_PLUS","minusShortcuts","NUMPAD_MINUS","zeroShortcuts","shouldExecute","_blankPage","execute","processingOptions","toolbarOptions","tools","_processTools","parentMessages","toolbarElement","appendTo","ToolBar","_toolbarClick","_updateToolbar","flatMap","t","zoomLevels","percent","comboOptions","concat","dataSource","p","isRtl","rtlDirection","pageOptions","toolbarEl","zoomCombo","toFocus","_getAllItems","isBlank","action","_updatePager","_updateOnBlank","_resetTabIndex","textBox","totalPagesSpan","_togglePagerDisabledClass","prevFirst","nextLast","isPredefined","val","_initErrorDialog","_errorDialog","dialogInstance","style","setProperty","pagesData","viewerPage","pageData","_attachContainerEvents","_getVisiblePagesCount","_resize","_resizePages","containerWidth","currentRatio","_wheel","activeElement","_scroll","_linkHandler","pageToLoadNum","pageNum","_preventScroll","nextPageIndex","wheelDelta","detail","preventComboBoxChange","commandOptions","parentNode","loadPage","minVisiblePageNum","maxVisiblePageNum","slice","promises","rootGroup","background","fromRect","color","forceProxy","proxyTarget","setOptions","unbindResize","off","toggleClass","_getTextLayers","plugin"],"mappings":"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","file":"kendo.pdfviewer.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.mobile.scroller.js'), require('kendo.toolbar.js'), require('kendo.combobox.js'), require('kendo.textbox.js'), require('kendo.core.js'), require('kendo.drawing.js'), require('kendo.upload.js'), require('kendo.dialog.js'), require('kendo.window.js'), require('kendo.binder.js'), require('kendo.numerictextbox.js'), require('kendo.dropdownlist.js'), require('kendo.icons.js'), require('kendo.draganddrop.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.mobile.scroller', 'kendo.toolbar', 'kendo.combobox', 'kendo.textbox', 'kendo.core', 'kendo.drawing', 'kendo.upload', 'kendo.dialog', 'kendo.window', 'kendo.binder', 'kendo.numerictextbox', 'kendo.dropdownlist', 'kendo.icons', 'kendo.draganddrop'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendopdfviewer = global.kendopdfviewer || {}, global.kendopdfviewer.js = factory()));\n})(this, (function () {\n    var proxy = function (a, b) { return function (e) { return b(a(e)); }; };\n\n    var bind = function (el, event, callback) { return el.addEventListener && el.addEventListener(event, callback); };\n\n    var unbind = function (el, event, callback) { return el && el.removeEventListener && el.removeEventListener(event, callback); };\n\n    var noop = function () { /* empty */ };\n\n    var preventDefault = function (e) { return e.preventDefault(); };\n\n    var touchRegExp = /touch/;\n\n    // 300ms is the usual mouse interval;\n    // // However, an underpowered mobile device under a heavy load may queue mouse events for a longer period.\n    var IGNORE_MOUSE_TIMEOUT = 2000;\n\n    function normalizeEvent(e) {\n        if (e.type.match(touchRegExp)) {\n            return {\n                pageX: e.changedTouches[0].pageX,\n                pageY: e.changedTouches[0].pageY,\n                clientX: e.changedTouches[0].clientX,\n                clientY: e.changedTouches[0].clientY,\n                type: e.type,\n                originalEvent: e,\n                isTouch: true\n            };\n        }\n\n        return {\n            pageX: e.pageX,\n            pageY: e.pageY,\n            clientX: e.clientX,\n            clientY: e.clientY,\n            offsetX: e.offsetX,\n            offsetY: e.offsetY,\n            type: e.type,\n            ctrlKey: e.ctrlKey,\n            shiftKey: e.shiftKey,\n            altKey: e.altKey,\n            originalEvent: e\n        };\n    }\n\n    var Draggable = function Draggable(ref) {\n        var this$1$1 = this;\n        var press = ref.press; if ( press === void 0 ) press = noop;\n        var drag = ref.drag; if ( drag === void 0 ) drag = noop;\n        var release = ref.release; if ( release === void 0 ) release = noop;\n        var mouseOnly = ref.mouseOnly; if ( mouseOnly === void 0 ) mouseOnly = false;\n\n        this._pressHandler = proxy(normalizeEvent, press);\n        this._dragHandler = proxy(normalizeEvent, drag);\n        this._releaseHandler = proxy(normalizeEvent, release);\n        this._ignoreMouse = false;\n        this._mouseOnly = mouseOnly;\n\n        this._touchstart = function (e) {\n            if (e.touches.length === 1) {\n                this$1$1._pressHandler(e);\n            }\n        };\n\n        this._touchmove = function (e) {\n            if (e.touches.length === 1) {\n                this$1$1._dragHandler(e);\n            }\n        };\n\n        this._touchend = function (e) {\n            // the last finger has been lifted, and the user is not doing gesture.\n            // there might be a better way to handle this.\n            if (e.touches.length === 0 && e.changedTouches.length === 1) {\n                this$1$1._releaseHandler(e);\n                this$1$1._ignoreMouse = true;\n                setTimeout(this$1$1._restoreMouse, IGNORE_MOUSE_TIMEOUT);\n            }\n        };\n\n        this._restoreMouse = function () {\n            this$1$1._ignoreMouse = false;\n        };\n\n        this._mousedown = function (e) {\n            var which = e.which;\n\n            if ((which && which > 1) || this$1$1._ignoreMouse) {\n                return;\n            }\n\n            bind(this$1$1.document, \"mousemove\", this$1$1._mousemove);\n            bind(this$1$1.document, \"mouseup\", this$1$1._mouseup);\n            this$1$1._pressHandler(e);\n        };\n\n        this._mousemove = function (e) {\n            this$1$1._dragHandler(e);\n        };\n\n        this._mouseup = function (e) {\n            unbind(this$1$1.document, \"mousemove\", this$1$1._mousemove);\n            unbind(this$1$1.document, \"mouseup\", this$1$1._mouseup);\n            this$1$1._releaseHandler(e);\n        };\n\n        this._pointerdown = function (e) {\n            if (e.isPrimary && e.button === 0) {\n                bind(this$1$1.document, \"pointermove\", this$1$1._pointermove);\n                bind(this$1$1.document, \"pointerup\", this$1$1._pointerup);\n                bind(this$1$1.document, \"pointercancel\", this$1$1._pointerup);\n                bind(this$1$1.document, \"contextmenu\", preventDefault);\n\n                this$1$1._pressHandler(e);\n            }\n        };\n\n        this._pointermove = function (e) {\n            if (e.isPrimary) {\n                this$1$1._dragHandler(e);\n            }\n        };\n\n        this._pointerup = function (e) {\n            if (e.isPrimary) {\n                unbind(this$1$1.document, \"pointermove\", this$1$1._pointermove);\n                unbind(this$1$1.document, \"pointerup\", this$1$1._pointerup);\n                unbind(this$1$1.document, \"pointercancel\", this$1$1._pointerup);\n                unbind(this$1$1.document, \"contextmenu\", preventDefault);\n\n                this$1$1._releaseHandler(e);\n            }\n        };\n    };\n\n    var prototypeAccessors = { document: { configurable: true } };\n\n    Draggable.supportPointerEvent = function supportPointerEvent () {\n        return (typeof window !== 'undefined') && window.PointerEvent;\n    };\n\n    prototypeAccessors.document.get = function () {\n        return this._element\n        ? this._element.ownerDocument\n        : document;\n    };\n\n    Draggable.prototype.bindTo = function bindTo (element) {\n        if (element === this._element) {\n            return;\n        }\n\n        if (this._element) {\n            this._unbindFromCurrent();\n        }\n\n        this._element = element;\n        this._bindToCurrent();\n    };\n\n    Draggable.prototype._bindToCurrent = function _bindToCurrent () {\n        var element = this._element;\n\n        if (this._usePointers()) {\n            bind(element, \"pointerdown\", this._pointerdown);\n            return;\n        }\n\n        bind(element, \"mousedown\", this._mousedown);\n\n        if (!this._mouseOnly) {\n            bind(element, \"touchstart\", this._touchstart);\n            bind(element, \"touchmove\", this._touchmove);\n            bind(element, \"touchend\", this._touchend);\n        }\n    };\n\n    Draggable.prototype._unbindFromCurrent = function _unbindFromCurrent () {\n        var element = this._element;\n\n        if (this._usePointers()) {\n            unbind(element, \"pointerdown\", this._pointerdown);\n            unbind(this.document, \"pointermove\", this._pointermove);\n            unbind(this.document, \"pointerup\", this._pointerup);\n            unbind(this.document, \"contextmenu\", preventDefault);\n            unbind(this.document, \"pointercancel\", this._pointerup);\n            return;\n        }\n\n        unbind(element, \"mousedown\", this._mousedown);\n\n        if (!this._mouseOnly) {\n            unbind(element, \"touchstart\", this._touchstart);\n            unbind(element, \"touchmove\", this._touchmove);\n            unbind(element, \"touchend\", this._touchend);\n        }\n    };\n\n    Draggable.prototype._usePointers = function _usePointers () {\n        return !this._mouseOnly && Draggable.supportPointerEvent();\n    };\n\n    Draggable.prototype.update = function update (ref) {\n            var press = ref.press; if ( press === void 0 ) press = noop;\n            var drag = ref.drag; if ( drag === void 0 ) drag = noop;\n            var release = ref.release; if ( release === void 0 ) release = noop;\n            var mouseOnly = ref.mouseOnly; if ( mouseOnly === void 0 ) mouseOnly = false;\n\n        this._pressHandler = proxy(normalizeEvent, press);\n        this._dragHandler = proxy(normalizeEvent, drag);\n        this._releaseHandler = proxy(normalizeEvent, release);\n        this._mouseOnly = mouseOnly;\n    };\n\n    Draggable.prototype.destroy = function destroy () {\n        this._unbindFromCurrent();\n        this._element = null;\n    };\n\n    Object.defineProperties( Draggable.prototype, prototypeAccessors );\n\n    // Re-export as \"default\" field to address a bug\n    // where the ES Module is imported by CommonJS code.\n    //\n    // See https://github.com/telerik/kendo-angular/issues/1314\n    Draggable.default = Draggable;\n\n    var __meta__$3 = {\n        id: \"pdfviewercommon\",\n        name: \"PdfViewerCommon\",\n        category: \"web\",\n        description: \"This is the common package for PdfViewer across all kendo flavours\",\n        depends: [\"core\"]\n    };\n\n    (function($, undefined$1) {\n        const throttle = function(func, wait, options = {}) {\n            let timeout, context, args, result;\n            let previous = 0;\n            const later = function() {\n                previous = options.leading === false ? 0 : new Date().getTime();\n                timeout = undefined$1;\n                result = func.apply(context, args);\n                if (!timeout) {\n                    context = args = null;\n                }\n            };\n            const throttled = function() {\n                const now = new Date().getTime();\n                if (!previous && options.leading === false) {\n                    previous = now;\n                }\n                const remaining = wait - (now - previous);\n                context = undefined$1; // this\n                args = arguments;\n                if (remaining <= 0 || remaining > wait) {\n                    if (timeout) {\n                        clearTimeout(timeout);\n                        timeout = undefined$1;\n                    }\n                    previous = now;\n                    result = func.apply(context, args);\n                    if (!timeout) {\n                        context = args = null;\n                    }\n                }\n                else if (!timeout && options.trailing !== false) {\n                    timeout = window.setTimeout(later, remaining);\n                }\n                return result;\n            };\n            return throttled;\n        };\n        const preventDefault = (e) => {\n            if (e.preventDefault) {\n                e.preventDefault();\n            }\n            if (e.originalEvent) {\n                e.originalEvent.preventDefault();\n            }\n        };\n        const matchesElementSelector = (element, selector) => {\n            if (!element || !selector) {\n                return false;\n            }\n            return element.closest(selector);\n        };\n        const FRAMES_PER_SECOND = 1000 / 60;\n        const SCROLL = 'scroll';\n        /**\n         * @hidden\n         */\n        class Scroller {\n            constructor(element, options) {\n                this.options = {\n                    events: {\n                        [SCROLL]: () => undefined$1\n                    },\n                    filter: '',\n                    // throttle the scroll events to get a more similar experience\n                    // to the scrolling behavior in Adobe Acrobat Reader\n                    // as well as allow a way to improve the scrolling performance for large files\n                    panScrollThrottleDelay: FRAMES_PER_SECOND,\n                    // the drag directions are actually reversed, e.g.\n                    // dragging to the right actually moves the document to the left\n                    scrollDirectionModifier: -1,\n                    scrollThrottleDelay: FRAMES_PER_SECOND\n                };\n                this.onElementScroll = () => {\n                    const element = this.element;\n                    if (this.state.trackNextElementScroll) {\n                        this.scrollTo(element.scrollLeft, element.scrollTop);\n                    }\n                    else {\n                        // reset the state, so that consecutive scroll events can be handled\n                        this.state.trackNextElementScroll = true;\n                    }\n                };\n                this.onDragStart = (e) => {\n                    this.state.dragStarted = false;\n                    if (!this.shouldTrackPanEvents()) {\n                        return;\n                    }\n                    const target = e.target || (e.originalEvent || {}).target;\n                    if (this.options.filter &&\n                        !matchesElementSelector(target, this.options.filter)) {\n                        return;\n                    }\n                    preventDefault(e);\n                    this.setState({\n                        dragStarted: true,\n                        location: {\n                            pageX: e.pageX,\n                            pageY: e.pageY\n                        },\n                        locationDelta: {\n                            x: 0,\n                            y: 0\n                        }\n                    });\n                };\n                this.onDrag = (e) => {\n                    if (!this.shouldTrackPanEvents() || !this.state.dragStarted) {\n                        return;\n                    }\n                    this.calculateEventLocationDelta(e);\n                    this.setState({\n                        location: {\n                            pageX: e.pageX,\n                            pageY: e.pageY\n                        }\n                    });\n                    const directionModifier = this.options.scrollDirectionModifier;\n                    const scrollLeft = this.element.scrollLeft +\n                        directionModifier * this.state.locationDelta.x;\n                    const scrollTop = this.element.scrollTop +\n                        directionModifier * this.state.locationDelta.y;\n                    this.scrollTo(scrollLeft, scrollTop);\n                };\n                this.onDragEnd = () => {\n                    if (!this.shouldTrackPanEvents()) {\n                        return;\n                    }\n                };\n                this.element = element;\n                this.options = Object.assign({}, this.options, options);\n                this.resetState();\n                this.bindEvents();\n            }\n            destroy() {\n                this.unbindEvents();\n            }\n            initDraggable() {\n                this.destroyDraggable();\n                if (this.options.panScrollThrottleDelay > 0) {\n                    this.throttledOnDrag = throttle(this.onDrag, this.options.panScrollThrottleDelay);\n                }\n                else {\n                    this.throttledOnDrag = this.onDrag;\n                }\n                this.draggable = new Draggable({\n                    mouseOnly: false,\n                    press: this.onDragStart,\n                    drag: this.throttledOnDrag,\n                    release: this.onDragEnd\n                });\n                this.draggable.bindTo(this.element);\n            }\n            destroyDraggable() {\n                if (this.draggable && this.draggable.destroy) {\n                    this.draggable.destroy();\n                    if (this.throttledOnDrag && this.throttledOnDrag.cancel) {\n                        this.throttledOnDrag.cancel();\n                        this.throttledOnDrag = null;\n                    }\n                }\n            }\n            bindEvents() {\n                this.bindDraggableEvents();\n                this.bindElementScroll();\n            }\n            bindDraggableEvents() {\n                this.initDraggable();\n            }\n            bindElementScroll() {\n                if (this.options.scrollThrottleDelay > 0) {\n                    this.throttledOnElementScroll = throttle(this.onElementScroll, this.options.scrollThrottleDelay);\n                }\n                else {\n                    this.throttledOnElementScroll = this.onElementScroll;\n                }\n                this.element.addEventListener(SCROLL, this.throttledOnElementScroll);\n            }\n            unbindEvents() {\n                this.unbindElementScroll();\n                this.unbindDraggableEvents();\n            }\n            unbindDraggableEvents() {\n                this.destroyDraggable();\n            }\n            unbindElementScroll() {\n                if (this.throttledOnElementScroll &&\n                    this.throttledOnElementScroll.cancel) {\n                    this.throttledOnElementScroll.cancel();\n                    this.throttledOnElementScroll = null;\n                }\n                this.element.removeEventListener(SCROLL, this.throttledOnElementScroll);\n            }\n            setState(newState) {\n                this.state = Object.assign({}, this.state || {}, newState);\n            }\n            resetState() {\n                this.setState({\n                    trackPanEvents: false,\n                    trackNextElementScroll: false,\n                    location: { pageX: 0, pageY: 0 },\n                    locationDelta: { x: 0, y: 0 }\n                });\n            }\n            enablePanEventsTracking() {\n                this.state.trackPanEvents = true;\n                this.bindDraggableEvents();\n            }\n            disablePanEventsTracking() {\n                this.unbindDraggableEvents();\n                this.state.trackPanEvents = false;\n            }\n            shouldTrackPanEvents() {\n                return this.state.trackPanEvents;\n            }\n            calculateEventLocationDelta(e) {\n                this.state.locationDelta = {\n                    x: e.pageX - this.state.location.pageX,\n                    y: e.pageY - this.state.location.pageY\n                };\n            }\n            scrollTo(x, y, options = { trackScrollEvent: true }) {\n                if (!options.trackScrollEvent) {\n                    this.state.trackNextElementScroll = false;\n                }\n                this.element.scrollLeft = x;\n                this.element.scrollTop = y;\n            }\n        }\n\n        /**\n         * A function which gives you the page number of the document according to the scroll position.\n         *\n         * @param rootElement The root HTML element of the PDFViewer component.\n         * @returns The page number.\n         */\n        const currentPage = (rootElement) => {\n            const scrollElement = rootElement.querySelector(\n                '.k-pdf-viewer-canvas'\n            );\n            const page = rootElement.querySelector('.k-page');\n\n            return scrollElement && page\n                ? Math.floor(\n                    Math.round(scrollElement.scrollTop) /\n                    (page.offsetHeight + page.offsetTop) +\n                    0.01\n                )\n                : 0;\n        };\n\n        const scrollToPage = (\n            rootElement,\n            pageNumber\n        ) => {\n            const pages = rootElement.querySelectorAll('.k-page');\n            const page = pages[0];\n            if (page instanceof HTMLDivElement) {\n                const top =\n                    (page.offsetHeight + page.offsetTop) *\n                    Math.max(0, Math.min(pageNumber, pages.length - 1));\n                const scrollElement = page.closest('.k-pdf-viewer-canvas');\n                if (scrollElement) {\n                    scrollElement.scrollTo({ top, behavior: 'auto' });\n                }\n            }\n        };\n\n        const searchMatchScrollLeftOffset = 0;\n        const searchMatchScrollTopOffset = -64;\n\n        const scrollToSearchMatch = (matchElement, scroller) => {\n            if (!matchElement) {\n                return;\n            }\n\n            const closestCharElement = matchElement.closest('.k-text-char');\n            const closestTextElement = closestCharElement\n                ? closestCharElement.closest('span[role=\"presentation\"]')\n                : null;\n\n            if (!closestTextElement) {\n                return;\n            }\n\n            const closestPageElement =\n                closestTextElement.closest('.k-page');\n\n            if (!closestPageElement) {\n                return;\n            }\n\n            const scrollLeft =\n                closestPageElement.offsetLeft +\n                -1 * scroller.element.offsetLeft +\n                closestTextElement.offsetLeft +\n                searchMatchScrollLeftOffset;\n\n            const scrollTop =\n                closestPageElement.offsetTop +\n                -1 * scroller.element.offsetTop +\n                closestTextElement.offsetTop +\n                searchMatchScrollTopOffset;\n\n            scroller.scrollTo(scrollLeft, scrollTop, { trackScrollEvent: false });\n        };\n\n        kendo.ui.PdfViewerCommon = { Scroller, currentPage, scrollToPage, scrollToSearchMatch };\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var extend = $.extend;\n        var isLoaded = function() {\n            if (!window.pdfjsLib)\n            {\n                var console = window.console;\n\n                if (console && console.error) {\n                    console.error(\"PDF.JS required.\");\n                }\n\n                return false;\n            }\n\n            kendo.pdfviewer.pdfjs.lib = window.pdfjsLib;\n\n            return true;\n        };\n\n        extend(kendo, {\n            pdfviewer: {\n                pdfjs: {\n                    lib: window.pdfjsLib,\n                    isLoaded: isLoaded\n                }\n            }\n        });\n    })(window.kendo.jQuery);\n\n    var __meta__$2 = {\n        id: \"pdfjs-processor\",\n        name: \"PDFJS-Processor\",\n        category: \"framework\",\n        depends: [ \"core\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Class = kendo.Class,\n            extend = $.extend,\n            atob = window.atob,\n            PDFJS;\n\n        var PDFJSProcessor = Class.extend({\n            init: function(options, viewer) {\n                var that = this;\n\n                if (kendo.pdfviewer.pdfjs.isLoaded()) {\n                    PDFJS = kendo.pdfviewer.pdfjs.lib;\n                }\n\n                that.file = options.file;\n                that.viewer = viewer;\n            },\n            fetchDocument: function() {\n                var that = this,\n                    deferred = $.Deferred(),\n                    messages = that.viewer.options.messages.errorMessages;\n\n                if (!that.file) {\n                    return deferred.resolve();\n                }\n\n                if (that._isBase64Data() && atob)\n                {\n                    that.file.data = atob(that.file.data);\n                }\n\n                PDFJS.getDocument(this.file).promise.then(function(pdf) {\n                    var pageSizes = [];\n                    that.pdf = pdf;\n                    that.pagePromises = [];\n                    that._downloadData = $.Deferred();\n\n                    pdf.getData().then(function(data) {\n                        var blob = new Blob([data], { type: 'application/pdf' });\n                        that._downloadData.resolve({\n                            file: blob\n                        });\n                    });\n\n                    for (var i = 1; i <= pdf.numPages; i++) {\n                        that.pagePromises.push(pdf.getPage(i));\n                    }\n\n                    Promise.all(that.pagePromises).then(function(pagePromises) {\n                        pageSizes = pagePromises.map(function(pagePromise) {\n                            var viewport = pagePromise.getViewport({ scale: 4 / 3 });\n                            return {\n                                width: viewport.width,\n                                height: viewport.height\n                            };\n                        });\n\n                        deferred.resolve({\n                            total: pdf.numPages,\n                            pages: pageSizes\n                        });\n                    }).catch(function(e) {\n                        that.viewer._triggerError({\n                            error: e.message,\n                            message: messages.parseError\n                        });\n                    });\n\n                }).catch(function(e) {\n                    var notFoundError = e.name.includes(\"Missing\");\n                    var alertMessage = notFoundError ? messages.notFound : messages.parseError;\n                    that.viewer._triggerError({\n                        error: e.message,\n                        message: alertMessage\n                    });\n                    if (notFoundError) {\n                        that.viewer._renderBlankPage();\n                    }\n                });\n\n                return deferred;\n            },\n            fetchPageData: function(number) {\n                return this.pagePromises[number - 1];\n            },\n            downloadFile: function(fileName) {\n                var that = this;\n                kendo.ui.progress(that.viewer.pageContainer, true);\n\n                that._downloadData.done(function(result) {\n                    kendo.ui.progress(that.viewer.pageContainer, false);\n\n                    var reader = new FileReader();\n                    reader.readAsDataURL(result.file);\n\n                    reader.onload = function() {\n                        kendo.saveAs({\n                            dataURI: reader.result,\n                            fileName: fileName + \".pdf\",\n                            proxyURL: function() {\n                                return reader.result;\n                            }\n                        });\n                    };\n                });\n            },\n            navigateToDestination: function(dest) {\n                var that = this;\n                var dest = dest.split(\"#\")[1];\n\n                try {\n                    dest = JSON.parse(decodeURI(dest));\n                } catch (error) {\n                    dest = decodeURI(dest);\n                }\n\n                if (kendo.isString(dest)) {\n                    that.pdf.getDestination(dest).then(function(explicitDest) {\n                        that._navigateToDest(explicitDest);\n                    });\n                } else if (dest) {\n                    that._navigateToDest(dest);\n                }\n            },\n            _navigateToDest: function(explicitDest) {\n                var that = this,\n                    pageNumber = explicitDest[0],\n                    zoom = explicitDest[4] || that.viewer.options.zoom;\n\n                that.pdf.getPageIndex(pageNumber)\n                    .then(pageIndex => {\n                        that.viewer.activatePage(pageIndex + 1);\n                        that.viewer.zoom(`${zoom * 100}%`);\n                    });\n            },\n            _updateDocument: function(file) {\n                if (this.pdf && this.pdf.loadingTask) {\n                    this.pdf.loadingTask.destroy();\n                }\n\n                this.file = file;\n            },\n            _isBase64Data: function() {\n                var data = this.file.data,\n                    notBase64 = /[^A-Z0-9+\\/=]/i,\n                    length = data && data.length,\n                    equalSign;\n\n                if (!length || length % 4 !== 0 || notBase64.test(data)) {\n                    return false;\n                }\n\n                equalSign = data.indexOf('=');\n\n                return equalSign === -1 ||\n                    equalSign === length - 1 ||\n                    (equalSign === length - 2 && data[length - 1] === '=');\n            },\n            renderTextLayer: function(params) {\n                PDFJS.renderTextLayer(params);\n            }\n        });\n\n        extend(kendo.pdfviewer.pdfjs, {\n            processor: PDFJSProcessor\n        });\n    })(window.kendo.jQuery);\n\n    var __meta__$1 = {\n        id: \"dpl-processor\",\n        name: \"DPL-Processor\",\n        category: \"framework\",\n        depends: [ \"core\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            Class = kendo.Class;\n\n        var DPLProcessor = Class.extend({\n            init: function(options, viewer) {\n                var that = this;\n\n                that.options = options;\n                that.read = options.read;\n                that.upload = options.upload;\n                that.download = options.download;\n\n                that.viewer = viewer;\n            },\n            fetchDocument: function() {\n                var that = this,\n                    deferred = $.Deferred(),\n                    errorMessages = that.viewer.options.messages.errorMessages;\n\n                if (!that.read) {\n                    return deferred.resolve();\n                }\n\n                $.ajax({\n                    type: that.read.type,\n                    url: that.read.url,\n                    dataType: that.read.dataType,\n                    success: function(data) {\n                        if (typeof data != \"string\") {\n                            data = kendo.stringify(data);\n                        }\n                        deferred.resolve(JSON.parse(data));\n                    },\n                    error: function(xhr) {\n                        that.viewer._triggerError({\n                            error: xhr.responseText,\n                            message: errorMessages.parseError\n                        });\n                    }\n                });\n\n                return deferred;\n            },\n            fetchPageData: function(number) {\n                var that = this;\n                var deferred = $.Deferred();\n                var page = that.viewer.document.pages[number - 1];\n                var data = {};\n                data[that.read.pageField] = number;\n\n                if (!page.geometries.length) {\n                    $.ajax({\n                        type: that.read.type,\n                        url: that.read.url,\n                        data: data,\n                        success: function(data) {\n                            deferred.resolve(JSON.parse(data));\n                        },\n                        error: function(xhr) {\n                            that.viewer._triggerError({\n                                error: xhr.responseText,\n                                message: that.viewer.options.messages.errorMessages.parseError\n                            });\n                        }\n                    });\n                } else {\n                    deferred.resolve(page);\n                }\n\n                return deferred;\n            },\n            downloadFile: function(fileName) {\n                window.location = this.download.url + \"?file=\" + fileName;\n            },\n\n            fromJSON: function(json)\n            {\n                var viewer = this.viewer;\n                viewer._clearPages();\n\n                viewer.document = json;\n                viewer.document.total = viewer.document.pages.length;\n\n                viewer._renderPages();\n                viewer.resize(true);\n\n                viewer.activatePage(1);\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            dpl: {\n                processor: DPLProcessor\n            }\n        });\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var Class = kendo.Class,\n            extend = $.extend,\n            parseJSON = JSON.parse,\n            progress = kendo.ui.progress,\n            Class = kendo.Class,\n            OPEN = \"open\";\n\n        var UploadHelper = Class.extend({\n            init: function(viewer) {\n                this.viewer = viewer;\n                this.errorMessages = this.viewer.options.messages.errorMessages;\n                this.upload = this.viewer.processor.upload;\n            },\n            _initUpload: function(uploadElement, extendUploadOptions) {\n                var uploadOptions = extend({\n                    select: this._onSelect.bind(this),\n                    success: this._onSuccess.bind(this),\n                    error: this._onError.bind(this),\n                    complete: this._onComplete.bind(this),\n                    showFileList: false,\n                    multiple: false,\n                    validation: {\n                        allowedExtensions: [\".pdf\"]\n                    }\n                }, extendUploadOptions || {});\n\n                if (this.upload) {\n                    extend(uploadOptions, {\n                        async: {\n                            saveUrl: this.upload.url,\n                            autoUpload: true,\n                            saveField: this.upload.saveField\n                        }\n                    });\n                }\n\n                var upload = (uploadElement || $('<input name=\"files\" accept=\".pdf\" type=\"file\" />')).kendoUpload(uploadOptions).getKendoUpload();\n\n                return upload;\n            },\n            _onComplete: function() {\n                progress(this.viewer.pageContainer, false);\n            },\n            _onSuccess: function(e) {\n                var json = parseJSON(e.response);\n\n                if ($.isPlainObject(json)) {\n                    this.viewer.processor.fromJSON(json);\n                }\n                else {\n                    this.viewer._triggerError({\n                        error: json,\n                        message: this.errorMessages.parseError\n                    });\n                }\n            },\n            _onError: function(e) {\n                this.viewer._triggerError({\n                    error: e.XMLHttpRequest.responseText,\n                    message: this.errorMessages.notSupported\n                });\n            },\n            _onSelect: function(e) {\n                var that = this;\n                var fileToUpload = e.files[0];\n\n                progress(that.viewer.pageContainer, true);\n\n                if (that.viewer.trigger(OPEN, { file: fileToUpload }) || that.upload) {\n                    return;\n                } else if (fileToUpload.extension.toLowerCase() !== \".pdf\") {\n                    that.viewer._triggerError({\n                        error: fileToUpload,\n                        message: that.errorMessages.notSupported\n                    });\n                    return;\n                }\n\n                var reader = new FileReader();\n                reader.onload = function(e) {\n                    var document = e.target.result;\n                    that.viewer.fromFile(document);\n                };\n                reader.onerror = function() {\n                    that.viewer._triggerError({\n                        error: fileToUpload,\n                        message: that.errorMessages.parseError\n                    });\n                };\n\n                reader.readAsArrayBuffer(fileToUpload.rawFile);\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            UploadHelper: UploadHelper\n        });\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var extend = $.extend,\n            noop = $.noop,\n            drawing = kendo.drawing,\n            Group = drawing.Group,\n            Surface = drawing.Surface,\n            RENDER = \"render\",\n            Class = kendo.Class,\n            UploadHelper = kendo.pdfviewer.UploadHelper,\n\n            DEFAULT_DPR = 2;\n\n        var geometryTypes = {\n            Path: \"path\",\n            MultiPath: \"multipath\",\n            Rect: \"rect\",\n            Image: \"image\",\n            Text: \"text\"\n        };\n\n        var BLANK_PAGE_TEMPLATE = (dropzoneId) => `<div class=\"k-page k-blank-page\">\n        <div id=\"${dropzoneId}\" class=\"k-external-dropzone\">\n            <div class=\"k-dropzone-inner\">\n                <span class=\"k-dropzone-icon k-svg-icon k-icon-xxxl k-svg-i-upload\">\n                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                        <path d=\"M32 384v96h448v-96H32zm192-64h64V192h96L256 32 128 192h96v128z\"></path>\n                    </svg>\n                </span>\n                <span class=\"k-dropzone-hint\">Drag and drop files here to upload</span>\n            </div>\n        </div>\n        <input name=\"files\" accept=\".pdf\" type=\"file\" ref-pdfviewer-blank-page-upload>\n    </div>`;\n\n        var Page = Class.extend({\n            init: function(options, viewer) {\n                this.viewer = viewer;\n                this.processor = options.processor;\n                this.options = options;\n                this.pageNumber = options.number;\n\n                this.element = $(\"<div class='k-page' />\");\n                this.element.attr(kendo.attr(\"number\"), this.pageNumber);\n\n                this._updatePageSize(options);\n                this.width = options.width;\n                this.height = options.height;\n            },\n            resize: function(ratio) {\n                var pageElement = this.element;\n\n                this._updatePageSize({\n                    width: Math.min(pageElement.width() * ratio, this.width),\n                    height: Math.min(pageElement.height() * ratio, this.height)\n                });\n            },\n            _updatePageSize: function(size) {\n                this.element\n                        .width(size.width)\n                        .height(size.height);\n            },\n            destroy: function() {\n                kendo.destroy(this.element);\n            },\n            render: noop\n        });\n\n        var BlankPage = Page.extend({\n            init: function(options, viewer) {\n                this.viewer = viewer;\n                this.options = options;\n                this._externalDropZoneId = `${viewer.element.attr(\"id\")}-external-dropzone`;\n                this.element = $(BLANK_PAGE_TEMPLATE(this._externalDropZoneId));\n                this._uploadHelper = new UploadHelper(viewer);\n            },\n            _initUpload: function() {\n                this._upload = this._uploadHelper._initUpload(this.element.find(\"input[ref-pdfviewer-blank-page-upload]\"), {\n                    dropZone: `#${this._externalDropZoneId}`,\n                    showFileList: false,\n                    async: {\n                        autoUpload: false,\n                        saveUrl: \"save\"\n                    }\n                });\n            },\n            resize: noop,\n            _updatePageSize: noop,\n            destroy: function() {\n                if (this._upload) {\n                    this._upload.destroy();\n                }\n\n                kendo.destroy(this.element);\n            },\n            render: noop\n        });\n\n        var DPLPage = Page.extend({\n            draw: function() {\n                var that = this,\n                    geometries = that.options.geometries;\n\n                that.group = new Group();\n                that.surface.draw(that.group);\n\n                that._drawGeometries(geometries);\n\n                that.viewer.trigger(RENDER, { page: this });\n                kendo.ui.progress(that.element, false);\n            },\n            load: function() {\n                var that = this;\n\n                if (that.loaded || !that.processor)\n                {\n                    return;\n                }\n\n                that.processor.fetchPageData(that.pageNumber).then(function(data) {\n                    that.options = data;\n                    that._initSurface();\n                    that.draw();\n                });\n\n                that.loaded = true;\n            },\n            _initSurface: function() {\n                var size = {\n                    width: this.element.width(),\n                    height: this.element.height()\n                };\n                var surfaceOptions = extend({ width: this.width, height: this.height }, this.viewer.options.view);\n                this.surface = new Surface(this.element, surfaceOptions);\n                this._updatePageSize(size);\n            },\n            _drawGeometries: function(geometries) {\n                var that = this,\n                    kGeometry;\n\n                if (!geometries) {\n                    return;\n                }\n\n                for (var i = 0; i <= geometries.length; i++) {\n                    var geometry = geometries[i];\n\n                    if (!geometry) {\n                        continue;\n                    }\n\n                    switch (geometry.type) {\n                        case geometryTypes.Path:\n                        case geometryTypes.MultiPath:\n                            kGeometry = that._drawPath(geometry);\n                            break;\n                        case geometryTypes.Rect:\n                            kGeometry = that._drawRect(geometry);\n                            break;\n                        case geometryTypes.Image:\n                            kGeometry = that._drawImage(geometry);\n                            break;\n                        case geometryTypes.Text:\n                            kGeometry = that._drawText(geometry);\n                            break;\n                        default:\n                            kGeometry = null;\n                            break;\n                    }\n\n                    if (kGeometry)\n                    {\n                        that.group.append(kGeometry);\n                    }\n                }\n            },\n            _drawRect: function(geometry)\n            {\n                var rectGeo = new kendo.geometry.Rect(geometry.point, geometry.size);\n\n                return new drawing.Rect(rectGeo, {\n                    transform: this._getMatrix(geometry.transform),\n                    fill: geometry.fillOptions,\n                    stroke: geometry.strokeOptions\n                });\n            },\n\n            _drawImage: function(geometry)\n            {\n                var imageRect = new kendo.geometry.Rect(geometry.point, geometry.size);\n                return new drawing.Image(geometry.src, imageRect, {\n                    transform: this._getMatrix(geometry.transform)\n                });\n            },\n\n            _drawText: function(geometry)\n            {\n                var options = {\n                    transform: this._getMatrix(geometry.transform),\n                    stroke: geometry.strokeOptions,\n                    fill: geometry.fillOptions,\n                    font: geometry.font\n                };\n                return new kendo.drawing.Text(geometry.content, geometry.point, options);\n            },\n\n            _drawPath: function(geometry)\n            {\n                var options = {\n                    transform: this._getMatrix(geometry.transform),\n                    stroke: geometry.strokeOptions,\n                    fill: geometry.fillOptions\n                };\n                var path = new drawing.MultiPath(options);\n\n                for (var i = 0; i < geometry.paths.length; i++) {\n                    var subPath = geometry.paths[i];\n\n                    if (!subPath.segments)\n                    {\n                        return;\n                    }\n\n                    path.moveTo.apply(path, subPath.point);\n\n                    for (var j = 0; j < subPath.segments.length; j++) {\n                        var segment = subPath.segments[j];\n                        var drawAction = segment.points.length === 1 ? path.lineTo : path.curveTo;\n                        drawAction.apply(path, segment.points);\n                    }\n\n                    if (subPath.closed) {\n                        path.close();\n                    }\n                }\n\n                return path;\n            },\n\n            _getMatrix: function(transform) {\n                var matrix = Object.create(kendo.geometry.Matrix.prototype);\n                kendo.geometry.Matrix.apply(matrix, transform);\n                return matrix;\n            }\n        });\n\n        var PDFJSPage = Page.extend({\n            init: function(options, viewer) {\n                var that = this,\n                    canvas;\n\n                canvas = $(\"<canvas />\").css({\n                    width: \"100%\",\n                    height: \"100%\"\n                });\n                that.canvas = canvas.get(0);\n\n                Page.fn.init.call(that, options, viewer);\n                that.canvas.width = that.width;\n                that.canvas.height = that.height;\n\n                that.element.append(canvas);\n            },\n            load: function(defaultScale, force) {\n                var that = this,\n                    promise = $.Deferred();\n\n                if (that._scale === defaultScale && !force)\n                {\n                    return;\n                } else if (that._scale && that._scale !== defaultScale && !force)\n                {\n                    that._scale = defaultScale;\n                    that.render(defaultScale);\n                    return promise.resolve(that);\n                }\n\n                if (that.processor) {\n                    that.processor.fetchPageData(that.pageNumber).then(function(page) {\n                        that._page = page;\n                        that._renderPromise = that.render(defaultScale).then(function() {\n                            that.viewer.trigger(RENDER, { page: that });\n                        });\n                        promise.resolve(that);\n                    });\n                }\n\n                that._scale = defaultScale;\n                that.loaded = true;\n                return promise;\n            },\n            render: function(scale) {\n                var that = this;\n                var dpr = window.devicePixelRatio >= DEFAULT_DPR ? window.devicePixelRatio : DEFAULT_DPR;\n                var context = this.canvas.getContext('2d'),\n                    viewport = this._page.getViewport({\n                        scale: scale\n                    });\n\n                this.canvas.width = viewport.width * dpr;\n                this.canvas.height = viewport.height * dpr;\n                context.scale(dpr, dpr);\n\n                this._scale = scale;\n                this._dpr = dpr;\n\n                if (this._renderTask)\n                {\n                    this._renderTask.cancel();\n                    this._renderTask = null;\n                }\n\n                this._updatePageSize({\n                    width: viewport.width,\n                    height: viewport.height\n                });\n\n                this._renderTask = this._page.render({\n                    canvasContext: context,\n                    viewport: viewport\n                });\n\n                this._renderTextLayer(viewport);\n\n                return this._renderTask.promise.then(function() {\n                    that._renderTask = null;\n                }).catch(function() {});\n            },\n            _renderTextLayer: function(viewport) {\n                var that = this;\n                var page = that._page;\n\n                if (that.textLayer) {\n                    that.textLayer.remove();\n                }\n\n                that.textLayer = $(\"<div class='k-text-layer'></div>\").get(0);\n                that.element.append(that.textLayer);\n\n                page.getTextContent({\n                    normalizeWhitespace: true\n                }).then(function(textContent) {\n                    $(that.textLayer).css({\n                      height: viewport.height,\n                      width: viewport.width\n                    }).html(\"\"); // Clear content to make sure that refreshing the page will not cause duplication of the text content.\n\n                    var params = {\n                        textContent: textContent,\n                        container: that.textLayer,\n                        viewport: viewport,\n                        textDivs: [],\n                        enhanceTextSelection: true\n                    };\n\n\n                    that.processor.renderTextLayer(params);\n                    that._renderAnnotationLayer(viewport);\n                });\n            },\n            _renderAnnotationLayer: function(viewport) {\n                var that = this,\n                    page = that._page;\n\n                if (that.annotationLayer) {\n                    that.annotationLayer.remove();\n                }\n\n                that.annotationLayer = $(\"<div class='k-annotation-layer'></div>\").css({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    overflow: 'hidden',\n                    height: that.element.height(),\n                    width: that.element.width(),\n                    pointerEvents: 'none',\n                });\n\n                that.element.append(that.annotationLayer);\n\n                page.getAnnotations({ intent: \"display\" }).then(function(annotations) {\n                    var links = annotations.map(function(annotation) {\n                        if (annotation.subtype === 'Link') {\n                            var rect = annotation.rect;\n                            var boundingRect = [\n                                viewport.convertToViewportPoint(rect[0], rect[1]),\n                                viewport.convertToViewportPoint(rect[2], rect[3]),\n                            ];\n\n                            var left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n                            var top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n                            var width = Math.max(boundingRect[0][0], boundingRect[1][0]) - left;\n                            var height = Math.max(boundingRect[0][1], boundingRect[1][1]) - top;\n\n                            var url = annotation.url || (annotation.dest && `#${ kendo.isString(annotation.dest) ? encodeURI(annotation.dest) : encodeURI(JSON.stringify(annotation.dest)) }`);\n\n                            return { url: url, rect: { left, top, width, height } };\n                        }\n                    });\n\n                    links.forEach(function(link) {\n                        var span = $(\"<span></span>\").css({\n                            position: 'absolute',\n                            left: link.rect.left,\n                            top: link.rect.top,\n                        }).append($(`<a ${link.url ? `href=${link.url}` : ''}></a>`).css({\n                            width: link.rect.width,\n                            height: link.rect.height,\n                            display: 'inline-block',\n                            pointerEvents: 'auto',\n                        }));\n\n                        that.annotationLayer.append(span);\n                    });\n                });\n            },\n        });\n\n        extend(kendo.pdfviewer.dpl, {\n            geometryTypes: geometryTypes,\n            Page: DPLPage\n        });\n        extend(kendo.pdfviewer.pdfjs, {\n            Page: PDFJSPage\n        });\n        extend(kendo.pdfviewer, {\n            BlankPage: BlankPage\n        });\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var Class = kendo.Class,\n            extend = $.extend,\n            SEARCH_HIGHLIGHT_MARK_CLASS = \"k-search-highlight-mark\",\n            isArray = Array.isArray;\n\n        var SearchDOM = Class.extend({\n            init: function(options) {\n                var that = this;\n\n                that.options = extend({}, that.options, options);\n\n                that.processDom();\n            },\n\n            options: {\n                highlightClass: \"k-search-highlight\",\n                charClass: \"k-text-char\"\n            },\n\n            processDom: function() {\n                var that = this;\n\n                that.targets = isArray(that.options.target) ? that.options.target : [that.options.target];\n                that.textNodes = [];\n                that.charIndex = 0;\n                that.text = \"\";\n\n                that.targets.forEach(function(target) {\n                    that.traverseToTextNode(target);\n                });\n\n                for (var i = 0; i < that.textNodes.length; i++) {\n                    that.processTextNode(that.textNodes[i]);\n                }\n            },\n\n            traverseToTextNode: function(node) {\n                var that = this;\n\n                if (node.nodeType === 3) {\n                    that.textNodes.push(node);\n                } else {\n                    for (var i = 0; i < node.childNodes.length; i++) {\n                        that.traverseToTextNode(node.childNodes[i]);\n                    }\n                }\n            },\n\n            processTextNode: function(node) {\n                var that = this;\n                var text = node.textContent;\n                var span;\n\n                that.text = that.text + text;\n\n                if (text.length > 0) {\n                    span = $(node).wrap(\"<span>\").parent();\n                    span.parent().attr(\"role\", \"presentation\");\n                    span.empty();\n                    that.splitChars(span.get(0), text);\n                    span.children().unwrap();\n                }\n            },\n\n            splitChars: function(span, text) {\n                var that = this;\n                var newHtml = \"\";\n\n                for (var i = 0; i < text.length; i++) {\n                    newHtml = newHtml + \"<span class='\" + that.options.charClass + \"' \" + kendo.attr(\"char-index\") + \"=\" + that.charIndex + \">\" + text[i] + \"</span>\";\n                    that.charIndex++;\n                }\n\n                span.innerHTML = newHtml;\n            },\n\n            search: function(value, matchCase) {\n                var that = this;\n                var expression = new RegExp(value, !matchCase ? \"gi\" : \"g\");\n                var match;\n\n                that.matches = [];\n\n                that.resetMark();\n                that.resetHighlight();\n                that.resetMatchIndex();\n\n                if (value === \"\") {\n                    return;\n                }\n\n                match = expression.exec(that.text);\n\n                while (match) {\n                    that.matches.push({\n                        startOffset: match.index,\n                        endOffset: match.index + match[0].length\n                    });\n\n                    match = expression.exec(that.text);\n                }\n\n                that.highlightAll();\n                that.mark();\n            },\n\n            highlightAll: function() {\n                var that = this;\n\n                that.matches.forEach(function(match, index) {\n                    var start = match.startOffset;\n                    var end = match.endOffset;\n\n                    that.highlight(start, end, index + 1);\n                });\n            },\n\n            highlight: function(start, end, matchIndex) {\n                var that = this;\n\n                for (var i = start; i < end; i++) {\n                    $(that.targets)\n                        .find(\".\" + that.options.charClass + \"[\" + kendo.attr(\"char-index\") + \"=\" + i + \"]\")\n                        .addClass(that.options.highlightClass)\n                        .attr(kendo.attr(\"match-index\"), matchIndex);\n                }\n            },\n\n            resetHighlight: function() {\n                var that = this;\n\n                $(that.targets)\n                    .find(\".\" + that.options.highlightClass)\n                    .removeClass(that.options.highlightClass);\n            },\n\n            resetMatchIndex: function() {\n                var that = this;\n\n                $(that.targets)\n                    .find(\".\" + that.options.charClass + \"[\" + kendo.attr(\"match-index\") + \"]\")\n                    .removeAttr(kendo.attr(\"match-index\"));\n            },\n\n            mark: function() {\n                var that = this;\n\n                if (!that.currentIndex && that.currentIndex !== 0) {\n                    that.currentIndex = 0;\n                } else if (that.currentIndex > that.matches.length) {\n                    that.currentIndex = that.matches.length;\n                } else {\n                    that.resetMark();\n                }\n\n                $(that.targets)\n                    .find(\".\" + that.options.charClass + \"[\" + kendo.attr(\"match-index\") + \"=\" + that.currentIndex + \"]\")\n                    .wrapInner(`<span class=\"${SEARCH_HIGHLIGHT_MARK_CLASS}\">`);\n            },\n\n            resetMark: function() {\n                var that = this;\n                $(that.targets).find(\".\" + SEARCH_HIGHLIGHT_MARK_CLASS).contents().unwrap();\n            },\n\n            nextMatch: function() {\n                var that = this;\n\n                that.currentIndex++;\n\n                if (that.currentIndex > that.matches.length) {\n                    that.currentIndex = 1;\n                }\n\n                that.mark();\n            },\n\n            previousMatch: function() {\n                var that = this;\n\n                that.currentIndex--;\n\n                if (that.currentIndex < 1) {\n                    that.currentIndex = that.matches.length;\n                }\n\n                that.mark();\n            },\n\n            getMarkedIndex: function() {\n                return this.matches.length ? this.currentIndex : 0;\n            },\n\n            getFirstMarked: function() {\n                return $(this.targets).find(\".\" + SEARCH_HIGHLIGHT_MARK_CLASS).eq(0);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.resetMark();\n                $(that.targets).children(\"span:not(.\" + that.options.charClass + \")\").each(function(i, item) {\n                    $(item).text($(item).text());\n                });\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            SearchDOM: SearchDOM\n        });\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            encode = kendo.htmlEncode,\n            extend = $.extend,\n            Class = kendo.Class,\n            Draggable = kendo.ui.Draggable,\n            outerWidth = kendo._outerWidth,\n            EXTENSIONS = {\n                svg: \".svg\",\n                png: \".png\"\n            },\n            keys = kendo.keys;\n\n        var ErrorDialog = Class.extend({\n            init: function(options) {\n                this.options = extend(options, {\n                    actions: [{\n                        text: options.messages.dialogs.okText\n                    }]\n                });\n                this._dialog = $(\"<div />\")\n                        .kendoDialog(this.options)\n                        .getKendoDialog();\n            },\n            open: function() {\n                this._dialog.center().open();\n            }\n        });\n\n        var ExportAsDialog = Class.extend({\n            init: function(options) {\n                this.options = extend(options, this.options, {\n                    fileFormats: [{\n                        description: options.messages.dialogs.exportAsDialog.png,\n                        extension: EXTENSIONS.png\n                    }, {\n                        description: options.messages.dialogs.exportAsDialog.svg,\n                        extension: EXTENSIONS.svg\n                    }],\n                    title: options.messages.dialogs.exportAsDialog.title,\n                    open: function() {\n                        this.center();\n                    }\n                });\n                this._initializeDialog();\n                return this;\n            },\n            options: {\n                extension: EXTENSIONS.png,\n                autoFocus: true,\n                resizable: false,\n                modal: {\n                    preventScroll: true\n                },\n                width: \"90%\",\n                maxWidth: 520,\n                template: ({ messages, total }) =>\n                    `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.fileName)}:</label></div>` +\n                    \"<div class='k-edit-field'>\" +\n                        \"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input class='k-input-inner' data-bind='value: name' /></span>\" +\n                    \"</div>\" +\n                    \"<div>\" +\n                        `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.saveAsType)}:</label></div>` +\n                        \"<div class='k-edit-field'>\" +\n                        \"<select data-role='dropdownlist' class='k-file-format' \" +\n                            \"data-text-field='description' \" +\n                            \"data-value-field='extension' \" +\n                            \"data-bind='value: extension, source: fileFormats'></select>\" +\n                        \"</div>\" +\n                    \"</div>\" +\n                    `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.page)}:</label></div>` +\n                    \"<div class='k-edit-field'>\" +\n                        `<input data-role='numerictextbox' data-format='n0' data-min='1' data-max='${encode(total)}' data-bind='value: page' />` +\n                    \"</div>\" +\n                    \"<div class='k-actions'>\" +\n                        `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-bind='click: apply'><span class='k-button-text'>${encode(messages.save)}</span></button>` +\n                        `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-bind='click: close'><span class='k-button-text'>${encode(messages.cancel)}</span></button>` +\n                    \"</div>\"\n            },\n            _updateModel: function(options) {\n                if (options.pagesCount) {\n                    this.viewModel.set(\"pagesCount\", options.pagesCount);\n                }\n                if (options.page) {\n                    this.viewModel.set(\"page\", options.page);\n                }\n            },\n            _initializeDialog: function() {\n                var that = this;\n                var options = that.options;\n                var dialogMessages = options.messages.dialogs;\n                var dialog = $(\"<div class='k-pdf-viewer-window k-action-window k-popup-edit-form' />\")\n                        .append(kendo.template(options.template)({\n                            total: options.pagesCount,\n                            messages: dialogMessages\n                        }))\n                        .kendoWindow(options)\n                        .getKendoWindow();\n\n                that.viewModel = kendo.observable({\n                    title: dialogMessages.exportAsDialog.title,\n                    name: dialogMessages.exportAsDialog.defaultFileName,\n                    extension: options.extension,\n                    fileFormats: options.fileFormats,\n                    pagesCount: options.pagesCount,\n                    page: 1,\n                    apply: that.apply.bind(this),\n                    close: function() {\n                        dialog.close();\n                    }\n                });\n\n                that._dialog = dialog;\n\n                kendo.bind(dialog.element, that.viewModel);\n                return dialog;\n            },\n            open: function() {\n                this._dialog.center().open();\n            },\n            apply: function() {\n                this._dialog.close();\n                this.options.apply({\n                    fileName: this.viewModel.name + this.viewModel.extension,\n                    extension: this.viewModel.extension,\n                    page: this.viewModel.page\n                });\n            }\n        });\n\n        var SearchDialog = Class.extend({\n            init: function(options) {\n                var that = this;\n                that.options = extend({}, options, that.options);\n            },\n            options: {\n                resizable: false,\n                template: ({ messages }) => '<div class=\"k-search-panel k-pos-sticky k-top-center\">' +\n                              `<button aria-label='${encode(messages.dragHandle)}' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-search-dialog-draghandle'>${kendo.ui.icon({ icon: \"handle-drag\", iconClass: \"k-button-icon\" })}</button>` +\n                              \"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'>\" +\n                                  `<input class='k-search-dialog-input k-input-inner' data-bind='value: boundValue, events: { keyup: onKeyup, input: onInput }' aria-label='${encode( messages.inputLabel)}' title='${encode(messages.inputLabel)}' />` +\n                                  `<span class='k-input-suffix'><button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-match-case-button k-match-case-button' data-bind='css: {k-selected: matchCase}, click: matchCaseClick' aria-label='${encode(messages.matchCase)}' title='${encode(messages.matchCase)}'>${kendo.ui.icon({ icon: \"convert-lowercase\", iconClass: \"k-button-icon\" })}</button></span>` +\n                              \"</span>\" +\n                              `<span class='k-search-matches'><span data-bind='text: matchIndex'></span> ${encode(messages.of)} <span data-bind='text: matches'></span></span>` +\n                              `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: prev' aria-label='${encode(messages.previous)}' title='${encode(messages.previous)}'>${kendo.ui.icon({ icon: \"arrow-up\", iconClass: \"k-button-icon\" })}</button>` +\n                              `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: next' aria-label='${encode(messages.next)}' title='${encode(messages.next)}'>${kendo.ui.icon({ icon: \"arrow-down\", iconClass: \"k-button-icon\" })}</button>` +\n                              `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: close' aria-label='${encode(messages.close)}' title='${encode(messages.close)}'>${kendo.ui.icon({ icon: \"x\", iconClass: \"k-button-icon\" })}</button>` +\n                          \"</div>\"\n            },\n            open: function() {\n                var that = this;\n\n                if (!that.dialog) {\n                    that._initializeDialog();\n                }\n\n                that.options.open();\n                that._showSearchDialog();\n            },\n            close: function() {\n                var that = this;\n                that.options.close();\n                that._hideSearchDialog();\n            },\n            _showSearchDialog: function() {\n                var that = this;\n\n                that.dialog.css(\"left\",`${(that.options.pageContainer.innerWidth() / 2) - (outerWidth(that.dialog, true) / 2)}px`);\n\n                that.dialog.kendoStop().kendoAnimate({\n                    effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                    duration: 350,\n                    complete: function(ev) {\n                        that.dialog.find(\".k-search-dialog-input\").trigger(\"focus\");\n                    }\n                });\n            },\n            _hideSearchDialog: function() {\n                var that = this;\n\n                that.dialog.kendoStop().kendoAnimate({\n                    effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                    duration: 350,\n                    hide: true\n                });\n            },\n            _initializeDialog: function() {\n                var that = this;\n                var template = kendo.template(that.options.template);\n                var dialogElm = $(template({\n                    messages: that.options.messages\n                }));\n\n                that.options.pageContainer.prepend(dialogElm);\n                that.dialog = dialogElm;\n\n                that._draggable = new Draggable(dialogElm, {\n                    filter: \".k-search-dialog-draghandle\",\n                    axis: \"x\",\n                    dragstart: function(e) {\n                        var wnd = that.dialog;\n                        var containment = that.options.pageContainer;\n\n                        wnd.startPosition = {\n                            left: e.x.client - kendo.getOffset(wnd, \"position\").left,\n                        };\n\n                        if (!containment) {\n                            return null;\n                        }\n\n                        containment._innerWidth = containment.innerWidth();\n\n                        if (parseInt(containment._innerWidth, 10) > containment[0].clientWidth) {\n                            containment._innerWidth -= kendo.support.scrollbar();\n                        }\n\n                        wnd.maxLeft = containment._innerWidth - outerWidth(wnd, true);\n                    },\n                    drag: function(e) {\n                        var wnd = that.dialog;\n                        var position = {};\n                        var left;\n\n                        left = e.x.client - wnd.startPosition.left;\n\n                        if (left && isNaN(left) && left.toString().indexOf(\"px\") < 0) {\n                            position.left = left;\n                        } else {\n                            position.left = Math.max(\n                                Math.min(parseInt(left, 10), parseInt(wnd.maxLeft, 10)),\n                                0\n                            );\n                        }\n\n                        wnd.css(position);\n                    },\n                });\n\n                that._draggable.userEvents.stopPropagation = false;\n\n                that.searchModel = kendo.observable({\n                    boundValue: \"\",\n                    searchText: \"\",\n                    matchCase: false,\n                    matchIndex: 0,\n                    matches: 0,\n                    matchCaseClick: function() {\n                        this.set(\"matchCase\", !this.matchCase);\n                    },\n                    next: that.options.next,\n                    prev: that.options.prev,\n                    close: function() {\n                        this.set(\"boundValue\", \"\");\n                        that.close();\n                    },\n                    onKeyup: function(ev) {\n                        var key = ev.keyCode;\n                        var navigationFn = ev.shiftKey ? this.prev : this.next;\n\n                        if (key === keys.ENTER) {\n                            navigationFn();\n                            ev.preventDefault();\n                        } else if (key == keys.ESC) {\n                            this.close();\n                        }\n                    },\n                    onInput: function(ev) {\n                        this.set(\"searchText\", ev.target.value);\n                    }\n                });\n\n                kendo.bind(dialogElm, that.searchModel);\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            dialogs: {\n                ErrorDialog: ErrorDialog,\n                ExportAsDialog: ExportAsDialog,\n                SearchDialog: SearchDialog\n            }\n        });\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            parseJSON = JSON.parse,\n            progress = kendo.ui.progress,\n            scrollToSearchMatch = kendo.ui.PdfViewerCommon.scrollToSearchMatch,\n            Class = kendo.Class,\n            UploadHelper = kendo.pdfviewer.UploadHelper,\n            OPEN = \"open\",\n            ZOOMSTART = \"zoomStart\",\n            ZOOMEND = \"zoomEnd\";\n\n        var Command = Class.extend({\n            init: function(options) {\n                this.options = options;\n                this.viewer = options.viewer;\n                this.errorMessages = this.viewer.options.messages.errorMessages;\n            }\n        });\n\n        var OpenCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n                this._uploadHelper = new UploadHelper(this.viewer);\n            },\n            exec: function() {\n                this.viewer._upload = this.viewer._upload || this._uploadHelper._initUpload();\n                this.viewer._upload.element.click();\n            },\n        });\n\n        var PageChangeCommand = Command.extend({\n            exec: function() {\n                var targetPage = this.options.value,\n                    viewer = this.viewer,\n                    current, total;\n\n                if (isNaN(targetPage)) {\n                    current = viewer._pageNum;\n                    total = viewer.document.total;\n\n                    switch (targetPage) {\n                        case \"first\": targetPage = 1;\n                            break;\n                        case \"prev\": targetPage = current > 1 ? current - 1 : 1;\n                            break;\n                        case \"next\": targetPage = current < total ? current + 1 : total;\n                            break;\n                        case \"last\": targetPage = total;\n                            break;\n                    }\n                } else {\n                    targetPage = Number(targetPage);\n                }\n\n                viewer.activatePage(targetPage);\n            }\n        });\n\n        var DownloadCommand = Command.extend({\n            exec: function() {\n                if (!this.viewer.document) {\n                    this.viewer._triggerError({\n                        message: this.errorMessages.notFound\n                    });\n                    return;\n                }\n\n                var fileName = (this.viewer.document.info && this.viewer.document.info.title) ||\n                                this.viewer.options.messages.defaultFileName;\n\n                this.viewer.processor.downloadFile(fileName);\n            }\n        });\n\n        var ExportCommand = Command.extend({\n            init: function(options) {\n                options = $.extend(options, this.options);\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var dialog = (this.viewer._saveDialog || this._initDialog());\n\n                dialog._updateModel({\n                    pagesCount: (this.viewer.document && this.viewer.document.total) || 1,\n                    page: this.viewer.options.page\n                });\n\n                dialog.open();\n            },\n            apply: function(viewModel) {\n                var extension = viewModel.extension;\n\n                if (extension === \".png\") {\n                    this.viewer.exportImage(viewModel);\n                } else if (extension === \".svg\") {\n                    this.viewer.exportSVG(viewModel);\n                }\n            },\n            _initDialog: function() {\n                this.viewer._saveDialog = new kendo.pdfviewer.dialogs.ExportAsDialog({\n                    apply: this.apply.bind(this),\n                    pagesCount: (this.viewer.document && this.viewer.document.total) || 1,\n                    messages: this.viewer.options.messages\n                });\n                return this.viewer._saveDialog;\n            }\n        });\n\n        var EnableSelectionCommand = Command.extend({\n            exec: function() {\n                var that = this,\n                    viewer = that.viewer;\n\n                    viewer._toggleSelection(true);\n            }\n        });\n\n        var EnablePanCommand = Command.extend({\n            exec: function() {\n                var that = this,\n                    viewer = that.viewer;\n\n                    viewer._toggleSelection(false);\n            }\n        });\n\n        var OpenSearchCommand = Command.extend({\n            init: function(options) {\n                var that = this;\n\n                that.viewer = options.viewer;\n\n                if (!that.viewer.searchDialog) {\n                    that.viewer.searchDialog = new kendo.pdfviewer.dialogs.SearchDialog({\n                        pageContainer: that.viewer.pageContainerWrapper,\n                        position: {\n                            top: that.viewer.pageContainer.offset().top,\n                            left: that.viewer.pageContainer.offset().left\n                        },\n                        messages: that.viewer.options.messages.dialogs.search,\n                        open: that._open.bind(that),\n                        next: that._next.bind(that),\n                        prev: that._prev.bind(that),\n                        close: that._close.bind(that)\n                    });\n                }\n\n                Command.fn.init.call(that, options);\n            },\n            exec: function() {\n                var that = this;\n\n                that.viewer.searchDialog.open();\n            },\n            _open: function() {\n                var that = this;\n\n                that.changeHandler = that._change.bind(that);\n                that.zoomStartHandler = that._closeDialog.bind(that);\n                that.openFileHandler = that._closeDialog.bind(that);\n\n                if (!that.viewer._searchDOM) {\n                    that.viewer._initSearchDOM();\n                    that.viewer.searchDialog.searchModel.bind(\"change\", that.changeHandler);\n                    that.viewer.bind(\"zoomStart\", that.zoomStartHandler);\n                    that.viewer.bind(\"open\", that.openFileHandler);\n                }\n            },\n            _close: function() {\n                var that = this;\n                var searchEngine = that.viewer._searchDOM;\n\n                that.viewer.searchDialog.searchModel.unbind(\"change\", that.changeHandler);\n                that.viewer.unbind(\"zoomStart\", that.zoomStartHandler);\n                that.viewer.unbind(\"open\", that.openFileHandler);\n                searchEngine.destroy();\n                delete that.viewer._searchDOM;\n                that._updateSearchModel();\n                that.viewer.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n            },\n            _change: function(ev) {\n                var that = this;\n                var searchEngine = that.viewer._searchDOM;\n                var field = ev.field;\n                var model = that.viewer.searchDialog.searchModel;\n                var value = model[field];\n\n                if (!searchEngine) {\n                    return;\n                }\n\n                switch (field) {\n                    case \"searchText\":\n                        searchEngine.search(value, model.matchCase);\n                        that._updateSearchModel();\n                        break;\n                    case \"matchCase\":\n                        searchEngine.search(model.searchText, value);\n                        that._updateSearchModel();\n                        break;\n                    default:\n                        break;\n                }\n            },\n            _next: function() {\n                var that = this;\n                var searchEngine = that.viewer._searchDOM;\n\n                if (searchEngine.matches && searchEngine.matches.length) {\n                    searchEngine.nextMatch();\n                    that._updateSearchModel();\n                }\n            },\n            _prev: function() {\n                var that = this;\n                var searchEngine = that.viewer._searchDOM;\n\n                if (searchEngine.matches && searchEngine.matches.length) {\n                    searchEngine.previousMatch();\n                    that._updateSearchModel();\n                }\n            },\n            _updateSearchModel: function() {\n                var that = this;\n                var searchEngine = that.viewer._searchDOM;\n                var model = that.viewer.searchDialog.searchModel;\n\n                if (searchEngine) {\n                    model.set(\"matches\", searchEngine.matches.length);\n                    model.set(\"matchIndex\", searchEngine.getMarkedIndex());\n                    that._scrollToMark();\n                } else {\n                    model.set(\"searchText\", \"\");\n                    model.set(\"matches\", 0);\n                    model.set(\"matchIndex\", 0);\n                    model.set(\"matchCase\", false);\n                }\n            },\n            _scrollToMark: function() {\n                var that = this;\n                var searchEngine = that.viewer._searchDOM;\n                var marked = searchEngine.getFirstMarked();\n\n                if (!marked.length) {\n                    return;\n                }\n\n                scrollToSearchMatch(marked[0], that.viewer.pdfScroller);\n            },\n            _closeDialog: function() {\n                var that = this;\n                that.viewer.searchDialog.close();\n            }\n        });\n\n        var ZoomCommand = Command.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    viewer = that.viewer,\n                    scale = options.value || options.scale,\n                    loadedPagesHeight = 0,\n                    page = that.viewer._pageNum,\n                    containerHeight = viewer.pageContainer[0].clientHeight,\n                    updatedVisiblePagesCount = 1,\n                    renderTasks = [];\n\n                if (viewer.processingLib === \"dpl\") {\n                    return;\n                }\n\n                scale = that._calculateZoom();\n\n                var updateViewer = function() {\n                    var scrollingStarted = viewer._scrollingStarted;\n\n                    if (!scrollingStarted)\n                    {\n                        viewer.activatePage(page);\n                        viewer._scrollingStarted = false;\n                    }\n                };\n\n                if (!scale) {\n                    return;\n                }\n\n                viewer.zoomScale = scale;\n                viewer._scrollingStarted = false;\n\n                viewer._setPageContainerScaleFactor(scale);\n\n                if (viewer.pages) {\n                    viewer.pages.forEach(function(page) {\n                        var pageHeight;\n\n                        if (viewer._visiblePages.indexOf(page) !== -1 && page.loaded) {\n                            renderTasks.push(page.render(scale));\n\n                            pageHeight = page._page.getViewport({\n                                scale: scale\n                            }).height;\n                        }\n                        else {\n                            page.resize(scale);\n                            pageHeight = page.element.height();\n                        }\n\n                        loadedPagesHeight += pageHeight;\n\n                        if (loadedPagesHeight <= containerHeight) {\n                            updatedVisiblePagesCount++;\n                        }\n                    });\n\n\n                    if (viewer._visiblePagesCount != updatedVisiblePagesCount) {\n\n                        viewer._visiblePagesCount = updatedVisiblePagesCount;\n                        viewer._loadVisiblePages();\n                    }\n                }\n\n                Promise.all(renderTasks).then(function() {\n                    updateViewer();\n                    that._triggerZoomEnd(scale);\n                }).catch(function() {\n                    updateViewer();\n                    that._triggerZoomEnd(scale);\n                });\n            },\n\n            _calculateZoom: function() {\n                var options = this.options,\n                    viewer = this.viewer,\n                    viewerOptions = viewer.options,\n                    pageContainer = viewer.pageContainer,\n                    visibleCanvas = viewer._visiblePages && viewer._visiblePages[0].canvas,\n                    calculatedDpr = (viewer._visiblePages && viewer._visiblePages[0]._dpr) || 2,\n                    scale = options.value || options.scale,\n                    scaleValue = scale,\n                    preventZoom;\n\n                viewer._allowResize = false;\n                viewer._autoFit = false;\n\n                if (options.zoomIn) {\n                    scaleValue = scale = viewer.zoomScale + viewerOptions.zoomRate;\n                } else if (options.zoomOut) {\n                    scaleValue = scale = viewer.zoomScale - viewerOptions.zoomRate;\n                } else if (scale === \"auto\") {\n                    viewer._allowResize = true;\n                    scaleValue = viewer._autoZoomScale;\n                } else if (scale === \"actual\") {\n                    scaleValue = 1;\n                } else if (scale === \"fitToWidth\") {\n                    viewer._allowResize = true;\n                    viewer._autoFit = \"fitToWidth\";\n                    scaleValue = (pageContainer.width() / ((visibleCanvas.width / calculatedDpr) / viewer.zoomScale));\n                } else if (scale === \"fitToPage\") {\n                    viewer._allowResize = true;\n                    viewer._autoFit = \"fitToPage\";\n                    scaleValue = (pageContainer.height() / ((visibleCanvas.height / calculatedDpr) / viewer.zoomScale));\n                } else if (scale && scale.toString().match(/^[0-9]+%?$/)) {\n                    scale = parseInt(scale.replace('%', ''), 10) / 100;\n                    scaleValue = scale;\n                } else {\n                    preventZoom = isNaN(scale);\n                }\n\n                if (!preventZoom) {\n                    preventZoom = scale < viewerOptions.zoomMin || scale > viewerOptions.zoomMax;\n                }\n\n                if (preventZoom || viewer.trigger(ZOOMSTART, { scale: scale })) {\n                    return;\n                }\n\n                if (options.updateComboBox && viewer.toolbar)\n                {\n                    viewer._updateZoomComboBox(scale);\n                }\n\n                return scaleValue;\n            },\n\n            _triggerZoomEnd: function(scale) {\n                var that = this,\n                    viewer = that.viewer;\n\n                viewer.trigger(ZOOMEND, { scale: scale });\n            }\n        });\n\n        var PrintCommand = Command.extend({\n            init: function(options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function() {\n                var that = this;\n\n                 if (!that.viewer.document) {\n                    that.viewer._triggerError({\n                        message: this.errorMessages.notFound\n                    });\n                    return;\n                }\n\n                progress(that.viewer.pageContainer, true);\n                that._renderPrintContainer();\n                that._loadAllPages().then(that.processAfterRender.bind(that));\n            },\n            _renderPrintContainer: function() {\n                this.printContainer = $(\"<div></div>\");\n            },\n            _loadAllPages: function() {\n                var that = this;\n                var pages = that.viewer.pages;\n                var loadPromises = [];\n                var renderPromises = [];\n                var promise = $.Deferred();\n                var defaultScale = 3;\n\n                that._originalScale = that.viewer.zoom();\n                that.viewer._setPageContainerScaleFactor(defaultScale);\n\n                function getRenderPromise(page) {\n                    renderPromises.push(page._renderPromise);\n                }\n\n                for (var i = 0; i < pages.length; i++) {\n                    loadPromises.push(pages[i].load(defaultScale, true).then(getRenderPromise));\n                }\n\n                Promise.all(loadPromises).then(function() {\n                    promise.resolve(renderPromises);\n                });\n\n                return promise;\n            },\n            processAfterRender: function(renderPromises) {\n                var that = this;\n\n                Promise.all(renderPromises).then(function() {\n                    that._renderPrintPages();\n                    setTimeout(function() {\n                        that._printDocument();\n                        that.viewer.zoom(that._originalScale);\n                        progress(that.viewer.pageContainer, false);\n                        delete that._originalScale;\n                    }, 0);\n                });\n            },\n            _renderPrintPages: function() {\n                var pages = this.viewer.pages;\n\n                for (var i = 0; i < pages.length; i++) {\n                    this._renderPrintImage(pages[i]);\n                }\n             },\n            _renderPrintImage: function(page) {\n                var canvas = page.canvas;\n                var div = $(\"<div></div>\");\n\n                var img = \"<img src='\" + canvas.toDataURL() + \"' width='\" + page.width + \"px' height='\" + page.height + \"px' />\";\n\n                div.append(img);\n\n                this.printContainer.append(div);\n            },\n            _printDocument: function() {\n                var that = this;\n                var pages = that.viewer.pages;\n                var width = pages[0].width;\n                var height = pages[0].height;\n                var myWindow = window.open('','','innerWidth=' + width + ',innerHeight=' + height + 'location=no,titlebar=no,toolbar=no');\n                var browser = kendo.support.browser;\n\n                if (!myWindow) {\n                    that.viewer._triggerError({\n                        message: that.errorMessages.popupBlocked\n                    });\n                    return;\n                }\n\n                myWindow.document.write(that.printContainer.html());\n                myWindow.document.close();\n                myWindow.focus();\n                myWindow.print();\n\n                if (!browser.chrome || browser.chromiumEdge) {\n                    myWindow.close();\n                } else {\n                    $(myWindow.document).find(\"body\").on(\"mousemove\", function() {\n                        myWindow.close();\n                    });\n                }\n            }\n        });\n\n        extend(kendo.pdfviewer, {\n            OpenCommand: OpenCommand,\n            PageChangeCommand: PageChangeCommand,\n            DownloadCommand: DownloadCommand,\n            EnableSelectionCommand: EnableSelectionCommand,\n            EnablePanCommand: EnablePanCommand,\n            ExportCommand: ExportCommand,\n            PrintCommand: PrintCommand,\n            OpenSearchCommand: OpenSearchCommand,\n            ZoomCommand: ZoomCommand\n        });\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"pdfviewer\",\n        name: \"PDFViewer\",\n        category: \"web\",\n        description: \"PDFViewer to display pdfs in the browser\",\n        depends: [\"core\", \"window\", \"dialog\", \"toolbar\", \"draganddrop\", \"upload\", \"combobox\", \"drawing\", \"binder\", \"dropdownlist\", \"numerictextbox\", \"textbox\"]\n    };\n\n    (function($, undefined$1) {\n        var NS = \".kendoPDFViewer\",\n            kendo = window.kendo,\n            ui = kendo.ui,\n            Scroller = ui.PdfViewerCommon.Scroller,\n            getCurrentPage = ui.PdfViewerCommon.currentPage,\n            scrollToPage = ui.PdfViewerCommon.scrollToPage,\n            extend = $.extend,\n            drawing = kendo.drawing,\n            keys = $.extend({ PLUS: 187, MINUS: 189, ZERO: 48, NUMPAD_ZERO: 96 }, kendo.keys),\n            Page,\n            BlankPage = kendo.pdfviewer.BlankPage,\n            Widget = ui.Widget,\n            progress = kendo.ui.progress,\n            SCROLL = \"scroll\",\n            RENDER = \"render\",\n            OPEN = \"open\",\n            ERROR = \"error\",\n            KEYDOWN = \"keydown\" + NS,\n            MOUSEWHEEL = \"DOMMouseScroll\" + NS + \" mousewheel\" + NS,\n            UPDATE = \"update\",\n            ZOOM_SCALE = 1.25,\n            PAGE_CHANGE = \"pagechange\",\n            ZOOMSTART = \"zoomStart\",\n            ZOOMEND = \"zoomEnd\",\n            ZOOMCOMMAND = \"ZoomCommand\",\n            WHITECOLOR = \"#ffffff\",\n            TABINDEX = \"tabindex\",\n            CLICK = \"click\",\n            CHANGE = \"change\",\n            TOGGLE = \"toggle\",\n            PROCESSORS = {\n                pdfjs: \"pdfjs\",\n                dpl: \"dpl\"\n            },\n            styles = {\n                viewer: \"k-pdf-viewer k-widget\",\n                scroller: \"k-canvas k-pdf-viewer-canvas k-pos-relative k-overflow-auto\",\n                enableTextSelection: \"k-enable-text-select\",\n                enablePanning: \"k-enable-panning\",\n                highlightClass: \"k-search-highlight\",\n                charClass: \"k-text-char\"\n            },\n            PREDEFINED_ZOOM_VALUES = {\n                auto: \"auto\",\n                actual: \"actual\",\n                fitToWidth: \"fitToWidth\",\n                fitToPage: \"fitToPage\"\n            };\n\n        var PDFViewer = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, kendo.deepExtend({}, this.options, options));\n\n                that._processMessages();\n\n                that._wrapper();\n\n                if (that.options.toolbar) {\n                    that._renderToolbar();\n                }\n\n                that._initProcessor(options || {});\n                that._renderPageContainer();\n                that._loadDocument();\n\n                kendo.notify(that, kendo.ui);\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.wrapper[0]);\n                }\n            },\n\n            events: [\n                RENDER,\n                OPEN,\n                ERROR,\n                ZOOMSTART,\n                ZOOMEND\n            ],\n\n            options: {\n                name: \"PDFViewer\",\n                view: {\n                    type: \"canvas\"\n                },\n                pdfjsProcessing: {\n                    file: null\n                },\n                dplProcessing: {\n                    read: {\n                        url: null,\n                        type: \"GET\",\n                        dataType: \"json\",\n                        pageField: \"pageNumber\"\n                    },\n                    upload: {\n                        url: null,\n                        saveField: \"file\"\n                    },\n                    download: {\n                        url: null\n                    },\n                    loadOnDemand: false\n                },\n                toolbar: {\n                    items: []\n                },\n                width: 1000,\n                height: 1200,\n                page: 1,\n                defaultPageSize: {\n                    width: 794,\n                    height: 1123\n                },\n                scale: null,\n                zoomMin: 0.5,\n                zoomMax: 4,\n                zoomRate: 0.25,\n                messages: {\n                    defaultFileName: \"Document\",\n                    toolbar: {\n                        zoom: {\n                            zoomLevel: \"zoom level\",\n                            zoomOut: \"Zoom Out\",\n                            zoomIn: \"Zoom In\",\n                            actualWidth: \"Actual Width\",\n                            autoWidth: \"Automatic Width\",\n                            fitToWidth: \"Fit to Width\",\n                            fitToPage: \"Fit to Page\"\n                        },\n                        open: \"Open\",\n                        exportAs: \"Export\",\n                        download: \"Download\",\n                        pager: {\n                            first: \"Go to the first page\",\n                            previous: \"Go to the previous page\",\n                            next: \"Go to the next page\",\n                            last: \"Go to the last page\",\n                            of: \"of\",\n                            page: \"page\",\n                            pages: \"pages\"\n                        },\n                        print: \"Print\",\n                        toggleSelection: \"Enable Selection\",\n                        togglePan: \"Enable Panning\",\n                        search: \"Search\"\n                    },\n                    errorMessages: {\n                        notSupported: \"Only pdf files allowed.\",\n                        parseError: \"PDF file fails to process.\",\n                        notFound: \"File is not found.\",\n                        popupBlocked: \"Popup is blocked.\"\n                    },\n                    dialogs: {\n                        exportAsDialog: {\n                            title: \"Export...\",\n                            defaultFileName: \"Document\",\n                            pdf: \"Portable Document Format (.pdf)\",\n                            png: \"Portable Network Graphics (.png)\",\n                            svg: \"Scalable Vector Graphics (.svg)\",\n                            labels: {\n                                fileName: \"File name\",\n                                saveAsType: \"Save as\",\n                                page: \"Page\"\n                            }\n                        },\n                        okText: \"OK\",\n                        save: \"Save\",\n                        cancel: \"Cancel\",\n                        search: {\n                            inputLabel: \"Search Text\",\n                            matchCase: \"Match Case\",\n                            next: \"Next Match\",\n                            previous: \"Previous Match\",\n                            close: \"Close\",\n                            of: \"of\",\n                            dragHandle: \"Drag search\"\n                        }\n                    }\n                }\n            },\n\n            defaultTools: {\n                pager: {\n                    name: \"pager\",\n                    command: \"PageChangeCommand\"\n                },\n                spacer: { type: \"spacer\" },\n                zoomInOut: {\n                    type: \"buttonGroup\",\n                    fillMode: \"flat\",\n                    attributes: { \"class\": \"k-zoom-in-out-group\" },\n                    buttons: [\n                        { type: \"button\", icon: \"zoom-out\", name: \"zoomOut\", command: \"ZoomCommand\", showText: \"overflow\", options: \"{ \\\"zoomOut\\\": true, \\\"updateComboBox\\\": true }\", fillMode: \"flat\" },\n                        { type: \"button\", icon: \"zoom-in\", name: \"zoomIn\", command: \"ZoomCommand\", showText: \"overflow\", options: \"{ \\\"zoomIn\\\": true, \\\"updateComboBox\\\": true }\", fillMode: \"flat\" },\n                    ]\n                },\n                zoom: {\n                    type: \"component\",\n                    name: \"zoom\",\n                    command: \"ZoomCommand\",\n                    overflow: \"never\",\n                    component: \"ComboBox\",\n                    data: [50, 100, 150, 200, 300, 400],\n                    componentOptions: {\n                        enable: false,\n                        dataTextField: \"text\",\n                        dataValueField: \"percent\",\n                        valuePrimitive: true,\n                        clearOnEscape: false,\n                        commandOn: \"change\"\n                    }\n                },\n                toggleSelection: {\n                    type: \"buttonGroup\",\n                    fillMode: \"flat\",\n                    attributes: { \"class\": \"k-toggle-selection-group\" },\n                    buttons: [\n                        {\n                            togglable: true,\n                            command: \"EnableSelectionCommand\",\n                            icon: \"pointer\",\n                            showText: \"overflow\",\n                            name: \"toggleSelection\",\n                            group: \"toggle-pan\",\n                            fillMode: \"flat\"\n                        }, {\n                            togglable: true,\n                            command: \"EnablePanCommand\",\n                            icon: \"hand\",\n                            showText: \"overflow\",\n                            name: \"togglePan\",\n                            group: \"toggle-pan\",\n                            selected: true,\n                            fillMode: \"flat\"\n                        }\n                    ]\n                },\n                spacer2: { type: \"spacer\" },\n                search: {\n                    type: \"button\",\n                    command: \"OpenSearchCommand\",\n                    icon: \"search\",\n                    name: \"search\",\n                    showText: \"overflow\",\n                    enable: false,\n                    fillMode: \"flat\"\n                },\n                open: {\n                    type: \"button\",\n                    showText: \"overflow\",\n                    name: \"open\",\n                    icon: \"folder-open\",\n                    command: \"OpenCommand\",\n                    fillMode: \"flat\"\n                },\n                download: {\n                    type: \"button\",\n                    showText: \"overflow\",\n                    name: \"download\",\n                    icon: \"download\",\n                    command: \"DownloadCommand\",\n                    enable: false,\n                    fillMode: \"flat\"\n                },\n                print: {\n                    type: \"button\",\n                    showText: \"overflow\",\n                    name: \"print\",\n                    icon: \"print\",\n                    command: \"PrintCommand\",\n                    enable: false,\n                    fillMode: \"flat\"\n                }\n            },\n\n            exportAsTool: {\n                exportAs: { type: \"button\", showText: \"overflow\", name: \"exportAs\", icon: \"image-export\", command: \"ExportCommand\", fillMode: \"flat\" }\n            },\n\n            pagerTools: [\n                {\n                    type: \"buttonGroup\",\n                    fillMode: \"flat\",\n                    buttons: [\n                        { type: \"button\", icon: \"caret-alt-to-left\", name: \"first\", showText: \"overflow\", options: \"{ \\\"value\\\": \\\"first\\\" }\", attributes: { class: \"k-first-link\" } },\n                        { type: \"button\", icon: \"caret-alt-left\", name: \"previous\", showText: \"overflow\", options: \"{ \\\"value\\\": \\\"prev\\\" }\", attributes: { class: \"k-prev-link\" }, rounded: \"none\" },\n                    ]\n                },\n                {\n                    type: \"component\",\n                    component: \"TextBox\",\n                    name: \"page\",\n                    attributes: { class: \"k-viewer-pager-input\" },\n                    element: \"<input id='page-input'/>\",\n                    overflow: \"never\",\n                    componentOptions: {\n                        commandOn: \"change\"\n                    }\n                },\n                {\n                    overflow: \"never\",\n                    template: function(data) {\n                        return \"<label for='page-input'>\" + data.componentOptions.messages.of + \" <span id='total-page'></span> \" + data.componentOptions.messages.pages + \"</label>\";\n                    },\n                    componentOptions: {\n                        messages: {\n                            of: \"of\",\n                            pages: \"pages\"\n                        }\n                    }\n                },\n                {\n                    type: \"buttonGroup\",\n                    fillMode: \"flat\",\n                    buttons: [\n                        { type: \"button\", icon: \"caret-alt-right\", name: \"next\", showText: \"overflow\", options: \"{ \\\"value\\\": \\\"next\\\" }\", fillMode: \"flat\", attributes: { class: \"k-next-link\" }, rounded: \"none\" },\n                        { type: \"button\", icon: \"caret-alt-to-right\", name: \"last\", showText: \"overflow\", options: \"{ \\\"value\\\": \\\"last\\\" }\", fillMode: \"flat\", attributes: { class: \"k-last-link\" } }\n                    ]\n                },\n            ],\n\n            _processMessages: function() {\n                var messages = this.options.messages.toolbar,\n                    zoom = messages.zoom,\n                    pager = messages.pager;\n\n                if ($.isPlainObject(zoom)) {\n                    this.options.messages.toolbar = $.extend({}, this.options.messages.toolbar, zoom);\n                    this.options.messages.toolbar.zoom = zoom.zoomLevel || this.options.messages.toolbar.zoom;\n                }\n\n                if ($.isPlainObject(pager)) {\n                    this.options.messages.toolbar = $.extend({}, this.options.messages.toolbar, pager);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options;\n\n                that.wrapper = that.element;\n\n                that.wrapper\n                        .width(options.width)\n                        .height(options.height)\n                        .addClass(styles.viewer)\n                        .on(KEYDOWN, that._keydown.bind(that));\n\n                that._allowResize = that.options.scale === null;\n                that._autoZoomScale = ZOOM_SCALE;\n                that.zoomScale = that.options.scale || that._autoZoomScale;\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize();\n                });\n\n                that._pageNum = that.options.page;\n            },\n\n            _keydown: function(e) {\n                var plusShortcuts = [keys.PLUS, keys.NUMPAD_PLUS],\n                    minusShortcuts = [keys.MINUS, keys.NUMPAD_MINUS],\n                    zeroShortcuts = [keys.ZERO, keys.NUMPAD_ZERO],\n                    shouldExecute = false,\n                    args = {\n                        command: ZOOMCOMMAND,\n                        options: { updateComboBox: true }\n                    };\n\n                if (!e.ctrlKey || this._blankPage || this.processingLib === PROCESSORS.dpl) {\n                    return;\n                }\n\n                if (plusShortcuts.includes(e.keyCode)) {\n                    args.options.zoomIn = true;\n                    shouldExecute = true;\n                } else if (minusShortcuts.includes(e.keyCode)) {\n                    args.options.zoomOut = true;\n                    shouldExecute = true;\n                } else if (zeroShortcuts.includes(e.keyCode)) {\n                    args.options.value = ZOOM_SCALE;\n                    shouldExecute = true;\n                }\n\n                if (shouldExecute) {\n                    this.execute(args);\n                    e.preventDefault();\n                }\n            },\n\n            _initProcessor: function(options) {\n                var that = this,\n                    processingOptions;\n\n                processingOptions = options.dplProcessing ? that.options.dplProcessing : that.options.pdfjsProcessing;\n                that.processingLib = options.dplProcessing ? PROCESSORS.dpl : PROCESSORS.pdfjs;\n\n                that.processor = new kendo.pdfviewer[that.processingLib].processor(processingOptions, that);\n                Page = kendo.pdfviewer[that.processingLib].Page;\n            },\n\n            _renderToolbar: function() {\n                var that = this,\n                    options = that.options,\n                    toolbarOptions = extend({}, options.toolbar),\n                    tools = toolbarOptions.items && toolbarOptions.items.length ? toolbarOptions.items : Object.keys(that.defaultTools);\n\n                tools = that._processTools(tools);\n\n                toolbarOptions = {\n                    defaultTools: $.extend({}, that.defaultTools, that.exportAsTool),\n                    parentMessages: options.messages.toolbar,\n                    tools: tools,\n                    resizable: true\n                };\n\n                var toolbarElement = $(\"<div />\");\n                toolbarElement.appendTo(that.element);\n                that.toolbar = new kendo.ui.ToolBar(toolbarElement, toolbarOptions);\n                that.options.toolbar = that.toolbar.options;\n\n                that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n                that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n\n                that.bind({\n                    update: that._updateToolbar.bind(that)\n                });\n\n                return that.toolbar;\n            },\n\n            _processTools: function(tools) {\n                var that = this,\n                    messages = that.options.messages.toolbar;\n\n                tools = tools.flatMap(t => {\n                    if (t === \"zoom\") {\n                        t = that.defaultTools.zoom;\n                    } else if (t === \"pager\") {\n                        t = that.defaultTools.pager;\n                    }\n\n                    if (t.name === \"zoom\") {\n                        t = $.extend({}, that.defaultTools.zoom, t);\n\n                        var zoomLevels = [{\n                            percent: PREDEFINED_ZOOM_VALUES.auto,\n                            text: messages.autoWidth\n                        }, {\n                            percent: PREDEFINED_ZOOM_VALUES.actual,\n                            text: messages.actualWidth\n                        }, {\n                            percent: PREDEFINED_ZOOM_VALUES.fitToWidth,\n                            text: messages.fitToWidth\n                        }, {\n                            percent: PREDEFINED_ZOOM_VALUES.fitToPage,\n                            text: messages.fitToPage\n                        }];\n\n                        // eslint-disable-next-line\n                        var comboOptions = t.data.map(i => { return { percent: i, text: i + \"%\" } });\n                        var value = that.options.scale ? that.options.scale * 100 + \"%\" : \"auto\";\n\n                        zoomLevels = zoomLevels.concat(comboOptions);\n                        t.componentOptions.dataSource = zoomLevels;\n                        t.componentOptions.value = value;\n                    } else if (t.name === \"pager\") {\n                        t = $.extend({}, that.defaultTools.pager, t);\n\n                        var pagerTools = that.pagerTools;\n\n                        that.pager = true;\n\n                        t = pagerTools.map(p => {\n                            var compMessages;\n\n                            if (p.componentOptions && p.componentOptions.messages) {\n                                compMessages = p.componentOptions.messages;\n                                Object.keys(messages).forEach(key => {\n                                    p.componentOptions.messages[key] = messages.pager[key];\n                                });\n                            }\n\n                            if (p.buttons) {\n                                p.buttons = p.buttons.map((b) => {\n                                    if (b.icon && b.icon.indexOf(\"caret-alt\") > -1 && kendo.support.isRtl(that.element)) {\n                                        var direction = b.icon.indexOf(\"left\") > -1 ? \"left\" : \"right\";\n                                        var rtlDirection = b.icon.indexOf(\"left\") > -1 ? \"right\" : \"left\";\n                                        b.icon = b.icon.replace(direction, rtlDirection);\n                                    }\n                                    b.command = t.command;\n                                    return b;\n                                });\n                            } else {\n                                p.command = t.command;\n                            }\n\n                            return p;\n                        });\n                    }\n\n                    return t;\n                });\n\n                return tools;\n            },\n\n            _updateToolbar: function(e) {\n                var pageOptions = {\n                        page: e.page || 1,\n                        total: e.total || 1\n                    },\n                    toolbar = this.toolbar,\n                    toolbarEl = toolbar.element,\n                    zoomCombo = toolbarEl.find(\"[data-command=ZoomCommand][data-role=combobox]\").data(\"kendoComboBox\"),\n                    toFocus = toolbarEl.find(\".k-focus\");\n\n                if (toFocus.length === 0) {\n                    toFocus = toolbarEl.find(\"[tabindex=0]\").first();\n\n                    if (toFocus.length === 0) {\n                        toFocus = toolbar._getAllItems().first();\n                    }\n                }\n\n                if (zoomCombo) {\n                    zoomCombo.enable(!e.isBlank);\n                    if (e.action === \"zoom\") {\n                        this._updateZoomComboBox(e.zoom);\n                    }\n                }\n\n                if ((e.action === \"pagechange\" || e.isBlank) && this.pager) {\n                    this._updatePager(pageOptions);\n                }\n\n                this._updateOnBlank(e.isBlank);\n\n                toolbar._resetTabIndex(toFocus);\n            },\n\n            _updateOnBlank: function(isBlank) {\n                var toolbar = this.toolbar,\n                    toolbarEl = toolbar.element;\n\n                toolbar.enable(toolbarEl.find(\".k-toggle-selection-group\"), !isBlank);\n                toolbar.enable(toolbarEl.find(\".k-zoom-in-out-group\"), !isBlank);\n\n                toolbar.enable(toolbarEl.find(\"[data-command='OpenSearchCommand']\"), !isBlank);\n                toolbar.enable(toolbarEl.find(\"[data-command='DownloadCommand']\"), !isBlank);\n                toolbar.enable(toolbarEl.find(\"[data-command='PrintCommand']\"), !isBlank);\n            },\n\n            _updatePager: function(options) {\n                var toolbarEl = this.toolbar.element,\n                    textBox = toolbarEl.find(\"#page-input\").data(\"kendoTextBox\"),\n                    totalPagesSpan = toolbarEl.find(\"#total-page\");\n\n                if (textBox && options.page) {\n                    textBox.value(options.page);\n                }\n\n                if (totalPagesSpan.length && options.total) {\n                    totalPagesSpan.text(options.total);\n                }\n\n                this._togglePagerDisabledClass(options);\n            },\n\n            _togglePagerDisabledClass: function(options) {\n                var toolbar = this.toolbar,\n                    toolbarEl = toolbar.element,\n                    total = !options.total,\n                    prevFirst = toolbarEl.find(\".k-prev-link\").closest(\".k-button-group\"),\n                    nextLast = toolbarEl.find(\".k-next-link\").closest(\".k-button-group\"),\n                    textBox = toolbarEl.find(\"#page-input\").data(\"kendoTextBox\");\n\n                if (prevFirst.length) {\n                    toolbar.enable(prevFirst, total || options.page !== 1);\n                }\n                if (nextLast.length) {\n                    toolbar.enable(nextLast, total || options.page !== options.total);\n                }\n\n                if (textBox) {\n                    textBox.enable(options.total > 1);\n                }\n            },\n\n            _updateZoomComboBox: function(value) {\n                var isPredefined = value === PREDEFINED_ZOOM_VALUES.auto ||\n                    value === PREDEFINED_ZOOM_VALUES.actual ||\n                    value === PREDEFINED_ZOOM_VALUES.fitToPage ||\n                    value === PREDEFINED_ZOOM_VALUES.fitToWidth,\n                    zoomCombo = this.toolbar.element.find(\"[data-command=ZoomCommand][data-role=combobox]\").data(\"kendoComboBox\");\n\n                if (!isPredefined) {\n                    value = Math.round(value * 100) + '%';\n                }\n\n                if (zoomCombo) {\n                    zoomCombo.value(value);\n                }\n            },\n\n            _toolbarClick: function(ev) {\n                var command = $(ev.target).data(\"command\"),\n                    options = $(ev.target).data(\"options\");\n\n                options = extend({}, { value: $(ev.target).val() }, options);\n\n                if (!command) {\n                    return;\n                }\n\n                this.execute({\n                    command: command,\n                    options: options\n                });\n            },\n\n            _initErrorDialog: function(options) {\n                var that = this;\n\n                if (!that._errorDialog) {\n                    options = extend(options, {\n                        messages: that.options.messages\n                    });\n                    var dialogInstance = new kendo.pdfviewer.dialogs.ErrorDialog(options);\n                    that._errorDialog = dialogInstance._dialog;\n                }\n                return that._errorDialog;\n            },\n\n            _renderPageContainer: function() {\n                var that = this;\n\n                if (!that.pageContainer) {\n                    that.pageContainerWrapper = $(\"<div />\");\n                    that.pageContainerWrapper.addClass(styles.scroller);\n\n                    that.pageContainer = $(`<div class=\"k-pdf-viewer-pages\" style=\"--scale-factor: ${that.zoomScale}\" />`);\n                    that.pageContainer.attr(TABINDEX, 0);\n\n                    that.pageContainerWrapper.append(that.pageContainer);\n                    that.wrapper.append(that.pageContainerWrapper);\n                }\n            },\n\n            _setPageContainerScaleFactor(scale) {\n                var that = this;\n\n                if (that.pageContainer) {\n                    that.pageContainer[0].style.setProperty(\"--scale-factor\", scale);\n                }\n            },\n\n            _triggerError: function(options) {\n                var dialog = this._initErrorDialog();\n                extend(options, {\n                    dialog: dialog\n                });\n                if (this.pageContainer) {\n                    progress(this.pageContainer, false);\n                }\n\n                if (this.trigger(ERROR, options))\n                {\n                    return;\n                }\n\n                dialog.open().content(options.message);\n            },\n\n            _renderPages: function() {\n                var that = this,\n                    document = that.document,\n                    pagesData;\n\n                that.pages = [];\n\n                if (!document || !document.total) {\n                    that._renderBlankPage();\n                    return;\n                }\n\n                pagesData = document.pages;\n\n                for (var i = 1; i <= document.total; i++) {\n                    var viewerPage,\n                        pageData = {\n                            processor: that.processor,\n                            number: i\n                        };\n\n                    if (pagesData && pagesData.length) {\n                        pageData = extend(pageData, pagesData[i - 1]);\n                    }\n\n                    viewerPage = new Page(pageData, that);\n                    that.pages.push(viewerPage);\n                    that.pageContainer.append(viewerPage.element);\n                }\n\n                that._attachContainerEvents();\n                that._getVisiblePagesCount();\n            },\n\n            _renderBlankPage: function() {\n                this._blankPage = new BlankPage(this.options.defaultPageSize, this);\n\n                this.pageContainer.append(this._blankPage.element);\n\n                this._blankPage._initUpload();\n                this.trigger(UPDATE, { isBlank: true });\n            },\n\n            _resize: function() {\n                var that = this,\n                    containerWidth,\n                    ratio;\n\n                if (!that._allowResize) {\n                    return;\n                }\n\n                if (!that.pages || !that.pages.length) {\n                    if (that._blankPage) {\n                        ratio = containerWidth / that._blankPage.element.width();\n                        that._blankPage.resize(ratio);\n                    }\n                    return;\n                }\n\n                if (that.toolbar) {\n                    that.toolbar.resize(true);\n                }\n\n                if (that._resizeHandler) {\n                    clearTimeout(that._resizeHandler);\n                }\n                that._resizeHandler = setTimeout(that._resizePages.bind(that), 100);\n            },\n\n            _resizePages: function() {\n                var that = this,\n                    containerWidth = that.pageContainer[0].clientWidth,\n                    ratio = 0;\n\n                that.pages.forEach(function(page) {\n                    var currentRatio = containerWidth / page.element.width();\n\n                    if (currentRatio > ratio) {\n                        ratio = currentRatio;\n                    }\n                });\n\n                if (that._autoFit) {\n                    that.zoom(that._autoFit, true);\n                    return;\n                }\n\n                ratio = Math.min(Math.max(ratio, that.options.zoomMin), ZOOM_SCALE);\n                if (ratio != that.zoomScale) {\n                    that.zoom(ratio, true);\n                    that.zoomScale = ratio;\n                    that._allowResize = true;\n                }\n            },\n\n            _attachContainerEvents: function() {\n                var that = this;\n\n                that._wheel = kendo.throttle(\n                    that._wheel.bind(that),\n                    300\n                );\n\n                if (that.processingLib !== PROCESSORS.dpl) {\n                    that.pageContainer.on(MOUSEWHEEL, function(e) {\n                        if (!e.ctrlKey) {\n                            return;\n                        }\n\n                        if (document.activeElement !== that.pageContainer[0]) {\n                            that.pageContainer.trigger(\"focus\");\n                        }\n\n                        that._wheel(e);\n                        e.preventDefault();\n                    });\n                }\n\n                that.pageContainer.addClass(styles.enablePanning);\n                that.pageContainerWrapper.bind(SCROLL, that._scroll.bind(that));\n                that.pageContainerWrapper.on(CLICK + NS, \".k-annotation-layer a[href]\", that._linkHandler.bind(that));\n            },\n\n            _linkHandler: function(e) {\n                var that = this,\n                    link = $(e.target).attr(\"href\");\n\n                if (link && link.indexOf(\"#\") === 0) {\n                    that.processor.navigateToDestination && that.processor.navigateToDestination(link);\n                    e.preventDefault();\n                }\n            },\n\n            _scroll: function(e) {\n                var that = this,\n                    containerHeight = that.pageContainerWrapper.height(),\n                    total = that.pages.length,\n                    pageNum = that._pageNum,\n                    pageIndex = pageNum - 1,\n                    pageToLoadNum = pageNum,\n                    pageToLoad,\n                    currentPage;\n\n                    if (that._preventScroll || !total) {\n                        that._preventScroll = false;\n                        return;\n                    }\n\n                    that._scrollingStarted = true;\n                    const nextPageIndex = getCurrentPage(that.element[0]);\n                    currentPage = that.pages[pageIndex];\n                    pageToLoadNum = pageNum + nextPageIndex - pageIndex;\n\n                    if (pageNum !== pageToLoadNum && pageToLoadNum >= 1 && pageToLoadNum <= total) {\n                        pageToLoad = that.pages[pageToLoadNum - 1].element;\n\n                        if (pageToLoad.offset().top > containerHeight) {\n                            return;\n                        }\n\n                        that._pageNum = pageToLoadNum;\n                        that._loadVisiblePages();\n\n                        that.trigger(UPDATE, { action: PAGE_CHANGE, page: pageToLoadNum, total: total });\n                    }\n            },\n\n            _wheel: function(e) {\n                var originalEvent = e.originalEvent,\n                    delta = originalEvent.wheelDelta ? -originalEvent.wheelDelta : originalEvent.detail,\n                    zoomIn = delta < 0;\n\n                this.execute({\n                    command: ZOOMCOMMAND,\n                    options: {\n                        zoomIn: zoomIn,\n                        zoomOut: !zoomIn,\n                        updateComboBox: true\n                    }\n                });\n\n                e.preventDefault();\n            },\n\n            zoom: function(scale, preventComboBoxChange) {\n                var that = this;\n                if (!scale) {\n                    return that.zoomScale;\n                }\n\n                return that.execute({\n                    command: ZOOMCOMMAND,\n                    options: {\n                        value: scale,\n                        updateComboBox: !preventComboBoxChange\n                    }\n                });\n            },\n\n            execute: function(options) {\n                var commandOptions = extend({ viewer: this }, options.options);\n                var command = new kendo.pdfviewer[options.command](commandOptions);\n                return command.exec();\n            },\n\n            _loadDocument: function() {\n                var that = this;\n                var page = that.options.page;\n\n                progress(that.pageContainer, true);\n                that.processor.fetchDocument().done(function(document) {\n                    that._clearPages();\n                    that.document = document;\n\n                    that._renderPages();\n                    that.resize(true);\n\n                    if (document) {\n                        page = page >= 1 && page <= document.total ? page : 1;\n                        that.activatePage(page);\n                    }\n\n                    if (that.pdfScroller) {\n                        that.pdfScroller.destroy();\n                    }\n\n                    that.pdfScroller = new Scroller(that.pageContainer[0].parentNode, {\n                        filter: '.k-page',\n                        events: { }\n                    });\n\n                    that.pdfScroller.enablePanEventsTracking();\n\n                    progress(that.pageContainer, false);\n                });\n            },\n\n            loadPage: function(number) {\n                var page = this.pages && this.pages[number - 1];\n\n                if (page) {\n                    return page.load(this.zoomScale);\n                }\n            },\n\n            activatePage: function(number) {\n                var page = this.pages && this.pages[number - 1],\n                    pageContainer = this.pageContainerWrapper;\n\n                if (!page) {\n                    return;\n                }\n\n\n                this._pageNum = number;\n                this._loadVisiblePages();\n\n                this._preventScroll = true;\n                scrollToPage(pageContainer[0], number - 1);\n                this.trigger(UPDATE, { action: PAGE_CHANGE, page: number, total: this.pages.length });\n            },\n\n            _getVisiblePagesCount: function() {\n                var that = this,\n                    loadedPagesHeight = 0,\n                    updatedVisiblePagesCount = 0,\n                    containerHeight = that.pageContainer[0].clientHeight,\n                    index = 0;\n\n                while (loadedPagesHeight <= containerHeight && index < that.pages.length)\n                {\n                    loadedPagesHeight += that.pages[index].element.height();\n                    updatedVisiblePagesCount++;\n                    index++;\n                }\n\n                that._visiblePagesCount = updatedVisiblePagesCount;\n            },\n\n            _loadVisiblePages: function() {\n                var pagesCount = this.pages && this.pages.length,\n                    minVisiblePageNum = Math.max(this._pageNum - this._visiblePagesCount, 1),\n                    maxVisiblePageNum = Math.min(this._pageNum + this._visiblePagesCount, pagesCount);\n\n                this._visiblePages = this.pages.slice(minVisiblePageNum - 1, maxVisiblePageNum);\n\n                for (var i = minVisiblePageNum; i <= maxVisiblePageNum; i++)\n                {\n                    this.loadPage(i);\n                }\n            },\n\n            _loadAllPages: function() {\n                var pagesCount = this.pages && this.pages.length;\n                var promises = [];\n\n                for (var i = 0; i <= pagesCount; i++)\n                {\n                    promises.push(this.loadPage(i));\n                }\n\n                return promises;\n            },\n\n            fromFile: function(file) {\n                this.zoomScale = this.options.scale || ZOOM_SCALE;\n                this.zoom(this.zoomScale, true);\n                this.trigger(UPDATE, { action: \"zoom\", zoom: this.options.scale || \"auto\" });\n\n                this.processor._updateDocument(file);\n                this._loadDocument();\n            },\n\n            exportImage: function(options) {\n                var that = this;\n                var pageNumber = options.page;\n                var page = that.pages[pageNumber - 1] || that._blankPage;\n                var rootGroup = new drawing.Group();\n\n                page.load();\n\n                var background = kendo.drawing.Path.fromRect(new kendo.geometry.Rect([0, 0], [page.width, page.height]), {\n                    fill: {\n                        color: WHITECOLOR\n                    },\n                    stroke: null\n                });\n\n                progress(that.pageContainer, true);\n                rootGroup.append(background, page.group);\n\n                drawing.exportImage(rootGroup).done(function(data) {\n                    progress(that.pageContainer, false);\n                    kendo.saveAs({\n                        dataURI: data,\n                        fileName: options.fileName,\n                        proxyURL: options.proxyURL || \"\",\n                        forceProxy: options.forceProxy,\n                        proxyTarget: options.proxyTarget\n                    });\n                });\n            },\n\n            exportSVG: function(options) {\n                var that = this;\n                var pageNumber = options.page;\n                var page = that.pages[pageNumber - 1] || that._blankPage;\n\n                progress(that.pageContainer, true);\n\n                page.load();\n\n                drawing.exportSVG(page.group).done(function(data) {\n                    progress(that.pageContainer, false);\n                    kendo.saveAs({\n                        dataURI: data,\n                        fileName: options.fileName,\n                        proxyURL: options.proxyURL || \"\",\n                        forceProxy: options.forceProxy,\n                        proxyTarget: options.proxyTarget\n                    });\n                });\n            },\n\n            setOptions: function(options)\n            {\n                var that = this;\n\n                if (options.pdfjsProcessing || options.dplProcessing) {\n                    that._initProcessor(options || {});\n                }\n\n                options = $.extend(that.options, options);\n\n                Widget.fn.setOptions.call(that, options);\n\n                if (options.page) {\n                    that._pageNum = options.page;\n                    that.activatePage(options.page);\n                }\n\n                if (options.width) {\n                    that.element.width(options.width);\n                }\n\n                if (options.height) {\n                    that.element.height(options.height);\n                }\n            },\n\n            destroy: function()\n            {\n                if (this._resizeHandler)\n                {\n                    kendo.unbindResize(this._resizeHandler);\n                }\n\n                //destroy nested components\n                if (this._errorDialog) {\n                    this._errorDialog.destroy();\n                }\n\n                if (this._saveDialog) {\n                    this._saveDialog.destroy();\n                }\n\n                if (this._upload) {\n                    this._upload.destroy();\n                }\n\n                if (this.toolbar) {\n                    this.toolbar.unbind();\n                    this.toolbar.destroy();\n                    this.toolbar = null;\n                }\n\n                if (this.pages && this.pages.length) {\n                    this.pages.forEach(function(page) {\n                        page.destroy();\n                    });\n                    this.pages = [];\n                }\n\n                if (this.pdfScroller) {\n                    this.pdfScroller.destroy();\n                }\n                this.pageContainer.off(NS);\n                this.pageContainerWrapper.off(NS);\n\n                Widget.fn.destroy.call(this);\n            },\n\n            _clearPages: function() {\n                this.pages = [];\n                this.document = null;\n                this._pageNum = 1;\n\n                this.pageContainer.off(NS);\n                this.pageContainer.empty();\n\n                if (this.pdfScroller)\n                {\n                    this.pdfScroller.destroy();\n                }\n            },\n\n            _toggleSelection: function(enable) {\n                var that = this;\n\n                if (enable === undefined$1) {\n                    enable = true;\n                }\n\n                if (that.pdfScroller) {\n                    enable ? that.pdfScroller.disablePanEventsTracking() : that.pdfScroller.enablePanEventsTracking();\n                }\n\n                that.pageContainer.toggleClass(styles.enableTextSelection, enable);\n                that.pageContainer.toggleClass(styles.enablePanning, !enable);\n            },\n\n\n            _initSearchDOM: function() {\n                var that = this;\n                var promise = new Promise(function(resolve) {\n                    Promise.all(that._loadAllPages()).then(function() {\n                        that._searchDOM = new kendo.pdfviewer.SearchDOM({\n                            target: that._getTextLayers(),\n                            highlightClass: styles.highlightClass,\n                            charClass: styles.charClass\n                        });\n\n                        resolve();\n                    });\n                });\n\n                return promise;\n            },\n\n            _getTextLayers: function() {\n                return this.pages.map(function(page) {\n                    return page.textLayer;\n                });\n            }\n        });\n\n        ui.plugin(PDFViewer);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}