{"version":3,"sources":["raw-js/kendo.dataviz.stock.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendodataviz","stock","js","this","window","kendo","dataviz","elementStyles","deepExtend","toTime","datavizConstants","constants","Chart","drawing","FadeOutAnimation","Animation","extend","setup","_initialOpacity","parseFloat","element","opacity","step","pos","String","interpolateValue","abort","fn","call","display","cancel","createDiv","className","style","div","document","createElement","cssText","NavigatorHint","Class","init","container","chartService","options","padding","chartPadding","top","paddingTop","left","paddingLeft","createElements","appendChild","tooltip","scroll","innerHTML","show","from","to","bbox","ref","middle","toDate","scrollWidth","width","minPos","center","x","scale","max","min","offset","text","intl","format","template","getTemplate","clearHideTimeout","_visible","visibility","offsetWidth","y1","tooltipStyle","marginTop","borderTopWidth","height","_hideTimeout","clearTimeout","_hideAnimation","hide","this$1$1","setTimeout","play","hideDelay","destroy","removeChild","setDefaultOptions","NAVIGATOR_PANE","NAVIGATOR_AXIS","DEFAULT_PANE","Navigator","chart","obj","navigator","select","parseDate","defined","hint","visible","chartObserver","InstanceObserver","DRAG","DRAG_END","ZOOM","ZOOM_END","addObserver","value","clean","selection","removeObserver","redraw","_redrawSelf","initSelection","axis","mainAxis","ref$1","roundedRange","ref$2","mousewheel","axisClone","ClonedObject","prototype","categoriesCount","box","Selection","valueOrDefault","zoom","selectStart","selectEnd","setRange","_createPlotArea","namedCategoryAxes","filterAxes","silent","plotArea","_plotArea","last","panes","redrawSlaves","slavePanes","filter","pane","name","srcSeries","series","categoryAxis","clearSeriesPointsCache","_drag","e","duration","coords","_eventCoordinates","originalEvent","navigatorAxis","naviRange","inNavigator","containsPoint","range","axisRanges","limitValue","liveDrag","set","showHint","_dragEnd","readSelection","ref_selection_options","allAxes","idx","length","requiresHandlers","args","type","axisOptions","DateCategoryAxis","baseUnit","categories","addDuration","baseUnitStep","trigger","_zoom","ref_options","delta","fromIx","categoryIndex","toIx","preventDefault","Math","abs","scaleRange","_mousewheelZoomRate","_zoomEnd","backgroundBox","_selectStart","_select","_selectEnd","themeOptions","__navi","naviOptions","concat","paneOptions","position","push","unshift","forEach","attachAxes","attachSeries","categoryAxes","valueAxes","valueAxis","justifyAxis","filterSeriesByType","EQUALLY_SPACED_SERIES","base","roundToBaseUnit","justified","_collapse","majorTicks","labels","autoBind","autoBindElements","autoBaseUnitSteps","minutes","hours","days","weeks","months","years","user","maxDateGroups","title","plotBands","_overlap","mirror","majorGridLines","navigatorSeries","seriesColors","defaults","seriesDefaults","color","categoryField","dateField","visibleInLegend","StockChart","applyDefaults","elementSize","DEFAULT_WIDTH","theme","stockDefaults","axisDefaults","floor","_setElementClass","addClass","setOptions","destroyNavigator","noTransitionsRedraw","transitions","_fullRedraw","_resize","_redraw","_dirty","partialRedraw","seriesCount","grep","s","dirty","_seriesCount","_trackSharedTooltip","paneByPoint","_unsetActivePoint","bindCategories","copyNavigatorCategories","definitions","axisIx","_stopChartHandlers","_toggleDragZoomEvents","_dragZoomEnabled","touchAction","narrowRange","markers","highlight","line","legend","$","ChartInstanceObserver","ui","KendoStockChart","CHANGE","StockInstanceObserver","handlerMap","navigatorFilter","navigatorCreated","category","toString","persistSeriesVisibility","_createChart","_initNavigatorOptions","_instance","observer","sender","rtl","_isRtl","navigatorOptions","support","isTouch","touch","isFirefox","browser","mozilla","dataSource","_initDataSource","userOptions","hasServerFiltering","serverFiltering","hasSelect","dummyAxis","buildFilter","_onNavigatorCreated","_navigator","_initNavigatorDataSource","dsOptions","_navigatorDataChangedHandler","_onNavigatorDataChanged","bind","_navigatorDataSource","data","DataSource","create","fetch","_bindNavigatorSeries","seriesIx","currentSeries","seriesLength","_isBindable","currentAxis","naviCategories","instance","axesLength","view","_sourceSeries","_bindCategoryAxis","_model","_dataBound","_bindCategories","_onDataChanged","_removeNavigatorDataSource","_onNavigatorFilter","names","inArray","navigatorDataSource","unbind","field","operator","plugin","jQuery"],"mappings":"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","file":"kendo.dataviz.stock.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.dataviz.chart.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.dataviz.chart'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendodataviz = global.kendodataviz || {}, global.kendodataviz.stock = global.kendodataviz.stock || {}, global.kendodataviz.stock.js = factory()));\n})(this, (function () {\n    /***********************************************************************\n     * WARNING: this file is auto-generated.  If you change it directly,\n     * your modifications will eventually be lost.  The source code is in\n     * `kendo-charts` repository, you should make your changes there and\n     * run `src-modules/sync.sh` in this repository.\n     */\n\n    (function() {\n    /* eslint-disable space-before-blocks, space-before-function-paren */\n\n    window.kendo.dataviz = window.kendo.dataviz || {};\n    var dataviz = kendo.dataviz;\n    var elementStyles = dataviz.elementStyles;\n    var deepExtend = dataviz.deepExtend;\n    var toTime = dataviz.toTime;\n    var datavizConstants = dataviz.constants;\n    var Chart = dataviz.Chart;\n    var drawing = kendo.drawing;\n\n    var FadeOutAnimation = drawing.Animation.extend({\n        setup: function() {\n            this._initialOpacity = parseFloat(elementStyles(this.element, 'opacity').opacity);\n        },\n\n        step: function(pos) {\n            elementStyles(this.element, {\n                opacity: String(dataviz.interpolateValue(this._initialOpacity, 0, pos))\n            });\n        },\n\n        abort: function() {\n            drawing.Animation.fn.abort.call(this);\n            elementStyles(this.element, {\n                display: 'none',\n                opacity: String(this._initialOpacity)\n            });\n        },\n\n        cancel: function() {\n            drawing.Animation.fn.abort.call(this);\n            elementStyles(this.element, {\n                opacity: String(this._initialOpacity)\n            });\n        }\n    });\n\n    function createDiv(className, style) {\n        var div = document.createElement(\"div\");\n        div.className = className;\n        if (style) {\n            div.style.cssText = style;\n        }\n\n        return div;\n    }\n\n    var NavigatorHint = dataviz.Class.extend({\n        init: function(container, chartService, options) {\n\n            this.options = deepExtend({}, this.options, options);\n            this.container = container;\n            this.chartService = chartService;\n\n            var padding = elementStyles(container, [ \"paddingLeft\", \"paddingTop\" ]);\n            this.chartPadding = {\n                top: padding.paddingTop,\n                left: padding.paddingLeft\n            };\n\n            this.createElements();\n            container.appendChild(this.element);\n        },\n\n        createElements: function() {\n            var element = this.element = createDiv('k-navigator-hint', 'display: none; position: absolute; top: 1px; left: 1px;');\n            var tooltip = this.tooltip = createDiv('k-tooltip k-chart-tooltip');\n            var scroll = this.scroll = createDiv('k-scroll');\n\n            tooltip.innerHTML = '&nbsp;';\n\n            element.appendChild(tooltip);\n            element.appendChild(scroll);\n        },\n\n        show: function(from, to, bbox) {\n            var ref = this;\n            var element = ref.element;\n            var options = ref.options;\n            var scroll = ref.scroll;\n            var tooltip = ref.tooltip;\n            var middle = dataviz.toDate(toTime(from) + toTime(to - from) / 2);\n            var scrollWidth = bbox.width() * 0.4;\n            var minPos = bbox.center().x - scrollWidth;\n            var maxPos = bbox.center().x;\n            var posRange = maxPos - minPos;\n            var range = options.max - options.min;\n            var scale = posRange / range;\n            var offset = middle - options.min;\n            var text = this.chartService.intl.format(options.format, from, to);\n            var template = dataviz.getTemplate(options);\n\n            this.clearHideTimeout();\n\n            if (!this._visible) {\n                elementStyles(element, {\n                    visibility: 'hidden',\n                    display: 'block'\n                });\n                this._visible = true;\n            }\n\n            if (template) {\n                text = template({\n                    from: from,\n                    to: to\n                });\n            }\n\n            tooltip.innerHTML = text;\n            elementStyles(tooltip, {\n                left: bbox.center().x - tooltip.offsetWidth / 2,\n                top: bbox.y1\n            });\n\n            var tooltipStyle = elementStyles(tooltip, [ 'marginTop', 'borderTopWidth', 'height' ]);\n\n            elementStyles(scroll, {\n                width: scrollWidth,\n                left: minPos + offset * scale,\n                top: bbox.y1 + tooltipStyle.marginTop + tooltipStyle.borderTopWidth + tooltipStyle.height / 2\n            });\n\n            elementStyles(element, {\n                visibility: 'visible'\n            });\n        },\n\n        clearHideTimeout: function() {\n            if (this._hideTimeout) {\n                clearTimeout(this._hideTimeout);\n            }\n\n            if (this._hideAnimation) {\n                this._hideAnimation.cancel();\n            }\n        },\n\n        hide: function() {\n            var this$1$1 = this;\n\n            this.clearHideTimeout();\n\n            this._hideTimeout = setTimeout(function () {\n                this$1$1._visible = false;\n                this$1$1._hideAnimation = new FadeOutAnimation(this$1$1.element);\n                this$1$1._hideAnimation.setup();\n                this$1$1._hideAnimation.play();\n            }, this.options.hideDelay);\n        },\n\n        destroy: function() {\n            this.clearHideTimeout();\n            if (this.container) {\n                this.container.removeChild(this.element);\n            }\n            delete this.container;\n            delete this.chartService;\n            delete this.element;\n            delete this.tooltip;\n            delete this.scroll;\n        }\n    });\n\n    dataviz.setDefaultOptions(NavigatorHint, {\n        format: \"{0:d} - {1:d}\",\n        hideDelay: 500\n    });\n\n    var NAVIGATOR_PANE = \"_navigator\";\n    var NAVIGATOR_AXIS = NAVIGATOR_PANE;\n    var DEFAULT_PANE = \"_default\";\n\n    var constants = {\n    \tNAVIGATOR_AXIS: NAVIGATOR_AXIS,\n    \tNAVIGATOR_PANE: NAVIGATOR_PANE,\n    \tDEFAULT_PANE: DEFAULT_PANE\n    };\n\n    var ZOOM_ACCELERATION = 3;\n\n    var Navigator = dataviz.Class.extend({\n        init: function(chart) {\n\n            this.chart = chart;\n            var options = this.options = deepExtend({}, this.options, chart.options.navigator);\n            var select = options.select;\n            if (select) {\n                select.from = this.parseDate(select.from);\n                select.to = this.parseDate(select.to);\n            }\n\n            if (!dataviz.defined(options.hint.visible)) {\n                options.hint.visible = options.visible;\n            }\n\n            var obj;\n            this.chartObserver = new dataviz.InstanceObserver(this, ( obj = {}, obj[datavizConstants.DRAG] = '_drag', obj[datavizConstants.DRAG_END] = '_dragEnd', obj[datavizConstants.ZOOM] = '_zoom', obj[datavizConstants.ZOOM_END] = '_zoomEnd', obj ));\n            chart.addObserver(this.chartObserver);\n        },\n\n        parseDate: function(value) {\n            return dataviz.parseDate(this.chart.chartService.intl, value);\n        },\n\n        clean: function() {\n            if (this.selection) {\n                this.selection.destroy();\n                this.selection = null;\n            }\n\n            if (this.hint) {\n                this.hint.destroy();\n                this.hint = null;\n            }\n        },\n\n        destroy: function() {\n            if (this.chart) {\n                this.chart.removeObserver(this.chartObserver);\n                delete this.chart;\n            }\n\n            this.clean();\n        },\n\n        redraw: function() {\n            this._redrawSelf();\n            this.initSelection();\n        },\n\n        initSelection: function() {\n            var ref = this;\n            var chart = ref.chart;\n            var options = ref.options;\n            var axis = this.mainAxis();\n            var ref$1 = axis.roundedRange();\n            var min = ref$1.min;\n            var max = ref$1.max;\n            var ref$2 = options.select;\n            var from = ref$2.from;\n            var to = ref$2.to;\n            var mousewheel = ref$2.mousewheel;\n            var axisClone = clone(axis);\n\n            if (axis.categoriesCount() === 0) {\n                return;\n            }\n\n            this.clean();\n\n            // \"Freeze\" the selection axis position until the next redraw\n            axisClone.box = axis.box;\n\n            this.selection = new dataviz.Selection(chart, axisClone, {\n                min: min,\n                max: max,\n                from: from || min,\n                to: to || max,\n                mousewheel: dataviz.valueOrDefault(mousewheel, { zoom: \"left\" }),\n                visible: options.visible\n            }, new dataviz.InstanceObserver(this, {\n                selectStart: '_selectStart',\n                select: '_select',\n                selectEnd: '_selectEnd'\n            }));\n\n            if (options.hint.visible) {\n                this.hint = new NavigatorHint(chart.element, chart.chartService, {\n                    min: min,\n                    max: max,\n                    template: dataviz.getTemplate(options.hint),\n                    format: options.hint.format\n                });\n            }\n        },\n\n        setRange: function() {\n            var plotArea = this.chart._createPlotArea(true);\n            var axis = plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n\n            var ref = axis.roundedRange();\n            var min = ref.min;\n            var max = ref.max;\n\n            var select = this.options.select || {};\n            var from = select.from || min;\n            if (from < min) {\n                from = min;\n            }\n\n            var to = select.to || max;\n            if (to > max) {\n                to = max;\n            }\n\n            this.options.select = deepExtend({}, select, {\n                from: from,\n                to: to\n            });\n\n            this.filterAxes();\n        },\n\n        _redrawSelf: function(silent) {\n            var plotArea = this.chart._plotArea;\n\n            if (plotArea) {\n                plotArea.redraw(dataviz.last(plotArea.panes), silent);\n            }\n        },\n\n        redrawSlaves: function() {\n            var chart = this.chart;\n            var plotArea = chart._plotArea;\n            var slavePanes = plotArea.panes.filter(function (pane) { return pane.options.name !== NAVIGATOR_PANE; });\n\n            // Update the original series and categoryAxis before partial refresh.\n            plotArea.srcSeries = chart.options.series;\n            plotArea.options.categoryAxis = chart.options.categoryAxis;\n            plotArea.clearSeriesPointsCache();\n\n            plotArea.redraw(slavePanes);\n        },\n\n        _drag: function(e) {\n            var ref = this;\n            var chart = ref.chart;\n            var selection = ref.selection;\n            var coords = chart._eventCoordinates(e.originalEvent);\n            var navigatorAxis = this.mainAxis();\n            var naviRange = navigatorAxis.roundedRange();\n            var inNavigator = navigatorAxis.pane.box.containsPoint(coords);\n            var axis = chart._plotArea.categoryAxis;\n            var range = e.axisRanges[axis.options.name];\n            var select = this.options.select;\n            var duration;\n\n            if (!range || inNavigator || !selection) {\n                return;\n            }\n\n            if (select.from && select.to) {\n                duration = toTime(select.to) - toTime(select.from);\n            } else {\n                duration = toTime(selection.options.to) - toTime(selection.options.from);\n            }\n\n            var from = dataviz.toDate(dataviz.limitValue(\n                toTime(range.min),\n                naviRange.min, toTime(naviRange.max) - duration\n            ));\n\n            var to = dataviz.toDate(dataviz.limitValue(\n                toTime(from) + duration,\n                toTime(naviRange.min) + duration, naviRange.max\n            ));\n\n            this.options.select = { from: from, to: to };\n\n            if (this.options.liveDrag) {\n                this.filterAxes();\n                this.redrawSlaves();\n            }\n\n            selection.set(from, to);\n\n            this.showHint(from, to);\n        },\n\n        _dragEnd: function() {\n            this.filterAxes();\n            this.filter();\n            this.redrawSlaves();\n\n            if (this.hint) {\n                this.hint.hide();\n            }\n        },\n\n        readSelection: function() {\n            var ref = this;\n            var ref_selection_options = ref.selection.options;\n            var from = ref_selection_options.from;\n            var to = ref_selection_options.to;\n            var select = ref.options.select;\n\n            select.from = from;\n            select.to = to;\n        },\n\n        filterAxes: function() {\n            var ref = this;\n            var select = ref.options.select; if (select === void 0) { select = { }; }\n            var chart = ref.chart;\n            var allAxes = chart.options.categoryAxis;\n            var from = select.from;\n            var to = select.to;\n\n            for (var idx = 0; idx < allAxes.length; idx++) {\n                var axis = allAxes[idx];\n                if (axis.pane !== NAVIGATOR_PANE) {\n                    axis.min = from;\n                    axis.max = to;\n                }\n            }\n        },\n\n        filter: function() {\n            var ref = this;\n            var chart = ref.chart;\n            var select = ref.options.select;\n\n            if (!chart.requiresHandlers([ \"navigatorFilter\" ])) {\n                return;\n            }\n\n            var mainAxis = this.mainAxis();\n            var args = {\n                from: select.from,\n                to: select.to\n            };\n\n            if (mainAxis.options.type !== 'category') {\n                var axisOptions = new dataviz.DateCategoryAxis(deepExtend({\n                    baseUnit: \"fit\"\n                }, chart.options.categoryAxis[0], {\n                    categories: [ select.from, select.to ]\n                }), chart.chartService).options;\n\n                args.from = dataviz.addDuration(axisOptions.min, -axisOptions.baseUnitStep, axisOptions.baseUnit);\n                args.to = dataviz.addDuration(axisOptions.max, axisOptions.baseUnitStep, axisOptions.baseUnit);\n            }\n\n            this.chart.trigger(\"navigatorFilter\", args);\n        },\n\n        _zoom: function(e) {\n            var ref = this;\n            var axis = ref.chart._plotArea.categoryAxis;\n            var selection = ref.selection;\n            var ref_options = ref.options;\n            var select = ref_options.select;\n            var liveDrag = ref_options.liveDrag;\n            var mainAxis = this.mainAxis();\n            var delta = e.delta;\n\n            if (!selection) {\n                return;\n            }\n\n            var fromIx = mainAxis.categoryIndex(selection.options.from);\n            var toIx = mainAxis.categoryIndex(selection.options.to);\n            var coords = this.chart._eventCoordinates(e.originalEvent);\n\n            e.originalEvent.preventDefault();\n\n            if (Math.abs(delta) > 1) {\n                delta *= ZOOM_ACCELERATION;\n            }\n\n            if (toIx - fromIx > 1) {\n                selection.zoom(delta, coords);\n                this.readSelection();\n            } else {\n                axis.options.min = select.from;\n                select.from = axis.scaleRange(-e.delta * this.chart._mousewheelZoomRate(), coords).min;\n            }\n\n            if (liveDrag) {\n                this.filterAxes();\n                this.redrawSlaves();\n            }\n\n            selection.set(select.from, select.to);\n\n            this.showHint(this.options.select.from, this.options.select.to);\n        },\n\n        _zoomEnd: function(e) {\n            this._dragEnd(e);\n        },\n\n        showHint: function(from, to) {\n            var plotArea = this.chart._plotArea;\n\n            if (this.hint) {\n                this.hint.show(from, to, plotArea.backgroundBox());\n            }\n        },\n\n        _selectStart: function(e) {\n            return this.chart._selectStart(e);\n        },\n\n        _select: function(e) {\n            this.showHint(e.from, e.to);\n\n            return this.chart._select(e);\n        },\n\n        _selectEnd: function(e) {\n            if (this.hint) {\n                this.hint.hide();\n            }\n\n            this.readSelection();\n            this.filterAxes();\n            this.filter();\n            this.redrawSlaves();\n\n            return this.chart._selectEnd(e);\n        },\n\n        mainAxis: function() {\n            var plotArea = this.chart._plotArea;\n\n            if (plotArea) {\n                return plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n            }\n        },\n\n        select: function(from, to) {\n            var select = this.options.select;\n\n            if (from && to) {\n                select.from = this.parseDate(from);\n                select.to = this.parseDate(to);\n\n                this.filterAxes();\n                this.filter();\n                this.redrawSlaves();\n\n                this.selection.set(from, to);\n            }\n\n            return {\n                from: select.from,\n                to: select.to\n            };\n        }\n    });\n\n    Navigator.setup = function(options, themeOptions) {\n        if (options === void 0) { options = {}; }\n        if (themeOptions === void 0) { themeOptions = {}; }\n\n        if (options.__navi) {\n            return;\n        }\n        options.__navi = true;\n\n        var naviOptions = deepExtend({}, themeOptions.navigator, options.navigator);\n        var panes = options.panes = [].concat(options.panes);\n        var paneOptions = deepExtend({}, naviOptions.pane, { name: NAVIGATOR_PANE });\n\n        if (!naviOptions.visible) {\n            paneOptions.visible = false;\n            paneOptions.height = 0.1;\n        }\n\n        if (options.navigator.position !== 'top') {\n            panes.push(paneOptions);\n        } else {\n            panes.unshift(paneOptions);\n        }\n\n        panes.forEach(function (pane) {\n            pane.name = pane.name || DEFAULT_PANE;\n        });\n\n        Navigator.attachAxes(options, naviOptions);\n        Navigator.attachSeries(options, naviOptions, themeOptions);\n    };\n\n    Navigator.attachAxes = function(options, naviOptions) {\n        var series = naviOptions.series || [];\n        var categoryAxes = options.categoryAxis = [].concat(options.categoryAxis);\n        var valueAxes = options.valueAxis = [].concat(options.valueAxis);\n        var allAxes = categoryAxes.concat(valueAxes);\n        allAxes.forEach(function (axis) {\n            axis.pane = axis.pane || DEFAULT_PANE;\n        });\n\n        var equallySpacedSeries = dataviz.filterSeriesByType(series, datavizConstants.EQUALLY_SPACED_SERIES);\n        var justifyAxis = equallySpacedSeries.length === 0;\n\n        var base = deepExtend({\n            type: \"date\",\n            pane: NAVIGATOR_PANE,\n            roundToBaseUnit: !justifyAxis,\n            justified: justifyAxis,\n            _collapse: false,\n            majorTicks: { visible: true },\n            tooltip: { visible: false },\n            labels: { step: 1 },\n            autoBind: naviOptions.autoBindElements,\n            autoBaseUnitSteps: {\n                minutes: [ 1 ],\n                hours: [ 1, 2 ],\n                days: [ 1, 2 ],\n                weeks: [],\n                months: [ 1 ],\n                years: [ 1 ]\n            }\n        });\n        var user = naviOptions.categoryAxis;\n\n        categoryAxes.push(\n            deepExtend({}, base, {\n                maxDateGroups: 200\n            }, user, {\n                name: NAVIGATOR_AXIS,\n                title: null,\n                baseUnit: \"fit\",\n                baseUnitStep: \"auto\",\n                labels: { visible: false },\n                majorTicks: { visible: false }\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_labels\",\n                maxDateGroups: 20,\n                baseUnitStep: \"auto\",\n                labels: { position: \"\" },\n                plotBands: [],\n                autoBaseUnitSteps: {\n                    minutes: []\n                },\n                _overlap: true\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_ticks\",\n                maxDateGroups: 200,\n                majorTicks: {\n                    width: 0.5\n                },\n                plotBands: [],\n                title: null,\n                labels: { visible: false, mirror: true },\n                _overlap: true\n            })\n        );\n\n        valueAxes.push(deepExtend({\n            name: NAVIGATOR_AXIS,\n            pane: NAVIGATOR_PANE,\n            majorGridLines: {\n                visible: false\n            },\n            visible: false\n        }, naviOptions.valueAxis));\n    };\n\n    Navigator.attachSeries = function(options, naviOptions, themeOptions) {\n        var series = options.series = options.series || [];\n        var navigatorSeries = [].concat(naviOptions.series || []);\n        var seriesColors = themeOptions.seriesColors;\n        var defaults = naviOptions.seriesDefaults;\n\n        for (var idx = 0; idx < navigatorSeries.length; idx++) {\n            series.push(\n                deepExtend({\n                    color: seriesColors[idx % seriesColors.length],\n                    categoryField: naviOptions.dateField,\n                    visibleInLegend: false,\n                    tooltip: {\n                        visible: false\n                    }\n                }, defaults, navigatorSeries[idx], {\n                    axis: NAVIGATOR_AXIS,\n                    categoryAxis: NAVIGATOR_AXIS,\n                    autoBind: naviOptions.autoBindElements\n                })\n            );\n        }\n    };\n\n    function ClonedObject() { }\n    function clone(obj) {\n        ClonedObject.prototype = obj;\n        return new ClonedObject();\n    }\n\n    var AUTO_CATEGORY_WIDTH = 28;\n\n    var StockChart = Chart.extend({\n        applyDefaults: function(options, themeOptions) {\n            var width = dataviz.elementSize(this.element).width || datavizConstants.DEFAULT_WIDTH;\n            var theme = themeOptions;\n\n            var stockDefaults = {\n                seriesDefaults: {\n                    categoryField: options.dateField\n                },\n                axisDefaults: {\n                    categoryAxis: {\n                        name: \"default\",\n                        majorGridLines: {\n                            visible: false\n                        },\n                        labels: {\n                            step: 2\n                        },\n                        majorTicks: {\n                            visible: false\n                        },\n                        maxDateGroups: Math.floor(width / AUTO_CATEGORY_WIDTH)\n                    }\n                }\n            };\n\n            if (theme) {\n                theme = deepExtend({}, theme, stockDefaults);\n            }\n\n            Navigator.setup(options, theme);\n\n            Chart.fn.applyDefaults.call(this, options, theme);\n        },\n\n        _setElementClass: function(element) {\n            dataviz.addClass(element, 'k-chart k-stockchart');\n        },\n\n        setOptions: function(options) {\n            this.destroyNavigator();\n            Chart.fn.setOptions.call(this, options);\n        },\n\n        noTransitionsRedraw: function() {\n            var transitions = this.options.transitions;\n\n            this.options.transitions = false;\n            this._fullRedraw();\n            this.options.transitions = transitions;\n        },\n\n        _resize: function() {\n            this.noTransitionsRedraw();\n        },\n\n        _redraw: function() {\n            var navigator = this.navigator;\n\n            if (!this._dirty() && navigator && navigator.options.partialRedraw) {\n                navigator.redrawSlaves();\n            } else {\n                this._fullRedraw();\n            }\n        },\n\n        _dirty: function() {\n            var options = this.options;\n            var series = [].concat(options.series, options.navigator.series);\n            var seriesCount = dataviz.grep(series, function(s) { return s && s.visible; }).length;\n            var dirty = this._seriesCount !== seriesCount;\n            this._seriesCount = seriesCount;\n\n            return dirty;\n        },\n\n        _fullRedraw: function() {\n            var navigator = this.navigator;\n\n            if (!navigator) {\n                navigator = this.navigator = new Navigator(this);\n                this.trigger(\"navigatorCreated\", { navigator: navigator });\n            }\n\n            navigator.clean();\n            navigator.setRange();\n\n            Chart.fn._redraw.call(this);\n\n            navigator.initSelection();\n        },\n\n        _trackSharedTooltip: function(coords) {\n            var plotArea = this._plotArea;\n            var pane = plotArea.paneByPoint(coords);\n\n            if (pane && pane.options.name === NAVIGATOR_PANE) {\n                this._unsetActivePoint();\n            } else {\n                Chart.fn._trackSharedTooltip.call(this, coords);\n            }\n        },\n\n        bindCategories: function() {\n            Chart.fn.bindCategories.call(this);\n            this.copyNavigatorCategories();\n        },\n\n        copyNavigatorCategories: function() {\n            var definitions = [].concat(this.options.categoryAxis);\n            var categories;\n\n            for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                var axis = definitions[axisIx];\n                if (axis.name === NAVIGATOR_AXIS) {\n                    categories = axis.categories;\n                } else if (categories && axis.pane === NAVIGATOR_PANE) {\n                    axis.categories = categories;\n                }\n            }\n        },\n\n        destroyNavigator: function() {\n            if (this.navigator) {\n                this.navigator.destroy();\n                this.navigator = null;\n            }\n        },\n\n        destroy: function() {\n            this.destroyNavigator();\n            Chart.fn.destroy.call(this);\n        },\n\n        _stopChartHandlers: function(e) {\n            var coords = this._eventCoordinates(e);\n            var pane = this._plotArea.paneByPoint(coords);\n\n            return Chart.fn._stopChartHandlers.call(this, e) || (pane && pane.options.name === NAVIGATOR_PANE);\n        },\n\n        _toggleDragZoomEvents: function() {\n            if (!this._dragZoomEnabled) {\n                this.element.style.touchAction = \"none\";\n\n                this._dragZoomEnabled = true;\n            }\n        }\n    });\n\n    dataviz.setDefaultOptions(StockChart, {\n        dateField: \"date\",\n        axisDefaults: {\n            categoryAxis: {\n                type: \"date\",\n                baseUnit: \"fit\",\n                justified: true\n            },\n            valueAxis: {\n                narrowRange: true,\n                labels: {\n                    format: \"C\"\n                }\n            }\n        },\n        navigator: {\n            select: {},\n            seriesDefaults: {\n                markers: {\n                    visible: false\n                },\n                tooltip: {\n                    visible: false\n                },\n                highlight: {\n                    visible: false\n                },\n                line: {\n                    width: 2\n                }\n            },\n            hint: {},\n            visible: true\n        },\n        tooltip: {\n            visible: true\n        },\n        legend: {\n            visible: false\n        }\n    });\n\n    kendo.deepExtend(kendo.dataviz, {\n        constants: constants,\n        Navigator: Navigator,\n        NavigatorHint: NavigatorHint,\n        StockChart: StockChart\n    });\n\n    })();\n\n    (function($) {\n\n        var kendo = window.kendo;\n        var dataviz = kendo.dataviz;\n        var ChartInstanceObserver = dataviz.ChartInstanceObserver;\n        var Chart = dataviz.ui.Chart;\n        var KendoStockChart = dataviz.StockChart;\n        var constants = dataviz.constants;\n        var NAVIGATOR_AXIS = constants.NAVIGATOR_AXIS;\n        var NAVIGATOR_PANE = constants.NAVIGATOR_PANE;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n\n        var CHANGE = \"change\";\n\n        var StockInstanceObserver = ChartInstanceObserver.extend({\n            handlerMap: {\n                navigatorFilter: '_onNavigatorFilter',\n                navigatorCreated: '_onNavigatorCreated'\n            }\n        });\n\n        var StockChart = Chart.extend({\n\n            options: {\n                name: \"StockChart\",\n                dateField: \"date\",\n                axisDefaults: {\n                    categoryAxis: {\n                        type: \"date\",\n                        baseUnit: \"fit\",\n                        justified: true\n                    },\n                    valueAxis: {\n                        narrowRange: true,\n                        labels: {\n                            format: \"C\"\n                        }\n                    }\n                },\n                navigator: {\n                    select: {},\n                    seriesDefaults: {\n                        markers: {\n                            visible: false\n                        },\n                        tooltip: {\n                            visible: true,\n                            template: ({ category }) => kendo.toString(category, 'd')\n                        },\n                        line: {\n                            width: 2\n                        }\n                    },\n                    hint: {},\n                    visible: true\n                },\n                tooltip: {\n                    visible: true\n                },\n                legend: {\n                    visible: false\n                },\n                persistSeriesVisibility: true\n            },\n\n            _createChart: function(options, themeOptions) {\n                this._initNavigatorOptions(options);\n                this._instance = new KendoStockChart(this.element[0], options, themeOptions, {\n                    observer: new StockInstanceObserver(this),\n                    sender: this,\n                    rtl: this._isRtl()\n                });\n            },\n\n            _initNavigatorOptions: function(options) {\n                var navigatorOptions = options.navigator || {};\n                var support = kendo.support;\n                var isTouch = support.touch;\n                var isFirefox = support.browser.mozilla;\n\n                deepExtend(navigatorOptions, {\n                    autoBindElements: !navigatorOptions.dataSource,\n                    partialRedraw: navigatorOptions.dataSource,\n                    liveDrag: !isTouch && !isFirefox\n                });\n            },\n\n            _initDataSource: function(userOptions) {\n                var options = userOptions || {},\n                    dataSource = options.dataSource,\n                    hasServerFiltering = dataSource && dataSource.serverFiltering,\n                    mainAxis = [].concat(options.categoryAxis)[0],\n                    naviOptions = options.navigator || {},\n                    select = naviOptions.select,\n                    hasSelect = select && select.from && select.to;\n\n                if (hasServerFiltering && hasSelect) {\n                    var filter = [].concat(dataSource.filter || []);\n\n                    var from = kendo.parseDate(select.from);\n                    var to = kendo.parseDate(select.to);\n                    var dummyAxis = new dataviz.DateCategoryAxis(deepExtend({\n                        baseUnit: \"fit\"\n                    }, mainAxis, {\n                        categories: [from, to]\n                    }), kendo);\n\n                    dataSource.filter = buildFilter(dummyAxis.range().min, to).concat(filter);\n                }\n\n                Chart.fn._initDataSource.call(this, userOptions);\n            },\n\n            _onNavigatorCreated: function(e) {\n                this._instance = e.sender;\n                this.options = e.sender.options;\n                this._navigator = this.navigator = e.navigator;\n                this._initNavigatorDataSource();\n            },\n\n            _initNavigatorDataSource: function() {\n                var navigatorOptions = this.options.navigator;\n                var autoBind = navigatorOptions.autoBind;\n                var dsOptions = navigatorOptions.dataSource;\n\n                if (dsOptions) {\n                    this._navigatorDataChangedHandler = this._navigatorDataChangedHandler || this._onNavigatorDataChanged.bind(this);\n                    this._navigatorDataSource = kendo.data.DataSource\n                        .create(dsOptions)\n                        .bind(CHANGE, this._navigatorDataChangedHandler);\n\n                    if (!defined(autoBind)) {\n                       autoBind = this.options.autoBind;\n                    }\n\n                    if (autoBind) {\n                        this._navigatorDataSource.fetch();\n                    }\n                }\n            },\n\n            _bindNavigatorSeries: function(series, data) {\n                var seriesIx, currentSeries,\n                    seriesLength = series.length;\n\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n\n                    if (currentSeries.axis == NAVIGATOR_AXIS && this._isBindable(currentSeries)) {\n                        currentSeries.data = data;\n                    }\n                }\n            },\n\n            _onNavigatorDataChanged: function() {\n                var chart = this,\n                    instance = chart._instance,\n                    categoryAxes = chart.options.categoryAxis,\n                    axisIx,\n                    axesLength = categoryAxes.length,\n                    data = chart._navigatorDataSource.view(),\n                    currentAxis,\n                    naviCategories;\n\n                this._bindNavigatorSeries(chart.options.series, data);\n                if (chart._sourceSeries) {\n                    this._bindNavigatorSeries(chart._sourceSeries, data);\n                }\n\n                for (axisIx = 0; axisIx < axesLength; axisIx++) {\n                    currentAxis = categoryAxes[axisIx];\n\n                    if (currentAxis.pane == NAVIGATOR_PANE) {\n                        if (currentAxis.name == NAVIGATOR_AXIS) {\n                            chart._bindCategoryAxis(currentAxis, data, axisIx);\n                            naviCategories = currentAxis.categories;\n                        } else {\n                            currentAxis.categories = naviCategories;\n                        }\n                    }\n                }\n\n                if (instance._model) {\n                    var navigator = this.navigator;\n                    navigator.redraw();\n                    navigator.setRange();\n\n                    if (!chart.options.dataSource || (chart.options.dataSource && chart._dataBound)) {\n                        navigator.redrawSlaves();\n                    }\n                }\n            },\n\n            _bindCategories: function() {\n                Chart.fn._bindCategories.call(this);\n                if (this._instance) {\n                    this._instance.copyNavigatorCategories();\n                }\n            },\n\n            _onDataChanged: function() {\n                Chart.fn._onDataChanged.call(this);\n\n                this._dataBound = true;\n            },\n\n            setOptions: function(options) {\n                this._removeNavigatorDataSource();\n                this._initNavigatorOptions(options);\n                this._instance.destroyNavigator();\n                Chart.fn.setOptions.call(this, options);\n            },\n\n            _onNavigatorFilter: function(e) {\n                this.dataSource.filter(buildFilter(e.from, e.to));\n            },\n\n            requiresHandlers: function(names) {\n                if (dataviz.inArray('navigatorFilter', names)) {\n                    var dataSource = this.dataSource;\n                    var hasServerFiltering = dataSource && dataSource.options.serverFiltering;\n                    return hasServerFiltering && this.options.navigator.dataSource;\n                }\n\n                return Chart.fn.requiresHandlers.call(this, names);\n            },\n\n            _removeNavigatorDataSource: function() {\n                var navigatorDataSource = this._navigatorDataSource;\n                if (navigatorDataSource) {\n                    navigatorDataSource.unbind(CHANGE, this._navigatorDataChangedHandler);\n                    delete this._navigatorDataSource;\n                }\n            },\n\n            destroy: function() {\n                Chart.fn.destroy.call(this);\n                this._removeNavigatorDataSource();\n            }\n        });\n\n        dataviz.ui.plugin(StockChart);\n\n        function buildFilter(from, to) {\n            return [{\n                field: \"Date\", operator: \"gte\", value: from\n            }, {\n                field: \"Date\", operator: \"lt\", value: to\n            }];\n        }\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"dataviz.stockchart\",\n        name: \"StockChart\",\n        category: \"dataviz\",\n        description: \"StockChart widget and associated financial series.\",\n        depends: [ \"dataviz.chart\" ]\n    };\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}