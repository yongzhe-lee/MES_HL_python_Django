{"version":3,"sources":["raw-js/kendo.gantt.editors.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendogantt","editors","js","this","$","undefined$1","kendo","window","ui","Observable","Widget","encode","htmlEncode","extend","GRID_HEIGHT","ganttStyles","form","editForm","formContainer","resourcesFormContainer","message","buttonsContainer","button","buttonDefaults","editField","editLabel","resourcesField","PopupEditor","init","element","options","fn","call","destroy","close","unbind","that","editable","container","data","popup","is","trigger","bind","editTask","task","plannedEditors","_createPopupEditor","fields","customFields","model","template","map","value","key","field","general","_fieldsGeneral","resources","dependencies","_fieldsDependencies","Object","keys","GanttTask","length","other","_fieldsOther","showDialog","buttonsEl","popupStyles","wrapper","dialogEl","format","uid","appendTo","messages","append","text","kendoButton","name","themeColor","icon","click","e","preventDefault","callback","cancel","kendoWindow","modal","autoFocus","resizable","draggable","title","visible","deactivate","getKendoWindow","center","open","find","_buildButtons","save","_onSave","_onCancel","fillMode","_onDelete","_buildEditTemplate","settings","Template","templateSettings","html","unescape","renderForm","attr","formEl","applyStylesFromKendoAttributes","editableWidget","width","editor","editorTitle","actions","userTriggered","_initForm","kendoEditable","clearContainer","validateOnBlur","target","cycleForm","nameDdlDs","dataSource","filter","i","id","typeDs","fullData","excluded","ddlData","modelFields","startText","actualStart","start","endText","actualEnd","end","colSpan","push","plannedStart","validation","editorOptions","componentType","plannedEnd","taskAllChildren","n","some","percentComplete","hint","percentCompleteHint","parent","optionLabel","parentOptionLabel","enable","dataValueField","dataTextField","valuePrimitive","toString","item","label","_readonlyEditor","_gridOptions","type","keyType","taskId","dependencyData","view","d","schema","from","required","defaultValue","columns","selectable","values","dependencyType","toolbar","addNew","remove","grid","closest","getKendoGrid","ds","selected","select","items","each","row","dataItem","sortable","navigatable","height","edit","setOptions","resourceField","get","tabStripDs","_tabStripSource","kendoTabStrip","dataContentField","tabStrip","sender","contentElement","index","validatable","validate","validator","_initGeneral","resourceEditor","kendoGrid","_initOther","kendoForm","layout","cols","gutter","rows","formData","buttonsTemplate","Date","found","prevData","newData","updateInfo","predeGrid","sucGrid","args","createdData","updatedData","successorId","concat","predecessorId","toJSON","dirty","updateDependencies","destroyed","created","updated","Array","isArray","val","updateModel","content","predecessors","successors","ResourceEditor","_resourceGrid","ddlDs","Grid","resourcesHeader","unitsHeader","valueFormat","filterable","selectedKeyNames","unitsValidation","ddl","currentId","filters","r","f","operator","logic","gantt","jQuery"],"mappings":"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","file":"kendo.gantt.editors.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.data.js'), require('kendo.popup.js'), require('kendo.window.js'), require('kendo.gantt.data.js'), require('kendo.grid.js'), require('kendo.datetimepicker.js'), require('kendo.numerictextbox.js'), require('kendo.textbox.js'), require('kendo.form.js'), require('kendo.tabstrip.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.data', 'kendo.popup', 'kendo.window', 'kendo.gantt.data', 'kendo.grid', 'kendo.datetimepicker', 'kendo.numerictextbox', 'kendo.textbox', 'kendo.form', 'kendo.tabstrip'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendogantt = global.kendogantt || {}, global.kendogantt.editors = global.kendogantt.editors || {}, global.kendogantt.editors.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"gantt.editors\",\n        name: \"GanttEditors\",\n        category: \"web\",\n        description: \"The Gantt component editors.\",\n        depends: [ \"data\", \"popup\", \"window\", \"gantt.data\", \"grid\", \"datetimepicker\", \"numerictextbox\", \"textbox\", \"form\", \"tabstrip\"],\n        hidden: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Observable = kendo.Observable,\n            Widget = ui.Widget,\n            encode = kendo.htmlEncode,\n            extend = $.extend,\n            PERCENTAGE_FORMAT = \"p0\",\n            GRID_HEIGHT = \"23em\",\n            TAB_HEIGHT = \"28em\",\n            STRING = \"string\";\n\n        var ganttStyles = {\n            buttonDelete: \"k-gantt-delete\",\n            buttonCancel: \"k-gantt-cancel\",\n            buttonSave: \"k-gantt-update\",\n            focused: \"k-focus\",\n            gridContent: \"k-grid-content\",\n            hovered: \"k-hover\",\n            item: \"k-item k-menu-item\",\n            popupWrapper: \"k-popup k-menu-popup\",\n            popupList: \"k-menu-group k-menu-group-md k-reset\",\n            popup: {\n                form: \"k-popup-edit-form\",\n                editForm: \"k-gantt-edit-form\",\n                formContainer: \"k-edit-form-container\",\n                resourcesFormContainer: \"k-resources-form-container\",\n                message: \"k-popup-message\",\n                buttonsContainer: \"k-edit-buttons k-actions\",\n                button: \"k-button\",\n                buttonDefaults: \"k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n                editField: \"k-edit-field\",\n                editLabel: \"k-edit-label\",\n                resourcesField: \"k-gantt-resources\"\n            },\n            primary: \"k-button-solid-primary\",\n            toolbar: {\n                appendButton: \"k-gantt-create\"\n            }\n        };\n\n        var PopupEditor = Observable.extend({\n            init: function(element, options) {\n                Observable.fn.init.call(this);\n\n                this.element = element;\n                this.options = extend(true, {}, this.options, options);\n            },\n\n            destroy: function() {\n                this.close();\n                this.unbind();\n            },\n\n            close: function() {\n                var that = this;\n\n                var destroy = function() {\n                    if (that.editable) {\n                        that.container.data(\"kendoWindow\").destroy();\n                        that.editable = null;\n                        that.container = null;\n                    }\n\n                    if (that.popup) {\n                        that.popup.destroy();\n                        that.popup = null;\n                    }\n                };\n\n                if (that.editable && that.container.is(\":visible\")) {\n                    that.trigger(\"close\", { window: that.container });\n                    that.container.data(\"kendoWindow\").bind(\"deactivate\", destroy).close();\n                } else {\n                    destroy();\n                }\n            },\n\n            editTask: function(task, plannedEditors) {\n                this.task = task;\n                this.plannedEditors = plannedEditors;\n                this.editable = this._createPopupEditor();\n            },\n\n            fields: function() {\n                var options = this.options,\n                    model = this.task,\n                    fields = {},\n                    customFields;\n\n                if (options.editable.template) {\n                    return $.map(model.fields, function(value, key) {\n                        return { field: key };\n                    });\n                } else {\n                    fields.general = this._fieldsGeneral();\n\n                    if (options.resources) {\n                        fields.resources = [ { field: \"resources\" } ];\n                    }\n\n                    if (options.dependencies) {\n                        fields.dependencies = this._fieldsDependencies(model);\n                    }\n\n                    customFields = extend(true, {}, model.fields);\n                    Object.keys(kendo.data.GanttTask.fields).map(key => {\n                        delete customFields[key];\n                    });\n\n                    if (Object.keys(customFields).length > 0) {\n                        fields.other = this._fieldsOther(customFields);\n                    }\n                }\n\n                return fields;\n            },\n\n\n            showDialog: function(options) {\n                var popupStyles = ganttStyles.popup,\n                    wrapper = this.element,\n                    task = options.model,\n                    that = this,\n                    dialogEl = $(kendo.format('<div class=\"' + popupStyles.formContainer + '\" data-uid=\"' + task.uid + '\">')).appendTo(wrapper),\n                    messages = this.options.messages,\n                    buttonsEl;\n\n                dialogEl.append($(\"<p>\" + options.text + \"</p>\"));\n                buttonsEl = $('<div class=\"' + popupStyles.buttonsContainer + '\">');\n                dialogEl.append(buttonsEl);\n\n                buttonsEl.append($(\"<button class='\" + ganttStyles.buttonDelete + \"'>\" + encode(messages.destroy) + \"</button>\").kendoButton({\n                    name: \"delete\",\n                    themeColor: \"primary\",\n                    icon: \"trash\",\n                    click: (e) => {\n                        e.preventDefault();\n                        popup.close();\n                        options.callback();\n                    }\n                }));\n\n                buttonsEl.append($(\"<button class='\" + ganttStyles.buttonCancel + \"'>\" + encode(messages.cancel) + \"</button>\").kendoButton({\n                    name: \"cancel\",\n                    icon: \"cancel\",\n                    click: (e) => {\n                        e.preventDefault();\n                        popup.close();\n                        options.callback(true);\n                    }\n                }));\n\n                if (this.popup) {\n                    this.popup.destroy();\n                }\n\n                var popup = this.popup = dialogEl.kendoWindow({\n                    modal: true,\n                    autoFocus: false,\n                    resizable: false,\n                    draggable: false,\n                    title: options.title,\n                    visible: false,\n                    deactivate: function() {\n                        this.destroy();\n                        that.trigger(\"close\", { window: dialogEl });\n                    }\n                })\n                .getKendoWindow();\n\n                popup.center().open();\n\n                popup.element.find(\".k-button-solid-primary\").trigger(\"focus\");\n            },\n\n            _buildButtons: function(dialogEl) {\n                var messages = this.options.messages,\n                    buttonsEl = $('<div class=\"' + ganttStyles.popup.buttonsContainer + '\">');\n\n                buttonsEl.appendTo(dialogEl);\n\n                buttonsEl.append($(\"<button class='\" + ganttStyles.buttonSave + \"'>\" + encode(messages.save) + \"</button>\").kendoButton({\n                    name: \"update\",\n                    themeColor: \"primary\",\n                    icon: \"save\",\n                    click: this._onSave.bind(this)\n                }));\n                buttonsEl.append($(\"<button class='\" + ganttStyles.buttonCancel + \"'>\" + encode(messages.cancel) + \"</button>\").kendoButton({\n                    name: \"cancel\",\n                    icon: \"cancel\",\n                    click: this._onCancel.bind(this)\n                }));\n                buttonsEl.append($(\"<span class='k-spacer'>\"));\n\n                if (this.options.editable.destroy !== false) {\n                    buttonsEl.append($(\"<button class='\" + ganttStyles.buttonDelete + \"'>\" + encode(messages.destroy) + \"</button>\").kendoButton({\n                        name: \"delete\",\n                        themeColor: \"primary\",\n                        icon: \"trash\",\n                        fillMode: \"flat\",\n                        click: this._onDelete.bind(this)\n                    }));\n                }\n            },\n\n            _buildEditTemplate: function(model, dialogEl) {\n                var template = this.options.editable.template;\n                var settings = extend({}, kendo.Template, this.options.templateSettings);\n                var html = \"\";\n\n                if (template) {\n                    if (typeof template === STRING) {\n                        template = kendo.unescape(template);\n                    }\n\n                    html += (kendo.template(template, settings))(model);\n                } else {\n                    this.renderForm = true;\n                    html += `<div role=\"form\" class=\"k-gantt-edit-tabstrip\" ${kendo.attr(\"style-min-height\")}=\"${TAB_HEIGHT}\"></div>`;\n                }\n\n                var formEl = $(html);\n                kendo.applyStylesFromKendoAttributes(formEl, [\"min-height\"]);\n                formEl.appendTo(dialogEl);\n            },\n\n            _createPopupEditor: function() {\n                var that = this;\n                var options = {};\n                var messages = this.options.messages;\n                var popupStyles = ganttStyles.popup;\n                var editableWidget;\n                var task = this.task;\n                var container = $(kendo.format('<div {0}=\"{1}\" class=\"{2} {3}\">', kendo.attr(\"uid\"), task.uid, popupStyles.form, popupStyles.editForm));\n\n                container.appendTo(this.element);\n\n                this._buildEditTemplate(task, container);\n                this._buildButtons(container);\n\n                this.container = container.kendoWindow(extend({\n                    width: 554,\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: messages.editor.editorTitle,\n                    visible: false,\n                    actions: [ \"Minimize\", \"Maximize\", \"Close\" ],\n                    close: function(e) {\n                        if (e.userTriggered) {\n                            if (that.trigger(\"cancel\", { container: container, model: task })) {\n                                e.preventDefault();\n                            }\n                        }\n                    }\n                }, options));\n\n                if (this.renderForm) {\n                    editableWidget = this._initForm();\n                } else {\n                    editableWidget = container.kendoEditable({\n                        model: task,\n                        clearContainer: false,\n                        validateOnBlur: true,\n                        target: that.options.target\n                    })\n                    .data(\"kendoEditable\");\n                }\n\n                kendo.cycleForm(container);\n\n                if (!this.trigger(\"edit\", { container: container, model: task })) {\n                    container.data(\"kendoWindow\").center().open();\n                } else {\n                    that.trigger(\"cancel\", { container: container, model: task });\n                }\n\n                return editableWidget;\n            },\n\n            _fieldsDependencies: function(model) {\n                var options = this.options,\n                    ds = options.target.dataSource,\n                    nameDdlDs = ds.data().filter(i => i.id !== model.id).map(i => ({ text: i.title, value: i.id })),\n                    typeDs = [\n                        { value: 0, text: \"Finish-Finish\" },\n                        { value: 1, text: \"Finish-Start\" },\n                        { value: 2, text: \"Start-Finish\" },\n                        { value: 3, text: \"Start-Start\" }\n                    ];\n\n                return {\n                    nameDdlDs, typeDs\n                };\n            },\n\n            _fieldsGeneral: function() {\n                var that = this,\n                    options = this.options,\n                    dataSource = options.target.dataSource,\n                    messages = options.messages.editor,\n                    task = this.task,\n                    modelFields = task.fields,\n                    startText = this.plannedEditors ? messages.actualStart : messages.start,\n                    endText = this.plannedEditors ? messages.actualEnd : messages.end,\n                    fullData, excluded, ddlData;\n\n                var general = [\n                    { field: \"title\", title: messages.title, colSpan: 4 }\n                ];\n\n                if (this.plannedEditors) {\n                    general.push({\n                        field: \"plannedStart\",\n                        title: messages.plannedStart,\n                        colSpan: 2,\n                        editor: \"DateTimePicker\",\n                        validation: modelFields.plannedStart.validation,\n                        editorOptions: {\n                            componentType: \"modern\"\n                        }\n                    });\n\n                    general.push({\n                        field: \"plannedEnd\",\n                        title: messages.plannedEnd,\n                        colSpan: 2,\n                        editor: \"DateTimePicker\",\n                        validation: modelFields.plannedEnd.validation,\n                        editorOptions: {\n                            componentType: \"modern\"\n                        }\n                    });\n                }\n\n                fullData = dataSource.data();\n                excluded = dataSource.taskAllChildren(task);\n                excluded.push(task);\n                ddlData = fullData.filter(n => !excluded.some(e => e.id === n.id));\n\n                general.push({\n                    field: \"start\",\n                    title: startText,\n                    colSpan: 2,\n                    editor: \"DateTimePicker\",\n                    validation: modelFields.start.validation,\n                    editorOptions: {\n                        componentType: \"modern\"\n                    }\n                });\n                general.push({\n                    field: \"end\",\n                    title: endText,\n                    colSpan: 2,\n                    editor: \"DateTimePicker\",\n                    validation: modelFields.start.validation,\n                    editorOptions: {\n                        componentType: \"modern\"\n                    }\n                });\n                general.push({\n                    field: \"percentComplete\",\n                    title: messages.percentComplete,\n                    format: PERCENTAGE_FORMAT,\n                    colSpan: 1,\n                    hint: messages.percentCompleteHint\n                });\n                general.push({\n                    field: \"parentId\",\n                    title: messages.parent,\n                    colSpan: 4,\n                    editor: \"DropDownList\",\n                    editorOptions: {\n                        optionLabel: messages.parentOptionLabel,\n                        filter: \"contains\",\n                        dataSource: ddlData,\n                        enable: ddlData.length > 0,\n                        dataValueField: \"id\",\n                        dataTextField: \"title\",\n                        valuePrimitive: true,\n                        template: ({ title, start, end }) => `<span>${title} ${kendo.toString(start, \"d\")}-${kendo.toString(end, \"d\")}</span>`\n                    }\n                });\n\n                general = general.map(function(item) {\n                    item = extend(true, {\n                        label: item.title\n                    }, item);\n\n                    if (!task.editable || task.editable(item.field)) {\n                        return item;\n                    } else {\n                        return extend(true, item, {\n                            editor: that._readonlyEditor.bind(that)\n                        });\n                    }\n                });\n\n                return general;\n            },\n\n            _fieldsOther: function(other) {\n                var that = this,\n                    task = this.task;\n\n                other = Object.keys(other).map(function(key) {\n                    var item = other[key];\n\n                    item = extend(true, {\n                        field: key,\n                        label: item.title\n                    }, item);\n\n                    if (!task.editable || task.editable(item.field)) {\n                        return item;\n                    } else {\n                        return extend(true, item, {\n                            editor: that._readonlyEditor.bind(that)\n                        });\n                    }\n                });\n\n                return other;\n            },\n\n            _gridOptions: function(dependencies, type, keyType, taskId) {\n                var messages = this.options.messages,\n                    data;\n\n                if (!this.dependencyData) {\n                    this.dependencyData = {};\n                }\n\n                data = this.dependencyData[type] = this.options.target.dependencies.view().filter(d => d[keyType] === taskId);\n\n                return {\n                    dataSource: {\n                        data: data,\n                        schema: {\n                            model: {\n                                fields: {\n                                    id: { from: \"id\" },\n                                    [type]: { from: type, validation: { required: { message: messages.editor.name + \" is required\" } } },\n                                    type: { from: \"type\", validation: { required: true }, defaultValue: 1 }\n                                }\n                            }\n                        }\n                    },\n                    columns: [{\n                        selectable: true,\n                        width: 50\n                    },{\n                        field: type,\n                        title: messages.editor.name,\n                        values: dependencies.nameDdlDs\n                    }, {\n                        field: \"type\",\n                        title: messages.editor.dependencyType,\n                        values: dependencies.typeDs,\n                        width: \"9em\"\n                    }],\n                    toolbar: [{\n                        name: \"create\",\n                        text: messages.editor.addNew\n                    },{\n                        name: \"remove\",\n                        icon: \"minus\",\n                        text: messages.editor.remove,\n                        click: (e) => {\n                            var grid = e.target.closest(\".k-grid\").getKendoGrid(),\n                                ds = grid.dataSource,\n                                selected = grid.select(),\n                                items = [];\n\n                            if (selected && selected.length > 0) {\n                                selected.each((i, row) => {\n                                    items.push(grid.dataItem($(row)));\n                                });\n\n                                items.map(i => {\n                                    ds.remove(i);\n                                });\n                            }\n                        }\n                    }],\n                    editable: true,\n                    sortable: true,\n                    navigatable: true,\n                    height: GRID_HEIGHT,\n                    edit: function() {\n                        var select = $(\"[name=predecessorId], [name=successorId]\"),\n                            ddl;\n\n                        if (select.length) {\n                            ddl = select.data(\"kendoDropDownList\");\n                            ddl.setOptions({\n                                filter: \"contains\"\n                            });\n                        }\n                    },\n                };\n            },\n\n            _initForm: function() {\n                var that = this,\n                    task = that.task,\n                    container = that.container,\n                    resources = that.options.resources,\n                    resourceField = task.get(resources.field),\n                    fields = that.fields(),\n                    tabStripDs = that._tabStripSource(fields, resourceField);\n\n                container.find(\".k-gantt-edit-tabstrip\").kendoTabStrip({\n                    dataTextField: \"name\",\n                    dataContentField: \"content\",\n                    dataSource: tabStripDs,\n                    value: that.options.messages.editor.general,\n                    select: (e) => {\n                        var tabStrip = e.sender,\n                            contentElement = $(tabStrip.contentElement(tabStrip.select().index())),\n                            grid = contentElement.find(\".k-grid\").data(\"kendoGrid\"),\n                            form = contentElement.find(\".k-form\").data(\"kendoForm\");\n\n                        if (grid && grid.editable && grid.editable.validatable && !grid.editable.validatable.validate()) {\n                            e.preventDefault();\n                        } else if (form && !form.validator.validate()) {\n                            e.preventDefault();\n                        }\n                    }\n                });\n\n                that._initGeneral(fields.general, task);\n\n                if (resourceField) {\n                    that.resourceEditor = resources.editor(container.find(\".k-gantt-resources\"), task);\n                }\n\n                if (fields.dependencies) {\n                    container.find(\".k-gantt-predecessors\").kendoGrid(that._gridOptions(fields.dependencies, \"predecessorId\", \"successorId\", task.id));\n                    container.find(\".k-gantt-successors\").kendoGrid(that._gridOptions(fields.dependencies, \"successorId\", \"predecessorId\", task.id));\n                }\n\n                if (fields.other) {\n                    that._initOther(fields.other, task);\n                }\n\n                return that.form.editable;\n            },\n\n            _initGeneral: function(items, task) {\n                this.form = this.container.find(\".k-gantt-form-default\").kendoForm({\n                    layout: \"grid\",\n                    grid: {\n                        cols: 4,\n                        gutter: {\n                            rows: 0,\n                            cols: 8\n                        }\n                    },\n                    items: items,\n                    formData: task,\n                    buttonsTemplate: () => \"\",\n                    validatable: {\n                        validateOnBlur: true\n                    }\n                }).data(\"kendoForm\");\n            },\n\n            _initOther: function(items, task) {\n                this.container.find(\".k-gantt-form-other\").kendoForm({\n                    items: items,\n                    formData: task,\n                    buttonsTemplate: () => \"\",\n                    validatable: {\n                        validateOnBlur: true\n                    }\n                });\n            },\n\n            _readonlyEditor: function(container, options) {\n                var field = options.field,\n                    value = '',\n                    ds = this.options.target.dataSource;\n\n                if (options.model.get(field) !== null) {\n                    value = options.model.get(field);\n\n                    if (value instanceof Date) {\n                        value = kendo.toString(value, \"g\");\n                    } else if (field === \"percentComplete\") {\n                        value = kendo.toString(value, options.format);\n                    } else if (field === \"parentId\") {\n                        value = ds.get(value).title;\n                    }\n                }\n\n                container.append(\"<span>\" + value + \"</span>\");\n            },\n\n            _onCancel: function() {\n                this.trigger(\"cancel\", { container: this.container, model: this.task });\n            },\n\n            _onDelete: function() {\n                this.trigger(\"remove\", { container: this.container, model: this.task });\n            },\n\n            _onSave: function() {\n                var task = this.task,\n                    fields = [],\n                    updateInfo = {},\n                    field,\n                    container = this.container,\n                    predeGrid = container.find(\".k-gantt-predecessors\").getKendoGrid(),\n                    sucGrid = container.find(\".k-gantt-successors\").getKendoGrid(),\n                    found, prevData, newData, args = {}, createdData = [], updatedData = [];\n\n                if (predeGrid) {\n                    prevData = this.dependencyData.successorId.concat(this.dependencyData.predecessorId);\n                    newData = predeGrid.dataSource.view().toJSON().concat(sucGrid.dataSource.view().toJSON());\n\n                    if (predeGrid && predeGrid.editable && predeGrid.editable.validatable && !predeGrid.editable.validatable.validate() ||\n                        sucGrid && sucGrid.editable && sucGrid.editable.validatable && !sucGrid.editable.validatable.validate()) {\n                            return;\n                        }\n\n                    newData.map(n => {\n                        found = prevData.find(i => i.id === n.id);\n\n                        if (found) {\n                            if (found.dirty) {\n                                updatedData.push(n);\n                            }\n\n                            newData = newData.filter(i => i.id !== n.id);\n                            prevData = prevData.filter(i => i.id !== n.id);\n                        }\n                    });\n\n                    newData.map(i => {\n                        if (i.successorId) {\n                            if (!i.predecessorId) {\n                                i.predecessorId = task.get(\"id\");\n                            }\n\n                            createdData.push(i);\n                        } else if (i.predecessorId) {\n                            if (!i.successorId) {\n                                i.successorId = task.get(\"id\");\n                            }\n\n                            createdData.push(i);\n                        }\n                    });\n\n                    if (createdData.length > 0 || prevData.length > 0 || updatedData.length > 0) {\n                        args.updateDependencies = {\n                            destroyed: prevData,\n                            created: createdData,\n                            updated: updatedData\n                        };\n                    }\n                }\n\n                if (Array.isArray(this.fields())) {\n                    fields = this.fields();\n                } else {\n                    Object.values(this.fields()).map((val) => {\n                        if (Array.isArray(val)) {\n                            fields.push(...val);\n                        }\n                    });\n                }\n\n                if (this.resourceEditor) {\n                    if (!this.resourceEditor.updateModel()) {\n                        return;\n                    }\n                }\n\n                for (var i = 0, length = fields.length; i < length; i++) {\n                    field = fields[i].field;\n                    updateInfo[field] = task.get(field);\n                }\n\n                this.trigger(\"save\", $.extend({}, args, {\n                    container: container,\n                    model: task,\n                    updateInfo: updateInfo\n                }));\n            },\n\n            _tabStripSource: function(fields, resourceField) {\n                var messages = this.options.messages.editor,\n                    dependencies = fields.dependencies,\n                    tabStripDs = [{\n                        name: messages.general,\n                        content: \"<div class='k-gantt-form-default'></div>\"\n                    }];\n\n                if (resourceField) {\n                    tabStripDs.push({\n                        name: messages.resources,\n                        content: \"<div class='k-gantt-resources'></div>\"\n                    });\n                }\n\n                if (dependencies) {\n                    tabStripDs.push({\n                        name: messages.predecessors,\n                        content: \"<div class='k-gantt-predecessors'></div>\"\n                    });\n                    tabStripDs.push({\n                        name: messages.successors,\n                        content: \"<div class='k-gantt-successors'></div>\"\n                    });\n                }\n\n                if (fields.other) {\n                    tabStripDs.push({\n                        name: messages.other,\n                        content: \"<div class='k-gantt-form-other'></div>\"\n                    });\n                }\n\n                return tabStripDs;\n            }\n        });\n        var ResourceEditor = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                this.wrapper = this.element;\n                this.model = this.options.model;\n                this.resourcesField = this.options.resourcesField;\n\n                this._resourceGrid();\n            },\n\n            destroy: function() {\n                this.grid = null;\n\n                Widget.fn.destroy.call(this);\n\n                this.element = this.wrapper = null;\n            },\n\n            updateModel: function() {\n                var resources = [];\n                var item, value;\n                var grid = this.grid;\n                var data = grid.dataSource.data();\n                var editable = grid.editable;\n\n                if (editable && editable.validatable && !editable.validatable.validate()) {\n                    return false;\n                }\n\n                for (var i = 0, length = data.length; i < length; i++) {\n                    item = data[i];\n                    value = item.get(\"value\");\n\n                    if (item.id !== undefined$1 && value !== null && value > 0) {\n                        resources.push(data[i]);\n                    }\n                }\n\n                this.model[this.resourcesField] = resources;\n\n                return true;\n            },\n\n            _resourceGrid: function() {\n                var that = this;\n                var messages = this.options.messages;\n                var options = that.options;\n                var element = this.wrapper;\n                var ddlDs = options.resources;\n\n                that.grid = new kendo.ui.Grid(element, {\n                    columns: [{\n                        selectable: true,\n                        width: 50\n                    },{\n                        field: \"id\",\n                        title: messages.resourcesHeader,\n                        values: ddlDs\n                    },{\n                        field: \"value\",\n                        title: messages.unitsHeader,\n                        template: function(dataItem) {\n                            var valueFormat = dataItem.format || PERCENTAGE_FORMAT;\n                            var value = dataItem.value !== null ? dataItem.value : \"\";\n\n                            return valueFormat ? kendo.toString(value, valueFormat) : value;\n                        },\n                        width: 120\n                    }],\n                    height: GRID_HEIGHT,\n                    sortable: true,\n                    editable: true,\n                    filterable: true,\n                    navigatable: true,\n                    toolbar: [{\n                        name: \"create\",\n                        text: messages.addNew\n                    },{\n                        name: \"remove\",\n                        icon: \"minus\",\n                        text: messages.remove,\n                        click: () => {\n                            var grid = that.grid,\n                                ds = grid.dataSource,\n                                selected = grid.selectedKeyNames();\n\n                            if (selected && selected.length > 0) {\n                                selected.map(i => {\n                                    ds.remove(ds.get(i));\n                                });\n                            }\n                        }\n                    }],\n                    dataSource: {\n                        data: this.model.resources,\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: { from: \"id\", defaultValue: undefined$1, validation: { required: { message: messages.resourcesHeader + \" is required\" } } },\n                                    value: { from: \"value\", type: \"number\", defaultValue: 1, validation: this.options.unitsValidation },\n                                    format: { from: \"format\", type: \"string\" }\n                                }\n                            }\n                        }\n                    },\n                    edit: function(e) {\n                        var select = e.container.find(\"select\"),\n                            ddl = select.data(\"kendoDropDownList\"),\n                            currentId = e.model.id,\n                            filterOut = options.model.resources.map(r => r.id).filter(r => r !== currentId),\n                            filters = filterOut.map(f => ({\n                                field: \"value\",\n                                operator: \"neq\",\n                                value: f\n                            }));\n\n                        if (ddl) {\n                            ddl.dataSource.filter({\n                                logic: \"and\",\n                                filters: filters\n                            });\n\n                            ddl.setOptions({\n                                filter: \"contains\"\n                            });\n                        }\n                    }\n                });\n            }\n        });\n\n        kendo.gantt = {\n            PopupEditor: PopupEditor,\n            ResourceEditor: ResourceEditor\n        };\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}