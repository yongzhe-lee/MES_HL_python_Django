{"version":3,"sources":["raw-js/kendo.scheduler.recurrence.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoscheduler","recurrence","js","this","$","undefined$1","kendo","window","encode","htmlEncode","timezone","Class","ui","Widget","DropDownList","ButtonGroup","kendoDate","date","setTime","setDayOfWeek","adjustDST","firstDayOfMonth","getMilliseconds","DAYS_IN_LEAPYEAR","DAYS_IN_YEAR","MONTHS","WEEK_DAYS","WEEK_DAYS_IDX","SU","MO","TU","WE","TH","FR","SA","DATE_FORMATS","RULE_NAMES","RULE_NAMES_LENGTH","length","RECURRENCE_DATE_FORMAT","limitation","months","end","rule","monthRules","ruleValues","getMonth","changed","setMonth","setFullYear","getFullYear","monthDays","monthLength","month","days","hours","getHours","normalize","monthDay","getMonthLength","getDate","sort","numberSortPredicate","yearDays","year","yearDay","leapYear","dayInYear","weeks","day","weekStart","week","weekInYear","weekDays","weekDayRule","offsetDate","Date","getTime","offsets","start","normalizeDay","getDay","weekDayRules","ruleWeekOffset","weekDay","weekNumber","currentDay","normalizeDayIndex","result","idx","weekInMonth","normalizeOffset","push","ruleWeekValues","freq","positions","position","forEach","nextMonthFirstDay","ruleDay","offset","isInWeek","numberOfWeeks","setDate","hourRules","startTime","_startTime","startHours","setHours","minutes","setMinutes","getMinutes","minuteRules","seconds","setSeconds","getSeconds","secondRules","BaseFrequency","extend","next","options","_hour","limit","ruleName","firstRule","modified","interval","current","diff","startTimeHours","_startPeriod","frequency","excess","getTimezoneOffset","MS_PER_HOUR","MS_PER_MINUTE","intervalExcess","Math","floor","round","MS_PER_DAY","_date","_getNumberOfWeeksBetweenDates","_hasRuleValue","first","second","exactWeeks","HourlyFrequency","fn","DailyFrequency","WeeklyFrequency","setup","eventStartDate","MonthlyFrequency","YearlyFrequency","frequencies","hourly","daily","weekly","monthly","yearly","CLICK","CHANGE","firstWeekLength","ceil","lastDate","weeksInMonth","skipFirst","skipLast","rules","value","ruleValue","availableRules","parseArray","list","range","parseInt","isNaN","parseWeekDayList","valueLength","substring","toUpperCase","a","b","parseExceptions","exceptions","zone","dates","split","indexOf","parseUTCDate","isException","Array","isArray","dateTime","toExceptionString","concat","convert","toString","join","endPeriodByFreq","eventsByPosition","periodEvents","until","event","inPeriod","periodEventsLength","events","removeExceptionDates","exceptionDates","getZoneOffset","parseDate","apply","parseDateRule","dateRule","pair","property","tzid","valueIdx","pairs","parseRule","recur","splits","part","parts","instance","trim","exdates","toLowerCase","count","culture","calendar","firstDay","day1","day2","serializeDateRule","val","serialize","ruleString","valueString","serializeWeekDayList","parse","expand","endTime","endDate","durationMS","startPeriod","ruleStart","ruleEnd","useEventStart","freqName","eventStartTime","eventStartMS","eventStart","currentIdx","shiftedStart","shiftedEnd","shiftedStartTime","shifterEndTime","recurrenceRule","startTimezone","endTimezone","clone","recurrenceException","set","startPeriodByFreq","_endPeriod","duration","dateOffset","dateMinusHour","dateMinusHourOffset","allDayCompensation","isAllDay","toInvariantTime","inPeriodCheckEndDate","toUtcTime","startZone","endZone","startOffsetDiff","endOffsetDiff","startTZOffsetDiff","endTZOffsetDiff","offsetTicksStart","offsetTicksEnd","toOccurrence","_endTime","slice","isMissingDSTHour","RECURRENCE_VIEW_TEMPLATE","template","messages","repeatEvery","repeatOn","attr","of","label","never","after","occurrence","on","DAY_RULE","WEEKDAY_RULE","WEEKEND_RULE","BaseRecurrenceEditor","init","element","that","call","wrapper","today","firstWeekDay","_namespace","name","spinners","mobile","repeat","recurrenceEditorTitle","mobileLabel","offsetPositions","third","fourth","last","weekdays","weekday","weekend","_initInterval","_value","_container","find","kendoNumericTextBox","decimals","format","min","change","_trigger","_weekDayButtons","names","abbreviated","namesAbbr","values","items","text","attributes","_weekDayButtonGroup","selection","select","selectedDays","map","i","Number","getAttribute","_weekDayRule","clear","_weekDay","_weekDayOffset","_weekDayView","weekDayOffset","weekDayValue","method","weekDayOffsetWidget","_initWeekDay","data","weekdayMessage","offsetMessage","weekDayInput","autoWidth","dataTextField","dataValueField","dataSource","dayName","_initWeekDays","weekDayButtonGroup","selectedWeekDayButtons","ruleDays","ruleDaysLength","selectors","_initMonthDay","monthDayInput","_monthDay","NumericTextBox","max","_initCount","input","_count","_initUntil","startInput","closest","validDateValidationMessage","Validator","prototype","dateCompareValidationMessage","dateCompare","initialValue","_until","kendoDatePicker","untilEl","readonly","Boolean","enable","is","parents","setOptions","trigger","RecurrenceEditor","_initFrequency","_initContainer","destroy","_frequency","off","freqButton","_initView","container","editContainer","parent","insertAfter","append","buttonGroupElement","title","recurrenceViewHtml","empty","applyStylesFromKendoAttributes","html","_initMonth","_period","_end","monthInputs","monthName","_month1","_month2","endRule","namespace","click","e","_toggleEnd","currentTarget","_buttonNever","_buttonCount","_buttonUntil","toggleRule","_toggleMonthDay","_toggleYear","selector","radioButtons","_buttonMonthDay","eq","_buttonWeekDay","enableCount","enableUntil","prop","monthRule","enableMonthDay","enableWeekDay","yearRule","enableMonth1","enableMonth2","plugin","RECURRENCE_HEADER_TEMPLATE","headerTitle","RECURRENCE_REPEAT_PATTERN_TEMPLATE","repeatBy","every","RECURRENCE_END_PATTERN_TEMPLATE","endPattern","RECURRENCE_GROUP_BUTTON_TEMPLATE","item","MobileRecurrenceEditor","_optionTemplate","_pane","pane","_initRepeatButton","_initParentRepeatEnd","_defaultValue","animations","left","right","cancel","update","endTitle","repeatTitle","patterns","dayOfMonth","dayOfWeek","_destroyView","_endFields","target","_chevronButton","icon","_repeatValue","preventDefault","_createView","navigate","_view","_endLiItem","endLabelField","endEditField","appendTo","_navigateToView","_endParentLabelField","toggle","_endParentEndButton","_endText","_initRepeatEnd","_endLabelField","toggleClass","_endButton","viewName","frequencyMessages","ns","_initRepeatView","_initEndNavigation","endMessages","_initEndView","viewType","returnViewId","view","id","stopPropagation","hasClass","one","remove","$html","content","hide","show","ev","weekDaySelect","_options","monthSelect","monthNames","_monthSelect","repeatRuleGroupButton","weekDayView","monthDayView","currentValue","weekDayName","support","optionLabel","jQuery"],"mappings":"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","file":"kendo.scheduler.recurrence.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.dropdownlist.js'), require('kendo.datepicker.js'), require('kendo.numerictextbox.js'), require('kendo.buttongroup.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.dropdownlist', 'kendo.datepicker', 'kendo.numerictextbox', 'kendo.buttongroup', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoscheduler = global.kendoscheduler || {}, global.kendoscheduler.recurrence = global.kendoscheduler.recurrence || {}, global.kendoscheduler.recurrence.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"scheduler.recurrence\",\n        name: \"Recurrence\",\n        category: \"web\",\n        depends: [ \"dropdownlist\", \"datepicker\", \"numerictextbox\", \"buttongroup\", \"icons\" ],\n        hidden: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            encode = kendo.htmlEncode,\n            timezone = kendo.timezone,\n            Class = kendo.Class,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            DropDownList = ui.DropDownList,\n            ButtonGroup = ui.ButtonGroup,\n            kendoDate = kendo.date,\n            setTime = kendoDate.setTime,\n            setDayOfWeek = kendoDate.setDayOfWeek,\n            adjustDST = kendoDate.adjustDST,\n            firstDayOfMonth = kendoDate.firstDayOfMonth,\n            getMilliseconds = kendoDate.getMilliseconds,\n            DAYS_IN_LEAPYEAR = [0,31,60,91,121,152,182,213,244,274,305,335,366],\n            DAYS_IN_YEAR = [0,31,59,90,120,151,181,212,243,273,304,334,365],\n            MONTHS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n            WEEK_DAYS = {\n                0: \"SU\",\n                1: \"MO\",\n                2: \"TU\",\n                3: \"WE\",\n                4: \"TH\",\n                5: \"FR\",\n                6: \"SA\"\n            },\n            WEEK_DAYS_IDX = {\n                \"SU\": 0,\n                \"MO\": 1,\n                \"TU\": 2,\n                \"WE\": 3,\n                \"TH\": 4,\n                \"FR\": 5,\n                \"SA\": 6\n            },\n            DATE_FORMATS = [\n                \"yyyy-MM-ddTHH:mm:ss.fffzzz\",\n                \"yyyy-MM-ddTHH:mm:sszzz\",\n                \"yyyy-MM-ddTHH:mm:ss\",\n                \"yyyy-MM-ddTHH:mm\",\n                \"yyyy-MM-ddTHH\",\n                \"yyyy-MM-dd\",\n                \"yyyyMMddTHHmmssfffzzz\",\n                \"yyyyMMddTHHmmsszzz\",\n                \"yyyyMMddTHHmmss\",\n                \"yyyyMMddTHHmm\",\n                \"yyyyMMddTHH\",\n                \"yyyyMMdd\"\n            ],\n            RULE_NAMES = [\"months\", \"weeks\", \"yearDays\", \"monthDays\", \"weekDays\", \"hours\", \"minutes\", \"seconds\"],\n            RULE_NAMES_LENGTH = RULE_NAMES.length,\n            RECURRENCE_DATE_FORMAT = \"yyyyMMddTHHmmssZ\",\n            limitation = {\n                months: function(date, end, rule) {\n                    var monthRules = rule.months,\n                        months = ruleValues(monthRules, date.getMonth() + 1),\n                        changed = false;\n\n                    if (months !== null) {\n                        if (months.length) {\n                            date.setMonth(months[0] - 1, 1);\n                        } else {\n                            date.setFullYear(date.getFullYear() + 1, monthRules[0] - 1, 1);\n                        }\n\n                        changed = true;\n                    }\n\n                    return changed;\n                },\n\n                monthDays: function(date, end, rule) {\n                    var monthLength, month, days,\n                        changed = false,\n                        hours = date.getHours(),\n                        normalize = function(monthDay) {\n                            if (monthDay < 0) {\n                                monthDay = monthLength + monthDay + 1;\n                            }\n                            return monthDay;\n                        };\n\n                    while (date <= end) {\n                        month = date.getMonth();\n                        monthLength = getMonthLength(date);\n                        days = ruleValues(rule.monthDays, date.getDate(), normalize);\n\n                        if (days === null) {\n                            return changed;\n                        }\n\n                        changed = true;\n\n                        if (days.length) {\n                            date.setMonth(month, days.sort(numberSortPredicate)[0]);\n                            adjustDST(date, hours);\n\n                            if (month === date.getMonth()) {\n                                break;\n                            }\n                        } else {\n                            date.setMonth(month + 1, 1);\n                        }\n                    }\n\n                    return changed;\n                },\n\n                yearDays: function(date, end, rule) {\n                    var year, yearDays,\n                        changed = false,\n                        hours = date.getHours(),\n                        normalize = function(yearDay) {\n                            if (yearDay < 0) {\n                                yearDay = year + yearDay;\n                            }\n                            return yearDay;\n                        };\n\n                    while (date < end) {\n                        year = leapYear(date) ? 366 : 365;\n                        yearDays = ruleValues(rule.yearDays, dayInYear(date), normalize);\n\n                        if (yearDays === null) {\n                            return changed;\n                        }\n\n                        changed = true;\n                        year = date.getFullYear();\n\n                        if (yearDays.length) {\n                            date.setFullYear(year, 0, yearDays.sort(numberSortPredicate)[0]);\n                            adjustDST(date, hours);\n                            break;\n                        } else {\n                            date.setFullYear(year + 1, 0, 1);\n                        }\n                    }\n\n                    return changed;\n                },\n\n                weeks: function(date, end, rule) {\n                    var weekStart = rule.weekStart,\n                        year, weeks, day,\n                        changed = false,\n                        hours = date.getHours(),\n                        normalize = function(week) {\n                            if (week < 0) {\n                                week = 53 + week;\n                            }\n                            return week;\n                        };\n\n                    while (date < end) {\n                        weeks = ruleValues(rule.weeks, weekInYear(date, weekStart), normalize);\n\n                        if (weeks === null) {\n                            return changed;\n                        }\n\n                        changed = true;\n                        year = date.getFullYear();\n\n                        if (weeks.length) {\n                            day = (weeks.sort(numberSortPredicate)[0] * 7) - 1;\n\n                            date.setFullYear(year, 0, day);\n                            setDayOfWeek(date, weekStart, -1);\n\n                            adjustDST(date, hours);\n                            break;\n                        } else {\n                            date.setFullYear(year + 1, 0, 1);\n                        }\n                    }\n\n                    return changed;\n                },\n\n                weekDays: function(date, end, rule) {\n                    var offsetDate = new Date(date.getTime() + rule.offsets.start);\n                    var normalizeDay = offsetDate.getDay() - date.getDay();\n                    var weekDays = rule.weekDays;\n                    var weekStart = rule.weekStart;\n                    var weekDayRules = ruleWeekValues(weekDays, offsetDate, weekStart);\n                    var hours = date.getHours();\n                    var traverseRuleForNextMont = function(rule) {\n                        var nextMonthFirstDay = new Date(date.getFullYear(), date.getMonth() + 1, 1);\n                        var ruleDay = normalizeDayIndex(rule.day, weekStart);\n\n                        if (nextMonthFirstDay.getDay() <= ruleDay) {\n                            if (!weekDayRule || normalizeDayIndex(weekDayRule.day, weekStart) > ruleDay) {\n                                weekDayRule = rule;\n                            }\n                        }\n                    };\n                    var weekDayRule, day;\n\n\n                    if (weekDayRules === null) {\n                        return false;\n                    }\n\n                    weekDayRule = weekDayRules[0];\n\n                    if (!weekDayRule) {\n                        if (rule.freq === \"monthly\" && !rule.positions || rule.position > 0) {\n                            weekDays.forEach(traverseRuleForNextMont);\n                        }\n                        if (!weekDayRule) {\n                            weekDayRule = weekDays[0];\n                        }\n                        setDayOfWeek(date, weekStart);\n                    }\n\n                    day = weekDayRule.day;\n                    day -= normalizeDay;\n\n                    if (weekDayRule.offset) {\n                        while (date <= end && !isInWeek(date, weekDayRule, weekStart)) {\n                            if (weekInMonth(date, weekStart) === numberOfWeeks(date, weekStart)) {\n                                date.setMonth(date.getMonth() + 1, 1);\n                                adjustDST(date, hours);\n                            } else {\n                                date.setDate(date.getDate() + 7);\n                                adjustDST(date, hours);\n\n                                setDayOfWeek(date, weekStart, -1);\n                            }\n                        }\n                    }\n\n                    if (date.getDay() !== day) {\n                        setDayOfWeek(date, day);\n                    }\n\n                    return true;\n                },\n\n                hours: function(date, end, rule) {\n                    var hourRules = rule.hours,\n                        startTime = rule._startTime,\n                        startHours = startTime.getHours(),\n                        hours = ruleValues(hourRules, startHours),\n                        changed = false;\n\n                    if (hours !== null) {\n                        changed = true;\n\n                        date.setHours(startHours);\n                        adjustDST(date, startHours);\n\n                        if (hours.length) {\n                            hours = hours[0];\n                            date.setHours(hours);\n                        } else {\n                            hours = date.getHours();\n                            date.setDate(date.getDate() + 1);\n                            adjustDST(date, hours);\n\n                            hours = hourRules[0];\n                            date.setHours(hours);\n                            adjustDST(date, hours);\n                        }\n\n                        if (rule.minutes) {\n                            date.setMinutes(0);\n                        }\n\n                        startTime.setHours(hours, date.getMinutes());\n                    }\n\n                    return changed;\n                },\n\n                minutes: function(date, end, rule) {\n                    var minuteRules = rule.minutes,\n                        currentMinutes = date.getMinutes(),\n                        minutes = ruleValues(minuteRules, currentMinutes),\n                        hours = rule._startTime.getHours(),\n                        changed = false;\n\n                    if (minutes !== null) {\n                        changed = true;\n\n                        if (minutes.length) {\n                            minutes = minutes[0];\n                        } else {\n                            hours += 1;\n                            minutes = minuteRules[0];\n                        }\n\n                        if (rule.seconds) {\n                            date.setSeconds(0);\n                        }\n\n                        date.setHours(hours, minutes);\n\n                        hours = hours % 24;\n                        adjustDST(date, hours);\n                        rule._startTime.setHours(hours, minutes, date.getSeconds());\n                    }\n\n                    return changed;\n                },\n\n                seconds: function(date, end, rule) {\n                    var secondRules = rule.seconds,\n                        hours = rule._startTime.getHours(),\n                        seconds = ruleValues(secondRules, date.getSeconds()),\n                        minutes = date.getMinutes(),\n                        changed = false;\n\n                    if (seconds !== null) {\n                        changed = true;\n\n                        if (seconds.length) {\n                            date.setSeconds(seconds[0]);\n                        } else {\n                            minutes += 1;\n                            date.setMinutes(minutes, secondRules[0]);\n\n                            if (minutes > 59) {\n                                minutes = minutes % 60;\n                                hours = (hours + 1) % 24;\n                            }\n                        }\n\n                        rule._startTime.setHours(hours, minutes, date.getSeconds());\n                    }\n\n                    return changed;\n                }\n            },\n            BaseFrequency = Class.extend({\n                next: function(date, rule) {\n                    var startTime = rule._startTime,\n                        day = startTime.getDate(),\n                        minutes, seconds;\n\n                    if (rule.seconds) {\n                        seconds = date.getSeconds() + 1;\n\n                        date.setSeconds(seconds);\n                        startTime.setSeconds(seconds);\n                        startTime.setDate(day);\n\n                    } else if (rule.minutes) {\n                        minutes = date.getMinutes() + 1;\n\n                        date.setMinutes(minutes);\n                        startTime.setMinutes(minutes);\n                        startTime.setDate(day);\n                    } else {\n                        return false;\n                    }\n\n                    return true;\n                },\n\n                normalize: function(options) {\n                    var rule = options.rule;\n\n                    if (options.idx === 4 && rule.hours) {\n                        rule._startTime.setHours(0);\n                        this._hour(options.date, rule);\n                    }\n                },\n\n                limit: function(date, end, rule) {\n                    var interval = rule.interval,\n                        ruleName, firstRule,\n                        modified,\n                        idx, day;\n\n                    while (date <= end) {\n                        modified = firstRule = undefined$1;\n                        day = date.getDate();\n\n                        for (idx = 0; idx < RULE_NAMES_LENGTH; idx++) {\n                            ruleName = RULE_NAMES[idx];\n\n                            if (rule[ruleName]) {\n                                modified = limitation[ruleName](date, end, rule);\n                                if (firstRule !== undefined$1 && modified) {\n                                    break;\n                                } else {\n                                    firstRule = modified;\n                                }\n                            }\n\n                            if (modified) {\n                                this.normalize({ date: date, rule: rule, day: day, idx: idx });\n                            }\n                        }\n\n                        if ((interval === 1 || !this.interval(rule, date)) && idx === RULE_NAMES_LENGTH) {\n                            break;\n                        }\n                    }\n                },\n\n                interval: function(rule, current) {\n                    var start = new Date(rule._startPeriod);\n                    var date = new Date(current);\n                    var hours = current.getHours();\n                    var weekStart = rule.weekStart;\n                    var interval = rule.interval;\n                    var frequency = rule.freq;\n                    var modified = false;\n                    var excess = 0;\n                    var month = 0;\n                    var day = 1;\n                    var diff;\n\n                    var startTimeHours;\n\n                    if (frequency === \"hourly\") {\n                        diff = date.getTimezoneOffset() - start.getTimezoneOffset();\n                        startTimeHours = rule._startTime.getHours();\n\n                        date = date.getTime();\n                        if (hours !== startTimeHours) {\n                            date += (startTimeHours - hours) * kendoDate.MS_PER_HOUR;\n                        }\n                        date -= start;\n\n                        if (diff) {\n                            date -= diff * kendoDate.MS_PER_MINUTE;\n                        }\n\n                        diff = Math.floor(date / kendoDate.MS_PER_HOUR);\n                        excess = intervalExcess(diff, interval);\n\n                        if (excess !== 0) {\n                            this._hour(current, rule, excess);\n                            modified = true;\n                        }\n                    } else if (frequency === \"daily\") {\n                        kendoDate.setTime(date, -start, true);\n\n                        diff = Math.round(date / kendoDate.MS_PER_DAY);\n                        excess = intervalExcess(diff, interval);\n\n                        if (excess !== 0) {\n                            this._date(current, rule, excess);\n                            modified = true;\n                        }\n\n                    } else if (frequency === \"weekly\") {\n                        excess = this._getNumberOfWeeksBetweenDates(start, current);\n\n                        var normalizedCurrentIndex = normalizeDayIndex(current.getDay(), weekStart);\n                        var normalizedStartIndex = normalizeDayIndex(start.getDay(), weekStart);\n\n                        if (normalizedCurrentIndex < normalizedStartIndex) {\n                            excess += 1;\n                        }\n\n                        excess = intervalExcess(excess, interval);\n                        if (excess !== 0) {\n                            kendoDate.setDayOfWeek(current, rule.weekStart, -1);\n\n                            current.setDate(current.getDate() + (excess * 7));\n                            adjustDST(current, hours);\n\n                            modified = true;\n                        }\n                    } else if (frequency === \"monthly\") {\n                        diff = current.getFullYear() - start.getFullYear();\n                        diff = current.getMonth() - start.getMonth() + (diff * 12);\n\n                        excess = intervalExcess(diff, interval);\n\n                        if (excess !== 0) {\n                            day = rule._hasRuleValue ? 1 : current.getDate();\n\n                            current.setFullYear(current.getFullYear(), current.getMonth() + excess, day);\n                            adjustDST(current, hours);\n\n                            modified = true;\n                        }\n                    } else if (frequency === \"yearly\") {\n                        diff = current.getFullYear() - start.getFullYear();\n                        excess = intervalExcess(diff, interval);\n\n                        if (!rule.months) {\n                            month = current.getMonth();\n                        }\n\n                        if (!rule.yearDays && !rule.monthDays && !rule.weekDays) {\n                            day = current.getDate();\n                        }\n\n                        if (excess !== 0) {\n                            current.setFullYear(current.getFullYear() + excess, month, day);\n                            adjustDST(current, hours);\n\n                            modified = true;\n                        }\n                    }\n\n                    return modified;\n                },\n\n                _getNumberOfWeeksBetweenDates: function(first, second) {\n                     var weeks = (second - first) / 604800000;\n                     var exactWeeks = Math.floor(weeks);\n\n                    //this is happening when weeks pass DST change\n                    if (weeks - exactWeeks > 0.99) {\n                        exactWeeks = Math.round(weeks);\n                    }\n                    return exactWeeks;\n                },\n\n                _hour: function(date, rule, interval) {\n                    var startTime = rule._startTime,\n                        hours = startTime.getHours();\n\n                    if (interval) {\n                        hours += interval;\n                    }\n\n                    date.setHours(hours);\n\n                    hours = hours % 24;\n                    startTime.setHours(hours);\n                    adjustDST(date, hours);\n                },\n\n                _date: function(date, rule, interval) {\n                    var hours = date.getHours();\n\n                    date.setDate(date.getDate() + interval);\n                    if (!adjustDST(date, hours)) {\n                        this._hour(date, rule);\n                    }\n                }\n            }),\n            HourlyFrequency = BaseFrequency.extend({\n                next: function(date, rule) {\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        this._hour(date, rule, 1);\n                    }\n                },\n\n                normalize: function(options) {\n                    var rule = options.rule;\n\n                    if (options.idx === 4) {\n                        rule._startTime.setHours(0);\n                        this._hour(options.date, rule);\n                    }\n                }\n            }),\n            DailyFrequency = BaseFrequency.extend({\n                next: function(date, rule) {\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        this[rule.hours ? \"_hour\" : \"_date\"](date, rule, 1);\n                    }\n                }\n            }),\n            WeeklyFrequency = DailyFrequency.extend({\n                setup: function(rule, eventStartDate) {\n                    if (!rule.weekDays) {\n                        rule.weekDays = [{\n                            day: eventStartDate.getDay(),\n                            offset: 0\n                        }];\n                    }\n                }\n            }),\n            MonthlyFrequency = BaseFrequency.extend({\n                next: function(date, rule) {\n                    var day, hours;\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        if (rule.hours) {\n                            this._hour(date, rule, 1);\n                        } else if (rule.monthDays || rule.weekDays || rule.yearDays || rule.weeks) {\n                            this._date(date, rule, 1);\n                        } else {\n                            day = date.getDate();\n                            hours = date.getHours();\n\n                            date.setMonth(date.getMonth() + 1);\n                            adjustDST(date, hours);\n\n                            while (date.getDate() !== day) {\n                                date.setDate(day);\n                                adjustDST(date, hours);\n                            }\n\n                            this._hour(date, rule);\n                        }\n                    }\n                },\n                normalize: function(options) {\n                    var rule = options.rule,\n                        date = options.date,\n                        hours = date.getHours();\n\n                    if (options.idx === 0 && !rule.monthDays && !rule.weekDays) {\n                        date.setDate(options.day);\n                        adjustDST(date, hours);\n                    } else {\n                        BaseFrequency.fn.normalize(options);\n                    }\n                },\n                setup: function(rule, eventStartDate, date) {\n                    if (!rule.monthDays && !rule.weekDays) {\n                        date.setDate(eventStartDate.getDate());\n                    }\n                }\n            }),\n            YearlyFrequency = MonthlyFrequency.extend({\n                next: function(date, rule) {\n                    var day,\n                        hours = date.getHours();\n\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        if (rule.hours) {\n                            this._hour(date, rule, 1);\n                        } else if (rule.monthDays || rule.weekDays || rule.yearDays || rule.weeks) {\n                            this._date(date, rule, 1);\n                        } else if (rule.months) {\n                            day = date.getDate();\n\n                            date.setMonth(date.getMonth() + 1);\n                            adjustDST(date, hours);\n\n                            while (date.getDate() !== day) {\n                                date.setDate(day);\n                                adjustDST(date, hours);\n                            }\n\n                            this._hour(date, rule);\n                        } else {\n                            date.setFullYear(date.getFullYear() + 1);\n                            adjustDST(date, hours);\n\n                            this._hour(date, rule);\n                        }\n                    }\n                },\n                setup: function() {}\n            }),\n            frequencies = {\n                \"hourly\": new HourlyFrequency(),\n                \"daily\": new DailyFrequency(),\n                \"weekly\": new WeeklyFrequency(),\n                \"monthly\": new MonthlyFrequency(),\n                \"yearly\": new YearlyFrequency()\n            },\n            CLICK = \"click\",\n            CHANGE = \"change\";\n\n        function intervalExcess(diff, interval) {\n            var excess;\n            if (diff !== 0 && diff < interval) {\n                excess = interval - diff;\n            } else {\n                excess = diff % interval;\n                if (excess) {\n                    excess = interval - excess;\n                }\n            }\n\n            return excess;\n        }\n\n        function dayInYear(date) {\n            var month = date.getMonth();\n            var days = leapYear(date) ? DAYS_IN_LEAPYEAR[month] : DAYS_IN_YEAR[month];\n\n            return days + date.getDate();\n        }\n\n        function weekInYear(date, weekStart) {\n            var year, days;\n\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n            adjustDST(date, 0);\n\n            year = date.getFullYear();\n\n            if (weekStart !== undefined$1) {\n                setDayOfWeek(date, weekStart, -1);\n                date.setDate(date.getDate() + 4);\n            } else {\n                date.setDate(date.getDate() + (4 - (date.getDay() || 7)));\n            }\n\n            adjustDST(date, 0);\n            days = Math.floor((date.getTime() - new Date(year, 0, 1, -6)) / 86400000);\n\n            return 1 + Math.floor(days / 7);\n        }\n\n        function weekInMonth(date, weekStart) {\n            var firstWeekDay = firstDayOfMonth(date).getDay();\n            var firstWeekLength = 7 - (firstWeekDay + 7 - (weekStart || 7)) || 7;\n\n            if (firstWeekLength < 0) {\n                firstWeekLength += 7;\n            }\n\n            return Math.ceil((date.getDate() - firstWeekLength) / 7) + 1;\n        }\n\n        function normalizeDayIndex(weekDay, weekStart) {\n            return weekDay + (weekDay < weekStart ? 7 : 0);\n        }\n\n        function normalizeOffset(date, rule, weekStart) {\n            var offset = rule.offset;\n\n            if (!offset) {\n                return weekInMonth(date, weekStart);\n            }\n\n            var lastDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n            var weeksInMonth = weekInMonth(lastDate, weekStart);\n\n            var day = normalizeDayIndex(rule.day, weekStart);\n\n            var skipFirst = day < normalizeDayIndex(new Date(date.getFullYear(), date.getMonth(), 1).getDay(), weekStart);\n            var skipLast = day > normalizeDayIndex(lastDate.getDay(), weekStart);\n\n            if (offset < 0) {\n                offset = weeksInMonth + (offset + 1 - (skipLast ? 1 : 0));\n            } else if (skipFirst) {\n                offset += 1;\n            }\n\n            weeksInMonth -= (skipLast ? 1 : 0);\n\n            if (offset < (skipFirst ? 1 : 0) || offset > weeksInMonth) {\n                return null;\n            }\n\n            return offset;\n        }\n\n        function numberOfWeeks(date, weekStart) {\n            return weekInMonth(new Date(date.getFullYear(), date.getMonth() + 1, 0), weekStart);\n        }\n\n        function isInWeek(date, rule, weekStart) {\n            return weekInMonth(date, weekStart) === normalizeOffset(date, rule, weekStart);\n        }\n\n        function ruleWeekValues(weekDays, date, weekStart) {\n            var currentDay = normalizeDayIndex(date.getDay(), weekStart);\n            var length = weekDays.length;\n            var ruleWeekOffset;\n            var weekDay, day;\n            var weekNumber;\n            var result = [];\n            var idx = 0;\n\n            for (;idx < length; idx++) {\n                weekDay = weekDays[idx];\n\n                weekNumber = weekInMonth(date, weekStart);\n                ruleWeekOffset = normalizeOffset(date, weekDay, weekStart);\n\n                if (ruleWeekOffset === null) {\n                    continue;\n                }\n\n                if (weekNumber < ruleWeekOffset) {\n                    result.push(weekDay);\n                } else if (weekNumber === ruleWeekOffset) {\n                    day = normalizeDayIndex(weekDay.day, weekStart);\n\n                    if (currentDay < day) {\n                        result.push(weekDay);\n                    } else if (currentDay === day) {\n                        return null;\n                    }\n                }\n            }\n\n            return result;\n        }\n\n        function ruleValues(rules, value, normalize) {\n            var idx = 0,\n                length = rules.length,\n                availableRules = [],\n                ruleValue;\n\n            for (; idx < length; idx++) {\n                ruleValue = rules[idx];\n\n                if (normalize) {\n                    ruleValue = normalize(ruleValue);\n                }\n\n                if (value === ruleValue) {\n                    return null;\n                } else if (value < ruleValue) {\n                    availableRules.push(ruleValue);\n                }\n            }\n\n            return availableRules;\n        }\n\n        function parseArray(list, range) {\n            var idx = 0,\n                length = list.length,\n                value;\n\n            for (; idx < length; idx++) {\n                value = parseInt(list[idx], 10);\n                if (isNaN(value) || value < range.start || value > range.end || (value === 0 && range.start < 0)) {\n                    return null;\n                }\n\n                list[idx] = value;\n            }\n\n            return list.sort(numberSortPredicate);\n        }\n\n        function parseWeekDayList(list) {\n            var idx = 0, length = list.length,\n                value, valueLength, day;\n\n            for (; idx < length; idx++) {\n                value = list[idx];\n                valueLength = value.length;\n                day = value.substring(valueLength - 2).toUpperCase();\n\n                day = WEEK_DAYS_IDX[day];\n                if (day === undefined$1) {\n                    return null;\n                }\n\n                list[idx] = {\n                    offset: parseInt(value.substring(0, valueLength - 2), 10) || 0,\n                    day: day\n                };\n            }\n            return list;\n        }\n\n        function serializeWeekDayList(list) {\n            var idx = 0, length = list.length,\n                value, valueString, result = [];\n\n            for (; idx < length; idx++) {\n                value = list[idx];\n                if (typeof value === \"string\") {\n                    valueString = value;\n                } else {\n                    valueString = \"\" + WEEK_DAYS[value.day];\n\n                    if (value.offset) {\n                        valueString = value.offset + valueString;\n                    }\n                }\n\n                result.push(valueString);\n            }\n            return result.toString();\n        }\n\n        function getMonthLength(date) {\n            var month = date.getMonth();\n\n            if (month === 1) {\n                if (new Date(date.getFullYear(), 1, 29).getMonth() === 1) {\n                    return 29;\n                }\n                return 28;\n            }\n            return MONTHS[month];\n        }\n\n        function leapYear(year) {\n            year = year.getFullYear();\n            return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n        }\n\n        function numberSortPredicate(a, b) {\n            return a - b;\n        }\n\n        function parseExceptions(exceptions, zone) {\n            var idx = 0, length, date,\n                dates = [];\n\n            if (exceptions) {\n                exceptions = exceptions.split(exceptions.indexOf(\";\") !== -1 ? \";\" : \",\");\n                length = exceptions.length;\n\n                for (; idx < length; idx++) {\n                    date = parseUTCDate(exceptions[idx], zone);\n\n                    if (date) {\n                        dates.push(date);\n                    }\n                }\n            }\n\n            return dates;\n        }\n\n        function isException(exceptions, date, zone) {\n            var dates = Array.isArray(exceptions) ? exceptions : parseExceptions(exceptions, zone),\n                dateTime = date.getTime() - date.getMilliseconds(),\n                idx = 0, length = dates.length;\n\n            for (; idx < length; idx++) {\n                if (dates[idx].getTime() === dateTime) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function toExceptionString(dates, zone) {\n            var idx = 0;\n            var length;\n            var date;\n            var result = [].concat(dates);\n\n            for (length = result.length; idx < length; idx++) {\n                date = result[idx];\n                date = kendo.timezone.convert(date, zone || date.getTimezoneOffset(), \"Etc/UTC\");\n                result[idx] = kendo.toString(date, RECURRENCE_DATE_FORMAT);\n            }\n\n            return result.join(\",\");\n        }\n\n        function startPeriodByFreq(start, rule) {\n            var date = new Date(start);\n\n            switch (rule.freq) {\n                case \"yearly\":\n                    date.setFullYear(date.getFullYear(), 0, 1);\n                    break;\n\n                case \"monthly\":\n                    date.setFullYear(date.getFullYear(), date.getMonth(), 1);\n                    break;\n\n                case \"weekly\":\n                    setDayOfWeek(date, rule.weekStart, -1);\n                    break;\n\n                default:\n                    break;\n            }\n\n            if (rule.hours) {\n                date.setHours(0);\n            }\n\n            if (rule.minutes) {\n                date.setMinutes(0);\n            }\n\n            if (rule.seconds) {\n                date.setSeconds(0);\n            }\n\n            return date;\n        }\n\n        function endPeriodByFreq(start, rule) {\n            var date = new Date(start);\n\n            switch (rule.freq) {\n                case \"yearly\":\n                    date.setFullYear(date.getFullYear(), 11, 31);\n                    break;\n\n                case \"monthly\":\n                    date.setFullYear(date.getFullYear(), date.getMonth() + 1, 0);\n                    break;\n\n                case \"weekly\":\n                    setDayOfWeek(date, rule.weekStart, -1);\n                    date.setDate(date.getDate() + 6);\n                    break;\n\n                default:\n                    break;\n            }\n\n            if (rule.hours) {\n                date.setHours(23);\n            }\n\n            if (rule.minutes) {\n                date.setMinutes(59);\n            }\n\n            if (rule.seconds) {\n                date.setSeconds(59);\n            }\n\n            return date;\n        }\n\n        function eventsByPosition(periodEvents, start, positions, until) {\n            var periodEventsLength = periodEvents.length;\n            var events = [];\n            var position;\n            var event;\n            var inPeriod;\n\n            for (var idx = 0, length = positions.length; idx < length; idx++) {\n                position = positions[idx];\n\n                if (position < 0) {\n                    position = periodEventsLength + position;\n                } else {\n                    position -= 1; //convert to zero based index\n                }\n\n                event = periodEvents[position];\n                inPeriod = until ? event.start < until : true;\n\n                if (event && event.start >= start && inPeriod) {\n                    events.push(event);\n                }\n            }\n\n            return events;\n        }\n\n        function removeExceptionDates(periodEvents, exceptionDates, zone) {\n            var events = [];\n            var event;\n\n            for (var idx = 0; idx < periodEvents.length; idx++) {\n                event = periodEvents[idx];\n                if (!isException(exceptionDates, event.start, zone)) {\n                    events.push(event);\n                }\n            }\n\n            return events;\n        }\n\n        function expand(event, start, end, zone) {\n            var rule,\n                startTime, endTime, endDate,\n                hours, minutes, seconds,\n                durationMS, startPeriod, inPeriod,\n                ruleStart, ruleEnd,\n                useEventStart, freqName,\n                exceptionDates,\n                eventStartTime,\n                eventStartMS,\n                eventStart,\n                count, freq,\n                positions,\n                currentIdx,\n                periodEvents,\n                events = [],\n                shiftedStart,\n                shiftedEnd,\n                shiftedStartTime,\n                shifterEndTime;\n\n            rule = parseRule(event.recurrenceRule, zone, { // offsets argument\n                start: (getZoneOffset(event.start, zone) - getZoneOffset(event.start, event.startTimezone || zone)) * kendo.date.MS_PER_MINUTE,\n                end: (getZoneOffset(event.end, zone) - getZoneOffset(event.end, event.endTimezone || zone)) * kendo.date.MS_PER_MINUTE\n            });\n\n            if (!rule) {\n                return [event];\n            }\n\n            positions = rule.positions;\n            currentIdx = positions ? 0 : 1;\n\n            ruleStart = rule.start;\n            ruleEnd = rule.end;\n\n            if (ruleStart || ruleEnd) {\n                event = event.clone({\n                    start: ruleStart ? new Date(ruleStart.value[0]) : undefined$1,\n                    end: ruleEnd ? new Date(ruleEnd.value[0]) : undefined$1\n                });\n            }\n\n            eventStart = event.start;\n            eventStartMS = eventStart.getTime();\n            eventStartTime = getMilliseconds(eventStart);\n\n            exceptionDates = parseExceptions(event.recurrenceException, zone);\n\n            if (!exceptionDates[0] && rule.exdates) {\n                exceptionDates = rule.exdates.value;\n                event.set(\"recurrenceException\", toExceptionString(exceptionDates, zone));\n            }\n\n            startPeriod = start = new Date(start);\n            end = new Date(end);\n\n            freqName = rule.freq;\n            freq = frequencies[freqName];\n            count = rule.count;\n\n            if (rule.until && rule.until < end) {\n                end = new Date(rule.until);\n            }\n\n            useEventStart = freqName === \"yearly\" || freqName === \"monthly\" || freqName === \"weekly\";\n\n            if (start < eventStartMS || count || rule.interval > 1 || useEventStart ||\n                 ((freqName === \"daily\" || freqName === \"hourly\") && !rule.seconds)) {\n                        start = new Date(eventStartMS);\n            } else {\n                hours = start.getHours();\n                minutes = start.getMinutes();\n                seconds = start.getSeconds();\n\n                if (!rule.hours) {\n                    hours = eventStart.getHours();\n                }\n\n                if (!rule.minutes) {\n                    minutes = eventStart.getMinutes();\n                }\n\n                if (!rule.seconds) {\n                    seconds = eventStart.getSeconds();\n                }\n\n                start.setHours(hours, minutes, seconds, eventStart.getMilliseconds());\n            }\n\n            rule._startPeriod = new Date(start);\n\n            if (positions) {\n                start = startPeriodByFreq(start, rule);\n                end = endPeriodByFreq(end, rule);\n\n                var diff = getMilliseconds(end) - getMilliseconds(start);\n                if (diff < 0) {\n                    hours = start.getHours();\n                    end.setHours(hours, start.getMinutes(), start.getSeconds(), start.getMilliseconds());\n                    kendoDate.adjustDST(end, hours);\n                }\n\n                rule._startPeriod = new Date(start);\n                rule._endPeriod = endPeriodByFreq(start, rule);\n            }\n\n            durationMS = event.duration();\n            var allDayCompensation = event.isAllDay ? 86400000 : 0;\n            rule._startTime = startTime = kendoDate.toInvariantTime(start);\n\n            if (freq.setup) {\n                freq.setup(rule, eventStart, start);\n            }\n\n            freq.limit(start, end, rule);\n\n            while (start <= end) {\n                endDate = new Date(start);\n                setTime(endDate, durationMS);\n                var inPeriodCheckEndDate = new Date(start);\n                setTime(inPeriodCheckEndDate, durationMS + allDayCompensation);\n\n                inPeriod = start >= startPeriod || inPeriodCheckEndDate > startPeriod;\n\n                if (inPeriod && !isException(exceptionDates, start, zone) || positions) {\n                    startTime = kendoDate.toUtcTime(kendoDate.getDate(start)) + getMilliseconds(rule._startTime);\n                    endTime = startTime + durationMS;\n\n                    if (eventStartMS !== start.getTime() || eventStartTime !== getMilliseconds(rule._startTime)) {\n                        var startZone = event.startTimezone || event.endTimezone;\n                        var endZone = event.endTimezone || event.startTimezone;\n\n                        if (!event.isAllDay) {\n                            if ((zone && startZone) || (!zone && !startZone)) {\n                                var startOffsetDiff = getZoneOffset(start, zone) - getZoneOffset(event.start, zone);\n                                var endOffsetDiff = getZoneOffset(endDate, zone) - getZoneOffset(event.end, zone);\n                                var startTZOffsetDiff = getZoneOffset(start, startZone) - getZoneOffset(event.start, startZone);\n                                var endTZOffsetDiff = getZoneOffset(endDate, endZone) - getZoneOffset(event.end, endZone);\n\n                                if (startOffsetDiff !== startTZOffsetDiff) {\n                                    var offsetTicksStart = (startOffsetDiff - startTZOffsetDiff) * 60000;\n                                    shiftedStart = new Date(start.getTime() - offsetTicksStart);\n                                    shiftedStartTime = startTime - offsetTicksStart;\n                                }\n\n                                if (endOffsetDiff !== endTZOffsetDiff) {\n                                    var offsetTicksEnd = (endOffsetDiff - endTZOffsetDiff) * 60000;\n                                    shiftedEnd = new Date(endDate.getTime() - offsetTicksEnd);\n                                    shifterEndTime = endTime - offsetTicksEnd;\n                                }\n                            }\n                        }\n\n\n                        events.push(event.toOccurrence({\n                            start: shiftedStart || new Date(start),\n                            end: shiftedEnd || endDate,\n                            _startTime: shiftedStartTime || startTime,\n                            _endTime: shifterEndTime || endTime\n                        }));\n\n                        shiftedStart = shiftedEnd = shiftedStartTime = shifterEndTime = null;\n                    } else {\n                        event._startTime = startTime;\n                        event._endTime = endTime;\n                        events.push(event);\n                    }\n                }\n\n                if (positions) {\n                    freq.next(start, rule);\n                    freq.limit(start, end, rule);\n\n                    if (start > rule._endPeriod) {\n                        periodEvents = eventsByPosition(events.slice(currentIdx), eventStart, positions, rule.until);\n                        periodEvents = removeExceptionDates(periodEvents, exceptionDates, zone);\n                        events = events.slice(0, currentIdx).concat(periodEvents);\n\n                        rule._endPeriod = endPeriodByFreq(start, rule);\n\n                        currentIdx = events.length;\n                    }\n\n                    if (count && count === currentIdx) {\n                        break;\n                    }\n\n                } else {\n                    if (count && count === currentIdx) {\n                        break;\n                    }\n\n                    currentIdx += 1;\n\n                    var isMissingDSTHour = isDSTMissingHour(start);\n                    freq.next(start, rule);\n\n                    if (isMissingDSTHour && rule.freq !== \"hourly\" && kendoDate.toInvariantTime(event.start).getTime() !== kendoDate.toInvariantTime(start).getTime()) {\n                        rule._startTime = startTime = new Date(start.getTime() - 3600000);\n                    }\n\n                    freq.limit(start, end, rule);\n                }\n            }\n\n            return events;\n        }\n\n        function isDSTMissingHour(date) {\n            var dateOffset = date.getTimezoneOffset();\n            var dateMinusHour = new Date(date.getTime() - 3600000);\n            var dateMinusHourOffset = dateMinusHour.getTimezoneOffset();\n\n            return dateOffset < dateMinusHourOffset;\n        }\n\n        function getZoneOffset(date, zone) {\n            return zone ? kendo.timezone.offset(date, zone) : date.getTimezoneOffset();\n        }\n\n        function parseUTCDate(value, zone) {\n            value = kendo.parseDate(value, DATE_FORMATS); //Parse UTC to local time\n\n            if (value && zone) {\n                value = timezone.apply(value, zone);\n            }\n\n            return value;\n        }\n\n        function parseDateRule(dateRule, zone) {\n            var pairs = dateRule.split(\";\");\n            var pair;\n            var property;\n            var value;\n            var tzid;\n            var valueIdx, valueLength;\n\n            for (var idx = 0, length = pairs.length; idx < length; idx++) {\n                pair = pairs[idx].split(\":\");\n                property = pair[0];\n                value = pair[1];\n\n                if (property.indexOf(\"TZID\") !== -1) {\n                    tzid = property.substring(property.indexOf(\"TZID\")).split(\"=\")[1];\n                }\n\n                if (value) {\n                    value = value.split(\",\");\n\n                    for (valueIdx = 0, valueLength = value.length; valueIdx < valueLength; valueIdx++) {\n                        value[valueIdx] = parseUTCDate(value[valueIdx], tzid || zone);\n                    }\n                }\n            }\n\n            if (value) {\n                return {\n                    value: value,\n                    tzid: tzid\n                };\n            }\n        }\n\n        function parseRule(recur, zone, offsets) {\n            var instance = {};\n            var splits, value;\n            var idx = 0, length;\n            var ruleValue = false;\n            var rule, part, parts;\n            var property, weekStart, weekDays;\n            var predicate = function(a, b) {\n                var day1 = a.day,\n                    day2 = b.day;\n\n                if (day1 < weekStart) {\n                   day1 += 7;\n                }\n\n                if (day2 < weekStart) {\n                    day2 += 7;\n                }\n\n                return day1 - day2;\n            };\n\n            if (!recur) {\n                return null;\n            }\n\n            parts = recur.split(\"\\n\");\n\n            if (!parts[1] && (recur.indexOf(\"DTSTART\") !== -1 || recur.indexOf(\"DTEND\") !== -1 || recur.indexOf(\"EXDATE\") !== -1)) {\n                parts = recur.split(\" \");\n            }\n\n            for (idx = 0, length = parts.length; idx < length; idx++) {\n                part = kendo.trim(parts[idx]);\n\n                if (part.indexOf(\"DTSTART\") !== -1) {\n                    instance.start = parseDateRule(part, zone);\n                } else if (part.indexOf(\"DTEND\") !== -1) {\n                    instance.end = parseDateRule(part, zone);\n                } else if (part.indexOf(\"EXDATE\") !== -1) {\n                    instance.exdates = parseDateRule(part, zone);\n                } else if (part.indexOf(\"RRULE\") !== -1) {\n                    rule = part.substring(6);\n                } else if (kendo.trim(part)) {\n                    rule = part;\n                }\n            }\n\n            rule = rule.split(\";\");\n\n            for (idx = 0, length = rule.length; idx < length; idx++) {\n                property = rule[idx];\n                splits = property.split(\"=\");\n                value = kendo.trim(splits[1]).split(\",\");\n\n                switch (kendo.trim(splits[0]).toUpperCase()) {\n                    case \"FREQ\":\n                        instance.freq = value[0].toLowerCase();\n                        break;\n                    case \"UNTIL\":\n                        instance.until = parseUTCDate(value[0], zone);\n                        break;\n                    case \"COUNT\":\n                        instance.count = parseInt(value[0], 10);\n                        break;\n                    case \"INTERVAL\":\n                        instance.interval = parseInt(value[0], 10);\n                        break;\n                    case \"BYSECOND\":\n                        instance.seconds = parseArray(value, { start: 0, end: 60 });\n                        ruleValue = true;\n                        break;\n                    case \"BYMINUTE\":\n                        instance.minutes = parseArray(value, { start: 0, end: 59 });\n                        ruleValue = true;\n                        break;\n                    case \"BYHOUR\":\n                        instance.hours = parseArray(value, { start: 0, end: 23 });\n                        ruleValue = true;\n                        break;\n                    case \"BYMONTHDAY\":\n                        instance.monthDays = parseArray(value, { start: -31, end: 31 });\n                        ruleValue = true;\n                        break;\n                    case \"BYYEARDAY\":\n                        instance.yearDays = parseArray(value, { start: -366, end: 366 });\n                        ruleValue = true;\n                        break;\n                    case \"BYMONTH\":\n                        instance.months = parseArray(value, { start: 1, end: 12 });\n                        ruleValue = true;\n                        break;\n                    case \"BYDAY\":\n                        instance.weekDays = weekDays = parseWeekDayList(value);\n                        ruleValue = true;\n                        break;\n                    case \"BYWEEKNO\":\n                        instance.weeks = parseArray(value, { start: -53, end: 53 });\n                        ruleValue = true;\n                        break;\n                    case \"BYSETPOS\":\n                        instance.positions = parseArray(value, { start: -366, end: 366 });\n                        break;\n                    case \"WKST\":\n                        instance.weekStart = weekStart = WEEK_DAYS_IDX[value[0]];\n                        break;\n                }\n            }\n\n            if (instance.freq === undefined$1 || (instance.count !== undefined$1 && instance.until)) {\n                return null;\n            }\n\n            if (!instance.interval) {\n                instance.interval = 1;\n            }\n\n            if (weekStart === undefined$1) {\n                instance.weekStart = weekStart = kendo.culture().calendar.firstDay;\n            }\n\n            if (weekDays) {\n                instance.weekDays = weekDays.sort(predicate);\n            }\n\n            if (instance.positions && !ruleValue) {\n                instance.positions = null;\n            }\n\n            instance._hasRuleValue = ruleValue;\n            instance.offsets = offsets;\n\n            return instance;\n        }\n\n        function serializeDateRule(dateRule, zone) {\n            var value = dateRule.value;\n            var tzid = dateRule.tzid || \"\";\n            var length = value.length;\n            var idx = 0;\n            var val;\n\n            for (; idx < length; idx++) {\n                val = value[idx];\n                val = timezone.convert(val, tzid || zone || val.getTimezoneOffset(), \"Etc/UTC\");\n                value[idx] = kendo.toString(val, \"yyyyMMddTHHmmssZ\");\n            }\n\n            if (tzid) {\n                tzid = \";TZID=\" + tzid;\n            }\n\n            return tzid + \":\" + value.join(\",\") + \" \";\n        }\n\n        function serialize(rule, zone) {\n            var weekStart = rule.weekStart;\n            var ruleString = \"FREQ=\" + rule.freq.toUpperCase();\n            var exdates = rule.exdates || \"\";\n            var start = rule.start || \"\";\n            var end = rule.end || \"\";\n            var until = rule.until;\n\n            if (weekStart === undefined$1) {\n                weekStart = kendo.culture().calendar.firstDay;\n            }\n\n            if (rule.interval > 1) {\n                ruleString += \";INTERVAL=\" + rule.interval;\n            }\n\n            if (rule.count) {\n                ruleString += \";COUNT=\" + rule.count;\n            }\n\n            if (until) {\n                until = timezone.convert(until, zone || until.getTimezoneOffset(), \"Etc/UTC\");\n\n                ruleString += \";UNTIL=\" + kendo.toString(until, \"yyyyMMddTHHmmssZ\");\n            }\n\n            if (rule.months) {\n                ruleString += \";BYMONTH=\" + rule.months;\n            }\n\n            if (rule.weeks) {\n                ruleString += \";BYWEEKNO=\" + rule.weeks;\n            }\n\n            if (rule.yearDays) {\n                ruleString += \";BYYEARDAY=\" + rule.yearDays;\n            }\n\n            if (rule.monthDays) {\n                ruleString += \";BYMONTHDAY=\" + rule.monthDays;\n            }\n\n            if (rule.weekDays) {\n                ruleString += \";BYDAY=\" + serializeWeekDayList(rule.weekDays);\n            }\n\n            if (rule.hours) {\n                ruleString += \";BYHOUR=\" + rule.hours;\n            }\n\n            if (rule.minutes) {\n                ruleString += \";BYMINUTE=\" + rule.minutes;\n            }\n\n            if (rule.seconds) {\n                ruleString += \";BYSECOND=\" + rule.seconds;\n            }\n\n            if (rule.positions) {\n                ruleString += \";BYSETPOS=\" + rule.positions;\n            }\n\n            if (weekStart !== undefined$1) {\n                ruleString += \";WKST=\" + WEEK_DAYS[weekStart];\n            }\n\n            if (start) {\n                start = \"DTSTART\" + serializeDateRule(start, zone);\n            }\n\n            if (end) {\n                end = \"DTEND\" + serializeDateRule(end, zone);\n            }\n\n            if (exdates) {\n                exdates = \"EXDATE\" + serializeDateRule(exdates, zone);\n            }\n\n            if (start || end || exdates) {\n                ruleString = start + end + exdates + \"RRULE:\" + ruleString;\n            }\n\n            return ruleString;\n        }\n\n        kendo.recurrence = {\n            rule: {\n                parse: parseRule,\n                serialize: serialize\n            },\n            expand: expand,\n            dayInYear: dayInYear,\n            weekInYear: weekInYear,\n            weekInMonth: weekInMonth,\n            numberOfWeeks: numberOfWeeks,\n            isException: isException,\n            toExceptionString: toExceptionString\n        };\n\n        var RECURRENCE_VIEW_TEMPLATE = kendo.template(({ frequency, messages, end }) =>\n           (frequency !== \"never\" ?\n                '<div class=\"k-form-field\">' +\n                    `<label id=\"recur_interval_label\" class=\"k-label k-form-label\" for=\"recur_interval\">${encode(messages.repeatEvery)}</label>` +\n                    '<div class=\"k-form-field-wrap\">' +\n                        `<input id=\"recur_interval\" class=\"k-recur-interval\" title=\"${encode(messages.repeatEvery)} ${encode(messages.interval)}\" aria-labelledby=\"recur_interval_label\">${encode(messages.interval)}` +\n                    '</div>' +\n                '</div>' : ''\n           ) +\n           (frequency === \"weekly\" ?\n                '<div class=\"k-form-field\">' +\n                    `<label class=\"k-label k-form-label\">${encode(messages.repeatOn)}</label>` +\n                    '<div class=\"k-form-field-wrap\">' +\n                        `<div class=\"k-button-group-stretched k-recur-weekday-buttons\" title=\"${encode(messages.repeatOn)}\"></div></div>` +\n                    '</div>' +\n                '</div>' : ''\n            ) +\n            (frequency === \"monthly\" ?\n                `<div class=\"k-form-field\"><label class=\"k-label k-form-label\">${encode(messages.repeatOn)}</label></div>` +\n                    '<div class=\"k-form-field-wrap\">' +\n                        '<ul class=\"k-radio-list\">' +\n                            '<li class=\"k-radio-item\">' +\n                                `<label class=\"k-radio-label\"><input class=\"k-recur-month-radio k-radio k-radio-md\" type=\"radio\" name=\"month\" value=\"monthday\" title=\"${encode(messages.repeatOn)}\" />${encode(messages.date)}:</label>` +\n                                `<input class=\"k-recur-monthday\" aria-label=\"${encode(messages.date)}\" title=\"${encode(messages.date)}\" />` +\n                            '</li>' +\n                            '<li class=\"k-radio-item\">' +\n                                `<input class=\"k-recur-month-radio k-radio k-radio-md\" type=\"radio\" name=\"month\" value=\"weekday\" aria-label=\"${encode(messages.repeatOn)} ${encode(messages.day)}\" title=\"${encode(messages.repeatOn)} ${encode(messages.day)}\" />` +\n                                `<input class=\"k-recur-weekday-offset\" title=\"${encode(messages.repeatOn)}\" ${kendo.attr(\"style-width\")}=\"8em\" />` +\n                                `<input class=\"k-recur-weekday\" title=\"${encode(messages.day)}\" ${kendo.attr(\"style-width\")}=\"8em\" />` +\n                            '</li>' +\n                        '</ul>' +\n                    '</div>' +\n                '</div>' : ''\n            ) +\n           (frequency === \"yearly\" ?\n                `<div class=\"k-form-field\"><label class=\"k-label k-form-label\">${encode(messages.repeatOn)}</label>` +\n                    '<div class=\"k-form-field-wrap\">' +\n                        '<ul class=\"k-radio-list\">' +\n                            '<li class=\"k-radio-item\">' +\n                                `<input class=\"k-recur-year-radio k-radio k-radio-md\" type=\"radio\" name=\"year\" value=\"monthday\" title=\"${encode(messages.repeatOn)} ${encode(messages.month)}\" />` +\n                                `<input class=\"k-recur-month\" aria-label=\"${encode(messages.month)}\" title=\"${encode(messages.month)}\" ${kendo.attr(\"style-width\")}=\"8em\" />` +\n                                `<input class=\"k-recur-monthday\" aria-label=\"${encode(messages.date)}\" title=\"${encode(messages.date)}\" />` +\n                            '</li>' +\n                            '<li class=\"k-radio-item\">' +\n                                `<input class=\"k-recur-year-radio k-radio k-radio-md\" type=\"radio\" name=\"year\" value=\"weekday\" title=\"${encode(messages.repeatOn)} ${encode(messages.day)}\" />` +\n                                `<input class=\"k-recur-weekday-offset\" title=\"${encode(messages.repeatOn)}\" ${kendo.attr(\"style-width\")}=\"8em\"/><input class=\"k-recur-weekday\" title=\"${encode(messages.day)}\" ${kendo.attr(\"style-width\")}=\"8em\"/>${encode(messages.of)}<input class=\"k-recur-month\" title=\"${encode(messages.of + messages.month)}\" ${kendo.attr(\"style-width\")}=\"8em\"/>` +\n                            '</li>' +\n                        '</ul>' +\n                    '</div>' +\n                '</div>' : ''\n           ) +\n           (frequency !== \"never\" ?\n                `<div class=\"k-form-field\"><label class=\"k-label k-form-label\">${encode(end.label)}</label>` +\n                    '<div class=\"k-form-field-wrap\">' +\n                        '<ul class=\"k-radio-list\">' +\n                            '<li class=\"k-radio-item\">' +\n                                `<label class=\"k-radio-label\"><input class=\"k-recur-end-never k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"never\" title=\"${encode(end.label)}\" />${encode(end.never)}</label>` +\n                            '</li>' +\n                            '<li class=\"k-radio-item\">' +\n                                `<label class=\"k-radio-label\"><input class=\"k-recur-end-count k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"count\" title=\"${encode(end.label)}\" />${encode(end.after)}</label>` +\n                                `<input class=\"k-recur-count\" aria-label=\"${encode(end.occurrence)}\" title=\"${encode(end.occurrence)}\" />${encode(end.occurrence)}` +\n                            '</li>' +\n                            '<li class=\"k-radio-item\">' +\n                                `<label class=\"k-radio-label\"><input class=\"k-recur-end-until k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"until\" title=\"${encode(end.label)}\" />${encode(end.on)}</label>` +\n                                `<input class=\"k-recur-until\" title=\"${encode(end.on)}\" aria-label=\"${encode(end.on)}\" name=\"recur-until\" />` +\n                            '</li>' +\n                        '</ul>' +\n                    '</div>' +\n                '</div>' : ''\n           )\n        );\n\n        var DAY_RULE = [\n            { day: 0, offset: 0 },\n            { day: 1, offset: 0 },\n            { day: 2, offset: 0 },\n            { day: 3, offset: 0 },\n            { day: 4, offset: 0 },\n            { day: 5, offset: 0 },\n            { day: 6, offset: 0 }\n        ];\n\n        var WEEKDAY_RULE = [\n            { day: 1, offset: 0 },\n            { day: 2, offset: 0 },\n            { day: 3, offset: 0 },\n            { day: 4, offset: 0 },\n            { day: 5, offset: 0 }\n        ];\n\n        var WEEKEND_RULE = [\n            { day: 0, offset: 0 },\n            { day: 6, offset: 0 }\n        ];\n\n        var BaseRecurrenceEditor = Widget.extend({\n            init: function(element, options) {\n                var start;\n                var that = this;\n                var frequencies = options && options.frequencies;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.wrapper = that.element;\n\n                options = that.options;\n                options.start = start = options.start || kendoDate.today();\n\n                if (frequencies) {\n                    options.frequencies = frequencies;\n                }\n\n                if (typeof start === \"string\") {\n                    options.start = kendo.parseDate(start, \"yyyyMMddTHHmmss\");\n                }\n\n                if (options.firstWeekDay === null) {\n                    options.firstWeekDay = kendo.culture().calendar.firstDay;\n                }\n\n                that._namespace = \".\" + options.name;\n            },\n\n            options: {\n                value: \"\",\n                start: \"\",\n                timezone: \"\",\n                spinners: true,\n                firstWeekDay: null,\n                frequencies: [\n                    \"never\",\n                    \"daily\",\n                    \"weekly\",\n                    \"monthly\",\n                    \"yearly\"\n                ],\n                mobile: false,\n                messages: {\n                    repeat: \"Repeat\",\n                    recurrenceEditorTitle: \"Recurrence editor\",\n                    frequencies: {\n                        never: \"Never\",\n                        hourly: \"Hourly\",\n                        daily: \"Daily\",\n                        weekly: \"Weekly\",\n                        monthly: \"Monthly\",\n                        yearly: \"Yearly\"\n                    },\n                    hourly: {\n                        repeatEvery: \"Repeat every: \",\n                        interval: \" hour(s)\"\n                    },\n                    daily: {\n                        repeatEvery: \"Repeat every: \",\n                        interval: \" day(s)\"\n                    },\n                    weekly: {\n                        interval: \" week(s)\",\n                        repeatEvery: \"Repeat every: \",\n                        repeatOn: \"Repeat on: \"\n                    },\n                    monthly: {\n                        repeatEvery: \"Repeat every: \",\n                        repeatOn: \"Repeat on: \",\n                        interval: \" month(s)\",\n                        day: \"Day \",\n                        date: \"Date\"\n                    },\n                    yearly: {\n                        repeatEvery: \"Repeat every: \",\n                        repeatOn: \"Repeat on: \",\n                        interval: \" year(s)\",\n                        of: \" of \",\n                        month: \"month\",\n                        day: \"day\",\n                        date: \"Date\"\n                    },\n                    end: {\n                        label: \"End:\",\n                        mobileLabel: \"Ends\",\n                        never: \"Never\",\n                        after: \"After \",\n                        occurrence: \" occurrence(s)\",\n                        on: \"On \"\n                    },\n                    offsetPositions: {\n                        first: \"first\",\n                        second: \"second\",\n                        third: \"third\",\n                        fourth: \"fourth\",\n                        last: \"last\"\n                    },\n                    weekdays: {\n                        day: \"day\",\n                        weekday: \"weekday\",\n                        weekend: \"weekend day\"\n                    }\n                }\n            },\n\n            events: [\"change\"],\n\n            _initInterval: function() {\n                var that = this;\n                var rule = that._value;\n\n                that._container\n                    .find(\".k-recur-interval\")\n                    .kendoNumericTextBox({\n                        spinners: that.options.spinners,\n                        value: rule.interval || 1,\n                        decimals: 0,\n                        format: \"#\",\n                        min: 1,\n                        change: function() {\n                            rule.interval = this.value();\n                            that._trigger();\n                        }\n                    });\n            },\n\n            _weekDayButtons: function(firstDay) {\n                var that = this,\n                    names = kendo.culture().calendar.days.names,\n                    abbreviated = kendo.culture().calendar.days.namesAbbr,\n                    repeatOn = that.options.messages.weekly.repeatOn,\n                    length = names.length,\n                    idx = 0,\n                    values = [],\n                    items = [];\n\n                for (; idx < length; idx++) {\n                    values.push(idx);\n                }\n\n                names = names.slice(firstDay).concat(names.slice(0, firstDay));\n                abbreviated = abbreviated.slice(firstDay).concat(abbreviated.slice(0, firstDay));\n                values = values.slice(firstDay).concat(values.slice(0, firstDay));\n\n                for (idx = 0; idx < length; idx++) {\n                    items.push({\n                        text: abbreviated[idx],\n                        attributes: {\n                            \"data-value\": values[idx],\n                            \"aria-label\": repeatOn + \" \" + names[idx]\n                        }\n                    });\n                }\n\n                if (that._container.find(\".k-recur-weekday-buttons\").length > 0) {\n                    that._weekDayButtonGroup = new ButtonGroup(that._container.find(\".k-recur-weekday-buttons\"), {\n                        items: items,\n                        selection: \"multiple\",\n                        select: function() {\n                            var rule = that._value,\n                                selectedDays = that._weekDayButtonGroup.current();\n\n                            rule.weekDays = selectedDays.map(function(i, day) {\n                                return {\n                                    day: Number(day.getAttribute(\"data-value\")),\n                                    offset: 0\n                                };\n                            });\n\n                            if (!that.options.mobile) {\n                                that._trigger();\n                            }\n                        }\n                    });\n                }\n            },\n\n            _weekDayRule: function(clear) {\n                var that = this;\n                var weekday = (that._weekDay.element || that._weekDay).val();\n                var offset = Number((that._weekDayOffset.element || that._weekDayOffset).val());\n                var weekDays = null;\n                var positions = null;\n\n                if (!clear) {\n                    if (weekday === \"day\") {\n                        weekDays = DAY_RULE;\n                        positions = offset;\n                    } else if (weekday === \"weekday\") {\n                        weekDays = WEEKDAY_RULE;\n                        positions = offset;\n                    } else if (weekday === \"weekend\") {\n                        weekDays = WEEKEND_RULE;\n                        positions = offset;\n                    } else {\n                        weekDays = [{\n                            offset: offset,\n                            day: Number(weekday)\n                        }];\n                    }\n                }\n\n                that._value.weekDays = weekDays;\n                that._value.positions = positions;\n            },\n\n            _weekDayView: function() {\n                var that = this;\n                var weekDays = that._value.weekDays;\n                var positions = that._value.positions;\n                var weekDayOffsetWidget = that._weekDayOffset;\n                var weekDayOffset;\n                var weekDayValue;\n                var length;\n                var method;\n\n                if (weekDays) {\n                    length = weekDays.length;\n\n                    if (positions) {\n                        if (length === 7) {\n                            weekDayValue = \"day\";\n                            weekDayOffset = positions;\n                        } else if (length === 5) {\n                            weekDayValue = \"weekday\";\n                            weekDayOffset = positions;\n                        } else if (length === 2) {\n                            weekDayValue = \"weekend\";\n                            weekDayOffset = positions;\n                        }\n                    }\n\n                    if (!weekDayValue) {\n                        weekDays = weekDays[0];\n                        weekDayValue = weekDays.day;\n                        weekDayOffset = weekDays.offset || \"\";\n                    }\n\n                    method = weekDayOffsetWidget.value ? \"value\" : \"val\";\n\n                    weekDayOffsetWidget[method](weekDayOffset);\n                    that._weekDay[method](weekDayValue);\n                }\n            },\n\n            _initWeekDay: function() {\n                var that = this, data;\n\n                var weekdayMessage = that.options.messages.weekdays;\n                var offsetMessage = that.options.messages.offsetPositions;\n\n                var weekDayInput = that._container.find(\".k-recur-weekday\");\n\n                var change = function() {\n                    that._weekDayRule();\n                    that._trigger();\n                };\n\n                if (weekDayInput[0]) {\n                    that._weekDayOffset = new DropDownList(that._container.find(\".k-recur-weekday-offset\"), {\n                        autoWidth: true,\n                        change: change,\n                        dataTextField: \"text\",\n                        dataValueField: \"value\",\n                        dataSource: [\n                            { text: offsetMessage.first, value: \"1\" },\n                            { text: offsetMessage.second, value: \"2\" },\n                            { text: offsetMessage.third, value: \"3\" },\n                            { text: offsetMessage.fourth, value: \"4\" },\n                            { text: offsetMessage.last, value: \"-1\" }\n                        ]\n                    });\n\n                    data = [\n                        { text: weekdayMessage.day, value: \"day\" },\n                        { text: weekdayMessage.weekday, value: \"weekday\" },\n                        { text: weekdayMessage.weekend, value: \"weekend\" }\n                    ];\n\n                    that._weekDay = new DropDownList(weekDayInput, {\n                        autoWidth: true,\n                        value: that.options.start.getDay(),\n                        change: change,\n                        dataTextField: \"text\",\n                        dataValueField: \"value\",\n                        dataSource: data.concat($.map(kendo.culture().calendar.days.names, function(dayName, idx) {\n                            return {\n                                text: dayName,\n                                value: idx\n                            };\n                        }))\n                    });\n\n                    that._weekDayView();\n                }\n            },\n\n            _initWeekDays: function() {\n                var that = this;\n                var rule = that._value;\n                var weekDayButtonGroup = that._weekDayButtonGroup;\n\n                if (weekDayButtonGroup && rule.weekDays && rule.weekDays.length) {\n                    var ruleDays = rule.weekDays,\n                        ruleDaysLength = ruleDays.length,\n                        selectors = [],\n                        i = 0,\n                        selectedWeekDayButtons;\n\n                    for (; i < ruleDaysLength; i++) {\n                        selectors.push(\"[data-value='\" + ruleDays[i].day + \"']\");\n                    }\n\n                    selectedWeekDayButtons = weekDayButtonGroup.element.find(selectors.join(\",\"));\n                    weekDayButtonGroup.select(selectedWeekDayButtons);\n                }\n            },\n\n            _initMonthDay: function() {\n                var that = this;\n                var rule = that._value;\n                var monthDayInput = that._container.find(\".k-recur-monthday\");\n\n                if (monthDayInput[0]) {\n                    that._monthDay = new kendo.ui.NumericTextBox(monthDayInput, {\n                        spinners: that.options.spinners,\n                        min: 1,\n                        max: 31,\n                        decimals: 0,\n                        format: \"#\",\n                        value: rule.monthDays ? rule.monthDays[0] : that.options.start.getDate(),\n                        change: function() {\n                            var value = this.value();\n\n                            rule.monthDays = value ? [value] : value;\n                            that._trigger();\n                        }\n                    });\n                }\n            },\n\n            _initCount: function() {\n                var that = this,\n                    input = that._container.find(\".k-recur-count\"),\n                    rule = that._value;\n\n                that._count = input.kendoNumericTextBox({\n                    spinners: that.options.spinners,\n                    value: rule.count || 1,\n                    decimals: 0,\n                    format: \"#\",\n                    min: 1,\n                    change: function() {\n                        rule.count = this.value();\n                        that._trigger();\n                    }\n                }).data(\"kendoNumericTextBox\");\n            },\n\n            _initUntil: function() {\n                var that = this,\n                    input = that._container.find(\".k-recur-until\"),\n                    start = that.options.start,\n                    rule = that._value,\n                    until = rule.until,\n                    min = until && until < start ? until : start,\n                    startInput = that.wrapper.closest(\".k-scheduler-edit-form\").find(\"[name=start]:visible\"),\n                    validDateValidationMessage = kendo.format(kendo.ui.Validator.prototype.options.messages.date, that.options.messages.end.on),\n                    dateCompareValidationMessage = kendo.ui.Validator.prototype.options.messages.dateCompare,\n                    initialValue = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 23, 59, 59);\n\n                input.attr(\"data-validDate-msg\", validDateValidationMessage);\n                input.attr(\"data-untilDateCompare-msg\", dateCompareValidationMessage);\n\n                if (startInput.length === 0) {\n                    startInput = that.wrapper.closest(\".k-scheduler-edit-form\").find(\"[name=start]\");\n                }\n\n                if (startInput.length > 0 && startInput.val()) {\n                    min = kendo.parseDate(startInput.val());\n\n                    if (initialValue < min) {\n                        initialValue = min;\n                    }\n                }\n\n                that._until = input.kendoDatePicker({\n                    min: min,\n                    value: until || initialValue,\n                    change: function() {\n                        var date = this.value();\n                        if (date) {\n                            rule.until = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59);\n                        }\n                        that._trigger();\n                    }\n                }).data(\"kendoDatePicker\");\n\n                if (startInput) {\n                    startInput.on(\"change\", function() {\n                        var untilEl = that._until.element,\n                            readonly = Boolean(untilEl.attr(\"readonly\")),\n                            enable = !(Boolean(untilEl.is(\"[disabled]\") || untilEl.parents(\"fieldset\").is(':disabled')));\n\n                        that._until.setOptions({\n                            min: startInput.val(),\n                            readonly,\n                            enable\n                        });\n                    });\n                }\n            },\n\n            _trigger: function() {\n                if (!this.options.mobile) {\n                    this.trigger(\"change\");\n                }\n            }\n        });\n\n        var RecurrenceEditor = BaseRecurrenceEditor.extend({\n            init: function(element, options) {\n                var that = this;\n\n                BaseRecurrenceEditor.fn.init.call(that, element, options);\n\n                that._initFrequency();\n\n                that._initContainer();\n\n                that.value(that.options.value);\n            },\n\n            options: {\n                name: \"RecurrenceEditor\"\n            },\n\n            events: [ \"change\" ],\n\n            destroy: function() {\n                var that = this;\n\n                that._frequency.destroy();\n\n                if (this._weekDayButtonGroup) {\n                    this._weekDayButtonGroup.destroy();\n                }\n\n                that._container.find(\"input[type=radio],input[type=checkbox]\").off(CLICK + that._namespace);\n\n                kendo.destroy(that._container);\n\n                BaseRecurrenceEditor.fn.destroy.call(that);\n            },\n\n            value: function(value) {\n                var that = this;\n                var timezone = that.options.timezone;\n                var freq, freqButton;\n\n                if (value === undefined$1) {\n                    if (!that._value.freq) {\n                        return \"\";\n                    }\n\n                    return serialize(that._value, timezone);\n                }\n\n                that._value = parseRule(value, timezone) || {};\n\n                freq = that._value.freq;\n\n                if (freq) {\n                    freqButton = that._frequency.element.find(\"[data-value='\" + freq + \"']\");\n                    that._frequency.select(freqButton);\n                } else {\n                    that._frequency.select(0);\n                }\n\n                that._initView(that._frequency.current().data(\"value\"));\n            },\n\n            _initContainer: function() {\n                var element = this.element,\n                    container = $('<div class=\"k-recur-view\" />'),\n                    editContainer = element.parent(\".k-edit-field\");\n\n                if (editContainer[0]) {\n                    container.insertAfter(editContainer);\n                } else {\n                    element.append(container);\n                }\n\n                this._container = container;\n            },\n\n            _initFrequency: function() {\n                var that = this,\n                    options = that.options,\n                    frequencies = options.frequencies,\n                    messages = options.messages.frequencies,\n                    buttonGroupElement = $('<div class=\"k-button-group-stretched k-flex-1\"/>').attr({ title: options.messages.recurrenceEditorTitle }),\n                    frequency;\n\n                frequencies = $.map(frequencies, function(frequency) {\n                    return {\n                        text: messages[frequency],\n                        attributes: { \"data-value\": frequency, \"aria-label\": options.messages.repeat + messages[frequency] }\n                    };\n                });\n\n                frequency = frequencies[0];\n                if (frequency && frequency.attributes && frequency.attributes[\"data-value\"] === \"never\") {\n                    frequency.attributes[\"data-value\"] = \"\";\n                }\n\n                that.element.append(buttonGroupElement);\n                that._frequency = new ButtonGroup(buttonGroupElement, {\n                    items: frequencies,\n                    select: function() {\n                        that._value = {};\n                        that._initView(that._frequency.current().data(\"value\"));\n                        that.trigger(\"change\");\n                    }\n                });\n            },\n\n            _initView: function(frequency) {\n                var that = this;\n                var rule = that._value;\n                var options = that.options;\n                var recurrenceViewHtml;\n\n                var data = {\n                     frequency: frequency || \"never\",\n                     firstWeekDay: options.firstWeekDay,\n                     messages: options.messages[frequency],\n                     end: options.messages.end\n                };\n\n                if (that._weekDayButtonGroup) {\n                    that._weekDayButtonGroup.destroy();\n                    that._container.find(\".k-recur-weekday-buttons\").empty();\n                    that._weekDayButtonGroup = null;\n                }\n\n                kendo.destroy(that._container);\n\n                recurrenceViewHtml = $(RECURRENCE_VIEW_TEMPLATE(data));\n                kendo.applyStylesFromKendoAttributes(recurrenceViewHtml, [\"width\"]);\n\n                that._container.html(recurrenceViewHtml);\n\n                if (!frequency) {\n                    that._value = {};\n                    return;\n                }\n\n                rule.freq = frequency;\n\n                if (frequency === \"weekly\" && !rule.weekDays) {\n                    rule.weekDays = [{\n                        day: options.start.getDay(),\n                        offset: 0\n                    }];\n                }\n\n                that._weekDayButtons(options.firstWeekDay);\n\n                that._initInterval();\n                that._initWeekDays();\n                that._initMonthDay();\n                that._initWeekDay();\n                that._initMonth();\n                that._initCount();\n                that._initUntil();\n\n                that._period();\n                that._end();\n            },\n\n            _initMonth: function() {\n                var that = this;\n                var rule = that._value;\n                var month = rule.months || [that.options.start.getMonth() + 1];\n                var monthInputs = that._container.find(\".k-recur-month\");\n                var options;\n\n                if (monthInputs[0]) {\n                    options = {\n                        autoWidth: true,\n                        change: function() {\n                            rule.months = [Number(this.value())];\n                            that.trigger(\"change\");\n                        },\n                        dataTextField: \"text\",\n                        dataValueField: \"value\",\n                        dataSource: $.map(kendo.culture().calendar.months.names, function(monthName, idx) {\n                            return {\n                                text: monthName,\n                                value: idx + 1\n                            };\n                        })\n                    };\n\n                    that._month1 = new DropDownList(monthInputs[0], options);\n                    that._month2 = new DropDownList(monthInputs[1], options);\n\n                    if (month) {\n                        month = month[0];\n                        that._month1.value(month);\n                        that._month2.value(month);\n                    }\n                }\n\n            },\n\n            _end: function() {\n                var that = this;\n                var rule = that._value;\n                var container = that._container;\n                var namespace = that._namespace;\n                var click = function(e) {\n                    that._toggleEnd(e.currentTarget.value);\n                    that.trigger(\"change\");\n                };\n                var endRule;\n\n                that._buttonNever = container.find(\".k-recur-end-never\").on(CLICK + namespace, click);\n                that._buttonCount = container.find(\".k-recur-end-count\").on(CLICK + namespace, click);\n                that._buttonUntil = container.find(\".k-recur-end-until\").on(CLICK + namespace, click);\n\n                if (rule.count) {\n                    endRule = \"count\";\n                } else if (rule.until) {\n                    endRule = \"until\";\n                }\n\n                that._toggleEnd(endRule);\n            },\n\n            _period: function() {\n                var that = this;\n                var rule = that._value;\n                var monthly = rule.freq === \"monthly\";\n\n                var toggleRule = monthly ? that._toggleMonthDay : that._toggleYear;\n\n                var selector = \".k-recur-\" + (monthly ? \"month\" : \"year\") + \"-radio\";\n                var radioButtons = that._container.find(selector);\n\n                if (!monthly && rule.freq !== \"yearly\") {\n                    return;\n                }\n\n                radioButtons.on(CLICK + that._namespace, function(e) {\n                    toggleRule.call(that, e.currentTarget.value);\n                    that.trigger(\"change\");\n                });\n\n                that._buttonMonthDay = radioButtons.eq(0);\n                that._buttonWeekDay = radioButtons.eq(1);\n\n                toggleRule.call(that, rule.weekDays ? \"weekday\" : \"monthday\");\n            },\n\n            _toggleEnd: function(endRule) {\n                var that = this;\n                var count, until;\n                var enableCount, enableUntil;\n\n                if (endRule === \"count\") {\n                    that._buttonCount.prop(\"checked\", true);\n\n                    enableCount = true;\n                    enableUntil = false;\n\n                    count = that._count.value();\n                    until = null;\n                } else if (endRule === \"until\") {\n                    that._buttonUntil.prop(\"checked\", true);\n\n                    enableCount = false;\n                    enableUntil = true;\n\n                    count = null;\n                    until = that._until.value();\n                } else {\n                    that._buttonNever.prop(\"checked\", true);\n\n                    enableCount = enableUntil = false;\n                    count = until = null;\n                }\n\n                if (that._count) {\n                    that._count.enable(enableCount);\n                }\n\n                if (that._until) {\n                    that._until.enable(enableUntil);\n                }\n\n                that._value.count = count;\n                that._value.until = until;\n            },\n\n            _toggleMonthDay: function(monthRule) {\n                var that = this;\n                var enableMonthDay = false;\n                var enableWeekDay = true;\n                var clear = false;\n                var monthDays;\n\n                if (monthRule === \"monthday\") {\n                    that._buttonMonthDay.prop(\"checked\", true);\n\n                    monthDays = [that._monthDay.value()];\n\n                    enableMonthDay = true;\n                    enableWeekDay = false;\n                    clear = true;\n                } else {\n                    that._buttonWeekDay.prop(\"checked\", true);\n                    monthDays = null;\n                }\n\n                that._weekDay.enable(enableWeekDay);\n                that._weekDayOffset.enable(enableWeekDay);\n                that._monthDay.enable(enableMonthDay);\n\n                that._value.monthDays = monthDays;\n\n                that._weekDayRule(clear);\n            },\n\n            _toggleYear: function(yearRule) {\n                var that = this;\n                var enableMonth1 = false;\n                var enableMonth2 = true;\n                var month;\n\n                if (yearRule === \"monthday\") {\n                    enableMonth1 = true;\n                    enableMonth2 = false;\n\n                    month = that._month1.value();\n                } else {\n                    month = that._month2.value();\n                }\n\n                that._month1.enable(enableMonth1);\n                that._month2.enable(enableMonth2);\n\n                that._value.months = [month];\n                that._toggleMonthDay(yearRule);\n            }\n        });\n\n        ui.plugin(RecurrenceEditor);\n\n\n        var RECURRENCE_HEADER_TEMPLATE = kendo.template(({ headerTitle }) =>\n            '<div data-role=\"content\">' +\n                '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                    '<li class=\"k-item k-listgroup-item\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${headerTitle}</span>` +\n                            '<div class=\"k-recur-pattern k-listgroup-form-field-wrapper\"></div>' +\n                        '</label>' +\n                    '</li>' +\n                    '<li class=\"k-item k-listgroup-item k-recur-view\"></li>' +\n                '</ul>' +\n            '</div>'\n        );\n\n        var RECURRENCE_REPEAT_PATTERN_TEMPLATE = kendo.template(({ frequency, messages }) =>\n            (frequency !== \"never\" ?\n                '<label class=\"k-label k-listgroup-form-row\">' +\n                    `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.repeatEvery)}</span>` +\n                    '<div class=\"k-recur-editor-wrap k-listgroup-form-field-wrapper\">' +\n                        '<input class=\"k-recur-interval\" type=\"number\" pattern=\"\\\\d*\"/>' +\n                        (messages.interval.length ? `<span class=\"k-recur-editor-text\">${encode(messages.interval)}</span>` : '') +\n                    '</div>' +\n                '</label>' : ''\n            ) +\n            (frequency === \"weekly\" ?\n                '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                    '<li class=\"k-item k-listgroup-item k-no-click\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.repeatOn)}</span>` +\n                        '</label>' +\n                    '</li>' +\n                    `<div class=\"k-button-group-stretched k-recur-weekday-buttons\" title=\"${encode(messages.repeatOn)}\">` +\n                '</ul>' : '') +\n            (frequency === \"monthly\" ?\n                '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                    '<li class=\"k-item k-listgroup-item\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.repeatBy)}</span>` +\n                            '<div class=\"k-repeat-rule k-listgroup-form-field-wrapper\"></div>' +\n                        '</label>' +\n                    '</li>' +\n                    `<li class=\"k-monthday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.day)}</span>` +\n                            `<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-monthday\" type=\"number\" aria-label=\"${encode(messages.date)}\" title=\"${encode(messages.day)}\" pattern=\"\\\\d*\"/></div>` +\n                        '</label>' +\n                    '</li>' +\n                    `<li class=\"k-weekday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.every)}</span>` +\n                            `<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday-offset\" title=\"${encode(messages.every)}\"></select></div>` +\n                        '</label>' +\n                    '</li>' +\n                    `<li class=\"k-weekday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.day)}</span>` +\n                            `<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday\" title=\"${encode(messages.day)}\"></select></div>` +\n                        '</label>' +\n                    '</li>' +\n                '</ul>' : '') +\n            (frequency === \"yearly\" ?\n                '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                    '<li class=\"k-item k-listgroup-item\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.repeatBy)}</span>` +\n                            '<div class=\"k-repeat-rule k-listgroup-form-field-wrapper\"></div>' +\n                        '</label>' +\n                    '</li>' +\n                    `<li class=\"k-monthday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.day)}</span>` +\n                            `<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-monthday\" type=\"number\" aria-label=\"${encode(messages.date)}\" title=\"${encode(messages.day)}\" pattern=\"\\\\d*\"/></div>` +\n                        '</label>' +\n                    '</li>' +\n                    `<li class=\"k-weekday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.every)}</span>` +\n                            `<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday-offset\" title=\"${encode(messages.every)}\"></select></div>` +\n                        '</label>' +\n                    '</li>' +\n                    `<li class=\"k-weekday-view k-item k-listgroup-item\" ${kendo.attr(\"style-display\")}=\"none\">` +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.day)}</span>` +\n                            `<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday\" title=\"${encode(messages.day)}\"></select></div>` +\n                        '</label>' +\n                    '</li>' +\n                    '<li class=\"k-item k-item k-listgroup-item\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.month)}</span>` +\n                            `<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-month\" title=\"${encode(messages.month)}\"></select></div>` +\n                        '</label>' +\n                    '</li>' +\n               '</ul>' : '')\n        );\n\n        var RECURRENCE_END_PATTERN_TEMPLATE = kendo.template(({ endPattern, messages }) => {\n            if (endPattern === \"count\") {\n                return '<label class=\"k-label k-listgroup-form-row\">' +\n                    `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.after)}</span>` +\n                    `<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-count\" aria-label=\"${encode(messages.occurrence)}\" type=\"number\" pattern=\"\\\\d*\" /></div>` +\n                '</label>';\n            } else if (endPattern === \"until\") {\n                return '<label class=\"k-label k-listgroup-form-row\">' +\n                    `<span class=\"k-item-title k-listgroup-form-field-label\">${encode(messages.on)}</span>` +\n                    `<div class=\"k-listgroup-form-field-wrapper\"><input type=\"date\" class=\"k-recur-until\" aria-label=\"${encode(messages.on)}\" name=\"recur-until\"/></div>` +\n                '</label>';\n            }\n        });\n\n        var RECURRENCE_GROUP_BUTTON_TEMPLATE = kendo.template(({ dataSource, value }) =>\n            '<select class=\"k-scheduler-select\">' +\n                dataSource.map((item) => `<option value=\"${item.value}\" ${value === item.value ? 'selected' : ''}>${encode(item.text)}</option>`).join('') +\n            '</select>'\n        );\n\n        var MobileRecurrenceEditor = BaseRecurrenceEditor.extend({\n            init: function(element, options) {\n                var that = this;\n\n                BaseRecurrenceEditor.fn.init.call(that, element, options);\n\n                options = that.options;\n\n                that._optionTemplate = kendo.template(({ value, text }) => `<option value=\"${encode(value)}\">${encode(text)}</option>`);\n\n                that.value(options.value);\n\n                that._pane = options.pane || that.wrapper.closest(\"[data-role=pane]\").data(\"kendoPane\");\n\n                that._initRepeatButton();\n\n                that._initParentRepeatEnd();\n\n                that._defaultValue = that._value;\n            },\n\n            options: {\n                name: \"MobileRecurrenceEditor\",\n                animations: {\n                    left: \"slide\",\n                    right: \"slide:right\"\n                },\n                mobile: true,\n                messages: {\n                    cancel: \"Cancel\",\n                    update: \"Save\",\n                    endTitle: \"Repeat ends\",\n                    repeatTitle: \"Repeat pattern\",\n                    headerTitle: \"Repeat event\",\n                    end: {\n                        patterns: {\n                            never: \"Never\",\n                            after: \"After...\",\n                            on: \"On...\"\n                        },\n                        never: \"Never\",\n                        after: \"End repeat after\",\n                        on: \"End repeat on\"\n                    },\n                    daily: {\n                        interval: \"\"\n                    },\n                    hourly: {\n                        interval: \"\"\n                    },\n                    weekly: {\n                        interval: \"\"\n                    },\n                    monthly: {\n                        interval: \"\",\n                        repeatBy: \"Repeat by: \",\n                        dayOfMonth: \"Day of the month\",\n                        dayOfWeek: \"Day of the week\",\n                        repeatEvery: \"Repeat every\",\n                        every: \"Every\",\n                        day: \"Day \"\n                    },\n                    yearly: {\n                        interval: \"\",\n                        repeatBy: \"Repeat by: \",\n                        dayOfMonth: \"Day of the month\",\n                        dayOfWeek: \"Day of the week\",\n                        repeatEvery: \"Repeat every: \",\n                        every: \"Every\",\n                        month: \"Month\",\n                        day: \"Day\"\n                    }\n                }\n            },\n\n            events: [ \"change\" ],\n\n            value: function(value) {\n                var that = this;\n                var timezone = that.options.timezone;\n\n                if (value === undefined$1) {\n                    if (!that._value.freq) {\n                        return \"\";\n                    }\n\n                    return serialize(that._value, timezone);\n                }\n\n                that._value = parseRule(value, timezone) || {};\n            },\n\n            destroy: function() {\n                this._destroyView();\n\n                kendo.destroy(this._endFields);\n\n                this.element.off(CLICK + this._namespace);\n\n                BaseRecurrenceEditor.fn.destroy.call(this);\n            },\n\n            _initInterval: function() {\n                var that = this;\n                var rule = that._value;\n\n                that._container.find(\".k-recur-interval\")\n                    .val(that._value.interval || 1)\n                    .on(CHANGE + that._namespace, function(e) {\n                        rule.interval = e.target.value;\n                        that._trigger();\n                    });\n            },\n\n            _initRepeatButton: function() {\n                var that = this;\n                var freq = that.options.messages.frequencies[this._value.freq || \"never\"];\n\n                that._chevronButton = $(kendo.ui.icon(\"chevron-right\"));\n                that._repeatValue = $('<span class=\"\">' + freq + '</span>');\n\n                that.element.append(that._repeatValue).append(that._chevronButton);\n\n                that.element.parents(\"li.k-item\").on(CLICK + that._namespace, function(e) {\n                    e.preventDefault();\n                    that._createView(\"repeat\");\n                    that._pane.navigate(that._view, that.options.animations.left);\n                });\n            },\n\n            _endLiItem: function() {\n                var that = this;\n                return '<li class=\"k-item k-listgroup-item\"><label class=\"k-label k-listgroup-form-row\"><span class=\"k-item-title k-listgroup-form-field-label\">' + that.options.messages.end.mobileLabel + '</span></label></li>';\n            },\n\n            _initParentRepeatEnd: function() {\n                var that = this;\n\n                var endLabelField = $(that._endLiItem()).insertAfter(that.element.parents(\"li.k-item\"));\n\n                var endEditField = $('<div class=\"k-scheduler-recur-end-wrap k-listgroup-form-field-wrapper\"><span class=\"k-scheduler-recur-end\"></span></div>')\n                    .appendTo(endLabelField.find(\".k-label\"));\n\n                endLabelField.on(CLICK + that._namespace, function(e) {\n                    e.preventDefault();\n                    that._navigateToView(\"repeat\");\n                });\n\n                that._endParentLabelField = endLabelField.toggle(!!that._value.freq);\n                that._endParentEndButton = endEditField.find(\".k-scheduler-recur-end\").text(that._endText());\n            },\n\n            _initRepeatEnd: function() {\n                var that = this;\n\n                var endLabelField = $(that._endLiItem()).insertAfter(that._container);\n\n                var endEditField = $(`<div class=\"k-scheduler-recur-end-wrap k-listgroup-form-field-wrapper\"><span class=\"k-scheduler-recur-end\"></span>${kendo.ui.icon(\"chevron-right\")}</div>`)\n                    .appendTo(endLabelField.find(\".k-label\"));\n\n                endLabelField.on(CLICK + that._namespace, function(e) {\n                    e.preventDefault();\n                    that._navigateToView(\"end\");\n                });\n\n                that._endLabelField = endLabelField.toggleClass(\"k-disabled\", !that._value.freq);\n                that._endButton = endEditField.find(\".k-scheduler-recur-end\").text(that._endText());\n            },\n\n            _navigateToView: function(viewName) {\n                var that = this;\n                that._createView(viewName);\n                that._pane.navigate(that._view, that.options.animations.left);\n            },\n\n            _endText: function() {\n                var rule = this._value;\n                var messages = this.options.messages.end;\n\n                var text = messages.never;\n\n                if (rule.count) {\n                    text = kendo.format(\"{0} {1}\", messages.after, rule.count);\n                } else if (rule.until) {\n                    text = kendo.format(\"{0} {1:d}\", messages.on, rule.until);\n                }\n\n                return text;\n            },\n\n            _initFrequency: function() {\n                var that = this;\n                var frequencyMessages = that.options.messages.frequencies;\n\n                var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                    dataSource: $.map(this.options.frequencies, function(frequency) {\n                        return {\n                            text: frequencyMessages[frequency],\n                            value: frequency !== \"never\" ? frequency : \"\"\n                        };\n                    }),\n                    value: that._value.freq || \"\",\n                    ns: kendo.ns\n                });\n\n                that._view.element\n                    .find(\".k-recur-pattern\")\n                    .append(html);\n\n                that._view.element.find(\".k-scheduler-select\")\n                    .on(CHANGE + that._namespace, function(e) {\n                        var value = e.target.value;\n                        that._value = { freq: value };\n                        that._defaultValue = $.extend({}, that._value);\n                        that._initRepeatView();\n                        that._endButton.text(that._endText());\n                        that._endParentEndButton.text(that._endText());\n                    });\n            },\n\n            _initEndNavigation: function() {\n                var that = this;\n                var endMessages = that.options.messages.end.patterns;\n                var rule = that._value;\n                var value = \"\";\n\n                if (rule.count) {\n                    value = \"count\";\n                } else if (rule.until) {\n                    value = \"until\";\n                }\n\n                var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                    dataSource: [\n                        { text: endMessages.never, value: \"\" },\n                        { text: endMessages.after, value: \"count\" },\n                        { text: endMessages.on, value: \"until\" }\n                    ],\n                    value: value,\n                    ns: kendo.ns\n                });\n\n                that._view.element\n                    .find(\".k-recur-pattern\")\n                    .append(html);\n\n                that._view.element.find(\".k-scheduler-select\")\n                    .on(CHANGE + that._namespace, function(e) {\n                        var value = e.target.value;\n                        var count = null;\n                        var until = null;\n\n                        that._initEndView(value);\n\n                        if (that._count.length) {\n                            count = that._count.val();\n                            until = null;\n                        } else if (that._until.length) {\n                            count = null;\n                            until = that._until.val ? kendo.parseDate(that._until.val(), \"yyyy-MM-dd\") : that._until.value();\n                        }\n\n                        rule.count = count;\n                        rule.until = until;\n                    });\n            },\n\n            _createView: function(viewType) {\n                var that = this;\n                var options = that.options;\n                var messages = options.messages;\n                var headerTitle = messages[viewType === \"repeat\" ? \"repeatTitle\" : \"endTitle\"];\n\n                var html = '<div data-role=\"view\" class=\"k-popup-edit-form k-scheduler-edit-form\" id=\"recurrence\">' +\n                           '<div data-role=\"header\" class=\"k-header\">' +\n                               '<a href=\"#\" class=\"k-header-cancel k-scheduler-cancel k-link\" title=\"' + messages.cancel + '\"' +\n                               `aria-label=\"${messages.cancel}\">${kendo.ui.icon(\"chevron-left\")}</a>` +\n                                   messages.headerTitle +\n                               '<a href=\"#\" class=\"k-header-done k-scheduler-update k-link\" title=\"' + messages.update + '\" ' +\n                               `aria-label=\"${messages.update}\">${kendo.ui.icon(\"check\")}</a>` +\n                           '</div>';\n\n                var returnViewId = that._pane.view().id;\n\n                that._view = that._pane.append(html + RECURRENCE_HEADER_TEMPLATE({ headerTitle: headerTitle }));\n\n                that._view.element.on(CLICK + that._namespace, \"a.k-scheduler-cancel, a.k-scheduler-update\", function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    if ($(this).hasClass(\"k-scheduler-update\")) {\n                        that.trigger(\"change\");\n                        that._defaultValue = $.extend({}, that._value);\n                    } else {\n                        that._value = that._defaultValue;\n                    }\n\n                    var frequency = that._value.freq;\n\n                    that._endParentEndButton.text(that._endText());\n                    that._endParentLabelField.toggle(!!frequency && frequency !== \"never\");\n                    that._endButton.text(that._endText());\n\n                    that._repeatValue.text(messages.frequencies[frequency || \"never\"]);\n\n                    that._pane.one(\"viewShow\", function() {\n                        that._destroyView();\n                    });\n\n                    that._pane.navigate(returnViewId, that.options.animations.right);\n                });\n\n                that._container = that._view.element.find(\".k-recur-view\");\n\n                if (viewType === \"repeat\") {\n                    that._initFrequency();\n                    that._initRepeatView();\n                    that._initRepeatEnd();\n                } else {\n                    that._initEndNavigation();\n                    that._initEndView();\n                }\n            },\n\n            _destroyView: function() {\n                if (this._view) {\n\n                    this._view.destroy();\n                    this._view.element.remove();\n                    this._container = null;\n                }\n\n\n                this._view = null;\n            },\n\n            _initRepeatView: function() {\n                var that = this;\n                var frequency = that._value.freq || \"never\";\n\n                var data = {\n                     frequency: frequency,\n                     firstWeekDay: that.options.firstWeekDay,\n                     messages: that.options.messages[frequency]\n                };\n\n                var html = RECURRENCE_REPEAT_PATTERN_TEMPLATE(data);\n                var $html = $(html);\n                kendo.applyStylesFromKendoAttributes($html, [\"display\"]);\n\n                var container = that._container = that._container || this._pane.view().content.find(\"li.k-recur-view\");\n                var rule = that._value;\n\n                if (that._endLabelField) {\n                    that._endLabelField.toggleClass(\"k-disabled\", frequency === \"never\");\n                }\n\n                kendo.destroy(container);\n                container.html($html);\n\n                if (!html) {\n                    that._value = {};\n                    container.hide();\n                    return;\n                } else {\n                    container.show();\n                }\n\n                if (frequency === \"weekly\" && !rule.weekDays) {\n                     rule.weekDays = [{\n                        day: that.options.start.getDay(),\n                        offset: 0\n                     }];\n                }\n\n                that._weekDayButtons(that.options.firstWeekDay);\n\n                that._initInterval();\n                that._initMonthDay();\n                that._initWeekDays();\n                that._initWeekDay();\n                that._initMonth();\n\n                that._period();\n            },\n\n            _initMonthDay: function() {\n                var that = this;\n                var rule = that._value;\n                var monthDayInput = that._monthDay = that._container.find(\".k-recur-monthday\");\n\n                monthDayInput.attr({\n                    min: 1,\n                    max: 31\n                })\n                .val(rule.monthDays ? rule.monthDays[0] : that.options.start.getDate())\n                .on(CHANGE + that._namespace, function(e) {\n                    rule.count = e.target.value;\n                    that._trigger();\n                });\n            },\n\n            _initCount: function() {\n                var that = this,\n                    input = that._count = that._container.find(\".k-recur-count\"),\n                    rule = that._value;\n\n                input.val(rule.count || 1)\n                    .on(CHANGE + that._namespace, function(ev) {\n                        rule.count = ev.target.value;\n                        that._trigger();\n                    });\n            },\n\n            _initEndView: function(endPattern) {\n                var that = this;\n                var rule = that._value;\n\n                if (endPattern === undefined$1) {\n                    if (rule.count) {\n                        endPattern = \"count\";\n                    } else if (rule.until) {\n                        endPattern = \"until\";\n                    }\n                }\n\n                var data = {\n                     endPattern: endPattern,\n                     messages: that.options.messages.end\n                };\n\n                kendo.destroy(that._container);\n                that._container.html(RECURRENCE_END_PATTERN_TEMPLATE(data));\n\n                that._initCount();\n                that._initUntil();\n            },\n\n            _initWeekDay: function() {\n                var that = this, data;\n\n                var weekdayMessage = that.options.messages.weekdays;\n                var offsetMessage = that.options.messages.offsetPositions;\n\n                var weekDaySelect = that._container.find(\".k-recur-weekday\");\n\n                var change = function() {\n                    that._weekDayRule();\n                    that.trigger(\"change\");\n                };\n\n                if (weekDaySelect[0]) {\n                    that._weekDayOffset = that._container.find(\".k-recur-weekday-offset\")\n                                              .html(that._options([\n                                                { text: offsetMessage.first, value: \"1\" },\n                                                { text: offsetMessage.second, value: \"2\" },\n                                                { text: offsetMessage.third, value: \"3\" },\n                                                { text: offsetMessage.fourth, value: \"4\" },\n                                                { text: offsetMessage.last, value: \"-1\" }\n                                              ]))\n                                              .on(\"change\", change);\n\n                    data = [\n                        { text: weekdayMessage.day, value: \"day\" },\n                        { text: weekdayMessage.weekday, value: \"weekday\" },\n                        { text: weekdayMessage.weekend, value: \"weekend\" }\n                    ];\n\n                    data = data.concat($.map(kendo.culture().calendar.days.names, function(dayName, idx) {\n                        return {\n                            text: dayName,\n                            value: idx\n                        };\n                    }));\n\n                    that._weekDay = weekDaySelect.html(that._options(data))\n                                                 .on(\"change\", change)\n                                                 .val(that.options.start.getDay());\n\n                    that._weekDayView();\n                }\n            },\n\n            _initMonth: function() {\n                var that = this;\n                var rule = that._value;\n                var start = that.options.start;\n                var month = rule.months || [start.getMonth() + 1];\n                var monthSelect = that._container.find(\".k-recur-month\");\n                var monthNames = kendo.culture().calendar.months.names;\n\n                if (monthSelect[0]) {\n                    var data = $.map(monthNames, function(monthName, idx) {\n                        return {\n                            text: monthName,\n                            value: idx + 1\n                        };\n                    });\n\n                    monthSelect.html(that._options(data))\n                               .on(\"change\", function() {\n                                   rule.months = [Number(this.value)];\n                               });\n\n                    that._monthSelect = monthSelect;\n\n                    if (month) {\n                        monthSelect.val(month[0]);\n                    }\n                }\n\n            },\n\n            _period: function() {\n                var that = this;\n                var rule = that._value;\n                var container = that._container;\n                var messages = that.options.messages[rule.freq];\n                var repeatRuleGroupButton = container.find(\".k-repeat-rule\");\n                var weekDayView = container.find(\".k-weekday-view\");\n                var monthDayView = container.find(\".k-monthday-view\");\n\n                if (repeatRuleGroupButton[0]) {\n                    var currentValue = rule.weekDays ? \"weekday\" : \"monthday\";\n\n                    var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                        value: currentValue,\n                        dataSource: [\n                            { text: messages.dayOfMonth, value: \"monthday\" },\n                            { text: messages.dayOfWeek, value: \"weekday\" }\n                        ],\n                        ns: kendo.ns\n                    });\n\n                    var init = function(val) {\n                        var weekDayName = that._weekDay.val();\n                        var weekDayOffset = that._weekDayOffset.val();\n                        var monthDay = that._monthDay.val();\n                        var month = that._monthSelect ? that._monthSelect.val() : null;\n\n                        if (val === \"monthday\") {\n                            rule.weekDays = null;\n                            rule.monthDays = monthDay ? [monthDay] : monthDay;\n                            rule.months = month ? [Number(month)] : month;\n\n                            weekDayView.hide();\n                            monthDayView.show();\n                        } else {\n                            rule.monthDays = null;\n                            rule.months = month ? [Number(month)] : month;\n\n                            rule.weekDays = [{\n                                offset: Number(weekDayOffset),\n                                day: Number(weekDayName)\n                            }];\n\n                            weekDayView.show();\n                            monthDayView.hide();\n                        }\n                    };\n\n                    repeatRuleGroupButton\n                        .append(html);\n\n                    repeatRuleGroupButton.find(\".k-scheduler-select\")\n                        .on(CHANGE + that._namespace, function(e) {\n                            init(e.target.value);\n                        });\n\n                    init(currentValue);\n                }\n            },\n\n            _initUntil: function() {\n                var that = this;\n                var input = that._container.find(\".k-recur-until\");\n                var start = that.options.start;\n                var rule = that._value;\n                var until = rule.until;\n                var min = until && until < start ? until : start;\n                var validDateValidationMessage = kendo.format(kendo.ui.Validator.prototype.options.messages.date, that.options.messages.end.on);\n                var dateCompareValidationMessage = kendo.ui.Validator.prototype.options.messages.dateCompare;\n\n                input.attr(\"data-validDate-msg\", validDateValidationMessage);\n                input.attr(\"data-untilDateCompare-msg\", dateCompareValidationMessage);\n\n                if (kendo.support.input.date) {\n                    that._until = input.attr(\"min\", kendo.toString(min, \"yyyy-MM-dd\"))\n                                       .val(kendo.toString(until || start, \"yyyy-MM-dd\"))\n                                       .on(\"change\", function() {\n                                            var date = kendo.parseDate(this.value, \"yyyy-MM-dd\");\n                                            if (date) {\n                                                rule.until = date;\n                                            }\n                                            that._trigger();\n                                       });\n                } else {\n                    that._until = input.kendoDatePicker({\n                        min: min,\n                        value: until || start,\n                        change: function() {\n                            var date = this.value();\n                            if (date) {\n                                rule.until = date;\n                            }\n                            that._trigger();\n                        }\n                    }).data(\"kendoDatePicker\");\n                }\n            },\n\n            _options: function(data, optionLabel) {\n                var idx = 0;\n                var html = \"\";\n                var length = data.length;\n                var template = this._optionTemplate;\n\n                if (optionLabel) {\n                    html += template({ value: \"\", text: optionLabel });\n                }\n\n                for (; idx < length; idx++) {\n                    html += template(data[idx]);\n                }\n\n                return html;\n            }\n        });\n\n        ui.plugin(MobileRecurrenceEditor);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}