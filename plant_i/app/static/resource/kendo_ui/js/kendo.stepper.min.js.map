{"version":3,"sources":["raw-js/kendo.stepper.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendostepper","js","this","$","undefined$1","kendo","window","Widget","ui","keys","extend","encode","htmlEncode","STEPPER","CLICK","ACTIVATE","SELECT","DOT","SPACE","VERTICAL","TABINDEX","ARIA_CURRENT","ARIA_DISABLED","ARIA_INVALID","stepStyles","stepperStyles","Step","Class","init","options","_render","label","icon","successIcon","iconTemplate","enabled","error","selected","isFirstStep","isLastStep","indicatorVisible","labelVisible","index","previous","selectable","_indicatorTemplate","indicatorContent","iconClass","_labelTemplate","deselect","_link","_stepClasses","enable","value","select","getEnabled","getIndex","setPrevious","getSelectable","getSelected","setValid","valid","_indicator","stepIndicator","addClass","attr","append","template","element","find","_label","stepLabel","empty","_linkAttributes","link","removeAttr","stepLink","stepClasses","removeClass","Stepper","that","fn","call","_indicatorAndLabel","_wrapper","steps","length","_processSteps","_progressBar","_attachEvents","_resizeHandler","onResize","resize","orientation","linear","indicator","selectOnFocus","name","events","destroy","progressBar","unbindResize","wrapper","off","setOptions","_addStepList","stepsOptions","forEach","step","idx","insertAt","stepOptions","selectedStep","isNaN","splice","_createSteps","_renderSteps","_resetProgressBar","_calculateDimensions","next","_steps","selectedIndex","_select","removeAt","newSelected","newSelectedIndex","stepIndex","Number","_stepList","on","_selectClickHandler","bind","_wrapperClickHandler","_focusout","_keydown","numberOfSteps","stepList","stepWidth","width","stepHeight","height","progressElement","margin","style","css","support","isRtl","_createStep","stepOpt","_selectablePreviousState","push","e","get","contains","relatedTarget","setTimeout","_leaveStepper","_focusStep","newStep","focusedStep","allStepLinks","focus","_focusNextStep","nextStep","document","activeElement","closest","_focusPreviousStep","previousStep","prev","_focusFirstStep","firstStep","_focusLastStep","lastStep","keyCode","focusedStepIndex","stepsCount","TAB","shiftKey","preventDefault","_tabKey","_navKeys","ENTER","SPACEBAR","_selectHandler","_navKeysSelect","_navKeysFocus","rtl","DOWN","RIGHT","UP","LEFT","HOME","END","targetStep","_selectHandlerOnKey","progressBarOptions","_progressOptions","kendoProgressBar","getKendoProgressBar","max","showStatus","reverse","newOptions","stepsList","_resetStep","i","forward","min","Math","stepElement","target","_preventWrapperClick","currentStep","trigger","sender","originalEvent","shift","focusedStepElement","parent","stepper","plugin","jQuery"],"mappings":"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","file":"kendo.stepper.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.progressbar.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.progressbar', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendostepper = global.kendostepper || {}, global.kendostepper.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"stepper\",\n        name: \"Stepper\",\n        category: \"web\",\n        description: \"The Stepper widget displays navigation steps.\",\n        depends: [ \"core\", \"progressbar\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            keys = kendo.keys,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n\n            STEPPER = \".kendoStepper\",\n\n            CLICK = \"click\",\n            ACTIVATE = \"activate\",\n            SELECT = \"select\",\n            KEYDOWN = \"keydown\",\n            FOCUSOUT = \"focusout\",\n\n            DOT = \".\",\n            SPACE = \" \",\n            VERTICAL = \"vertical\",\n            TABINDEX = \"tabindex\",\n\n            ARIA_CURRENT = \"aria-current\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_INVALID = \"aria-invalid\",\n            ARIA_HIDDEN = \"aria-hidden\";\n\n        var stepStyles = {\n            step: \"k-step\",\n            firstStep: \"k-step-first\",\n            lastStep: \"k-step-last\",\n            doneStep: \"k-step-done\",\n            successStep: \"k-step-success\",\n            errorStep: \"k-step-error\",\n            currentStep: \"k-step-current\",\n            focusStep: \"k-focus\",\n            disabledStep: \"k-disabled\",\n            stepLink: \"k-step-link\",\n            stepIndicator: \"k-step-indicator\",\n            stepLabel: \"k-step-label\"\n        };\n\n        var stepperStyles = {\n            widget: \"k-stepper\",\n            stepperLinear: \"k-stepper-linear\",\n            stepList: \"k-step-list\",\n            stepListHorizontal: \"k-step-list-horizontal\",\n            stepListVertical: \"k-step-list-vertical\"\n        };\n\n        var Step = kendo.Class.extend({\n            init: function(options) {\n                this.options = extend({}, this.options, options);\n                this._render();\n            },\n\n            options: {\n                label: \"\",\n                icon: \"\",\n                successIcon: \"\",\n                iconTemplate: null,\n                enabled: true,\n                error: false,\n                selected: false,\n                isFirstStep: false,\n                isLastStep: false,\n                indicatorVisible: true,\n                labelVisible: true,\n                index: 0,\n                previous: false,\n                selectable: true\n            },\n\n            _indicatorTemplate: ({ successIcon, index, icon, previous, error }) => {\n                let indicatorContent;\n                if (successIcon && previous && !error) {\n                    indicatorContent = kendo.ui.icon({ icon: encode(successIcon), iconClass: \"k-step-indicator-icon\" });\n                } else if (icon) {\n                    indicatorContent = kendo.ui.icon({ icon: encode(icon), iconClass: \"k-step-indicator-icon\" });\n                } else if (previous && !error) {\n                    indicatorContent = kendo.ui.icon({ icon: \"check\", iconClass: \"k-step-indicator-icon\" });\n                } else {\n                    indicatorContent = `<span class=\"k-step-indicator-text\">${encode(index + 1)}</span>`;\n                }\n\n                return '<span class=\"k-step-indicator\" aria-hidden=\"true\">' + indicatorContent + '</span>';\n            },\n\n            _labelTemplate: ({ label, indicatorVisible, previous, error }) =>\n            '<span class=\"k-step-label\">' +\n                '<span class=\"k-step-text\">' +\n                    encode(label) +\n                '</span>' +\n                ' ' +\n                ((error || (!indicatorVisible && !error && previous)) ?\n                    kendo.ui.icon($('<span aria-hidden=\"true\"></span>'), {\n                        icon: error ? \"warning-circle\" : \"check-circle\"\n                    })\n                : '') +\n            '</span>',\n\n            deselect: function() {\n                this.options.selected = false;\n                this._link();\n                this._stepClasses();\n            },\n\n            enable: function(value) {\n                if (this.options.enabled !== value) {\n                    this.options.enabled = value;\n                    this.options.selectable = value;\n                    this._link();\n                    this._stepClasses();\n                }\n            },\n\n            select: function() {\n                this.options.selected = true;\n                this._link();\n                this._stepClasses();\n            },\n\n            getEnabled: function() {\n                return this.options.enabled;\n            },\n\n            getIndex: function() {\n                return this.options.index;\n            },\n\n            setPrevious: function(previous) {\n                this.options.previous = previous;\n                this._link();\n                this._stepClasses();\n            },\n\n            getSelectable: function() {\n                return this.options.selectable;\n            },\n\n            getSelected: function() {\n                return this.options.selected;\n            },\n\n            setValid: function(valid) {\n                if (this.options.error === valid) {\n                    this.options.error = !valid;\n                    this._link();\n                    this._stepClasses();\n                }\n            },\n\n            _indicator: function() {\n                var options = this.options,\n                    stepIndicator;\n\n                if (!!options.iconTemplate) {\n                    stepIndicator = $(\"<span>\").addClass(stepStyles.stepIndicator).attr(ARIA_HIDDEN, \"true\");\n                    stepIndicator.append(kendo.template(options.iconTemplate)(options));\n                } else {\n                    stepIndicator = kendo.template(this._indicatorTemplate)(options);\n                }\n\n                this.element.find(DOT + stepStyles.stepLink).append(stepIndicator);\n            },\n\n            _label: function() {\n                var stepLabel = kendo.template(this._labelTemplate)(this.options);\n                this.element.find(DOT + stepStyles.stepLink).append(stepLabel);\n            },\n\n            _link: function() {\n                var options = this.options;\n\n                this.element.find(DOT + stepStyles.stepLink).empty();\n                this._linkAttributes();\n\n                if (options.indicatorVisible) {\n                    this._indicator();\n                }\n                if (options.labelVisible) {\n                    this._label();\n                }\n            },\n\n            _linkAttributes: function() {\n                var options = this.options,\n                    link = this.element.find(DOT + stepStyles.stepLink);\n\n                link.removeAttr(ARIA_DISABLED + SPACE + ARIA_INVALID + SPACE + ARIA_CURRENT + SPACE + TABINDEX);\n\n                if (!options.selected) {\n                    link.attr(TABINDEX, \"-1\");\n                } else {\n                    link.attr(ARIA_CURRENT, \"step\");\n                }\n                if (!options.enabled || !options.selectable) {\n                    link.attr(ARIA_DISABLED, \"true\");\n                }\n                if (options.error) {\n                    link.attr(ARIA_INVALID, \"true\");\n                }\n            },\n\n            _render: function() {\n                var stepLink = $(\"<a href='#'>\").addClass(stepStyles.stepLink).attr(\"title\", this.options.label);\n\n                this.element = $(\"<li>\").append(stepLink);\n\n                this._link();\n                this._stepClasses();\n            },\n\n            _stepClasses: function() {\n                var options = this.options,\n                    stepClasses = stepStyles.step;\n\n                if (options.isFirstStep) {\n                    stepClasses += (SPACE + stepStyles.firstStep);\n                }\n                if (options.isLastStep) {\n                    stepClasses += (SPACE + stepStyles.lastStep);\n                }\n                if (!options.enabled) {\n                    stepClasses += (SPACE + stepStyles.disabledStep);\n                }\n                if (options.error) {\n                    stepClasses += (SPACE + stepStyles.errorStep);\n                }\n                if (options.previous) {\n                    stepClasses += (SPACE + stepStyles.doneStep);\n                    if (!options.error) {\n                        stepClasses += (SPACE + stepStyles.successStep);\n                    }\n                } else if (options.selected) {\n                    stepClasses += (SPACE + stepStyles.currentStep);\n                    stepClasses += (SPACE + stepStyles.focusStep);\n                }\n\n                this.element.removeClass().addClass(stepClasses);\n            }\n        });\n\n        var Stepper = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                Widget.fn.init.call(that, element, options);\n\n                that._indicatorAndLabel();\n\n                that._wrapper();\n\n                if (options.steps && options.steps.length) {\n                    that._processSteps(options.steps);\n                    that._progressBar();\n                }\n\n                that._attachEvents();\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize();\n                });\n            },\n\n            options: {\n                orientation: \"horizontal\",\n                linear: true,\n                indicator: true,\n                label: true,\n                selectOnFocus: false,\n                steps: null,\n                name: \"Stepper\"\n            },\n\n            events: [ ACTIVATE, SELECT, \"kendoKeydown\" ],\n\n            destroy: function() {\n                var that = this;\n\n                if (that.progressBar) {\n                    Widget.fn.destroy.call(that.progressBar);\n                }\n\n                Widget.fn.destroy.call(that);\n\n                kendo.unbindResize(that._resizeHandler);\n\n                that.wrapper.off(STEPPER);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                Widget.fn.setOptions.call(that, options);\n\n                if (that.progressBar) {\n                    Widget.fn.destroy.call(that.progressBar);\n                }\n\n                that._indicatorAndLabel();\n\n                that._addStepList();\n\n                if (that.options.steps && that.options.steps.length) {\n                    that._processSteps(that.options.steps);\n                    that._progressBar();\n                }\n            },\n\n            enable: function(value) {\n                var steps = this.steps(),\n                    stepsOptions = this.options.steps;\n\n                var enableStep = function(step, idx) {\n                    step.enable(value);\n                    stepsOptions[idx] = step.options;\n                };\n\n                if (value) {\n                    this.wrapper.removeAttr(ARIA_DISABLED);\n                } else {\n                    this.wrapper.attr(ARIA_DISABLED, \"true\");\n                }\n\n                this.progressBar.enable(value);\n\n                steps.forEach(enableStep);\n            },\n\n            insertAt: function(index, stepOptions) {\n                var steps = this.options.steps,\n                    selectedStep;\n                var findSelectedStep = function(step) {\n                    if (step.selected) {\n                        selectedStep = step;\n                    }\n                };\n\n                if (!stepOptions || isNaN(index)) {\n                    return;\n                }\n                if (index < 0) {\n                    index = steps.length + index;\n                }\n                if (index < 0) {\n                    return;\n                }\n                if (!steps) {\n                    steps = [];\n                }\n\n                if (steps.length === 0 || index >= steps.length) {\n                    index = steps.length;\n                }\n\n                steps.forEach(findSelectedStep);\n\n                if (stepOptions.selected === true) {\n                    selectedStep.selected = false;\n                }\n\n                steps.splice(index, 0, stepOptions);\n\n                this._createSteps();\n                this._renderSteps();\n                this._resetProgressBar();\n                this._calculateDimensions();\n            },\n\n            next: function() {\n                if (!this._steps || this._steps.length <= 1) {\n                    return;\n                }\n\n                var selectedStep = this.selectedStep;\n                var selectedIndex = selectedStep.getIndex();\n\n                if (selectedIndex + 1 === this._steps.length) {\n                    return;\n                } else {\n                    this._select(selectedIndex + 1);\n                }\n            },\n\n            previous: function() {\n                if (!this._steps || this._steps.length <= 1) {\n                    return;\n                }\n\n                var selectedStep = this.selectedStep;\n                var selectedIndex = selectedStep.getIndex();\n\n                if (selectedIndex === 0) {\n                    return;\n                } else {\n                    this._select(selectedIndex - 1);\n                }\n            },\n\n            removeAt: function(index) {\n                var steps = this.options.steps,\n                    removedStep, newSelected, newSelectedIndex;\n\n                if (isNaN(index) || !steps || steps.length < 2 || index >= steps.length) {\n                    return;\n                }\n                if (index < 0) {\n                    index = steps.length + index;\n                }\n                if (index < 0) {\n                    return;\n                }\n\n                removedStep = steps.splice(index, 1)[0];\n\n                if (removedStep.selected === true && steps.length > 0) {\n                    if (index > 0) {\n                        newSelectedIndex = index - 1;\n                    } else {\n                        newSelectedIndex = 0;\n                    }\n\n                    newSelected = steps[newSelectedIndex];\n\n                    if (typeof newSelected === \"string\") {\n                        newSelected = {\n                            label: newSelected\n                        };\n                        steps[newSelectedIndex] = newSelected;\n                    }\n\n                    newSelected.selected = true;\n                    newSelected.previous = false;\n                }\n\n                this._createSteps();\n                this._renderSteps();\n                this._resetProgressBar();\n                this._calculateDimensions();\n            },\n\n            resize: function() {\n                this._calculateDimensions();\n            },\n\n            select: function(stepIndex) {\n                var that = this;\n\n                if (stepIndex === undefined$1 || stepIndex === null || isNaN(stepIndex)) {\n                    return that.selectedStep;\n                }\n\n                if (stepIndex >= that._steps.length || stepIndex < 0) {\n                    return;\n                }\n\n                stepIndex = Number(stepIndex);\n\n                that._select(stepIndex);\n            },\n\n            steps: function(steps) {\n                if (steps === undefined$1) {\n                    return this._steps;\n                }\n\n                this._processSteps(steps);\n                this._resetProgressBar();\n                this._calculateDimensions();\n            },\n\n            _processSteps: function(steps) {\n                var that = this,\n                    selectedStep;\n                var findSelectedStep = function(step) {\n                    if (step.selected) {\n                        selectedStep = step;\n                    }\n                };\n\n                steps.forEach(findSelectedStep);\n\n                if (!selectedStep) {\n                    if (typeof steps[0] === \"string\") {\n                        steps[0] = {\n                            label: steps[0]\n                        };\n                    }\n                    steps[0].selected = true;\n                }\n\n                that.options.steps = steps;\n\n                that._createSteps();\n                that._renderSteps();\n            },\n\n            _addStepList: function() {\n                var that = this;\n\n                that.wrapper.empty().append($(\"<ol />\").addClass(stepperStyles.stepList));\n                that._stepList = that.wrapper.find(DOT + stepperStyles.stepList);\n\n                if (that.options.orientation === VERTICAL) {\n                    that._stepList.addClass(stepperStyles.stepListVertical);\n                } else {\n                    that._stepList.addClass(stepperStyles.stepListHorizontal);\n                }\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.wrapper\n                    .on(CLICK + STEPPER, DOT + stepStyles.step, that._selectClickHandler.bind(that))\n                    .on(CLICK + STEPPER, that._wrapperClickHandler.bind(that))\n                    .on(FOCUSOUT + STEPPER, that._focusout.bind(that))\n                    .on(KEYDOWN + STEPPER, that, that._keydown.bind(that));\n            },\n\n            _calculateDimensions: function() {\n                var orientation = this.options.orientation,\n                    numberOfSteps = this._steps.length,\n                    stepList = this._stepList,\n                    steps = stepList.find(DOT + stepStyles.step),\n                    stepWidth = stepList.width() / numberOfSteps,\n                    stepHeight = stepList.height() / numberOfSteps,\n                    progressElement = this.progressBar.element,\n                    margin = \"margin-left\",\n                    style = {};\n\n                if (orientation === VERTICAL) {\n                    steps.css(\"max-height\", 100 / numberOfSteps + \"%\");\n                    progressElement.css({\n                        \"margin-top\": -1 * (stepList.height() - 16),\n                        \"height\": stepHeight * (numberOfSteps - 1)\n                    });\n                } else {\n                    steps.css(\"max-width\", 100 / numberOfSteps + \"%\");\n\n                    if (kendo.support.isRtl(this.wrapper)) {\n                        margin = \"margin-right\";\n                    }\n                    style[margin] = stepWidth / 2;\n                    style.width = stepWidth * (numberOfSteps - 1);\n\n                    progressElement.css(style);\n                }\n            },\n\n            _createStep: function(stepOptions, idx, isLastStep) {\n                var that = this,\n                    isFirstStep = idx === 0,\n                    options = that.options,\n                    indicatorVisible = options.indicator,\n                    labelVisible = options.label;\n\n                stepOptions = extend({}, stepOptions, {\n                    enabled: stepOptions.enabled === false ? false : true\n                });\n\n                stepOptions = extend({}, stepOptions, {\n                    isFirstStep: isFirstStep,\n                    isLastStep: isLastStep,\n                    indicatorVisible: indicatorVisible,\n                    labelVisible: labelVisible,\n                    index: idx\n                });\n\n                return new Step(stepOptions);\n            },\n\n            _createSteps: function() {\n                var that = this,\n                    stepsOptions = that.options.steps,\n                    selected = false,\n                    step, idx, isLastStep, stepOpt;\n\n                that._steps = [];\n\n                for (idx = 0; idx < stepsOptions.length; idx++) {\n                    stepOpt = stepsOptions[idx];\n\n                    if (typeof stepOpt === \"string\") {\n                        stepOpt = {\n                            label: stepOpt\n                        };\n                    }\n\n                    if (stepOpt !== undefined$1) {\n                        isLastStep = idx === stepsOptions.length - 1;\n\n                        if (stepOpt.selected) {\n                            selected = true;\n                        } else {\n                            stepOpt = that._selectablePreviousState(stepOpt, selected, idx);\n                        }\n\n                        step = that._createStep(stepOpt, idx, isLastStep);\n                        that._steps.push(step);\n\n                        if (step.getSelected()) {\n                            that.selectedStep = step;\n                        }\n                    }\n                }\n            },\n\n            _indicatorAndLabel: function() {\n                if (!this.options.indicator && !this.options.label) {\n                    this.options.indicator = true;\n                    this.options.label = true;\n                }\n            },\n\n            _focusout: function(e) {\n                var that = this;\n\n                if (!that.wrapper.get(0).contains(e.relatedTarget)) {\n                    setTimeout(function() {\n                        that._leaveStepper();\n                    });\n                }\n            },\n\n            _focusStep: function(newStep) {\n                var focusedStep = this.wrapper.find(DOT + stepStyles.focusStep),\n                    allStepLinks = this.wrapper.find(DOT + stepStyles.stepLink);\n\n                if (newStep.length > 0) {\n                    focusedStep.removeClass(stepStyles.focusStep);\n                    allStepLinks.attr(TABINDEX, \"-1\");\n                    newStep.find(DOT + stepStyles.stepLink).removeAttr(TABINDEX)[0].focus();\n                }\n            },\n\n            _focusNextStep: function() {\n                var focusedStep = $(document.activeElement).closest(DOT + stepStyles.step),\n                    nextStep = focusedStep.next();\n\n                this._focusStep(nextStep);\n            },\n\n            _focusPreviousStep: function() {\n                var focusedStep = $(document.activeElement).closest(DOT + stepStyles.step),\n                    previousStep = focusedStep.prev();\n\n                this._focusStep(previousStep);\n            },\n\n            _focusFirstStep: function() {\n                var wrapper = this.wrapper,\n                    firstStep = wrapper.find(DOT + stepStyles.firstStep);\n\n                this._focusStep(firstStep);\n            },\n\n            _focusLastStep: function() {\n                var wrapper = this.wrapper,\n                    lastStep = wrapper.find(DOT + stepStyles.lastStep);\n\n                this._focusStep(lastStep);\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    keyCode = e.keyCode,\n                    focusedStepElement = $(document.activeElement).closest(DOT + stepStyles.step),\n                    focusedStepIndex = focusedStepElement.index(),\n                    stepsCount = that.steps().length;\n\n                if (keyCode === keys.TAB) {\n                    if (e.shiftKey && focusedStepIndex > 0) {\n                        e.preventDefault();\n                        that._tabKey(e, -1);\n                    } else if (!e.shiftKey && focusedStepIndex < stepsCount - 1) {\n                        e.preventDefault();\n                        that._tabKey(e, +1);\n                    }\n                } else if (keyCode > 34 && keyCode < 41) {\n                    e.preventDefault();\n                    that._navKeys(e);\n                } else if (keyCode === keys.ENTER || keyCode === keys.SPACEBAR) {\n                    e.preventDefault();\n                    that._selectHandler(e, $(document.activeElement).closest(DOT + stepStyles.step));\n                } else {\n                    e.preventDefault();\n                }\n            },\n\n            _leaveStepper: function() {\n                var selectedStep = this.wrapper.find(DOT + stepStyles.currentStep),\n                    allStepLinks = this.wrapper.find(DOT + stepStyles.stepLink);\n\n                allStepLinks.removeClass(stepStyles.focusStep).attr(TABINDEX, \"-1\");\n\n                selectedStep.addClass(stepStyles.focusStep);\n                selectedStep.find(DOT + stepStyles.stepLink).removeAttr(TABINDEX);\n            },\n\n            _navKeys: function(e) {\n                var selectOnFocus = this.options.selectOnFocus;\n\n                if (selectOnFocus) {\n                    this._navKeysSelect(e);\n                } else {\n                    this._navKeysFocus(e);\n                }\n            },\n\n            _navKeysFocus: function(e) {\n                var keyCode = e.keyCode,\n                    rtl = kendo.support.isRtl(this.wrapper),\n                    orientation = this.options.orientation;\n\n                switch (keyCode) {\n                    case keys.DOWN:\n                        if (rtl && orientation !== VERTICAL) {\n                            this._focusPreviousStep();\n                        } else {\n                            this._focusNextStep();\n                        }\n                        break;\n                    case keys.RIGHT:\n                        if (rtl) {\n                            this._focusPreviousStep();\n                        } else {\n                            this._focusNextStep();\n                        }\n                        break;\n                    case keys.UP:\n                        if (rtl && orientation !== VERTICAL) {\n                            this._focusNextStep();\n                        } else {\n                            this._focusPreviousStep();\n                        }\n                        break;\n                    case keys.LEFT:\n                        if (rtl) {\n                            this._focusNextStep();\n                        } else {\n                            this._focusPreviousStep();\n                        }\n                        break;\n                    case keys.HOME:\n                        this._focusFirstStep();\n                        break;\n                    case keys.END:\n                        this._focusLastStep();\n                        break;\n                }\n            },\n\n            _navKeysSelect: function(e) {\n                var keyCode = e.keyCode,\n                    focusedStepIndex = $(document.activeElement).closest(DOT + stepStyles.step).index(),\n                    rtl = kendo.support.isRtl(this.wrapper),\n                    steps = this.steps(),\n                    orientation = this.options.orientation,\n                    targetStep;\n\n                switch (keyCode) {\n                    case keys.DOWN:\n                        if (rtl && orientation !== VERTICAL) {\n                            targetStep = steps[focusedStepIndex - 1];\n                        } else {\n                            targetStep = steps[focusedStepIndex + 1];\n                        }\n                        break;\n                    case keys.RIGHT:\n                        if (rtl) {\n                            targetStep = steps[focusedStepIndex - 1];\n                        } else {\n                            targetStep = steps[focusedStepIndex + 1];\n                        }\n                        break;\n                    case keys.UP:\n                        if (rtl && orientation !== VERTICAL) {\n                            targetStep = steps[focusedStepIndex + 1];\n                        } else {\n                            targetStep = steps[focusedStepIndex - 1];\n                        }\n                        break;\n                    case keys.LEFT:\n                        if (rtl) {\n                            targetStep = steps[focusedStepIndex + 1];\n                        } else {\n                            targetStep = steps[focusedStepIndex - 1];\n                        }\n                        break;\n                    case keys.HOME:\n                        targetStep = steps[0];\n                        break;\n                    case keys.END:\n                        targetStep = steps[steps.length - 1];\n                        break;\n                }\n\n                if (targetStep) {\n                    this._focusStep(targetStep.element);\n                    this._selectHandlerOnKey(e, targetStep.element);\n                }\n            },\n\n            _progressBar: function() {\n                var wrapper = this.wrapper,\n                    progressBarOptions = this._progressOptions();\n\n                this.progressBar = $(\"<div>\").kendoProgressBar(progressBarOptions).getKendoProgressBar();\n\n                // TODO: for 2021 R2 the following line must be removed!\n                this.progressBar.element.css(\"position\", \"absolute\");\n\n                this._calculateDimensions();\n\n                wrapper.append(this.progressBar.element);\n            },\n\n            _progressOptions: function() {\n                var options = this.options,\n                    orientation = options.orientation,\n                    stepsOptions = options.steps,\n                    numberOfSteps, progressBarOptions;\n\n                if (!stepsOptions || stepsOptions.length === 0) {\n                    return;\n                } else {\n                    numberOfSteps = stepsOptions.length;\n                }\n\n                progressBarOptions = {\n                    max: numberOfSteps - 1,\n                    value: this.select().getIndex(),\n                    orientation: orientation,\n                    showStatus: false\n                };\n\n                if (orientation === VERTICAL) {\n                    progressBarOptions.reverse = true;\n                }\n\n                return progressBarOptions;\n            },\n\n            _resetProgressBar: function() {\n                var progressBar = this.progressBar,\n                    newOptions;\n\n                if (!progressBar) {\n                    return;\n                }\n\n                newOptions = this._progressOptions();\n                progressBar.setOptions(newOptions);\n            },\n\n            _renderSteps: function() {\n                var steps = this._steps,\n                    stepsList = this._stepList,\n                    step, idx;\n\n                stepsList.empty();\n\n                for (idx = 0; idx < steps.length; idx++) {\n                    step = steps[idx];\n                    stepsList.append(step.element);\n                }\n            },\n\n            _resetStep: function(i, index, forward) {\n                var step = this._steps[i];\n\n                if (i === index) {\n                    step.options.previous = false;\n                    step.options.selected = true;\n                } else if ((forward || i > index) && (!forward || i < index)) {\n                    step.options.selected = false;\n                    step.options.previous = forward;\n                }\n\n                if (this.options.linear && (i < index - 1 || i > index + 1)) {\n                    step.options.selectable = false;\n                } else {\n                    step.options.selectable = true;\n                }\n\n                step._link();\n                step._stepClasses();\n                this.options.steps[i] = step.options;\n            },\n\n            _select: function(index) {\n                var options = this.options,\n                    linear = options.linear,\n                    selectedStep = this.select(),\n                    selectedIndex = selectedStep.getIndex(),\n                    stepsOptions = options.steps,\n                    targetStep = this._steps[index],\n                    forward, i, min, max;\n\n                if (!targetStep || !targetStep.getEnabled()) {\n                    return;\n                }\n\n                if (index > selectedIndex) {\n                    forward = true;\n\n                    if (linear) {\n                        min = Math.max(selectedIndex - 1, 0);\n                        max = Math.min(index + 1, stepsOptions.length - 1);\n                    } else {\n                        min = selectedIndex;\n                        max = index;\n                    }\n                } else {\n                    forward = false;\n\n                    if (linear) {\n                        min = Math.max(index - 1, 0);\n                        max = Math.min(selectedIndex + 1, stepsOptions.length - 1);\n                    } else {\n                        min = index;\n                        max = selectedIndex;\n                    }\n                }\n\n                for (i = min; i <= max; i ++) {\n                    this._resetStep(i, index, forward);\n                }\n\n                this.selectedStep = targetStep;\n                this.progressBar.value(index);\n            },\n\n            _selectablePreviousState: function(stepOpt, selected, idx) {\n                var stepsOptions = this.options.steps,\n                    linear = this.options.linear;\n\n                if (!selected) {\n                    stepOpt.previous = true;\n                    if (linear && !stepsOptions[idx + 1].selected) {\n                        stepOpt.selectable = false;\n                    } else {\n                        stepOpt.selectable = true;\n                    }\n                } else if (linear && !stepsOptions[idx - 1].selected) {\n                    stepOpt.selectable = false;\n                } else {\n                    stepOpt.selectable = true;\n                }\n\n                return stepOpt;\n            },\n\n            _selectClickHandler: function(e) {\n                var stepElement = $(e.target).closest(DOT + stepStyles.step);\n\n                e.preventDefault();\n                this._preventWrapperClick = true;\n                this._selectHandler(e, stepElement);\n            },\n\n            _selectHandler: function(e, stepElement) {\n                var that = this,\n                    step = that._steps[stepElement.index()],\n                    currentStep = this.select();\n\n                if (!step || step.getIndex() === currentStep.getIndex() || !step.getEnabled() || !step.getSelectable()) {\n                    that._focusStep(currentStep.element);\n\n                    return;\n                }\n\n                if (!that.trigger(SELECT, { sender: that, originalEvent: e, step: step })) {\n                    that._select(step.getIndex());\n                    stepElement.find(DOT + stepStyles.stepLink)[0].focus();\n                    that.trigger(ACTIVATE, { sender: that, originalEvent: e, step: step });\n                }\n            },\n\n            _selectHandlerOnKey: function(e, stepElement) {\n                var that = this,\n                    step = that._steps[stepElement.index()];\n\n                if (!step.getEnabled() || !step.getSelectable()) {\n                    return;\n                }\n\n                if (!that.trigger(SELECT, { sender: that, originalEvent: e, step: step })) {\n                    that._select(step.getIndex());\n                    stepElement.find(DOT + stepStyles.stepLink)[0].focus();\n                    that.trigger(ACTIVATE, { sender: that, originalEvent: e, step: step });\n                }\n            },\n\n            _tabKey: function(e, shift) {\n                var selectOnFocus = this.options.selectOnFocus,\n                    focusedStepElement = $(document.activeElement).closest(DOT + stepStyles.step),\n                    focusedStepIndex = focusedStepElement.index(),\n                    targetStep = $(focusedStepElement.parent().find(DOT + stepStyles.step)[focusedStepIndex + shift]);\n\n                this._focusStep(targetStep);\n\n                if (selectOnFocus) {\n                    this._selectHandlerOnKey(e, targetStep);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element;\n\n                that.wrapper = element;\n                that.wrapper.addClass(stepperStyles.widget);\n\n                if (that.options.linear) {\n                    that.wrapper.addClass(stepperStyles.stepperLinear);\n                }\n\n                this._addStepList();\n            },\n\n            _wrapperClickHandler: function(e) {\n                var currentStep = this.select();\n\n                if (!this._preventWrapperClick) {\n                    e.preventDefault();\n                    this._focusStep(currentStep.element);\n                } else {\n                    this._preventWrapperClick = false;\n                }\n            }\n        });\n\n        kendo.stepper = {\n            Step: Step\n        };\n\n        kendo.ui.plugin(Stepper);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}