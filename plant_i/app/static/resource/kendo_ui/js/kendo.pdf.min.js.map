{"version":3,"sources":["raw-js/kendo.pdf.js"],"names":["factory","define","amd","$","kendo","pdf","supportsDeflate","window","pako","deflate","data","keyStr","supportBrowser","support","browser","drawing","util","extendStatic","kendoPdf","kendoGeometry","geometry","HAS_TYPED_ARRAYS","Uint8Array","msie","version","BASE64","decode","str","input","replace","i","n","length","output","enc1","indexOf","charAt","enc2","enc3","enc4","chr1","chr2","chr3","push","encode","bytes","BinaryStream","offset","ensure","len","tmp","Math","max","set","get","buffer","write","writeString","writeByte","slice","start","x","readByte","b","readShort","writeShort","w","readLong","writeLong","readLong_","writeLong_","read","times","charCodeAt","reader","ret","Array","stream","eof","readFixed","writeFixed","f","round","readShort_","writeShort_","readFixed_","writeFixed_","readString","String","fromCharCode","apply","pos","skip","nbytes","toString","Error","saveExcursion","writeBase64","base64","atob","base64ToUint8Array","result","idx","atobUint8Array","createUint8Array","hasOwnProperty$1","obj","key","Object","prototype","hasOwnProperty","call","sortedKeys","keys","sort","a","map","parseFloat","Directory","this","raw","scalerType","tableCount","searchRange","entrySelector","rangeShift","tables","entry","tag","checksum","readTable","name","Ctor","def","table","render","maxpow2","pow","floor","log","LN2","out","directoryLength","headOffset","tableData","adjustment","sum","Table","file","definition","rawData","parse","NameEntry","POSTSCRIPT_GLYPHS","CmapEntry","HeadTable","arguments","create","constructor","fn","init","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","LocaTable","format","head","offsets","offsetOf","id","lengthOf","needsLongFormat","HheaTable","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numOfLongHorMetrics","ids","MaxpTable","numGlyphs","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","glyphIds","HmtxTable","dir","hhea","metrics","advance","lsb","lsbCount","maxp","leftSideBearings","forGlyph","m","GlyfTable","SimpleGlyph","prototypeAccessors","compound","defineProperties","CompoundGlyph","idOffsets","prototypeAccessors$1","old2new","anonymous","cache","glyphFor","loca","numberOfContours","glyph","glyphs","oldIds","NameTable","text","platformID","platformSpecificID","languageID","nameID","count","stringOffset","nameRecords","strings","rec","postscriptEntry","postscriptName","psName","strCount","strTable","list","j","PostTable","split","numberOfGlyphs","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","glyphNameIndex","names","limit","code","index","mapping","indexes","post","CmapTable","codeMap","self","language","segCount","endCode","startCode","idDelta","idRangeOffset","end","glyphId","ngroups","endCharCode","glyphCode","console","error","ncid2ogid","ogid2ngid","codes","startCodes","endCodes","last","diff","new_gid","charcode","delta","segCountX2","deltas","rangeOffsets","startGlyph","forEach","renderCharmap","OS2Table","averageCharWidth","weightClass","widthClass","type","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","familyClass","panose","charRange","vendorID","selection","firstCharIndex","lastCharIndex","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContext","subsetTag","Subfont","font","subset","unicodes","ngid2ogid","next","firstChar","nextGid","nextSubsetTag","use","ch","string","value","extra","counter","ucs2decode","reduce","old_gid","cmap","encodeText","glyphsFor","glyf","this$1$1","parseInt","old_gid_ids","lastChar","hmtx","os2","directory","cidToGidMap","cid","TTFFont","contents","numFonts","scale","widthOfGlyph","makeSubset","encodeUnit","codeUnit","NL","RESOURCE_COUNTER","PAPER_SIZE","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","c10","executive","folio","legal","letter","tabloid","makeOutput","indentLevel","arguments$1","undefined","PDFValue","beforeRender","isArray","renderArray","Date","renderDate","isNaN","num","toFixed","test","PDFDictionary","writeData","withIndent","indent","pad","getPaperOptions","getOption","options","paperSize","toLowerCase","unitsToPoints","min","margin","left","top","right","bottom","FONT_CACHE","Helvetica","Courier","Symbol","ZapfDingbats","IMAGE_CACHE","clearImageCache","loadOne","loadFonts","url","cont","exec","substr","req","XMLHttpRequest","open","responseType","onload","status","response","VBArray","responseBody","toArray","onerror","send","loadBinary","urls","callback","loadImages","images","extend","jpegQuality","keepPNG","size","bloburl","blob","img","Image","crossOrigin","xhr","mozilla","FileReader","svg","DOMParser","parseFromString","documentElement","getAttribute","_load","URL","createObjectURL","setAttribute","width","height","xml","XMLSerializer","serializeToString","encodeBase64","readAsText","_onerror","src","complete","_onload","_trycanvas","canvas","document","createElement","imgdata","ctx","getContext","drawImage","getImageData","ex","revokeObjectURL","hasAlpha","rgb","alpha","rawbytes","PDFRawImage","toDataURL","PDFJpegImage","substring","upscale","readAsArrayBuffer","loadImage","PDFDocument","objcount","objects","defval","attach","renderValue","renderFull","_offset","wrapObject","pages","FONTS","IMAGES","GRAD_COL_FUNCTIONS","GRAD_OPC_FUNCTIONS","GRAD_COL","GRAD_OPC","catalog","PDFCatalog","pageTree","PDFPageTree","nameTree","JavaScript","Names","PDFString","S","_","JS","props","setPages","info","Producer","Title","Author","Subject","Keywords","Creator","CreationDate","addPage","paperOptions","contentWidth","contentHeight","content","PDFStream","Contents","Parent","MediaBox","page","PDFPage","_content","transform","translate","rect","clip","xrefOffset","zeropad","Size","Root","Info","getFont","PDFStandardFont","PDFFont","getImage","asStream","getOpacityGS","opacity","forStroke","_opacityGSCache","gs","Type","CA","ca","_resourceName","dict","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","mm2pt","mm","cm2pt","cm","in2pt","inch","in","utf16be","Boolean","txt","c","trail","encodeUTF16BE","PDFHexString","PDFName","escape","empty","compress","Filter","unshift","Length","pagesObj","Pages","Kids","Count","pageObj","SOF_CODES","colorSpace","bitsPerComponent","marker","Subtype","Width","Height","BitsPerComponent","ColorSpace","Decode","mask","SMask","BaseFont","Encoding","_pdf","_font","_sub","bbox","stemV","isSerif","isScript","getTextWidth","fontSize","sub","fontStream","Length1","descriptor","FontName","FontBBox","Flags","StemV","ItalicAngle","Ascent","Descent","CapHeight","XHeight","FontFile2","charWidths","loop","chunk","gid","descendant","CIDSystemInfo","Registry","Ordering","Supplement","FontDescriptor","FirstChar","LastChar","DW","W","CIDToGIDMap","_makeCidToGidMap","DescendantFonts","unimap","PDFToUnicodeCmap","unimapStream","ToUnicode","unicode","join","makeHash","cacheColorGradientFunction","r1","g1","r2","g2","hash","func","FunctionType","Domain","Range","N","C0","C1","cacheOpacityGradientFunction","cacheGradient","gradient","box","isRadial","funcs","stops","prev","cur","prevColor","curColor","opacities","colors","color","r","g","pop","assemble","Functions","Bounds","Encode","makeGradientFunctions","coords","y","shading","concat","ShadingType","Coords","Function","Extend","cacheColorGradient","userSpace","AIS","G","FormType","BBox","Group","CS","I","Resources","ExtGState","Shading","s0","cacheOpacityGradient","_rcount","_textMode","_fontResources","_gsResources","_xResources","_patResources","_shResources","_opacity","_matrix","_annotations","_fontSize","_contextStack","ProcSet","Font","XObject","Pattern","Annots","_out","d","e","d1","e1","f1","d2","e2","f2","mmul","dx","dy","sx","sy","rotate","angle","cos","sin","beginText","endText","_requireTextMode","_requireFont","setFont","setTextLeading","setTextRenderingMode","mode","showText","requestedWidth","showTextNL","addLink","uri","ll","_toPage","ur","Rect","Border","A","URI","setStrokeColor","setOpacity","setFillOpacity","setStrokeOpacity","setFillColor","save","oname","sname","restore","setDashPattern","dashArray","dashPhase","setLineWidth","setLineCap","lineCap","setLineJoin","lineJoin","setMitterLimit","mitterLimit","_context","moveTo","lineTo","bezier","x1","y1","x2","y2","x3","y3","bezier1","bezier2","close","h","ellipse","rx","ry","_X","v","_Y","k","circle","stroke","nop","clipStroke","closeStroke","fill","fillStroke","comment","line","val","matrix","p","unquote","parseFontDef","fontdef","fontFamily","italic","variant","bold","lineHeight","getFontURL","style","mkFamily","FONT_MAPPINGS","serif","monospace","zapfdingbats","fontAlias","alias","TEXT_RENDERING_MODE","fillAndStroke","invisible","fillAndClip","strokeAndClip","fillStrokeClip","DEFAULT_IMAGE_DPI","TEXT_RENDERING_MODE$1","DASH_PATTERNS","dash","dashDot","dot","longDash","longDashDot","longDashDotDot","solid","LINE_CAP","butt","square","LINE_JOIN","miter","bevel","render$1","group","fonts","multiPage","imgDPI","doIt","producer","title","author","subject","keywords","creator","autoPrint","children","drawPage","root","changed","clipbox","Matrix","unit","currentBox","opt","change","newShape","visible","shape","shouldDraw","optArray","el","withClipping","saveclipbox","savematrix","multiplyCopy","intersect","inClipbox","rawBBox","MultiPath","union","dispatch","Path","segments","paths","Circle","Arc","Text","_pdfLink","optimize","addMargin","getSize","origin","getOrigin","append","drawElement","landscape","traverse","element","ceil","toBlob","Blob","handlers","handler","nodeType","_pdfDebug","parseColor$1","dashType","setStrokeOptions","Gradient","setFillOptions","_drawPath","setClipping","drawPath","drawMultiPath","drawCircle","drawArc","drawText","drawImage$1","drawGroup","drawRect","thing","maybeGradient","RadialGradient","center","radius","elements","stop","tl","topLeft","maybeFillStroke","path","closed","controlIn","anchor","maybeDrawRect","seg","prevOut","controlOut","points","curvePoints","_position","draw","renderMode","_pdfRect","paintOrder","sz","ref","cornerRadius","fromRect","parseColor","toRGB","deepExtend","Document","defineFont","exportPDF","promise","createPromise","_ignoreMargin","resolve","exportPDFToBlob","safari","saveAs","filename","proxy","dataURI","fileName","dataURL","proxyURL","jQuery","PDFMixin","proto","events","saveAsPDF","_drawPDF","_drawPDFShadow","allPages","progress","Deferred","args","trigger","then","done","forceProxy","proxyTarget","fail","err","reject","drawDOM","wrapper","pageNumber","totalPages","notify","settings","drawOptions","shadow","css","overflow","before","clone","defer","setTimeout","always","remove"],"mappings":"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","file":"kendo.pdf.min.js","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.drawing', 'kendo.color'], factory) :\n    factory();\n})((function () {\n    (function () {\n\n        kendo.pdf = kendo.pdf || {};\n\n        kendo.pdf.supportsDeflate = function() {\n            return window.pako && typeof window.pako.deflate == \"function\";\n        };\n\n        kendo.pdf.deflate = function(data) {\n            return window.pako.deflate(data);\n        };\n\n    })();\n\n    /***********************************************************************\n     * WARNING: this file is auto-generated.  If you change it directly,\n     * your modifications will eventually be lost.  The source code is in\n     * `kendo-drawing` repository, you should make your changes there and\n     * run `src-modules/sync.sh` in this repository.\n     */\n\n    (function($) {\n    /* eslint-disable space-before-blocks, space-before-function-paren */\n\n    window.kendo.pdf = window.kendo.pdf || {};\n    var support = kendo.support;\n    var supportBrowser = support.browser;\n    var drawing = kendo.drawing;\n    var util = drawing.util;\n    var extendStatic = util.extendStatic;\n    var kendoPdf = kendo.pdf;\n    var kendoGeometry = kendo.geometry;\n\n    /* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n    /* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n    /* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n    /* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n    // XXX: remove this junk (assume `true`) when we no longer have to support IE < 10\n    // IE 9 (at least compatibility) reports having Uint8Array but the request response does not contain ArrayBuffer which results in missing table head error\n    var HAS_TYPED_ARRAYS = typeof Uint8Array !== 'undefined' && kendo.support.browser && (!kendo.support.browser.msie || kendo.support.browser.version > 9);\n\n    var BASE64 = (function(){\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        return {\n            decode: function(str) {\n                var input = str.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"), i = 0, n = input.length, output = [];\n\n                while (i < n) {\n                    var enc1 = keyStr.indexOf(input.charAt(i++));\n                    var enc2 = keyStr.indexOf(input.charAt(i++));\n                    var enc3 = keyStr.indexOf(input.charAt(i++));\n                    var enc4 = keyStr.indexOf(input.charAt(i++));\n\n                    var chr1 = (enc1 << 2) | (enc2 >>> 4);\n                    var chr2 = ((enc2 & 15) << 4) | (enc3 >>> 2);\n                    var chr3 = ((enc3 & 3) << 6) | enc4;\n\n                    output.push(chr1);\n                    if (enc3 != 64) {\n                        output.push(chr2);\n                    }\n                    if (enc4 != 64) {\n                        output.push(chr3);\n                    }\n                }\n\n                return output;\n            },\n            encode: function(bytes) {\n                var i = 0, n = bytes.length;\n                var output = \"\";\n\n                while (i < n) {\n                    var chr1 = bytes[i++];\n                    var chr2 = bytes[i++];\n                    var chr3 = bytes[i++];\n\n                    var enc1 = chr1 >>> 2;\n                    var enc2 = ((chr1 & 3) << 4) | (chr2 >>> 4);\n                    var enc3 = ((chr2 & 15) << 2) | (chr3 >>> 6);\n                    var enc4 = chr3 & 63;\n\n                    if (i - n == 2) {\n                        enc3 = enc4 = 64;\n                    } else if (i - n == 1) {\n                        enc4 = 64;\n                    }\n\n                    output += keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n                }\n                return output;\n            }\n        };\n    }());\n\n    function BinaryStream(data) {\n        var offset = 0, length = 0;\n        if (data == null) {\n            data = HAS_TYPED_ARRAYS ? new Uint8Array(256) : [];\n        } else {\n            length = data.length;\n        }\n\n        var ensure = HAS_TYPED_ARRAYS ? function(len) {\n            if (len >= data.length) {\n                var tmp = new Uint8Array(Math.max(len + 256, data.length * 2));\n                tmp.set(data, 0);\n                data = tmp;\n            }\n        } : function() {};\n\n        var get = HAS_TYPED_ARRAYS ? function() {\n            return new Uint8Array(data.buffer, 0, length);\n        } : function() {\n            return data;\n        };\n\n        var write = HAS_TYPED_ARRAYS ? function(bytes) {\n            if (typeof bytes == \"string\") {\n                return writeString(bytes);\n            }\n            var len = bytes.length;\n            ensure(offset + len);\n            data.set(bytes, offset);\n            offset += len;\n            if (offset > length) {\n                length = offset;\n            }\n        } : function(bytes) {\n            if (typeof bytes == \"string\") {\n                return writeString(bytes);\n            }\n            for (var i = 0; i < bytes.length; ++i) {\n                writeByte(bytes[i]);\n            }\n        };\n\n        var slice = HAS_TYPED_ARRAYS ? function(start, length) {\n            if (data.buffer.slice) {\n                return new Uint8Array(data.buffer.slice(start, start + length));\n            } else {\n                // IE10\n                var x = new Uint8Array(length);\n                x.set(new Uint8Array(data.buffer, start, length));\n                return x;\n            }\n        } : function(start, length) {\n            return data.slice(start, start + length);\n        };\n\n        function eof() {\n            return offset >= length;\n        }\n        function readByte() {\n            return offset < length ? data[offset++] : 0;\n        }\n        function writeByte(b) {\n            ensure(offset);\n            data[offset++] = b & 0xFF;\n            if (offset > length) {\n                length = offset;\n            }\n        }\n        function readShort() {\n            return (readByte() << 8) | readByte();\n        }\n        function writeShort(w) {\n            writeByte(w >> 8);\n            writeByte(w);\n        }\n        function readShort_() {\n            var w = readShort();\n            return w >= 0x8000 ? w - 0x10000 : w;\n        }\n        function writeShort_(w) {\n            writeShort(w < 0 ? w + 0x10000 : w);\n        }\n        function readLong() {\n            return (readShort() * 0x10000) + readShort();\n        }\n        function writeLong(w) {\n            writeShort((w >>> 16) & 0xFFFF);\n            writeShort(w & 0xFFFF);\n        }\n        function readLong_() {\n            var w = readLong();\n            return w >= 0x80000000 ? w - 0x100000000 : w;\n        }\n        function writeLong_(w) {\n            writeLong(w < 0 ? w + 0x100000000 : w);\n        }\n        function readFixed() {\n            return readLong() / 0x10000;\n        }\n        function writeFixed(f) {\n            writeLong(Math.round(f * 0x10000));\n        }\n        function readFixed_() {\n            return readLong_() / 0x10000;\n        }\n        function writeFixed_(f) {\n            writeLong_(Math.round(f * 0x10000));\n        }\n        function read(len) {\n            return times(len, readByte);\n        }\n        function readString(len) {\n            return String.fromCharCode.apply(String, read(len));\n        }\n        function writeString(str) {\n            for (var i = 0; i < str.length; ++i) {\n                writeByte(str.charCodeAt(i));\n            }\n        }\n        function times(n, reader) {\n            for (var ret = new Array(n), i = 0; i < n; ++i) {\n                ret[i] = reader();\n            }\n            return ret;\n        }\n\n        var stream = {\n            eof         : eof,\n            readByte    : readByte,\n            writeByte   : writeByte,\n            readShort   : readShort,\n            writeShort  : writeShort,\n            readLong    : readLong,\n            writeLong   : writeLong,\n            readFixed   : readFixed,\n            writeFixed  : writeFixed,\n\n            // signed numbers.\n            readShort_  : readShort_,\n            writeShort_ : writeShort_,\n            readLong_   : readLong_,\n            writeLong_  : writeLong_,\n            readFixed_  : readFixed_,\n            writeFixed_ : writeFixed_,\n\n            read        : read,\n            write       : write,\n            readString  : readString,\n            writeString : writeString,\n\n            times       : times,\n            get         : get,\n            slice       : slice,\n\n            offset: function(pos) {\n                if (pos != null) {\n                    offset = pos;\n                    return stream;\n                }\n                return offset;\n            },\n\n            skip: function(nbytes) {\n                offset += nbytes;\n            },\n\n            toString: function() {\n                throw new Error(\"FIX CALLER.  BinaryStream is no longer convertible to string!\");\n            },\n\n            length: function() { return length; },\n\n            saveExcursion: function(f) {\n                var pos = offset;\n                try {\n                    return f();\n                } finally {\n                    offset = pos;\n                }\n            },\n\n            writeBase64: function(base64) {\n                if (window.atob) {\n                    writeString(window.atob(base64));\n                } else {\n                    write(BASE64.decode(base64));\n                }\n            },\n            base64: function() {\n                return BASE64.encode(get());\n            }\n        };\n\n        return stream;\n    }\n\n    function ucs2decode(string) {\n        var output = [],\n            counter = 0,\n            length = string.length,\n            value,\n            extra;\n        while (counter < length) {\n            value = string.charCodeAt(counter++);\n            if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n                // high surrogate, and there is a next character\n                extra = string.charCodeAt(counter++);\n                if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n                    output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n                } else {\n                    // unmatched surrogate; only append this code unit, in case the next\n                    // code unit is the high surrogate of a surrogate pair\n                    output.push(value);\n                    counter--;\n                }\n            } else {\n                output.push(value);\n            }\n        }\n        return output;\n    }\n\n    function ucs2encode(array) {\n        return array.map(function(value){\n            var output = \"\";\n            if (value > 0xFFFF) {\n                value -= 0x10000;\n                output += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);\n                value = 0xDC00 | value & 0x3FF;\n            }\n            output += String.fromCharCode(value);\n            return output;\n        }).join(\"\");\n    }\n\n    function atobUint8Array(base64) {\n        var data = window.atob(base64);\n        var result = new Uint8Array(data.length);\n\n        for (var idx = 0; idx < data.length; idx++) {\n            result[idx] = data.charCodeAt(idx);\n        }\n\n        return result;\n    }\n\n    function createUint8Array(data) {\n        var result = new Uint8Array(data.length);\n\n        for (var idx = 0; idx < data.length; idx++) {\n            result[idx] = data[idx];\n        }\n\n        return result;\n    }\n\n    function base64ToUint8Array(base64) {\n        if (window.atob) {\n            return atobUint8Array(base64);\n        }\n\n        return createUint8Array(BASE64.decode(base64));\n    }\n\n    /* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n    /* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n    /* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n    /* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n    /*****************************************************************************\\\n     *\n     * The code in this file, although written from scratch, is influenced by the\n     * TrueType parser/encoder in PDFKit -- http://pdfkit.org/ (a CoffeeScript\n     * library for producing PDF files).\n     *\n     * PDFKit is (c) Devon Govett 2014 and released under the MIT License.\n     *\n    \\*****************************************************************************/\n\n    function hasOwnProperty$1(obj, key) {\n        return Object.prototype.hasOwnProperty.call(obj, key);\n    }\n\n    function sortedKeys(obj) {\n        return Object.keys(obj).sort(function(a, b){ return a - b; }).map(parseFloat);\n    }\n\n    ///\n    var Directory = function Directory(data) {\n        this.raw = data;\n        this.scalerType = data.readLong();\n        this.tableCount = data.readShort();\n        this.searchRange = data.readShort();\n        this.entrySelector = data.readShort();\n        this.rangeShift = data.readShort();\n\n        var tables = this.tables = {};\n        for (var i = 0; i < this.tableCount; ++i) {\n            var entry = {\n                tag  : data.readString(4),\n                checksum : data.readLong(),\n                offset   : data.readLong(),\n                length   : data.readLong()\n            };\n            tables[entry.tag] = entry;\n        }\n    };\n\n    Directory.prototype.readTable = function readTable (name, Ctor) {\n        var def = this.tables[name];\n        if (!def) {\n            throw new Error(\"Table \" + name + \" not found in directory\");\n        }\n        return (this[name] = def.table = new Ctor(this, def));\n    };\n\n    Directory.prototype.render = function render (tables) {\n            var this$1$1 = this;\n\n        var tableCount = Object.keys(tables).length;\n\n        var maxpow2 = Math.pow(2, Math.floor(Math.log(tableCount) / Math.LN2));\n        var searchRange = maxpow2 * 16;\n        var entrySelector = Math.floor(Math.log(maxpow2) / Math.LN2);\n        var rangeShift = tableCount * 16 - searchRange;\n\n        var out = BinaryStream();\n        out.writeLong(this.scalerType);\n        out.writeShort(tableCount);\n        out.writeShort(searchRange);\n        out.writeShort(entrySelector);\n        out.writeShort(rangeShift);\n\n        var directoryLength = tableCount * 16;\n        var offset = out.offset() + directoryLength;\n        var headOffset = null;\n        var tableData = BinaryStream();\n\n        for (var tag in tables) {\n            if (hasOwnProperty$1(tables, tag)) {\n                var table = tables[tag];\n\n                out.writeString(tag);\n                out.writeLong(this$1$1.checksum(table));\n                out.writeLong(offset);\n                out.writeLong(table.length);\n\n                tableData.write(table);\n                if (tag == \"head\") {\n                    headOffset = offset;\n                }\n                offset += table.length;\n\n                while (offset % 4) {\n                    tableData.writeByte(0);\n                    offset++;\n                }\n            }\n        }\n\n        out.write(tableData.get());\n        var sum = this.checksum(out.get());\n        var adjustment = 0xB1B0AFBA - sum;\n\n        out.offset(headOffset + 8);\n        out.writeLong(adjustment);\n        return out.get();\n    };\n\n    Directory.prototype.checksum = function checksum (data) {\n        data = BinaryStream(data);\n        var sum = 0;\n        while (!data.eof()) {\n            sum += data.readLong();\n        }\n        return sum & 0xFFFFFFFF;\n    };\n\n    var Table = function Table(file, def) {\n        this.definition = def;\n        this.length = def.length;\n        this.offset = def.offset;\n        this.file = file;\n        this.rawData = file.raw;\n        this.parse(file.raw);\n    };\n\n    Table.prototype.raw = function raw () {\n        return this.rawData.slice(this.offset, this.length);\n    };\n\n    Table.prototype.parse = function parse () {};\n\n    var HeadTable = (function (Table) {\n        function HeadTable () {\n            Table.apply(this, arguments);\n        }\n\n        extendStatic(HeadTable, Table);\n        HeadTable.prototype = Object.create( Table && Table.prototype );\n        HeadTable.prototype.constructor = HeadTable;\n        HeadTable.fn = HeadTable.prototype;\n        HeadTable.fn.init = HeadTable.fn.constructor;\n\n        HeadTable.prototype.parse = function parse (data) {\n            data.offset(this.offset);\n            this.version             = data.readLong();\n            this.revision            = data.readLong();\n            this.checkSumAdjustment  = data.readLong();\n            this.magicNumber         = data.readLong();\n            this.flags               = data.readShort();\n            this.unitsPerEm          = data.readShort();\n            this.created             = data.read(8);\n            this.modified            = data.read(8);\n\n            this.xMin = data.readShort_();\n            this.yMin = data.readShort_();\n            this.xMax = data.readShort_();\n            this.yMax = data.readShort_();\n\n            this.macStyle           = data.readShort();\n            this.lowestRecPPEM      = data.readShort();\n            this.fontDirectionHint  = data.readShort_();\n            this.indexToLocFormat   = data.readShort_();\n            this.glyphDataFormat    = data.readShort_();\n        };\n\n        HeadTable.prototype.render = function render (indexToLocFormat) {\n            var out = BinaryStream();\n            out.writeLong(this.version);\n            out.writeLong(this.revision);\n            out.writeLong(0);       // checksum adjustment; shall be computed later\n            out.writeLong(this.magicNumber);\n            out.writeShort(this.flags);\n            out.writeShort(this.unitsPerEm);\n            out.write(this.created);\n            out.write(this.modified);\n            out.writeShort_(this.xMin);\n            out.writeShort_(this.yMin);\n            out.writeShort_(this.xMax);\n            out.writeShort_(this.yMax);\n            out.writeShort(this.macStyle);\n            out.writeShort(this.lowestRecPPEM);\n            out.writeShort_(this.fontDirectionHint);\n            out.writeShort_(indexToLocFormat); // this will depend on the `loca` table\n            out.writeShort_(this.glyphDataFormat);\n            return out.get();\n        };\n\n        return HeadTable;\n    }(Table));\n\n    var LocaTable = (function (Table) {\n        function LocaTable () {\n            Table.apply(this, arguments);\n        }\n\n        extendStatic(LocaTable, Table);\n        LocaTable.prototype = Object.create( Table && Table.prototype );\n        LocaTable.prototype.constructor = LocaTable;\n        LocaTable.fn = LocaTable.prototype;\n        LocaTable.fn.init = LocaTable.fn.constructor;\n\n        LocaTable.prototype.parse = function parse (data) {\n            data.offset(this.offset);\n            var format = this.file.head.indexToLocFormat;\n            if (format === 0) {\n                this.offsets = data.times(this.length / 2, function(){\n                    return 2 * data.readShort();\n                });\n            } else {\n                this.offsets = data.times(this.length / 4, data.readLong);\n            }\n        };\n\n        LocaTable.prototype.offsetOf = function offsetOf (id) {\n            return this.offsets[id];\n        };\n\n        LocaTable.prototype.lengthOf = function lengthOf (id) {\n            return this.offsets[id + 1] - this.offsets[id];\n        };\n\n        LocaTable.prototype.render = function render (offsets) {\n            var out = BinaryStream();\n            var needsLongFormat = offsets[offsets.length - 1] > 0xFFFF;\n            for (var i = 0; i < offsets.length; ++i) {\n                if (needsLongFormat) {\n                    out.writeLong(offsets[i]);\n                } else {\n                    out.writeShort(offsets[i] / 2);\n                }\n            }\n            return {\n                format: needsLongFormat ? 1 : 0,\n                table: out.get()\n            };\n        };\n\n        return LocaTable;\n    }(Table));\n\n    var HheaTable = (function (Table) {\n        function HheaTable () {\n            Table.apply(this, arguments);\n        }\n\n        extendStatic(HheaTable, Table);\n        HheaTable.prototype = Object.create( Table && Table.prototype );\n        HheaTable.prototype.constructor = HheaTable;\n        HheaTable.fn = HheaTable.prototype;\n        HheaTable.fn.init = HheaTable.fn.constructor;\n\n        HheaTable.prototype.parse = function parse (data) {\n            data.offset(this.offset);\n\n            this.version              = data.readLong();\n            this.ascent               = data.readShort_();\n            this.descent              = data.readShort_();\n            this.lineGap              = data.readShort_();\n            this.advanceWidthMax      = data.readShort();\n            this.minLeftSideBearing   = data.readShort_();\n            this.minRightSideBearing  = data.readShort_();\n            this.xMaxExtent           = data.readShort_();\n            this.caretSlopeRise       = data.readShort_();\n            this.caretSlopeRun        = data.readShort_();\n            this.caretOffset          = data.readShort_();\n\n            data.skip(4 * 2);       // reserved\n\n            this.metricDataFormat     = data.readShort_();\n            this.numOfLongHorMetrics  = data.readShort();\n        };\n\n        HheaTable.prototype.render = function render (ids) {\n            var out = BinaryStream();\n            out.writeLong(this.version);\n            out.writeShort_(this.ascent);\n            out.writeShort_(this.descent);\n            out.writeShort_(this.lineGap);\n            out.writeShort(this.advanceWidthMax);\n            out.writeShort_(this.minLeftSideBearing);\n            out.writeShort_(this.minRightSideBearing);\n            out.writeShort_(this.xMaxExtent);\n            out.writeShort_(this.caretSlopeRise);\n            out.writeShort_(this.caretSlopeRun);\n            out.writeShort_(this.caretOffset);\n\n            out.write([ 0, 0, 0, 0, 0, 0, 0, 0 ]); // reserved bytes\n\n            out.writeShort_(this.metricDataFormat);\n            out.writeShort(ids.length);\n            return out.get();\n        };\n\n        return HheaTable;\n    }(Table));\n\n    var MaxpTable = (function (Table) {\n        function MaxpTable () {\n            Table.apply(this, arguments);\n        }\n\n        extendStatic(MaxpTable, Table);\n        MaxpTable.prototype = Object.create( Table && Table.prototype );\n        MaxpTable.prototype.constructor = MaxpTable;\n        MaxpTable.fn = MaxpTable.prototype;\n        MaxpTable.fn.init = MaxpTable.fn.constructor;\n\n        MaxpTable.prototype.parse = function parse (data) {\n            data.offset(this.offset);\n            this.version = data.readLong();\n            this.numGlyphs = data.readShort();\n            this.maxPoints = data.readShort();\n            this.maxContours = data.readShort();\n            this.maxComponentPoints = data.readShort();\n            this.maxComponentContours = data.readShort();\n            this.maxZones = data.readShort();\n            this.maxTwilightPoints = data.readShort();\n            this.maxStorage = data.readShort();\n            this.maxFunctionDefs = data.readShort();\n            this.maxInstructionDefs = data.readShort();\n            this.maxStackElements = data.readShort();\n            this.maxSizeOfInstructions = data.readShort();\n            this.maxComponentElements = data.readShort();\n            this.maxComponentDepth = data.readShort();\n        };\n\n        MaxpTable.prototype.render = function render (glyphIds) {\n            var out = BinaryStream();\n            out.writeLong(this.version);\n            out.writeShort(glyphIds.length);\n            out.writeShort(this.maxPoints);\n            out.writeShort(this.maxContours);\n            out.writeShort(this.maxComponentPoints);\n            out.writeShort(this.maxComponentContours);\n            out.writeShort(this.maxZones);\n            out.writeShort(this.maxTwilightPoints);\n            out.writeShort(this.maxStorage);\n            out.writeShort(this.maxFunctionDefs);\n            out.writeShort(this.maxInstructionDefs);\n            out.writeShort(this.maxStackElements);\n            out.writeShort(this.maxSizeOfInstructions);\n            out.writeShort(this.maxComponentElements);\n            out.writeShort(this.maxComponentDepth);\n            return out.get();\n        };\n\n        return MaxpTable;\n    }(Table));\n\n    var HmtxTable = (function (Table) {\n        function HmtxTable () {\n            Table.apply(this, arguments);\n        }\n\n        extendStatic(HmtxTable, Table);\n        HmtxTable.prototype = Object.create( Table && Table.prototype );\n        HmtxTable.prototype.constructor = HmtxTable;\n        HmtxTable.fn = HmtxTable.prototype;\n        HmtxTable.fn.init = HmtxTable.fn.constructor;\n\n        HmtxTable.prototype.parse = function parse (data) {\n            data.offset(this.offset);\n            var dir = this.file, hhea = dir.hhea;\n            this.metrics = data.times(hhea.numOfLongHorMetrics, function(){\n                return {\n                    advance: data.readShort(),\n                    lsb: data.readShort_()\n                };\n            });\n            var lsbCount = dir.maxp.numGlyphs - dir.hhea.numOfLongHorMetrics;\n            this.leftSideBearings = data.times(lsbCount, data.readShort_);\n        };\n\n        HmtxTable.prototype.forGlyph = function forGlyph (id) {\n            var metrics = this.metrics;\n            var n = metrics.length;\n            if (id < n) {\n                return metrics[id];\n            }\n            return {\n                advance: metrics[n - 1].advance,\n                lsb: this.leftSideBearings[id - n]\n            };\n        };\n\n        HmtxTable.prototype.render = function render (glyphIds) {\n            var this$1$1 = this;\n\n            var out = BinaryStream();\n            for (var i = 0; i < glyphIds.length; ++i) {\n                var m = this$1$1.forGlyph(glyphIds[i]);\n                out.writeShort(m.advance);\n                out.writeShort_(m.lsb);\n            }\n            return out.get();\n        };\n\n        return HmtxTable;\n    }(Table));\n\n    var GlyfTable = (function(){\n        var SimpleGlyph = function SimpleGlyph(raw) {\n            this.raw = raw;\n        };\n\n        var prototypeAccessors = { compound: {} };\n\n        prototypeAccessors.compound.get = function () {\n            return false;\n        };\n\n        SimpleGlyph.prototype.render = function render () {\n            return this.raw.get();\n        };\n\n        Object.defineProperties( SimpleGlyph.prototype, prototypeAccessors );\n\n        var ARG_1_AND_2_ARE_WORDS     = 0x0001;\n        var WE_HAVE_A_SCALE           = 0x0008;\n        var MORE_COMPONENTS           = 0x0020;\n        var WE_HAVE_AN_X_AND_Y_SCALE  = 0x0040;\n        var WE_HAVE_A_TWO_BY_TWO      = 0x0080;\n        //var WE_HAVE_INSTRUCTIONS      = 0x0100;\n\n        var CompoundGlyph = function CompoundGlyph(data) {\n            this.raw = data;\n            var ids = this.glyphIds = [];\n            var offsets = this.idOffsets = [];\n            while (true) {      // eslint-disable-line no-constant-condition\n                var flags = data.readShort();\n                offsets.push(data.offset());\n                ids.push(data.readShort());\n\n                if (!(flags & MORE_COMPONENTS)) {\n                    break;\n                }\n\n                data.skip(flags & ARG_1_AND_2_ARE_WORDS ? 4 : 2);\n\n                if (flags & WE_HAVE_A_TWO_BY_TWO) {\n                    data.skip(8);\n                } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n                    data.skip(4);\n                } else if (flags & WE_HAVE_A_SCALE) {\n                    data.skip(2);\n                }\n            }\n        };\n\n        var prototypeAccessors$1 = { compound: {} };\n\n        prototypeAccessors$1.compound.get = function () {\n            return true;\n        };\n\n        CompoundGlyph.prototype.render = function render (old2new) {\n                var this$1$1 = this;\n\n            var out = BinaryStream(this.raw.get());\n            for (var i = 0; i < this.glyphIds.length; ++i) {\n                var id = this$1$1.glyphIds[i];\n                out.offset(this$1$1.idOffsets[i]);\n                out.writeShort(old2new[id]);\n            }\n            return out.get();\n        };\n\n        Object.defineProperties( CompoundGlyph.prototype, prototypeAccessors$1 );\n\n        return (function (Table) {\n            function anonymous () {\n                Table.apply(this, arguments);\n            }\n\n            extendStatic(anonymous, Table);\n            anonymous.prototype = Object.create( Table && Table.prototype );\n            anonymous.prototype.constructor = anonymous;\n            anonymous.fn = anonymous.prototype;\n            anonymous.fn.init = anonymous.fn.constructor;\n\n            anonymous.prototype.parse = function parse () {\n                this.cache = {};\n            };\n\n            anonymous.prototype.glyphFor = function glyphFor (id) {\n                var cache = this.cache;\n                if (hasOwnProperty$1(cache, id)) {\n                    return cache[id];\n                }\n\n                var loca = this.file.loca;\n                var length = loca.lengthOf(id);\n\n                if (length === 0) {\n                    return (cache[id] = null);\n                }\n\n                var data = this.rawData;\n                var offset = this.offset + loca.offsetOf(id);\n                var raw = BinaryStream(data.slice(offset, length));\n\n                var numberOfContours = raw.readShort_();\n                var xMin = raw.readShort_();\n                var yMin = raw.readShort_();\n                var xMax = raw.readShort_();\n                var yMax = raw.readShort_();\n\n                var glyph = cache[id] = numberOfContours < 0 ? new CompoundGlyph(raw) : new SimpleGlyph(raw);\n\n                glyph.numberOfContours = numberOfContours;\n                glyph.xMin = xMin;\n                glyph.yMin = yMin;\n                glyph.xMax = xMax;\n                glyph.yMax = yMax;\n\n                return glyph;\n            };\n\n            anonymous.prototype.render = function render (glyphs, oldIds, old2new) {\n                var out = BinaryStream(), offsets = [];\n                for (var i = 0; i < oldIds.length; ++i) {\n                    var id = oldIds[i];\n                    var glyph = glyphs[id];\n                    if (out.offset() % 2) {\n                        out.writeByte(0);\n                    }\n                    offsets.push(out.offset());\n                    if (glyph) {\n                        out.write(glyph.render(old2new));\n                    }\n                }\n                if (out.offset() % 2) {\n                    out.writeByte(0);\n                }\n                offsets.push(out.offset());\n                return {\n                    table: out.get(),\n                    offsets: offsets\n                };\n            };\n\n            return anonymous;\n        }(Table));\n    }());\n\n    var NameTable = (function(){\n        var NameEntry = function NameEntry(text, entry) {\n            this.text = text;\n            this.length = text.length;\n            this.platformID = entry.platformID;\n            this.platformSpecificID = entry.platformSpecificID;\n            this.languageID = entry.languageID;\n            this.nameID = entry.nameID;\n        };\n\n        return (function (Table) {\n            function anonymous () {\n                Table.apply(this, arguments);\n            }\n\n            extendStatic(anonymous, Table);\n            anonymous.prototype = Object.create( Table && Table.prototype );\n            anonymous.prototype.constructor = anonymous;\n            anonymous.fn = anonymous.prototype;\n            anonymous.fn.init = anonymous.fn.constructor;\n\n            anonymous.prototype.parse = function parse (data) {\n                data.offset(this.offset);\n                data.readShort();   // format\n                var count = data.readShort();\n                var stringOffset = this.offset + data.readShort();\n                var nameRecords = data.times(count, function(){\n                    return {\n                        platformID         : data.readShort(),\n                        platformSpecificID : data.readShort(),\n                        languageID         : data.readShort(),\n                        nameID             : data.readShort(),\n                        length             : data.readShort(),\n                        offset             : data.readShort() + stringOffset\n                    };\n                });\n                var strings = this.strings = {};\n                for (var i = 0; i < nameRecords.length; ++i) {\n                    var rec = nameRecords[i];\n                    data.offset(rec.offset);\n                    var text = data.readString(rec.length);\n                    if (!strings[rec.nameID]) {\n                        strings[rec.nameID] = [];\n                    }\n                    strings[rec.nameID].push(new NameEntry(text, rec));\n                }\n                this.postscriptEntry = strings[6][0];\n                this.postscriptName = this.postscriptEntry.text.replace(/[^\\x20-\\x7F]/g, \"\");\n            };\n\n            anonymous.prototype.render = function render (psName) {\n                var this$1$1 = this;\n\n                var strings = this.strings;\n                var strCount = 0;\n                for (var i in strings) {\n                    if (hasOwnProperty$1(strings, i)) {\n                        strCount += strings[i].length;\n                    }\n                }\n                var out = BinaryStream();\n                var strTable = BinaryStream();\n\n                out.writeShort(0);  // format\n                out.writeShort(strCount);\n                out.writeShort(6 + 12 * strCount); // stringOffset\n\n                for (i in strings) {\n                    if (hasOwnProperty$1(strings, i)) {\n                        var list = i == 6 ? [\n                            new NameEntry(psName, this$1$1.postscriptEntry)\n                        ] : strings[i];\n                        for (var j = 0; j < list.length; ++j) {\n                            var str = list[j];\n                            out.writeShort(str.platformID);\n                            out.writeShort(str.platformSpecificID);\n                            out.writeShort(str.languageID);\n                            out.writeShort(str.nameID);\n                            out.writeShort(str.length);\n                            out.writeShort(strTable.offset());\n\n                            strTable.writeString(str.text);\n                        }\n                    }\n                }\n\n                out.write(strTable.get());\n\n                return out.get();\n            };\n\n            return anonymous;\n        }(Table));\n    })();\n\n    var PostTable = (function(){\n        var POSTSCRIPT_GLYPHS = \".notdef .null nonmarkingreturn space exclam quotedbl numbersign dollar percent ampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore grave a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde Adieresis Aring Ccedilla Eacute Ntilde Odieresis Udieresis aacute agrave acircumflex adieresis atilde aring ccedilla eacute egrave ecircumflex edieresis iacute igrave icircumflex idieresis ntilde oacute ograve ocircumflex odieresis otilde uacute ugrave ucircumflex udieresis dagger degree cent sterling section bullet paragraph germandbls registered copyright trademark acute dieresis notequal AE Oslash infinity plusminus lessequal greaterequal yen mu partialdiff summation product pi integral ordfeminine ordmasculine Omega ae oslash questiondown exclamdown logicalnot radical florin approxequal Delta guillemotleft guillemotright ellipsis nonbreakingspace Agrave Atilde Otilde OE oe endash emdash quotedblleft quotedblright quoteleft quoteright divide lozenge ydieresis Ydieresis fraction currency guilsinglleft guilsinglright fi fl daggerdbl periodcentered quotesinglbase quotedblbase perthousand Acircumflex Ecircumflex Aacute Edieresis Egrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex apple Ograve Uacute Ucircumflex Ugrave dotlessi circumflex tilde macron breve dotaccent ring cedilla hungarumlaut ogonek caron Lslash lslash Scaron scaron Zcaron zcaron brokenbar Eth eth Yacute yacute Thorn thorn minus multiply onesuperior twosuperior threesuperior onehalf onequarter threequarters franc Gbreve gbreve Idotaccent Scedilla scedilla Cacute cacute Ccaron ccaron dcroat\".split(/\\s+/g);\n\n        return (function (Table) {\n            function anonymous () {\n                Table.apply(this, arguments);\n            }\n\n            extendStatic(anonymous, Table);\n            anonymous.prototype = Object.create( Table && Table.prototype );\n            anonymous.prototype.constructor = anonymous;\n            anonymous.fn = anonymous.prototype;\n            anonymous.fn.init = anonymous.fn.constructor;\n\n            anonymous.prototype.parse = function parse (data) {\n                var this$1$1 = this;\n\n                data.offset(this.offset);\n\n                this.format = data.readLong();\n                this.italicAngle = data.readFixed_();\n                this.underlinePosition = data.readShort_();\n                this.underlineThickness = data.readShort_();\n                this.isFixedPitch = data.readLong();\n                this.minMemType42 = data.readLong();\n                this.maxMemType42 = data.readLong();\n                this.minMemType1 = data.readLong();\n                this.maxMemType1 = data.readLong();\n\n                var numberOfGlyphs;\n\n                switch (this.format) {\n                  case 0x00010000:\n                  case 0x00030000:\n                    break;\n\n                  case 0x00020000:\n                    numberOfGlyphs = data.readShort();\n                    this.glyphNameIndex = data.times(numberOfGlyphs, data.readShort);\n                    this.names = [];\n                    var limit = this.offset + this.length;\n                    while (data.offset() < limit) {\n                        this$1$1.names.push(data.readString(data.readByte()));\n                    }\n                    break;\n\n                  case 0x00025000:\n                    numberOfGlyphs = data.readShort();\n                    this.offsets = data.read(numberOfGlyphs);\n                    break;\n\n                  case 0x00040000:\n                    this.map = data.times(this.file.maxp.numGlyphs, data.readShort);\n                    break;\n                }\n            };\n\n            anonymous.prototype.glyphFor = function glyphFor (code) {\n                switch (this.format) {\n                  case 0x00010000:\n                    return POSTSCRIPT_GLYPHS[code] || \".notdef\";\n\n                  case 0x00020000:\n                    var index = this.glyphNameIndex[code];\n                    if (index < POSTSCRIPT_GLYPHS.length) {\n                        return POSTSCRIPT_GLYPHS[index];\n                    }\n                    return this.names[index - POSTSCRIPT_GLYPHS.length] || \".notdef\";\n\n                  case 0x00025000:\n\n                  case 0x00030000:\n                    return \".notdef\";\n\n                  case 0x00040000:\n                    return this.map[code] || 0xFFFF;\n                }\n            };\n\n            anonymous.prototype.render = function render (mapping) {\n                var this$1$1 = this;\n\n                if (this.format == 0x00030000) {\n                    return this.raw();\n                }\n\n                // keep original header, but set format to 2.0\n                var out = BinaryStream(this.rawData.slice(this.offset, 32));\n                out.writeLong(0x00020000);\n                out.offset(32);\n\n                var indexes = [];\n                var strings = [];\n\n                for (var i = 0; i < mapping.length; ++i) {\n                    var id = mapping[i];\n                    var post = this$1$1.glyphFor(id);\n                    var index = POSTSCRIPT_GLYPHS.indexOf(post);\n                    if (index >= 0) {\n                        indexes.push(index);\n                    } else {\n                        indexes.push(POSTSCRIPT_GLYPHS.length + strings.length);\n                        strings.push(post);\n                    }\n                }\n\n                out.writeShort(mapping.length);\n\n                for (i = 0; i < indexes.length; ++i) {\n                    out.writeShort(indexes[i]);\n                }\n\n                for (i = 0; i < strings.length; ++i) {\n                    out.writeByte(strings[i].length);\n                    out.writeString(strings[i]);\n                }\n\n                return out.get();\n            };\n\n            return anonymous;\n        }(Table));\n    })();\n\n    var CmapTable = (function(){\n        var CmapEntry = function CmapEntry(data, offset, codeMap) {\n            var self = this;\n            self.platformID = data.readShort();\n            self.platformSpecificID = data.readShort();\n            self.offset = offset + data.readLong();\n\n            data.saveExcursion(function(){\n                var code;\n                data.offset(self.offset);\n                self.format = data.readShort();\n\n                switch (self.format) {\n                case 0:\n                    self.length = data.readShort();\n                    self.language = data.readShort();\n                    for (var i = 0; i < 256; ++i) {\n                        codeMap[i] = data.readByte();\n                    }\n                    break;\n\n                case 4:\n                    self.length = data.readShort();\n                    self.language = data.readShort();\n                    var segCount = data.readShort() / 2;\n\n                    data.skip(6);   // searchRange, entrySelector, rangeShift\n                    var endCode = data.times(segCount, data.readShort);\n                    data.skip(2);   // reserved pad\n                    var startCode = data.times(segCount, data.readShort);\n                    var idDelta = data.times(segCount, data.readShort_);\n                    var idRangeOffset = data.times(segCount, data.readShort);\n\n                    var count = (self.length + self.offset - data.offset()) / 2;\n                    var glyphIds = data.times(count, data.readShort);\n\n                    for (i = 0; i < segCount; ++i) {\n                        var start = startCode[i], end = endCode[i];\n                        for (code = start; code <= end; ++code) {\n                            var glyphId;\n                            if (idRangeOffset[i] === 0) {\n                                glyphId = code + idDelta[i];\n                            } else {\n                                ///\n                                // When non-zero, idRangeOffset contains for each segment the byte offset of the Glyph ID\n                                // into the glyphIds table, from the *current* `i` cell of idRangeOffset.  In other words,\n                                // this offset spans from the first into the second array.  This works, because the arrays\n                                // are consecutive in the TTF file:\n                                //\n                                // [ ...idRangeOffset... ][ ...glyphIds... ]\n                                //   ...... 48 ......   .... ID ....\n                                //          ^----- 48 bytes -----^\n                                //\n                                // (but I can't stop wondering why is it not just a plain index, possibly incremented by 1\n                                // so that we can have that special `zero` value.)\n                                //\n                                // The elements of idRangeOffset are even numbers, because both arrays contain 16-bit words,\n                                // yet the offset is in bytes.  That is why we divide it by 2.  Then we subtract the\n                                // remaining segments (segCount-i), and add the code-start offset, to which we need to add\n                                // the corresponding delta to get the actual glyph ID.\n                                ///\n                                var index = idRangeOffset[i] / 2 - (segCount - i) + (code - start);\n                                glyphId = glyphIds[index] || 0;\n                                if (glyphId !== 0) {\n                                    glyphId += idDelta[i];\n                                }\n                            }\n                            codeMap[code] = glyphId & 0xFFFF;\n                        }\n                    }\n                    break;\n\n                case 6:\n                    self.length = data.readShort();\n                    self.language = data.readShort();\n                    code = data.readShort();\n                    var length = data.readShort();\n                    while (length-- > 0) {\n                        codeMap[code++] = data.readShort();\n                    }\n                    break;\n\n                case 12:\n                    data.readShort(); // reserved\n                    self.length = data.readLong();\n                    self.language = data.readLong();\n                    var ngroups = data.readLong();\n                    while (ngroups-- > 0) {\n                        code = data.readLong();\n                        var endCharCode = data.readLong();\n                        var glyphCode = data.readLong();\n                        while (code <= endCharCode) {\n                            codeMap[code++] = glyphCode++;\n                        }\n                    }\n                    break;\n\n                default:\n                    if (window.console) {\n                        window.console.error(\"Unhandled CMAP format: \" + self.format);\n                    }\n                }\n            });\n        };\n\n        function renderCharmap(ncid2ogid, ogid2ngid) {\n            var codes = sortedKeys(ncid2ogid);\n            var startCodes = [];\n            var endCodes = [];\n            var last = null;\n            var diff = null;\n\n            function new_gid(charcode) {\n                return ogid2ngid[ncid2ogid[charcode]];\n            }\n\n            for (var i = 0; i < codes.length; ++i) {\n                var code = codes[i];\n                var gid = new_gid(code);\n                var delta = gid - code;\n                if (last == null || delta !== diff) {\n                    if (last) {\n                        endCodes.push(last);\n                    }\n                    startCodes.push(code);\n                    diff = delta;\n                }\n                last = code;\n            }\n\n            if (last) {\n                endCodes.push(last);\n            }\n            endCodes.push(0xFFFF);\n            startCodes.push(0xFFFF);\n\n            var segCount = startCodes.length;\n            var segCountX2 = segCount * 2;\n            var searchRange = 2 * Math.pow(2, Math.floor(Math.log(segCount) / Math.LN2));\n            var entrySelector = Math.log(searchRange / 2) / Math.LN2;\n            var rangeShift = segCountX2 - searchRange;\n\n            var deltas = [];\n            var rangeOffsets = [];\n            var glyphIds = [];\n\n            for (i = 0; i < segCount; ++i) {\n                var startCode = startCodes[i];\n                var endCode = endCodes[i];\n                if (startCode == 0xFFFF) {\n                    deltas.push(0);\n                    rangeOffsets.push(0);\n                    break;\n                }\n                var startGlyph = new_gid(startCode);\n                if (startCode - startGlyph >= 0x8000) {\n                    deltas.push(0);\n                    rangeOffsets.push(2 * (glyphIds.length + segCount - i));\n                    for (var j = startCode; j <= endCode; ++j) {\n                        glyphIds.push(new_gid(j));\n                    }\n                } else {\n                    deltas.push(startGlyph - startCode);\n                    rangeOffsets.push(0);\n                }\n            }\n\n            var out = BinaryStream();\n\n            out.writeShort(3);      // platformID\n            out.writeShort(1);      // platformSpecificID\n            out.writeLong(12);      // offset\n            out.writeShort(4);      // format\n            out.writeShort(16 + segCount * 8 + glyphIds.length * 2); // length\n            out.writeShort(0);      // language\n            out.writeShort(segCountX2);\n            out.writeShort(searchRange);\n            out.writeShort(entrySelector);\n            out.writeShort(rangeShift);\n\n            endCodes.forEach(out.writeShort);\n            out.writeShort(0);      // reserved pad\n            startCodes.forEach(out.writeShort);\n            deltas.forEach(out.writeShort_);\n            rangeOffsets.forEach(out.writeShort);\n            glyphIds.forEach(out.writeShort);\n\n            return out.get();\n        }\n\n        return (function (Table) {\n            function anonymous () {\n                Table.apply(this, arguments);\n            }\n\n            extendStatic(anonymous, Table);\n            anonymous.prototype = Object.create( Table && Table.prototype );\n            anonymous.prototype.constructor = anonymous;\n            anonymous.fn = anonymous.prototype;\n            anonymous.fn.init = anonymous.fn.constructor;\n\n            anonymous.prototype.parse = function parse (data) {\n                var self = this;\n                var offset = self.offset;\n                data.offset(offset);\n                self.codeMap = {};\n                self.version = data.readShort();\n                var tableCount = data.readShort();\n                self.tables = data.times(tableCount, function(){\n                    return new CmapEntry(data, offset, self.codeMap);\n                });\n            };\n\n            anonymous.render = function render (ncid2ogid, ogid2ngid) {\n                var out = BinaryStream();\n                out.writeShort(0);  // version\n                out.writeShort(1);  // tableCount\n                out.write(renderCharmap(ncid2ogid, ogid2ngid));\n                return out.get();\n            };\n\n            return anonymous;\n        }(Table));\n\n    })();\n\n    var OS2Table = (function (Table) {\n        function OS2Table () {\n            Table.apply(this, arguments);\n        }\n\n        extendStatic(OS2Table, Table);\n        OS2Table.prototype = Object.create( Table && Table.prototype );\n        OS2Table.prototype.constructor = OS2Table;\n        OS2Table.fn = OS2Table.prototype;\n        OS2Table.fn.init = OS2Table.fn.constructor;\n\n        OS2Table.prototype.parse = function parse (data) {\n            data.offset(this.offset);\n            this.version = data.readShort();\n            this.averageCharWidth = data.readShort_();\n            this.weightClass = data.readShort();\n            this.widthClass = data.readShort();\n            this.type = data.readShort();\n            this.ySubscriptXSize = data.readShort_();\n            this.ySubscriptYSize = data.readShort_();\n            this.ySubscriptXOffset = data.readShort_();\n            this.ySubscriptYOffset = data.readShort_();\n            this.ySuperscriptXSize = data.readShort_();\n            this.ySuperscriptYSize = data.readShort_();\n            this.ySuperscriptXOffset = data.readShort_();\n            this.ySuperscriptYOffset = data.readShort_();\n            this.yStrikeoutSize = data.readShort_();\n            this.yStrikeoutPosition = data.readShort_();\n            this.familyClass = data.readShort_();\n\n            this.panose = data.times(10, data.readByte);\n            this.charRange = data.times(4, data.readLong);\n\n            this.vendorID = data.readString(4);\n            this.selection = data.readShort();\n            this.firstCharIndex = data.readShort();\n            this.lastCharIndex = data.readShort();\n\n            if (this.version > 0) {\n                this.ascent = data.readShort_();\n                this.descent = data.readShort_();\n                this.lineGap = data.readShort_();\n                this.winAscent = data.readShort();\n                this.winDescent = data.readShort();\n                this.codePageRange = data.times(2, data.readLong);\n\n                if (this.version > 1) {\n                    this.xHeight = data.readShort();\n                    this.capHeight = data.readShort();\n                    this.defaultChar = data.readShort();\n                    this.breakChar = data.readShort();\n                    this.maxContext = data.readShort();\n                }\n            }\n        };\n\n        OS2Table.prototype.render = function render () {\n            return this.raw();\n        };\n\n        return OS2Table;\n    }(Table));\n\n    var subsetTag = 100000;\n\n    function nextSubsetTag() {\n        var ret = \"\", n = String(subsetTag);\n        for (var i = 0; i < n.length; ++i) {\n            ret += String.fromCharCode(n.charCodeAt(i) - 48 + 65);\n        }\n        ++subsetTag;\n        return ret;\n    }\n\n    var Subfont = function Subfont(font) {\n        this.font = font;\n        this.subset = {};\n        this.unicodes = {};\n        this.ogid2ngid = { 0: 0 };\n        this.ngid2ogid = { 0: 0 };\n        this.ncid2ogid = {};\n        this.next = this.firstChar = 1;\n        this.nextGid = 1;\n        this.psName = nextSubsetTag() + \"+\" + this.font.psName;\n    };\n\n    Subfont.prototype.use = function use (ch) {\n        var self = this;\n        if (typeof ch == \"string\") {\n            return ucs2decode(ch).reduce(function(ret, code){\n                return ret + String.fromCharCode(self.use(code));\n            }, \"\");\n        }\n        var code = self.unicodes[ch];\n        if (!code) {\n            code = self.next++;\n            self.subset[code] = ch;\n            self.unicodes[ch] = code;\n\n            // generate new GID (glyph ID) and maintain newGID ->\n            // oldGID and back mappings\n            var old_gid = self.font.cmap.codeMap[ch];\n            if (old_gid) {\n                self.ncid2ogid[code] = old_gid;\n                if (self.ogid2ngid[old_gid] == null) {\n                    var new_gid = self.nextGid++;\n                    self.ogid2ngid[old_gid] = new_gid;\n                    self.ngid2ogid[new_gid] = old_gid;\n                }\n            }\n        }\n        return code;\n    };\n\n    Subfont.prototype.encodeText = function encodeText (text) {\n        return this.use(text);\n    };\n\n    Subfont.prototype.glyphIds = function glyphIds () {\n        return sortedKeys(this.ogid2ngid);\n    };\n\n    Subfont.prototype.glyphsFor = function glyphsFor (glyphIds, result) {\n            var this$1$1 = this;\n\n        if (!result) {\n            result = {};\n        }\n        for (var i = 0; i < glyphIds.length; ++i) {\n            var id = glyphIds[i];\n            if (!result[id]) {\n                var glyph = result[id] = this$1$1.font.glyf.glyphFor(id);\n                if (glyph && glyph.compound) {\n                    this$1$1.glyphsFor(glyph.glyphIds, result);\n                }\n            }\n        }\n        return result;\n    };\n\n    Subfont.prototype.render = function render () {\n            var this$1$1 = this;\n\n        var glyphs = this.glyphsFor(this.glyphIds());\n\n        // add missing sub-glyphs\n        for (var old_gid in glyphs) {\n            if (hasOwnProperty$1(glyphs, old_gid)) {\n                old_gid = parseInt(old_gid, 10);\n                if (this$1$1.ogid2ngid[old_gid] == null) {\n                    var new_gid = this$1$1.nextGid++;\n                    this$1$1.ogid2ngid[old_gid] = new_gid;\n                    this$1$1.ngid2ogid[new_gid] = old_gid;\n                }\n            }\n        }\n\n        // must obtain old_gid_ids in an order matching sorted\n        // new_gid_ids\n        var new_gid_ids = sortedKeys(this.ngid2ogid);\n        var old_gid_ids = new_gid_ids.map(function(id){\n            return this.ngid2ogid[id];\n        }, this);\n\n        var font = this.font;\n        var glyf = font.glyf.render(glyphs, old_gid_ids, this.ogid2ngid);\n        var loca = font.loca.render(glyf.offsets);\n\n        this.lastChar = this.next - 1;\n\n        var tables = {\n            \"cmap\" : CmapTable.render(this.ncid2ogid, this.ogid2ngid),\n            \"glyf\" : glyf.table,\n            \"loca\" : loca.table,\n            \"hmtx\" : font.hmtx.render(old_gid_ids),\n            \"hhea\" : font.hhea.render(old_gid_ids),\n            \"maxp\" : font.maxp.render(old_gid_ids),\n            \"post\" : font.post.render(old_gid_ids),\n            \"name\" : font.name.render(this.psName),\n            \"head\" : font.head.render(loca.format),\n            \"OS/2\" : font.os2.render()\n        };\n\n        return this.font.directory.render(tables);\n    };\n\n    Subfont.prototype.cidToGidMap = function cidToGidMap () {\n            var this$1$1 = this;\n\n        var out = BinaryStream(), len = 0;\n        for (var cid = this.firstChar; cid < this.next; ++cid) {\n            while (len < cid) {\n                out.writeShort(0);\n                len++;\n            }\n            var old_gid = this$1$1.ncid2ogid[cid];\n            if (old_gid) {\n                var new_gid = this$1$1.ogid2ngid[old_gid];\n                out.writeShort(new_gid);\n            } else {\n                out.writeShort(0);\n            }\n            len++;\n        }\n        return out.get();\n    };\n\n    var TTFFont = function TTFFont(rawData, name) {\n        var self = this;\n        var data = self.contents = BinaryStream(rawData);\n        if (data.readString(4) == \"ttcf\") {\n            var offset;\n            var parse = function() {\n                data.offset(offset);\n                self.parse();\n            };\n            if (!name) {\n                throw new Error(\"Must specify a name for TTC files\");\n            }\n            data.readLong();    // version\n            var numFonts = data.readLong();\n            for (var i = 0; i < numFonts; ++i) {\n                offset = data.readLong();\n                data.saveExcursion(parse);\n                if (self.psName == name) {\n                    return;\n                }\n            }\n            throw new Error(\"Font \" + name + \" not found in collection\");\n        } else {\n            data.offset(0);\n            self.parse();\n        }\n    };\n\n    TTFFont.prototype.parse = function parse () {\n        var dir = this.directory = new Directory(this.contents);\n\n        this.head = dir.readTable(\"head\", HeadTable);\n        this.loca = dir.readTable(\"loca\", LocaTable);\n        this.hhea = dir.readTable(\"hhea\", HheaTable);\n        this.maxp = dir.readTable(\"maxp\", MaxpTable);\n        this.hmtx = dir.readTable(\"hmtx\", HmtxTable);\n        this.glyf = dir.readTable(\"glyf\", GlyfTable);\n        this.name = dir.readTable(\"name\", NameTable);\n        this.post = dir.readTable(\"post\", PostTable);\n        this.cmap = dir.readTable(\"cmap\", CmapTable);\n        this.os2  = dir.readTable(\"OS/2\", OS2Table);\n\n        this.psName = this.name.postscriptName;\n        this.ascent = this.os2.ascent || this.hhea.ascent;\n        this.descent = this.os2.descent || this.hhea.descent;\n        this.lineGap = this.os2.lineGap || this.hhea.lineGap;\n        this.scale = 1000 / this.head.unitsPerEm;\n    };\n\n    TTFFont.prototype.widthOfGlyph = function widthOfGlyph (glyph) {\n        return this.hmtx.forGlyph(glyph).advance * this.scale;\n    };\n\n    TTFFont.prototype.makeSubset = function makeSubset () {\n        return new Subfont(this);\n    };\n\n    var fromCharCode = String.fromCharCode;\n\n    var BOM = '\\xfe\\xff';\n\n    // Encodes a string as UTF-8\n\n    function encodeUnit(codeUnit) {\n        return fromCharCode(codeUnit >> 8) + fromCharCode(codeUnit & 0x00ff);\n    }\n\n    // Encodes a string as UTF-16 big-endian\n    function encodeUTF16BE(input) {\n        var output = '';\n\n        for (var i = 0; i < input.length; i++) {\n            var c = input.charCodeAt(i);\n\n            if (c < 0xFFFF) {\n                output += encodeUnit(c);\n            } else {\n                var lead = ((c - 0x10000) >> 10) + 0xD800;\n                var trail = ((c - 0x10000) & 0x3FF) + 0xDC00;\n                output += encodeUnit(lead);\n                output += encodeUnit(trail);\n            }\n        }\n\n        return output;\n    }\n\n    /* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n    /* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n    /* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n    /* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n    var browser = kendo.support.browser;\n    var NL = \"\\n\";\n\n    var RESOURCE_COUNTER = 0;\n\n    var PAPER_SIZE = {\n        a0        : [ 2383.94 , 3370.39 ],\n        a1        : [ 1683.78 , 2383.94 ],\n        a2        : [ 1190.55 , 1683.78 ],\n        a3        : [ 841.89  , 1190.55 ],\n        a4        : [ 595.28  , 841.89  ],\n        a5        : [ 419.53  , 595.28  ],\n        a6        : [ 297.64  , 419.53  ],\n        a7        : [ 209.76  , 297.64  ],\n        a8        : [ 147.40  , 209.76  ],\n        a9        : [ 104.88  , 147.40  ],\n        a10       : [ 73.70   , 104.88  ],\n        b0        : [ 2834.65 , 4008.19 ],\n        b1        : [ 2004.09 , 2834.65 ],\n        b2        : [ 1417.32 , 2004.09 ],\n        b3        : [ 1000.63 , 1417.32 ],\n        b4        : [ 708.66  , 1000.63 ],\n        b5        : [ 498.90  , 708.66  ],\n        b6        : [ 354.33  , 498.90  ],\n        b7        : [ 249.45  , 354.33  ],\n        b8        : [ 175.75  , 249.45  ],\n        b9        : [ 124.72  , 175.75  ],\n        b10       : [ 87.87   , 124.72  ],\n        c0        : [ 2599.37 , 3676.54 ],\n        c1        : [ 1836.85 , 2599.37 ],\n        c2        : [ 1298.27 , 1836.85 ],\n        c3        : [ 918.43  , 1298.27 ],\n        c4        : [ 649.13  , 918.43  ],\n        c5        : [ 459.21  , 649.13  ],\n        c6        : [ 323.15  , 459.21  ],\n        c7        : [ 229.61  , 323.15  ],\n        c8        : [ 161.57  , 229.61  ],\n        c9        : [ 113.39  , 161.57  ],\n        c10       : [ 79.37   , 113.39  ],\n        executive : [ 521.86  , 756.00  ],\n        folio     : [ 612.00  , 936.00  ],\n        legal     : [ 612.00  , 1008.00 ],\n        letter    : [ 612.00  , 792.00  ],\n        tabloid   : [ 792.00  , 1224.00 ]\n    };\n\n    function makeOutput() {\n        var indentLevel = 0, output = BinaryStream();\n        function out() {\n            var arguments$1 = arguments;\n\n            for (var i = 0; i < arguments.length; ++i) {\n                var x = arguments$1[i];\n                if (x === undefined) {\n                    throw new Error(\"Cannot output undefined to PDF\");\n                }\n                else if (x instanceof PDFValue) {\n                    x.beforeRender(out);\n                    x.render(out);\n                }\n                else if (isArray(x)) {\n                    renderArray(x, out);\n                }\n                else if (isDate(x)) {\n                    renderDate(x, out);\n                }\n                else if (typeof x == \"number\") {\n                    if (isNaN(x)) {\n                        throw new Error(\"Cannot output NaN to PDF\");\n                    }\n                    // make sure it doesn't end up in exponent notation\n                    var num = x.toFixed(7);\n                    if (num.indexOf(\".\") >= 0) {\n                        num = num.replace(/\\.?0+$/, \"\");\n                    }\n                    if (num == \"-0\") {\n                        num = \"0\";\n                    }\n                    output.writeString(num);\n                }\n                else if (/string|boolean/.test(typeof x)) {\n                    output.writeString(String(x));\n                }\n                else if (typeof x.get == \"function\") {\n                    output.write(x.get());\n                }\n                else if (typeof x == \"object\") {\n                    if (!x) {\n                        output.writeString(\"null\");\n                    } else {\n                        out(new PDFDictionary(x));\n                    }\n                }\n            }\n        }\n        out.writeData = function(data) {\n            output.write(data);\n        };\n        out.withIndent = function(f) {\n            ++indentLevel;\n            f(out);\n            --indentLevel;\n        };\n        out.indent = function() {\n            out(NL, pad(\"\", indentLevel * 2, \"  \"));\n            out.apply(null, arguments);\n        };\n        out.offset = function() {\n            return output.offset();\n        };\n        out.toString = function() {\n            throw new Error(\"FIX CALLER\");\n        };\n        out.get = function() {\n            return output.get();\n        };\n        out.stream = function() {\n            return output;\n        };\n        return out;\n    }\n\n    function wrapObject(value, id) {\n        var beforeRender = value.beforeRender;\n        var renderValue = value.render;\n\n        value.beforeRender = function(){};\n\n        value.render = function(out) {\n            out(id, \" 0 R\");\n        };\n\n        value.renderFull = function(out) {\n            value._offset = out.offset();\n            out(id, \" 0 obj \");\n            beforeRender.call(value, out);\n            renderValue.call(value, out);\n            out(\" endobj\");\n        };\n    }\n\n    function getPaperOptions(getOption) {\n        if (typeof getOption != \"function\") {\n            var options = getOption;\n            getOption = function(key, def) {\n                return key in options ? options[key] : def;\n            };\n        }\n        var paperSize = getOption(\"paperSize\", PAPER_SIZE.a4);\n        if (!paperSize) {\n            return {};\n        }\n        if (typeof paperSize == \"string\") {\n            paperSize = PAPER_SIZE[paperSize.toLowerCase()];\n            if (paperSize == null) {\n                throw new Error(\"Unknown paper size\");\n            }\n        }\n\n        paperSize[0] = unitsToPoints(paperSize[0]);\n        paperSize[1] = unitsToPoints(paperSize[1]);\n\n        if (getOption(\"landscape\", false)) {\n            paperSize = [\n                Math.max(paperSize[0], paperSize[1]),\n                Math.min(paperSize[0], paperSize[1])\n            ];\n        }\n\n        var margin = getOption(\"margin\");\n        if (margin) {\n            if (typeof margin == \"string\" || typeof margin == \"number\") {\n                margin = unitsToPoints(margin, 0);\n                margin = { left: margin, top: margin, right: margin, bottom: margin };\n            } else {\n                margin = {\n                    left   : unitsToPoints(margin.left, 0),\n                    top    : unitsToPoints(margin.top, 0),\n                    right  : unitsToPoints(margin.right, 0),\n                    bottom : unitsToPoints(margin.bottom, 0)\n                };\n            }\n            if (getOption(\"addMargin\")) {\n                paperSize[0] += margin.left + margin.right;\n                paperSize[1] += margin.top + margin.bottom;\n            }\n        }\n        return { paperSize: paperSize, margin: margin };\n    }\n\n    var FONT_CACHE = {\n        \"Times-Roman\"           : true,\n        \"Times-Bold\"            : true,\n        \"Times-Italic\"          : true,\n        \"Times-BoldItalic\"      : true,\n        \"Helvetica\"             : true,\n        \"Helvetica-Bold\"        : true,\n        \"Helvetica-Oblique\"     : true,\n        \"Helvetica-BoldOblique\" : true,\n        \"Courier\"               : true,\n        \"Courier-Bold\"          : true,\n        \"Courier-Oblique\"       : true,\n        \"Courier-BoldOblique\"   : true,\n        \"Symbol\"                : true,\n        \"ZapfDingbats\"          : true\n    };\n\n    function loadBinary(url, cont) {\n        // IE throws Accesss denied error for Data URIs\n        var m;\n        if (browser.msie && (m = /^data:.*?;base64,/i.exec(url))) {\n            cont(base64ToUint8Array(url.substr(m[0].length)));\n            return;\n        }\n\n        function error() {\n            if (window.console) {\n                if (window.console.error) {\n                    window.console.error(\"Cannot load URL: %s\", url);\n                } else {\n                    window.console.log(\"Cannot load URL: %s\", url);\n                }\n            }\n            cont(null);\n        }\n        var req = new XMLHttpRequest();\n        req.open('GET', url, true);\n        if (HAS_TYPED_ARRAYS) {\n            req.responseType = \"arraybuffer\";\n        }\n        req.onload = function() {\n            if (req.status == 200 || req.status == 304) {\n                if (HAS_TYPED_ARRAYS) {\n                    cont(new Uint8Array(req.response));\n                } else {\n                    cont(new window.VBArray(req.responseBody).toArray()); // IE9 only\n                }\n            } else {\n                error();\n            }\n        };\n        req.onerror = error;\n        req.send(null);\n    }\n\n    function loadFont(url, cont) {\n        var font = FONT_CACHE[url];\n        if (font) {\n            cont(font);\n        } else {\n            loadBinary(url, function(data){\n                if (data == null) {\n                    throw new Error(\"Cannot load font from \" + url);\n                } else {\n                    var font = new TTFFont(data);\n                    FONT_CACHE[url] = font;\n                    cont(font);\n                }\n            });\n        }\n    }\n\n    var IMAGE_CACHE = {};\n\n    function clearImageCache() {\n        IMAGE_CACHE = {};\n    }\n\n    function loadImage(url, size, cont, options) {\n        var img = IMAGE_CACHE[url], bloburl, blob;\n        if (img) {\n            cont(img);\n        } else {\n            img = new Image();\n            if (!(/^data:/i.test(url))) {\n                img.crossOrigin = \"Anonymous\";\n            }\n            if (HAS_TYPED_ARRAYS && !(/^data:/i.test(url))) {\n                // IE10 fails to load images from another domain even when the server sends the\n                // proper CORS headers.  a XHR, however, will be able to load the data.\n                // http://stackoverflow.com/a/19734516/154985\n                //\n                // On the other hand, it's worth doing it this way for all browsers which support\n                // responseType = \"blob\" (HAS_TYPED_ARRAYS will be true), because we can inspect the\n                // mime type and if it's a JPEG (very common case) we can save a lot of time in\n                // _load below.\n                var xhr = new XMLHttpRequest();\n                xhr.onload = function() {\n                    blob = xhr.response;\n                    if (browser.mozilla && blob.type == \"image/svg+xml\") {\n                        // Firefox won't render SVGs that don't contain width and height attributes.\n                        var reader = new FileReader();\n                        reader.onload = function() {\n                            var doc = new window.DOMParser().parseFromString(this.result, \"image/svg+xml\");\n                            var svg = doc.documentElement;\n                            if (svg.getAttribute(\"width\") && svg.getAttribute(\"height\")) {\n                                // we're good, continue with the existing blob.\n                                bloburl = URL.createObjectURL(blob);\n                                _load(bloburl);\n                            } else {\n                                svg.setAttribute(\"width\", size.width);\n                                svg.setAttribute(\"height\", size.height);\n                                var xml = new window.XMLSerializer().serializeToString(svg);\n                                var dataURL = \"data:image/svg+xml;base64,\" + (util.encodeBase64(xml));\n                                _load(dataURL);\n                            }\n                        };\n                        reader.readAsText(blob);\n                    } else {\n                        bloburl = URL.createObjectURL(blob);\n                        _load(bloburl);\n                    }\n                };\n                xhr.onerror = _onerror;\n                xhr.open(\"GET\", url, true);\n                xhr.responseType = \"blob\";\n                xhr.send();\n            } else {\n                _load(url);\n            }\n        }\n\n        function _load(url) {\n            img.src = url;\n            if (img.complete && !browser.msie) {\n                // IE, bless its little heart, says img.complete == true even though the image is\n                // not loaded (width=0), therefore we must go the onload route (ticket 929635).\n                _onload.call(img);\n            } else {\n                img.onload = _onload;\n                img.onerror = _onerror;\n            }\n        }\n\n        function _trycanvas() {\n            if (!size) {\n                size = { width: img.width, height: img.height };\n            }\n\n            var canvas = document.createElement(\"canvas\");\n            canvas.width = size.width;\n            canvas.height = size.height;\n\n            var ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0, size.width, size.height);\n\n            var imgdata;\n            try {\n                imgdata = ctx.getImageData(0, 0, size.width, size.height);\n            } catch (ex) {\n                // it tainted the canvas -- can't draw it.\n                _onerror();\n                return;\n            } finally {\n                if (bloburl) {\n                    URL.revokeObjectURL(bloburl);\n                }\n            }\n\n            // in case it contains transparency, we must separate rgb data from the alpha\n            // channel and create a PDFRawImage image with opacity.  otherwise we can use a\n            // PDFJpegImage.\n            //\n            // to do this in one step, we create the rgb and alpha streams anyway, even if\n            // we might end up not using them if hasAlpha remains false.\n\n            var hasAlpha = false, rgb = BinaryStream(), alpha = BinaryStream();\n            var rawbytes = imgdata.data;\n            var i = 0;\n            while (i < rawbytes.length) {\n                rgb.writeByte(rawbytes[i++]);\n                rgb.writeByte(rawbytes[i++]);\n                rgb.writeByte(rawbytes[i++]);\n                var a = rawbytes[i++];\n                if (a < 255) {\n                    hasAlpha = true;\n                }\n                alpha.writeByte(a);\n            }\n\n            if (hasAlpha || options.keepPNG) {\n                img = new PDFRawImage(size.width, size.height, rgb, alpha);\n            } else {\n                // no transparency, encode as JPEG.\n                var data = canvas.toDataURL(\"image/jpeg\", options.jpegQuality);\n                data = data.substr(data.indexOf(\";base64,\") + 8);\n\n                var stream = BinaryStream();\n                stream.writeBase64(data);\n                img = new PDFJpegImage(stream);\n            }\n\n            cont(IMAGE_CACHE[url] = img);\n        }\n\n        function _onerror() {\n            cont(IMAGE_CACHE[url] = \"ERROR\");\n        }\n\n        function _onload() {\n            if (size) {\n                var svg = (blob && blob.type === 'image/svg+xml') || (\n                  /^data:image\\/svg\\+xml;/i.test(this.src.substring(0, 19))\n                );\n\n                var upscale = size.width >= img.width || size.height >= img.height;\n\n                // Use the original image if requested size is bigger than the source,\n                // unless it's an SVG that can be upscaled.\n                if (!svg && upscale) {\n                    size = null;\n                }\n            }\n            if (!size && blob && /^image\\/jpe?g$/i.test(blob.type)) {\n                // If we know we got a JPEG, we can skip the process of rendering it to a\n                // canvas, getting the pixel data, searching for transparency we know we won't\n                // find, getting back a data URI and then decoding the BASE64 to finally get the\n                // binary we already have.  Also, we avoid downgrading the image quality, with\n                // the possible drawback of making a bigger PDF; still, seems legit.\n                //\n                // Besides saving a lot of work, this also reuses the buffer memory\n                // (BinaryStream does not create a copy), potentially saving some GC cycles.\n                var reader = new FileReader();\n                reader.onload = function() {\n                    try {\n                        var img = new PDFJpegImage(BinaryStream(new Uint8Array(this.result)));\n                        URL.revokeObjectURL(bloburl);\n                        cont(IMAGE_CACHE[url] = img);\n                    } catch (ex) {\n                        // if there's an error parsing the JPEG stream, it could be due to a\n                        // misconfigured server (improper content-type:\n                        // https://github.com/telerik/kendo-ui-core/issues/4184).  If that's the case,\n                        // the canvas will still be able to draw it.\n                        _trycanvas();\n                    }\n                };\n                reader.readAsArrayBuffer(blob);\n            } else {\n                _trycanvas();\n            }\n        }\n    }\n\n    function manyLoader(loadOne) {\n        return function(urls, callback) {\n            var n = urls.length, i = n;\n            if (n === 0) {\n                return callback();\n            }\n            function next() {\n                if (--n === 0) {\n                    callback();\n                }\n            }\n            while (i-- > 0) {\n                loadOne(urls[i], next);\n            }\n        };\n    }\n\n    var loadFonts = manyLoader(loadFont);\n    var loadImages = function(images, callback, options) {\n        options = $.extend({\n            jpegQuality : 0.92,\n            keepPNG     : false\n        }, options);\n        var urls = Object.keys(images), n = urls.length;\n        if (n === 0) {\n            return callback();\n        }\n        function next() {\n            if (--n === 0) {\n                callback();\n            }\n        }\n        urls.forEach(function(url){\n            loadImage(url, images[url], next, options);\n        });\n    };\n\n    var PDFDocument = function PDFDocument (options) {\n        var self = this;\n        var out = makeOutput();\n        var objcount = 0;\n        var objects = [];\n\n        function getOption(name, defval) {\n            return (options && options[name] != null) ? options[name] : defval;\n        }\n\n        self.getOption = getOption;\n\n        self.attach = function(value) {\n            if (objects.indexOf(value) < 0) {\n                wrapObject(value, ++objcount);\n                objects.push(value);\n            }\n            return value;\n        };\n\n        self.pages = [];\n\n        self.FONTS = {};\n        self.IMAGES = {};\n        self.GRAD_COL_FUNCTIONS = {}; // cache for color gradient functions\n        self.GRAD_OPC_FUNCTIONS = {}; // cache for opacity gradient functions\n        self.GRAD_COL = {}; // cache for whole color gradient objects\n        self.GRAD_OPC = {}; // cache for whole opacity gradient objects\n\n        var catalog = self.attach(new PDFCatalog());\n        var pageTree = self.attach(new PDFPageTree());\n\n        if (getOption(\"autoPrint\")) {\n            var nameTree = {};\n            nameTree.JavaScript = new PDFDictionary({ Names: [\n                new PDFString(\"JS\"), self.attach(new PDFDictionary({\n                    S: _(\"JavaScript\"),\n                    JS: new PDFString(\"print(true);\")\n                }))\n            ] });\n            catalog.props.Names = new PDFDictionary(nameTree);\n        }\n\n        catalog.setPages(pageTree);\n\n        var info = self.attach(new PDFDictionary({\n            Producer : new PDFString(getOption(\"producer\", \"Kendo UI PDF Generator\"), true), // XXX: kendo.version?\n            Title    : new PDFString(getOption(\"title\", \"\"), true),\n            Author   : new PDFString(getOption(\"author\", \"\"), true),\n            Subject  : new PDFString(getOption(\"subject\", \"\"), true),\n            Keywords : new PDFString(getOption(\"keywords\", \"\"), true),\n            Creator  : new PDFString(getOption(\"creator\", \"Kendo UI PDF Generator\"), true),\n            CreationDate : getOption(\"date\", new Date())\n        }));\n\n        self.addPage = function(options) {\n            var paperOptions  = getPaperOptions(function(name, defval){\n                return (options && options[name] != null) ? options[name] : defval;\n            });\n            var paperSize = paperOptions.paperSize;\n            var margin    = paperOptions.margin;\n            var contentWidth  = paperSize[0];\n            var contentHeight = paperSize[1];\n            if (margin) {\n                contentWidth -= margin.left + margin.right;\n                contentHeight -= margin.top + margin.bottom;\n            }\n            var content = new PDFStream(makeOutput(), null, true);\n            var props = {\n                Contents : self.attach(content),\n                Parent   : pageTree,\n                MediaBox : [ 0, 0, paperSize[0], paperSize[1] ]\n            };\n            var page = new PDFPage(self, props);\n            page._content = content;\n            pageTree.addPage(self.attach(page));\n\n            // canvas-like coord. system.  (0,0) is upper-left.\n            // text must be vertically mirorred before drawing.\n            page.transform(1, 0, 0, -1, 0, paperSize[1]);\n\n            if (margin) {\n                page.translate(margin.left, margin.top);\n                // XXX: clip to right/bottom margin.  Make this optional?\n                page.rect(0, 0, contentWidth, contentHeight);\n                page.clip();\n            }\n\n            self.pages.push(page);\n            return page;\n        };\n\n        self.render = function() {\n            var i;\n            /// file header\n            out(\"%PDF-1.4\", NL, \"%\\xc2\\xc1\\xda\\xcf\\xce\", NL, NL);\n\n            /// file body\n            for (i = 0; i < objects.length; ++i) {\n                objects[i].renderFull(out);\n                out(NL, NL);\n            }\n\n            /// cross-reference table\n            var xrefOffset = out.offset();\n            out(\"xref\", NL, 0, \" \", objects.length + 1, NL);\n            out(\"0000000000 65535 f \", NL);\n            for (i = 0; i < objects.length; ++i) {\n                out(zeropad(objects[i]._offset, 10), \" 00000 n \", NL);\n            }\n            out(NL);\n\n            /// trailer\n            out(\"trailer\", NL);\n            out(new PDFDictionary({\n                Size: objects.length + 1,\n                Root: catalog,\n                Info: info\n            }), NL, NL);\n\n            /// end\n            out(\"startxref\", NL, xrefOffset, NL);\n            out(\"%%EOF\", NL);\n\n            return out.stream().offset(0);\n        };\n\n        self.loadFonts = loadFonts;\n        self.loadImages = loadImages;\n    };\n\n    PDFDocument.prototype.getFont = function getFont (url) {\n        var font = this.FONTS[url];\n        if (!font) {\n            font = FONT_CACHE[url];\n            if (!font) {\n                throw new Error(\"Font \" + url + \" has not been loaded\");\n            }\n            if (font === true) {\n                font = this.attach(new PDFStandardFont(url));\n            } else {\n                font = this.attach(new PDFFont(this, font));\n            }\n            this.FONTS[url] = font;\n        }\n        return font;\n    };\n\n    PDFDocument.prototype.getImage = function getImage (url) {\n        var img = this.IMAGES[url];\n        if (!img) {\n            img = IMAGE_CACHE[url];\n            if (!img) {\n                throw new Error(\"Image \" + url + \" has not been loaded\");\n            }\n            if (img === \"ERROR\") {\n                return null;\n            }\n            img = this.IMAGES[url] = this.attach(img.asStream(this));\n        }\n        return img;\n    };\n\n    PDFDocument.prototype.getOpacityGS = function getOpacityGS (opacity, forStroke) {\n        var id = parseFloat(opacity).toFixed(3);\n        opacity = parseFloat(id);\n        id += forStroke ? \"S\" : \"F\";\n        var cache = this._opacityGSCache || (this._opacityGSCache = {});\n        var gs = cache[id];\n        if (!gs) {\n            var props = {\n                Type: _(\"ExtGState\")\n            };\n            if (forStroke) {\n                props.CA = opacity;\n            } else {\n                props.ca = opacity;\n            }\n            gs = this.attach(new PDFDictionary(props));\n            gs._resourceName = _(\"GS\" + (++RESOURCE_COUNTER));\n            cache[id] = gs;\n        }\n        return gs;\n    };\n\n    PDFDocument.prototype.dict = function dict (props) {\n        return new PDFDictionary(props);\n    };\n\n    PDFDocument.prototype.name = function name (str) {\n        return _(str);\n    };\n\n    PDFDocument.prototype.stream = function stream (props, content) {\n        return new PDFStream(content, props);\n    };\n\n    /* -----[ utils ]----- */\n\n    function pad(str, len, ch) {\n        while (str.length < len) {\n            str = ch + str;\n        }\n        return str;\n    }\n\n    function zeropad(n, len) {\n        return pad(String(n), len, \"0\");\n    }\n\n    function hasOwnProperty(obj, key) {\n        return Object.prototype.hasOwnProperty.call(obj, key);\n    }\n\n    var isArray = Array.isArray || function(obj) {\n        return obj instanceof Array;\n    };\n\n    function isDate(obj) {\n        return obj instanceof Date;\n    }\n\n    function renderArray(a, out) {\n        out(\"[\");\n        if (a.length > 0) {\n            out.withIndent(function(){\n                for (var i = 0; i < a.length; ++i) {\n                    if (i > 0 && i % 8 === 0) {\n                        out.indent(a[i]);\n                    } else {\n                        out(\" \", a[i]);\n                    }\n                }\n            });\n            //out.indent();\n        }\n        out(\" ]\");\n    }\n\n    function renderDate(date, out) {\n        out(\"(D:\",\n            zeropad(date.getUTCFullYear(), 4),\n            zeropad(date.getUTCMonth() + 1, 2),\n            zeropad(date.getUTCDate(), 2),\n            zeropad(date.getUTCHours(), 2),\n            zeropad(date.getUTCMinutes(), 2),\n            zeropad(date.getUTCSeconds(), 2),\n            \"Z)\");\n    }\n\n    function mm2pt(mm) {\n        return mm * (72/25.4);\n    }\n\n    function cm2pt(cm) {\n        return mm2pt(cm * 10);\n    }\n\n    function in2pt(inch)  {\n        return inch * 72;\n    }\n\n    function unitsToPoints(x, def) {\n        if (typeof x == \"number\") {\n            return x;\n        }\n        if (typeof x == \"string\") {\n            var m;\n            m = /^\\s*([0-9.]+)\\s*(mm|cm|in|pt)\\s*$/.exec(x);\n            if (m) {\n                var num = parseFloat(m[1]);\n                if (!isNaN(num)) {\n                    if (m[2] == \"pt\") {\n                        return num;\n                    }\n                    return {\n                        \"mm\": mm2pt,\n                        \"cm\": cm2pt,\n                        \"in\": in2pt\n                    }[m[2]](num);\n                }\n            }\n        }\n        if (def != null) {\n            return def;\n        }\n        throw new Error(\"Can't parse unit: \" + x);\n    }\n\n    /* -----[ PDF basic objects ]----- */\n\n    var PDFValue = function PDFValue () {};\n\n    PDFValue.prototype.beforeRender = function beforeRender () {};\n\n    var PDFString = (function (PDFValue) {\n        function PDFString(value, utf16be) {\n            PDFValue.call(this);\n            this.value = value;\n            this.utf16be = Boolean(utf16be);\n        }\n\n        extendStatic(PDFString, PDFValue);\n        PDFString.prototype = Object.create( PDFValue && PDFValue.prototype );\n        PDFString.prototype.constructor = PDFString;\n        PDFString.fn = PDFString.prototype;\n        PDFString.fn.init = PDFString.fn.constructor;\n\n        PDFString.prototype.render = function render (out) {\n            var txt = this.value;\n            if (this.utf16be) {\n                txt = BOM + encodeUTF16BE(txt);\n                txt = txt.replace(/([\\(\\)\\\\])/g, \"\\\\$1\");\n                out(\"(\", txt, \")\");\n            } else {\n                // out.writeString truncates charcodes to 8 bits and\n                // 0x128 & 0xFF is 40, the code for open paren.\n                // therefore we need to do the chopping here to make\n                // sure we backslash all cases.\n                var data = [ 40 ]; // open PDF string '('\n                for (var i = 0; i < txt.length; ++i) {\n                    var code = txt.charCodeAt(i) & 0xFF;\n                    if (code == 40 || code == 41 || code == 92) {\n                        // backslash before (, ) and \\\n                        data.push(92);\n                    }\n                    data.push(code);\n                }\n                data.push(41);  // ')' close PDF string\n                out.writeData(data);\n            }\n        };\n\n        PDFString.prototype.toString = function toString () {\n            return this.value;\n        };\n\n        return PDFString;\n    }(PDFValue));\n\n    var PDFHexString = (function (PDFString) {\n        function PDFHexString(value) {\n            PDFString.call(this, value);\n            this.value = value;\n        }\n\n        extendStatic(PDFHexString, PDFString);\n        PDFHexString.prototype = Object.create( PDFString && PDFString.prototype );\n        PDFHexString.prototype.constructor = PDFHexString;\n        PDFHexString.fn = PDFHexString.prototype;\n        PDFHexString.fn.init = PDFHexString.fn.constructor;\n\n        PDFHexString.prototype.render = function render (out) {\n            var this$1$1 = this;\n\n            out(\"<\");\n            for (var i = 0; i < this.value.length; ++i) {\n                out(zeropad(this$1$1.value.charCodeAt(i).toString(16), 4));\n            }\n            out(\">\");\n        };\n\n        return PDFHexString;\n    }(PDFString));\n\n    /// names\n    var PDFName = (function (PDFValue) {\n        function PDFName(name) {\n            PDFValue.call(this);\n            this.name = name;\n        }\n\n        extendStatic(PDFName, PDFValue);\n        PDFName.prototype = Object.create( PDFValue && PDFValue.prototype );\n        PDFName.prototype.constructor = PDFName;\n        PDFName.fn = PDFName.prototype;\n        PDFName.fn.init = PDFName.fn.constructor;\n\n        PDFName.get = function get (name) {\n            return _(name);\n        };\n\n        PDFName.prototype.render = function render (out) {\n            out(\"/\" + this.escape());\n        };\n\n        PDFName.prototype.escape = function escape () {\n            return this.name.replace(/[^\\x21-\\x7E]/g, function(c){\n                return \"#\" + zeropad(c.charCodeAt(0).toString(16), 2);\n            });\n        };\n\n        PDFName.prototype.toString = function toString () {\n            return this.name;\n        };\n\n        return PDFName;\n    }(PDFValue));\n\n    function _(name) {\n        return new PDFName(name);\n    }\n\n    /// dictionary\n\n    var PDFDictionary = (function (PDFValue) {\n        function PDFDictionary(props) {\n            PDFValue.call(this);\n            this.props = props;\n        }\n\n        extendStatic(PDFDictionary, PDFValue);\n        PDFDictionary.prototype = Object.create( PDFValue && PDFValue.prototype );\n        PDFDictionary.prototype.constructor = PDFDictionary;\n        PDFDictionary.fn = PDFDictionary.prototype;\n        PDFDictionary.fn.init = PDFDictionary.fn.constructor;\n\n        PDFDictionary.prototype.render = function render (out) {\n            var props = this.props, empty = true;\n            out(\"<<\");\n            out.withIndent(function(){\n                for (var i in props) {\n                    if (hasOwnProperty(props, i) && !/^_/.test(i)) {\n                        empty = false;\n                        out.indent(_(i), \" \", props[i]);\n                    }\n                }\n            });\n            if (!empty) {\n                out.indent();\n            }\n            out(\">>\");\n        };\n\n        return PDFDictionary;\n    }(PDFValue));\n\n    /// streams\n\n    var PDFStream = (function (PDFValue) {\n        function PDFStream(data, props, compress) {\n            PDFValue.call(this);\n            if (typeof data == \"string\") {\n                var tmp = BinaryStream();\n                tmp.write(data);\n                data = tmp;\n            }\n            this.data = data;\n            this.props = props || {};\n            this.compress = compress;\n        }\n\n        extendStatic(PDFStream, PDFValue);\n        PDFStream.prototype = Object.create( PDFValue && PDFValue.prototype );\n        PDFStream.prototype.constructor = PDFStream;\n        PDFStream.fn = PDFStream.prototype;\n        PDFStream.fn.init = PDFStream.fn.constructor;\n\n        PDFStream.prototype.render = function render (out) {\n            var data = this.data.get(), props = this.props;\n            if (this.compress && kendoPdf.supportsDeflate()) {\n                if (!props.Filter) {\n                    props.Filter = [];\n                } else if (!(props.Filter instanceof Array)) {\n                    props.Filter = [ props.Filter ];\n                }\n                props.Filter.unshift(_(\"FlateDecode\"));\n                data = kendoPdf.deflate(data);\n            }\n            props.Length = data.length;\n            out(new PDFDictionary(props), \" stream\", NL);\n            out.writeData(data);\n            out(NL, \"endstream\");\n        };\n\n        return PDFStream;\n    }(PDFValue));\n\n    /// catalog\n\n    var PDFCatalog = (function (PDFDictionary) {\n        function PDFCatalog() {\n            PDFDictionary.call(this, {\n                Type: _(\"Catalog\")\n            });\n        }\n\n        extendStatic(PDFCatalog, PDFDictionary);\n        PDFCatalog.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n        PDFCatalog.prototype.constructor = PDFCatalog;\n        PDFCatalog.fn = PDFCatalog.prototype;\n        PDFCatalog.fn.init = PDFCatalog.fn.constructor;\n\n        PDFCatalog.prototype.setPages = function setPages (pagesObj) {\n            this.props.Pages = pagesObj;\n        };\n\n        return PDFCatalog;\n    }(PDFDictionary));\n\n    /// page tree\n\n    var PDFPageTree = (function (PDFDictionary) {\n        function PDFPageTree() {\n            PDFDictionary.call(this, {\n                Type  : _(\"Pages\"),\n                Kids  : [],\n                Count : 0\n            });\n        }\n\n        extendStatic(PDFPageTree, PDFDictionary);\n        PDFPageTree.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n        PDFPageTree.prototype.constructor = PDFPageTree;\n        PDFPageTree.fn = PDFPageTree.prototype;\n        PDFPageTree.fn.init = PDFPageTree.fn.constructor;\n\n        PDFPageTree.prototype.addPage = function addPage (pageObj) {\n            this.props.Kids.push(pageObj);\n            this.props.Count++;\n        };\n\n        return PDFPageTree;\n    }(PDFDictionary));\n\n    /// images\n\n    // JPEG\n\n    var SOF_CODES = [0xc0, 0xc1, 0xc2, 0xc3, 0xc5, 0xc6, 0xc7, 0xc9, 0xca, 0xcb, 0xcd, 0xce, 0xcf];\n\n    var PDFJpegImage = function PDFJpegImage(data) {\n        // we must determine the correct color space.  we'll parse a bit\n        // of the JPEG stream for this, it's still better than going\n        // through the canvas.\n        // https://github.com/telerik/kendo-ui-core/issues/2845\n        data.offset(0);\n        var width, height, colorSpace, bitsPerComponent;\n        var soi = data.readShort();\n        if (soi != 0xFFD8) {\n            // XXX: do we have some better options here?\n            throw new Error(\"Invalid JPEG image\");\n        }\n        while (!data.eof()) {\n            var ff = data.readByte();\n            if (ff != 0xFF) {\n                throw new Error(\"Invalid JPEG image\");\n            }\n            var marker = data.readByte();\n            var length = data.readShort();\n            if (SOF_CODES.indexOf(marker) >= 0) {\n                // \"start of frame\" marker\n                bitsPerComponent = data.readByte();\n                height = data.readShort();\n                width = data.readShort();\n                colorSpace = data.readByte();\n                break;\n            }\n            data.skip(length - 2);\n        }\n\n        if (colorSpace == null) {\n            throw new Error(\"Invalid JPEG image\");\n        }\n\n        var props = {\n            Type         : _(\"XObject\"),\n            Subtype      : _(\"Image\"),\n            Width        : width,\n            Height       : height,\n            BitsPerComponent : bitsPerComponent,\n            Filter       : _(\"DCTDecode\")\n        };\n\n        switch (colorSpace) {\n        case 1:\n            props.ColorSpace = _(\"DeviceGray\");\n            break;\n        case 3:\n            props.ColorSpace = _(\"DeviceRGB\");\n            break;\n        case 4:\n            props.ColorSpace = _(\"DeviceCMYK\");\n            props.Decode = [ 1, 0, 1, 0, 1, 0, 1, 0 ]; // invert colors\n            break;\n        }\n\n        this.asStream = function() {\n            data.offset(0);\n            var stream = new PDFStream(data, props);\n            stream._resourceName = _(\"I\" + (++RESOURCE_COUNTER));\n            return stream;\n        };\n    };\n\n    // PDFRawImage will be used for images with transparency (PNG)\n\n    var PDFRawImage = function PDFRawImage(width, height, rgb, alpha) {\n        this.asStream = function(pdf) {\n            var mask = new PDFStream(alpha, {\n                Type         : _(\"XObject\"),\n                Subtype      : _(\"Image\"),\n                Width        : width,\n                Height       : height,\n                BitsPerComponent : 8,\n                ColorSpace   : _(\"DeviceGray\")\n            }, true);\n            var stream = new PDFStream(rgb, {\n                Type         : _(\"XObject\"),\n                Subtype      : _(\"Image\"),\n                Width        : width,\n                Height       : height,\n                BitsPerComponent : 8,\n                ColorSpace   : _(\"DeviceRGB\"),\n                SMask        : pdf.attach(mask)\n            }, true);\n            stream._resourceName = _(\"I\" + (++RESOURCE_COUNTER));\n            return stream;\n        };\n    };\n\n    /// standard fonts\n\n    var PDFStandardFont = (function (PDFDictionary) {\n        function PDFStandardFont(name){\n            PDFDictionary.call(this, {\n                Type     : _(\"Font\"),\n                Subtype  : _(\"Type1\"),\n                BaseFont : _(name)\n            });\n\n            this._resourceName = _(\"F\" + (++RESOURCE_COUNTER));\n        }\n\n        extendStatic(PDFStandardFont, PDFDictionary);\n        PDFStandardFont.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n        PDFStandardFont.prototype.constructor = PDFStandardFont;\n        PDFStandardFont.fn = PDFStandardFont.prototype;\n        PDFStandardFont.fn.init = PDFStandardFont.fn.constructor;\n\n        PDFStandardFont.prototype.encodeText = function encodeText (str) {\n            return new PDFString(String(str));\n        };\n\n        return PDFStandardFont;\n    }(PDFDictionary));\n\n    /// TTF fonts\n\n    var PDFFont = (function (PDFDictionary) {\n        function PDFFont(pdf, font, props){\n            PDFDictionary.call(this, {});\n\n            props = this.props;\n            props.Type = _(\"Font\");\n            props.Subtype = _(\"Type0\");\n            props.Encoding = _(\"Identity-H\");\n\n            this._pdf = pdf;\n            this._font = font;\n            this._sub = font.makeSubset();\n            this._resourceName = _(\"F\" + (++RESOURCE_COUNTER));\n\n            var head = font.head;\n\n            this.name = font.psName;\n            var scale = this.scale = font.scale;\n            this.bbox = [\n                head.xMin * scale,\n                head.yMin * scale,\n                head.xMax * scale,\n                head.yMax * scale\n            ];\n\n            this.italicAngle = font.post.italicAngle;\n            this.ascent = font.ascent * scale;\n            this.descent = font.descent * scale;\n            this.lineGap = font.lineGap * scale;\n            this.capHeight = font.os2.capHeight || this.ascent;\n            this.xHeight = font.os2.xHeight || 0;\n            this.stemV = 0;\n\n            this.familyClass = (font.os2.familyClass || 0) >> 8;\n            this.isSerif = this.familyClass >= 1 && this.familyClass <= 7;\n            this.isScript = this.familyClass == 10;\n\n            this.flags = ((font.post.isFixedPitch ? 1 : 0) |\n                        (this.isSerif ? 1 << 1 : 0) |\n                        (this.isScript ? 1 << 3 : 0) |\n                        (this.italicAngle !== 0 ? 1 << 6 : 0) |\n                        (1 << 5));\n            }\n\n        extendStatic(PDFFont, PDFDictionary);\n        PDFFont.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n        PDFFont.prototype.constructor = PDFFont;\n        PDFFont.fn = PDFFont.prototype;\n        PDFFont.fn.init = PDFFont.fn.constructor;\n\n            PDFFont.prototype.encodeText = function encodeText (text) {\n                return new PDFHexString(this._sub.encodeText(String(text)));\n            };\n\n            PDFFont.prototype.getTextWidth = function getTextWidth (fontSize, text) {\n                var this$1$1 = this;\n\n                var width = 0, codeMap = this._font.cmap.codeMap;\n                for (var i = 0; i < text.length; ++i) {\n                    var glyphId = codeMap[text.charCodeAt(i)];\n                    width += this$1$1._font.widthOfGlyph(glyphId || 0);\n                }\n                return width * fontSize / 1000;\n            };\n\n            PDFFont.prototype.beforeRender = function beforeRender () {\n                var self = this;\n                var sub = self._sub;\n\n                // write the TTF data\n                var data = sub.render();\n                var fontStream = new PDFStream(BinaryStream(data), {\n                    Length1: data.length\n                }, true);\n\n                var descriptor = self._pdf.attach(new PDFDictionary({\n                    Type         : _(\"FontDescriptor\"),\n                    FontName     : _(self._sub.psName),\n                    FontBBox     : self.bbox,\n                    Flags        : self.flags,\n                    StemV        : self.stemV,\n                    ItalicAngle  : self.italicAngle,\n                    Ascent       : self.ascent,\n                    Descent      : self.descent,\n                    CapHeight    : self.capHeight,\n                    XHeight      : self.xHeight,\n                    FontFile2    : self._pdf.attach(fontStream)\n                }));\n\n                var cmap = sub.ncid2ogid;\n                var firstChar = sub.firstChar;\n                var lastChar = sub.lastChar;\n                var charWidths = [];\n                (function loop(i, chunk){\n                    if (i <= lastChar) {\n                        var gid = cmap[i];\n                        if (gid == null) {\n                            loop(i + 1);\n                        } else {\n                            if (!chunk) {\n                                charWidths.push(i, chunk = []);\n                            }\n                            chunk.push(self._font.widthOfGlyph(gid));\n                            loop(i + 1, chunk);\n                        }\n                    }\n                })(firstChar);\n\n                // As if two dictionaries weren't enough, we need another\n                // one, the \"descendant font\".  Only that one can be of\n                // Subtype CIDFontType2.  PDF is the X11 of document\n                // formats: portable but full of legacy that nobody cares\n                // about anymore.\n\n                var descendant = new PDFDictionary({\n                    Type: _(\"Font\"),\n                    Subtype: _(\"CIDFontType2\"),\n                    BaseFont: _(self._sub.psName),\n                    CIDSystemInfo: new PDFDictionary({\n                        Registry   : new PDFString(\"Adobe\"),\n                        Ordering   : new PDFString(\"Identity\"),\n                        Supplement : 0\n                    }),\n                    FontDescriptor: descriptor,\n                    FirstChar: firstChar,\n                    LastChar: lastChar,\n                    DW: Math.round(self._font.widthOfGlyph(0)),\n                    W: charWidths,\n                    CIDToGIDMap: self._pdf.attach(self._makeCidToGidMap())\n                });\n\n                var dict = self.props;\n                dict.BaseFont = _(self._sub.psName);\n                dict.DescendantFonts = [ self._pdf.attach(descendant) ];\n\n                // Compute the ToUnicode map so that apps can extract\n                // meaningful text from the PDF.\n                var unimap = new PDFToUnicodeCmap(firstChar, lastChar, sub.subset);\n                var unimapStream = new PDFStream(makeOutput(), null, true);\n                unimapStream.data(unimap);\n                dict.ToUnicode = self._pdf.attach(unimapStream);\n            };\n\n            PDFFont.prototype._makeCidToGidMap = function _makeCidToGidMap () {\n                return new PDFStream(BinaryStream(this._sub.cidToGidMap()), null, true);\n            };\n\n        return PDFFont;\n    }(PDFDictionary));\n\n    var PDFToUnicodeCmap = (function (PDFValue) {\n        function PDFToUnicodeCmap(firstChar, lastChar, map){\n            PDFValue.call(this);\n            this.firstChar = firstChar;\n            this.lastChar = lastChar;\n            this.map = map;\n        }\n\n        extendStatic(PDFToUnicodeCmap, PDFValue);\n        PDFToUnicodeCmap.prototype = Object.create( PDFValue && PDFValue.prototype );\n        PDFToUnicodeCmap.prototype.constructor = PDFToUnicodeCmap;\n        PDFToUnicodeCmap.fn = PDFToUnicodeCmap.prototype;\n        PDFToUnicodeCmap.fn.init = PDFToUnicodeCmap.fn.constructor;\n\n        PDFToUnicodeCmap.prototype.render = function render (out) {\n            out.indent(\"/CIDInit /ProcSet findresource begin\");\n            out.indent(\"12 dict begin\");\n            out.indent(\"begincmap\");\n            out.indent(\"/CIDSystemInfo <<\");\n            out.indent(\"  /Registry (Adobe)\");\n            out.indent(\"  /Ordering (UCS)\");\n            out.indent(\"  /Supplement 0\");\n            out.indent(\">> def\");\n            out.indent(\"/CMapName /Adobe-Identity-UCS def\");\n            out.indent(\"/CMapType 2 def\");\n            out.indent(\"1 begincodespacerange\");\n            out.indent(\"  <0000><ffff>\");\n            out.indent(\"endcodespacerange\");\n\n            var self = this;\n            out.indent(self.lastChar - self.firstChar + 1, \" beginbfchar\");\n            out.withIndent(function(){\n                for (var code = self.firstChar; code <= self.lastChar; ++code) {\n                    var unicode = self.map[code];\n                    var str = ucs2encode([ unicode ]);\n                    out.indent(\"<\", zeropad(code.toString(16), 4), \">\", \"<\");\n                    for (var i = 0; i < str.length; ++i) {\n                        out(zeropad(str.charCodeAt(i).toString(16), 4));\n                    }\n                    out(\">\");\n                }\n            });\n            out.indent(\"endbfchar\");\n\n            out.indent(\"endcmap\");\n            out.indent(\"CMapName currentdict /CMap defineresource pop\");\n            out.indent(\"end\");\n            out.indent(\"end\");\n        };\n\n        return PDFToUnicodeCmap;\n    }(PDFValue));\n\n    /// gradients\n\n    function makeHash(a) {\n        return a.map(function(x){\n            return isArray(x) ? makeHash(x)\n                : typeof x == \"number\" ? (Math.round(x * 1000) / 1000).toFixed(3)\n                : x;\n        }).join(\" \");\n    }\n\n    function cacheColorGradientFunction(pdf, r1, g1, b1, r2, g2, b2) {\n        var hash = makeHash([ r1, g1, b1, r2, g2, b2 ]);\n        var func = pdf.GRAD_COL_FUNCTIONS[hash];\n        if (!func) {\n            func = pdf.GRAD_COL_FUNCTIONS[hash] = pdf.attach(new PDFDictionary({\n                FunctionType: 2,\n                Domain: [ 0, 1 ],\n                Range: [ 0, 1, 0, 1, 0, 1 ],\n                N: 1,\n                C0: [ r1 , g1 , b1 ],\n                C1: [ r2 , g2 , b2 ]\n            }));\n        }\n        return func;\n    }\n\n    function cacheOpacityGradientFunction(pdf, a1, a2) {\n        var hash = makeHash([ a1, a2 ]);\n        var func = pdf.GRAD_OPC_FUNCTIONS[hash];\n        if (!func) {\n            func = pdf.GRAD_OPC_FUNCTIONS[hash] = pdf.attach(new PDFDictionary({\n                FunctionType: 2,\n                Domain: [ 0, 1 ],\n                Range: [ 0, 1 ],\n                N: 1,\n                C0: [ a1 ],\n                C1: [ a2 ]\n            }));\n        }\n        return func;\n    }\n\n    function makeGradientFunctions(pdf, stops) {\n        var hasAlpha = false;\n        var opacities = [];\n        var colors = [];\n        var offsets = [];\n        var encode = [];\n        var i, prev, cur, prevColor, curColor;\n        for (i = 1; i < stops.length; ++i) {\n            prev = stops[i - 1];\n            cur = stops[i];\n            prevColor = prev.color;\n            curColor = cur.color;\n            colors.push(cacheColorGradientFunction(\n                pdf,\n                prevColor.r, prevColor.g, prevColor.b,\n                curColor.r,  curColor.g,  curColor.b\n            ));\n            if (prevColor.a < 1 || curColor.a < 1) {\n                hasAlpha = true;\n            }\n            offsets.push(cur.offset);\n            encode.push(0, 1);\n        }\n        if (hasAlpha) {\n            for (i = 1; i < stops.length; ++i) {\n                prev = stops[i - 1];\n                cur = stops[i];\n                prevColor = prev.color;\n                curColor = cur.color;\n                opacities.push(cacheOpacityGradientFunction(\n                    pdf, prevColor.a, curColor.a\n                ));\n            }\n        }\n        offsets.pop();\n        return {\n            hasAlpha  : hasAlpha,\n            colors    : assemble(colors),\n            opacities : hasAlpha ? assemble(opacities) : null\n        };\n        function assemble(funcs) {\n            if (funcs.length == 1) {\n                return funcs[0];\n            }\n            return {\n                FunctionType: 3,\n                Functions: funcs,\n                Domain: [ 0, 1 ],\n                Bounds: offsets,\n                Encode: encode\n            };\n        }\n    }\n\n    function cacheColorGradient(pdf, isRadial, stops, coords, funcs, box) {\n        var shading, hash;\n        // if box is given then we have user-space coordinates, which\n        // means the gradient is designed for a certain position/size\n        // on page.  caching won't do any good.\n        if (!box) {\n            var a = [ isRadial ].concat(coords);\n            stops.forEach(function(x){\n                a.push(x.offset, x.color.r, x.color.g, x.color.b);\n            });\n            hash = makeHash(a);\n            shading = pdf.GRAD_COL[hash];\n        }\n        if (!shading) {\n            shading = new PDFDictionary({\n                Type: _(\"Shading\"),\n                ShadingType: isRadial ? 3 : 2,\n                ColorSpace: _(\"DeviceRGB\"),\n                Coords: coords,\n                Domain: [ 0, 1 ],\n                Function: funcs,\n                Extend: [ true, true ]\n            });\n            pdf.attach(shading);\n            shading._resourceName = \"S\" + (++RESOURCE_COUNTER);\n            if (hash) {\n                pdf.GRAD_COL[hash] = shading;\n            }\n        }\n        return shading;\n    }\n\n    function cacheOpacityGradient(pdf, isRadial, stops, coords, funcs, box) {\n        var opacity, hash;\n        // if box is given then we have user-space coordinates, which\n        // means the gradient is designed for a certain position/size\n        // on page.  caching won't do any good.\n        if (!box) {\n            var a = [ isRadial ].concat(coords);\n            stops.forEach(function(x){\n                a.push(x.offset, x.color.a);\n            });\n            hash = makeHash(a);\n            opacity = pdf.GRAD_OPC[hash];\n        }\n        if (!opacity) {\n            opacity = new PDFDictionary({\n                Type: _(\"ExtGState\"),\n                AIS: false,\n                CA: 1,\n                ca: 1,\n                SMask: {\n                    Type: _(\"Mask\"),\n                    S: _(\"Luminosity\"),\n                    G: pdf.attach(new PDFStream(\"/a0 gs /s0 sh\", {\n                        Type: _(\"XObject\"),\n                        Subtype: _(\"Form\"),\n                        FormType: 1,\n                        BBox: (box ? [\n                            box.left, box.top + box.height, box.left + box.width, box.top\n                        ] : [ 0, 1, 1, 0 ]),\n                        Group: {\n                            Type: _(\"Group\"),\n                            S: _(\"Transparency\"),\n                            CS: _(\"DeviceGray\"),\n                            I: true\n                        },\n                        Resources: {\n                            ExtGState: {\n                                a0: { CA: 1, ca: 1 }\n                            },\n                            Shading: {\n                                s0: {\n                                    ColorSpace: _(\"DeviceGray\"),\n                                    Coords: coords,\n                                    Domain: [ 0, 1 ],\n                                    ShadingType: isRadial ? 3 : 2,\n                                    Function: funcs,\n                                    Extend: [ true, true ]\n                                }\n                            }\n                        }\n                    }))\n                }\n            });\n            pdf.attach(opacity);\n            opacity._resourceName = \"O\" + (++RESOURCE_COUNTER);\n            if (hash) {\n                pdf.GRAD_OPC[hash] = opacity;\n            }\n        }\n        return opacity;\n    }\n\n    function cacheGradient(pdf, gradient, box) {\n        var isRadial = gradient.type == \"radial\";\n        var funcs = makeGradientFunctions(pdf, gradient.stops);\n        var coords = isRadial ? [\n            gradient.start.x , gradient.start.y , gradient.start.r,\n            gradient.end.x   , gradient.end.y   , gradient.end.r\n        ] : [\n            gradient.start.x , gradient.start.y,\n            gradient.end.x   , gradient.end.y\n        ];\n        var shading = cacheColorGradient(\n            pdf, isRadial, gradient.stops, coords, funcs.colors, gradient.userSpace && box\n        );\n        var opacity = funcs.hasAlpha ? cacheOpacityGradient(\n            pdf, isRadial, gradient.stops, coords, funcs.opacities, gradient.userSpace && box\n        ) : null;\n        return {\n            hasAlpha: funcs.hasAlpha,\n            shading: shading,\n            opacity: opacity\n        };\n    }\n\n    /// page object\n\n    var PDFPage = (function (PDFDictionary) {\n        function PDFPage(pdf, props){\n            PDFDictionary.call(this, props);\n\n            this._pdf = pdf;\n            this._rcount = 0;\n            this._textMode = false;\n            this._fontResources = {};\n            this._gsResources = {};\n            this._xResources = {};\n            this._patResources = {};\n            this._shResources = {};\n            this._opacity = 1;\n            this._matrix = [ 1, 0, 0, 1, 0, 0 ];\n            this._annotations = [];\n\n            this._font = null;\n            this._fontSize = null;\n\n            this._contextStack = [];\n\n            props = this.props;\n            props.Type = _(\"Page\");\n            props.ProcSet = [\n                _(\"PDF\"),\n                _(\"Text\"),\n                _(\"ImageB\"),\n                _(\"ImageC\"),\n                _(\"ImageI\")\n            ];\n            props.Resources = new PDFDictionary({\n                Font      : new PDFDictionary(this._fontResources),\n                ExtGState : new PDFDictionary(this._gsResources),\n                XObject   : new PDFDictionary(this._xResources),\n                Pattern   : new PDFDictionary(this._patResources),\n                Shading   : new PDFDictionary(this._shResources)\n            });\n            props.Annots = this._annotations;\n        }\n\n        extendStatic(PDFPage, PDFDictionary);\n        PDFPage.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n        PDFPage.prototype.constructor = PDFPage;\n        PDFPage.fn = PDFPage.prototype;\n        PDFPage.fn.init = PDFPage.fn.constructor;\n\n        PDFPage.prototype._out = function _out () {\n            this._content.data.apply(null, arguments);\n        };\n\n        PDFPage.prototype.transform = function transform (a, b, c, d, e, f) {\n            if (!isIdentityMatrix(arguments)) {\n                this._matrix = mmul(arguments, this._matrix);\n                this._out(a, \" \", b, \" \", c, \" \", d, \" \", e, \" \", f, \" cm\");\n                // XXX: debug\n                // this._out(\" % current matrix: \", this._matrix);\n                this._out(NL);\n            }\n        };\n\n        PDFPage.prototype.translate = function translate (dx, dy) {\n            this.transform(1, 0, 0, 1, dx, dy);\n        };\n\n        PDFPage.prototype.scale = function scale (sx, sy) {\n            this.transform(sx, 0, 0, sy, 0, 0);\n        };\n\n        PDFPage.prototype.rotate = function rotate (angle) {\n            var cos = Math.cos(angle), sin = Math.sin(angle);\n            this.transform(cos, sin, -sin, cos, 0, 0);\n        };\n\n        PDFPage.prototype.beginText = function beginText () {\n            this._textMode = true;\n            this._out(\"BT\", NL);\n        };\n\n        PDFPage.prototype.endText = function endText () {\n            this._textMode = false;\n            this._out(\"ET\", NL);\n        };\n\n        PDFPage.prototype._requireTextMode = function _requireTextMode () {\n            if (!this._textMode) {\n                throw new Error(\"Text mode required; call page.beginText() first\");\n            }\n        };\n\n        PDFPage.prototype._requireFont = function _requireFont () {\n            if (!this._font) {\n                throw new Error(\"No font selected; call page.setFont() first\");\n            }\n        };\n\n        PDFPage.prototype.setFont = function setFont (font, size) {\n            this._requireTextMode();\n            if (font == null) {\n                font = this._font;\n            } else if (!(font instanceof PDFFont)) {\n                font = this._pdf.getFont(font);\n            }\n            if (size == null) {\n                size = this._fontSize;\n            }\n            this._fontResources[font._resourceName] = font;\n            this._font = font;\n            this._fontSize = size;\n            this._out(font._resourceName, \" \", size, \" Tf\", NL);\n        };\n\n        PDFPage.prototype.setTextLeading = function setTextLeading (size) {\n            this._requireTextMode();\n            this._out(size, \" TL\", NL);\n        };\n\n        PDFPage.prototype.setTextRenderingMode = function setTextRenderingMode (mode) {\n            this._requireTextMode();\n            this._out(mode, \" Tr\", NL);\n        };\n\n        PDFPage.prototype.showText = function showText (text, requestedWidth) {\n            this._requireFont();\n            if (text.length > 1 && requestedWidth && this._font instanceof PDFFont) {\n                var outputWidth = this._font.getTextWidth(this._fontSize, text);\n                var scale = requestedWidth / outputWidth * 100;\n                this._out(scale, \" Tz \");\n            }\n            this._out(this._font.encodeText(text), \" Tj\", NL);\n        };\n\n        PDFPage.prototype.showTextNL = function showTextNL (text) {\n            this._requireFont();\n            this._out(this._font.encodeText(text), \" '\", NL);\n        };\n\n        PDFPage.prototype.addLink = function addLink (uri, box) {\n            var ll = this._toPage({ x: box.left, y: box.bottom });\n            var ur = this._toPage({ x: box.right, y: box.top });\n            this._annotations.push(new PDFDictionary({\n                Type    : _(\"Annot\"),\n                Subtype : _(\"Link\"),\n                Rect    : [ ll.x, ll.y, ur.x, ur.y ],\n                Border  : [ 0, 0, 0 ],\n                A       : new PDFDictionary({\n                    Type : _(\"Action\"),\n                    S    : _(\"URI\"),\n                    URI  : new PDFString(uri)\n                })\n            }));\n        };\n\n        PDFPage.prototype.setStrokeColor = function setStrokeColor (r, g, b) {\n            this._out(r, \" \", g, \" \", b, \" RG\", NL);\n        };\n\n        PDFPage.prototype.setOpacity = function setOpacity (opacity) {\n            this.setFillOpacity(opacity);\n            this.setStrokeOpacity(opacity);\n            this._opacity *= opacity;\n        };\n\n        PDFPage.prototype.setStrokeOpacity = function setStrokeOpacity (opacity) {\n            if (opacity < 1) {\n                var gs = this._pdf.getOpacityGS(this._opacity * opacity, true);\n                this._gsResources[gs._resourceName] = gs;\n                this._out(gs._resourceName, \" gs\", NL);\n            }\n        };\n\n        PDFPage.prototype.setFillColor = function setFillColor (r, g, b) {\n            this._out(r, \" \", g, \" \", b, \" rg\", NL);\n        };\n\n        PDFPage.prototype.setFillOpacity = function setFillOpacity (opacity) {\n            if (opacity < 1) {\n                var gs = this._pdf.getOpacityGS(this._opacity * opacity, false);\n                this._gsResources[gs._resourceName] = gs;\n                this._out(gs._resourceName, \" gs\", NL);\n            }\n        };\n\n        PDFPage.prototype.gradient = function gradient (gradient, box) {\n            this.save();\n            this.rect(box.left, box.top, box.width, box.height);\n            this.clip();\n            if (!gradient.userSpace) {\n                this.transform(box.width, 0, 0, box.height, box.left, box.top);\n            }\n            var g = cacheGradient(this._pdf, gradient, box);\n            var sname = g.shading._resourceName, oname;\n            this._shResources[sname] = g.shading;\n            if (g.hasAlpha) {\n                oname = g.opacity._resourceName;\n                this._gsResources[oname] = g.opacity;\n                this._out(\"/\" + oname + \" gs \");\n            }\n            this._out(\"/\" + sname + \" sh\", NL);\n            this.restore();\n        };\n\n        PDFPage.prototype.setDashPattern = function setDashPattern (dashArray, dashPhase) {\n            this._out(dashArray, \" \", dashPhase, \" d\", NL);\n        };\n\n        PDFPage.prototype.setLineWidth = function setLineWidth (width) {\n            this._out(width, \" w\", NL);\n        };\n\n        PDFPage.prototype.setLineCap = function setLineCap (lineCap) {\n            this._out(lineCap, \" J\", NL);\n        };\n\n        PDFPage.prototype.setLineJoin = function setLineJoin (lineJoin) {\n            this._out(lineJoin, \" j\", NL);\n        };\n\n        PDFPage.prototype.setMitterLimit = function setMitterLimit (mitterLimit) {\n            this._out(mitterLimit, \" M\", NL);\n        };\n\n        PDFPage.prototype.save = function save () {\n            this._contextStack.push(this._context());\n            this._out(\"q\", NL);\n        };\n\n        PDFPage.prototype.restore = function restore () {\n            this._out(\"Q\", NL);\n            this._context(this._contextStack.pop());\n        };\n\n        // paths\n        PDFPage.prototype.moveTo = function moveTo (x, y) {\n            this._out(x, \" \", y, \" m\", NL);\n        };\n\n        PDFPage.prototype.lineTo = function lineTo (x, y) {\n            this._out(x, \" \", y, \" l\", NL);\n        };\n\n        PDFPage.prototype.bezier = function bezier (x1, y1, x2, y2, x3, y3) {\n            this._out(x1, \" \", y1, \" \", x2, \" \", y2, \" \", x3, \" \", y3, \" c\", NL);\n        };\n\n        PDFPage.prototype.bezier1 = function bezier1 (x1, y1, x3, y3) {\n            this._out(x1, \" \", y1, \" \", x3, \" \", y3, \" y\", NL);\n        };\n\n        PDFPage.prototype.bezier2 = function bezier2 (x2, y2, x3, y3) {\n            this._out(x2, \" \", y2, \" \", x3, \" \", y3, \" v\", NL);\n        };\n\n        PDFPage.prototype.close = function close () {\n            this._out(\"h\", NL);\n        };\n\n        PDFPage.prototype.rect = function rect (x, y, w, h) {\n            this._out(x, \" \", y, \" \", w, \" \", h, \" re\", NL);\n        };\n\n        PDFPage.prototype.ellipse = function ellipse (x, y, rx, ry) {\n            function _X(v) { return x + v; }\n            function _Y(v) { return y + v; }\n\n            // how to get to the \"magic number\" is explained here:\n            // http://www.whizkidtech.redprince.net/bezier/circle/kappa/\n            var k = 0.5522847498307936;\n\n            this.moveTo(_X(0), _Y(ry));\n            this.bezier(\n                _X(rx * k) , _Y(ry),\n                _X(rx)     , _Y(ry * k),\n                _X(rx)     , _Y(0)\n            );\n            this.bezier(\n                _X(rx)     , _Y(-ry * k),\n                _X(rx * k) , _Y(-ry),\n                _X(0)      , _Y(-ry)\n            );\n            this.bezier(\n                _X(-rx * k) , _Y(-ry),\n                _X(-rx)     , _Y(-ry * k),\n                _X(-rx)     , _Y(0)\n            );\n            this.bezier(\n                _X(-rx)     , _Y(ry * k),\n                _X(-rx * k) , _Y(ry),\n                _X(0)       , _Y(ry)\n            );\n        };\n\n        PDFPage.prototype.circle = function circle (x, y, r) {\n            this.ellipse(x, y, r, r);\n        };\n\n        PDFPage.prototype.stroke = function stroke () {\n            this._out(\"S\", NL);\n        };\n\n        PDFPage.prototype.nop = function nop () {\n            this._out(\"n\", NL);\n        };\n\n        PDFPage.prototype.clip = function clip () {\n            this._out(\"W n\", NL);\n        };\n\n        PDFPage.prototype.clipStroke = function clipStroke () {\n            this._out(\"W S\", NL);\n        };\n\n        PDFPage.prototype.closeStroke = function closeStroke () {\n            this._out(\"s\", NL);\n        };\n\n        PDFPage.prototype.fill = function fill () {\n            this._out(\"f\", NL);\n        };\n\n        PDFPage.prototype.fillStroke = function fillStroke () {\n            this._out(\"B\", NL);\n        };\n\n        PDFPage.prototype.drawImage = function drawImage (url) {\n            var img = this._pdf.getImage(url);\n            if (img) { // the result can be null for a cross-domain image\n                this._xResources[img._resourceName] = img;\n                this._out(img._resourceName, \" Do\", NL);\n            }\n        };\n\n        PDFPage.prototype.comment = function comment (txt) {\n            var self = this;\n            txt.split(/\\r?\\n/g).forEach(function(line){\n                self._out(\"% \", line, NL);\n            });\n        };\n\n        // internal\n        PDFPage.prototype._context = function _context (val) {\n            if (val != null) {\n                this._opacity = val.opacity;\n                this._matrix = val.matrix;\n            } else {\n                return {\n                    opacity: this._opacity,\n                    matrix: this._matrix\n                };\n            }\n        };\n\n        PDFPage.prototype._toPage = function _toPage (p) {\n            var m = this._matrix;\n            var a = m[0], b = m[1], c = m[2], d = m[3], e = m[4], f = m[5];\n            return {\n                x: a*p.x + c*p.y + e,\n                y: b*p.x + d*p.y + f\n            };\n        };\n\n        return PDFPage;\n    }(PDFDictionary));\n\n    function unquote(str) {\n        return str.replace(/^\\s*(['\"])(.*)\\1\\s*$/, \"$2\");\n    }\n\n    function parseFontDef(fontdef) {\n        // XXX: this is very crude for now and buggy.  Proper parsing is quite involved.\n        var rx = /^\\s*((normal|italic)\\s+)?((normal|small-caps)\\s+)?((normal|bold|\\d+)\\s+)?(([0-9.]+)(px|pt))(\\/(([0-9.]+)(px|pt)|normal))?\\s+(.*?)\\s*$/i;\n        var m = rx.exec(fontdef);\n        if (!m) {\n            return { fontSize: 12, fontFamily: \"sans-serif\" };\n        }\n        var fontSize = m[8] ? parseInt(m[8], 10) : 12;\n        return {\n            italic     : m[2] && m[2].toLowerCase() == \"italic\",\n            variant    : m[4],\n            bold       : m[6] && /bold|700/i.test(m[6]),\n            fontSize   : fontSize,\n            lineHeight : m[12] ? m[12] == \"normal\" ? fontSize : parseInt(m[12], 10) : null,\n            fontFamily : m[14].split(/\\s*,\\s*/g).map(unquote)\n        };\n    }\n\n    function getFontURL(style) {\n        function mkFamily(name) {\n            if (style.bold) {\n                name += \"|bold\";\n            }\n            if (style.italic) {\n                name += \"|italic\";\n            }\n            return name.toLowerCase();\n        }\n        var fontFamily = style.fontFamily;\n        var name, url;\n        if (fontFamily instanceof Array) {\n            for (var i = 0; i < fontFamily.length; ++i) {\n                name = mkFamily(fontFamily[i]);\n                url = FONT_MAPPINGS[name];\n                if (url) {\n                    break;\n                }\n            }\n        } else {\n            url = FONT_MAPPINGS[fontFamily.toLowerCase()];\n        }\n        while (typeof url == \"function\") {\n            url = url();\n        }\n        if (!url) {\n            url = \"Times-Roman\";\n        }\n        return url;\n    }\n\n    var FONT_MAPPINGS = {\n        \"serif\"                    : \"Times-Roman\",\n        \"serif|bold\"               : \"Times-Bold\",\n        \"serif|italic\"             : \"Times-Italic\",\n        \"serif|bold|italic\"        : \"Times-BoldItalic\",\n        \"sans-serif\"               : \"Helvetica\",\n        \"sans-serif|bold\"          : \"Helvetica-Bold\",\n        \"sans-serif|italic\"        : \"Helvetica-Oblique\",\n        \"sans-serif|bold|italic\"   : \"Helvetica-BoldOblique\",\n        \"monospace\"                : \"Courier\",\n        \"monospace|bold\"           : \"Courier-Bold\",\n        \"monospace|italic\"         : \"Courier-Oblique\",\n        \"monospace|bold|italic\"    : \"Courier-BoldOblique\",\n        \"zapfdingbats\"             : \"ZapfDingbats\",\n        \"zapfdingbats|bold\"        : \"ZapfDingbats\",\n        \"zapfdingbats|italic\"      : \"ZapfDingbats\",\n        \"zapfdingbats|bold|italic\" : \"ZapfDingbats\"\n    };\n\n    function fontAlias(alias, name) {\n        alias = alias.toLowerCase();\n        FONT_MAPPINGS[alias] = function() {\n            return FONT_MAPPINGS[name];\n        };\n        FONT_MAPPINGS[alias + \"|bold\"] = function() {\n            return FONT_MAPPINGS[name + \"|bold\"];\n        };\n        FONT_MAPPINGS[alias + \"|italic\"] = function() {\n            return FONT_MAPPINGS[name + \"|italic\"];\n        };\n        FONT_MAPPINGS[alias + \"|bold|italic\"] = function() {\n            return FONT_MAPPINGS[name + \"|bold|italic\"];\n        };\n    }\n\n    // Let's define some common names to an appropriate replacement.\n    // These are overridable via pdf.defineFont, should the user want to\n    // include the proper versions.\n\n    fontAlias(\"Times New Roman\" , \"serif\");\n    fontAlias(\"Courier New\"     , \"monospace\");\n    fontAlias(\"Arial\"           , \"sans-serif\");\n    fontAlias(\"Helvetica\"       , \"sans-serif\");\n    fontAlias(\"Verdana\"         , \"sans-serif\");\n    fontAlias(\"Tahoma\"          , \"sans-serif\");\n    fontAlias(\"Georgia\"         , \"sans-serif\");\n    fontAlias(\"Monaco\"          , \"monospace\");\n    fontAlias(\"Andale Mono\"     , \"monospace\");\n\n    function defineFont(name, url) {\n        if (arguments.length == 1) {\n            for (var i in name) {\n                if (hasOwnProperty(name, i)) {\n                    defineFont(i, name[i]);\n                }\n            }\n        } else {\n            name = name.toLowerCase();\n            FONT_MAPPINGS[name] = url;\n\n            // special handling for DejaVu fonts: if they get defined,\n            // let them also replace the default families, for good\n            // Unicode support out of the box.\n            switch (name) {\n              case \"dejavu sans\"               : FONT_MAPPINGS[\"sans-serif\"]              = url; break;\n              case \"dejavu sans|bold\"          : FONT_MAPPINGS[\"sans-serif|bold\"]         = url; break;\n              case \"dejavu sans|italic\"        : FONT_MAPPINGS[\"sans-serif|italic\"]       = url; break;\n              case \"dejavu sans|bold|italic\"   : FONT_MAPPINGS[\"sans-serif|bold|italic\"]  = url; break;\n              case \"dejavu serif\"              : FONT_MAPPINGS[\"serif\"]                   = url; break;\n              case \"dejavu serif|bold\"         : FONT_MAPPINGS[\"serif|bold\"]              = url; break;\n              case \"dejavu serif|italic\"       : FONT_MAPPINGS[\"serif|italic\"]            = url; break;\n              case \"dejavu serif|bold|italic\"  : FONT_MAPPINGS[\"serif|bold|italic\"]       = url; break;\n              case \"dejavu mono\"               : FONT_MAPPINGS[\"monospace\"]               = url; break;\n              case \"dejavu mono|bold\"          : FONT_MAPPINGS[\"monospace|bold\"]          = url; break;\n              case \"dejavu mono|italic\"        : FONT_MAPPINGS[\"monospace|italic\"]        = url; break;\n              case \"dejavu mono|bold|italic\"   : FONT_MAPPINGS[\"monospace|bold|italic\"]   = url; break;\n            }\n        }\n    }\n\n    function mmul(a, b) {\n        var a1 = a[0], b1 = a[1], c1 = a[2], d1 = a[3], e1 = a[4], f1 = a[5];\n        var a2 = b[0], b2 = b[1], c2 = b[2], d2 = b[3], e2 = b[4], f2 = b[5];\n        return [\n            a1*a2 + b1*c2,          a1*b2 + b1*d2,\n            c1*a2 + d1*c2,          c1*b2 + d1*d2,\n            e1*a2 + f1*c2 + e2,     e1*b2 + f1*d2 + f2\n        ];\n    }\n\n    function isIdentityMatrix(m) {\n        return m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0;\n    }\n\n    var TEXT_RENDERING_MODE = {\n        fill           : 0,\n        stroke         : 1,\n        fillAndStroke  : 2,\n        invisible      : 3,\n        fillAndClip    : 4,\n        strokeAndClip  : 5,\n        fillStrokeClip : 6,\n        clip           : 7\n    };\n\n    /* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n    /* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n    /* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n    /* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n    var DEFAULT_IMAGE_DPI = 300;\n    var TEXT_RENDERING_MODE$1 = TEXT_RENDERING_MODE;\n\n    var DASH_PATTERNS = {\n        dash           : [ 4 ],\n        dashDot        : [ 4, 2, 1, 2 ],\n        dot            : [ 1, 2 ],\n        longDash       : [ 8, 2 ],\n        longDashDot    : [ 8, 2, 1, 2 ],\n        longDashDotDot : [ 8, 2, 1, 2, 1, 2 ],\n        solid          : []\n    };\n\n    var LINE_CAP = {\n        butt   : 0,\n        round  : 1,\n        square : 2\n    };\n\n    var LINE_JOIN = {\n        miter : 0,\n        round : 1,\n        bevel : 2\n    };\n\n    function render$1(group, callback) {\n        var fonts = [], images = {}, options = group.options;\n\n        function getOption(name, defval, hash) {\n            if (!hash) {\n                hash = options;\n            }\n            if (hash.pdf && hash.pdf[name] != null) {\n                return hash.pdf[name];\n            }\n            return defval;\n        }\n\n        var multiPage = getOption(\"multiPage\");\n        var imgDPI = getOption(\"imgDPI\", DEFAULT_IMAGE_DPI);\n\n        clearImageCache();\n\n        group.traverse(function(element){\n            dispatch({\n                Image: function(element) {\n                    var url = element.src();\n                    var size = element.bbox().size;\n                    if (imgDPI) {\n                        var prev = images[url];\n                        size = {\n                          width: Math.ceil(size.width * imgDPI / 72),\n                          height: Math.ceil(size.height * imgDPI / 72)\n                        };\n\n                        if (prev) {\n                          size.width = Math.max(prev.width, size.width);\n                          size.height = Math.max(prev.height, size.height);\n                        }\n                    }\n\n                    images[url] = size;\n                },\n                Text: function(element) {\n                    var style = parseFontDef(element.options.font);\n                    var url = getFontURL(style);\n                    if (fonts.indexOf(url) < 0) {\n                        fonts.push(url);\n                    }\n                }\n            }, element);\n        });\n\n        function doIt() {\n            if (--count > 0) {\n                return;\n            }\n\n            var pdf = new (PDFDocument)({\n                producer  : getOption(\"producer\"),\n                title     : getOption(\"title\"),\n                author    : getOption(\"author\"),\n                subject   : getOption(\"subject\"),\n                keywords  : getOption(\"keywords\"),\n                creator   : getOption(\"creator\"),\n                date      : getOption(\"date\"),\n\n                autoPrint : getOption(\"autoPrint\")\n            });\n\n            function drawPage(group) {\n                var options = group.options;\n\n                var tmp = optimize(group);\n                var bbox = tmp.bbox;\n                group = tmp.root;\n                // var tmp, bbox;\n\n                var paperSize = getOption(\"paperSize\", getOption(\"paperSize\", \"auto\"), options), addMargin = false;\n                if (paperSize == \"auto\") {\n                    if (bbox) {\n                        var size = bbox.getSize();\n                        paperSize = [ size.width, size.height ];\n                        addMargin = true;\n                        var origin = bbox.getOrigin();\n                        tmp = new drawing.Group();\n                        tmp.transform(new kendoGeometry.Matrix(1, 0, 0, 1, -origin.x, -origin.y));\n                        tmp.append(group);\n                        group = tmp;\n                    }\n                    else {\n                        paperSize = \"A4\";\n                    }\n                }\n\n                var page;\n                page = pdf.addPage({\n                    paperSize : paperSize,\n                    margin    : getOption(\"margin\", getOption(\"margin\"), options),\n                    addMargin : addMargin,\n                    landscape : getOption(\"landscape\", getOption(\"landscape\", false), options)\n                });\n                drawElement(group, page, pdf);\n            }\n\n            if (multiPage) {\n                group.children.forEach(drawPage);\n            } else {\n                drawPage(group);\n            }\n\n            callback(pdf.render(), pdf);\n        }\n\n        var count = 2;\n        loadFonts(fonts, doIt);\n        loadImages(images, doIt, {\n            jpegQuality : getOption(\"jpegQuality\", 0.92),\n            keepPNG     : getOption(\"keepPNG\", false)\n        });\n    }\n\n    function toDataURL(group, callback) {\n        render$1(group, function(data){\n            callback(\"data:application/pdf;base64,\" + data.base64());\n        });\n    }\n\n    function toBlob(group, callback) {\n        render$1(group, function(data){\n            callback(new window.Blob([ data.get() ], { type: \"application/pdf\" }));\n        });\n    }\n\n    function saveAs$1(group, filename, proxy, callback) {\n        // XXX: Safari has Blob, but does not support the download attribute\n        //      so we'd end up converting to dataURL and using the proxy anyway.\n        if (window.Blob && !supportBrowser.safari) {\n            toBlob(group, function(blob){\n                kendo.saveAs({ dataURI: blob, fileName: filename });\n                if (callback) {\n                    callback(blob);\n                }\n            });\n        } else {\n            toDataURL(group, function(dataURL){\n                kendo.saveAs({ dataURI: dataURL, fileName: filename, proxyURL: proxy });\n                if (callback) {\n                    callback(dataURL);\n                }\n            });\n        }\n    }\n\n    function dispatch(handlers, element) {\n        var handler = handlers[element.nodeType];\n        if (handler) {\n            return handler.call.apply(handler, arguments);\n        }\n        return element;\n    }\n\n    function drawElement(element, page, pdf) {\n        if (element.options._pdfDebug) {\n            page.comment(\"BEGIN: \" + element.options._pdfDebug);\n        }\n\n        var transform = element.transform();\n        var opacity = element.opacity();\n\n        page.save();\n\n        if (opacity != null && opacity < 1) {\n            page.setOpacity(opacity);\n        }\n\n        setStrokeOptions(element, page, pdf);\n        setFillOptions(element, page, pdf);\n\n        if (transform) {\n            var m = transform.matrix();\n            page.transform(m.a, m.b, m.c, m.d, m.e, m.f);\n        }\n\n        setClipping(element, page, pdf);\n\n        dispatch({\n            Path      : drawPath,\n            MultiPath : drawMultiPath,\n            Circle    : drawCircle,\n            Arc       : drawArc,\n            Text      : drawText,\n            Image     : drawImage$1,\n            Group     : drawGroup,\n            Rect      : drawRect\n        }, element, page, pdf);\n\n        page.restore();\n\n        if (element.options._pdfDebug) {\n            page.comment(\"END: \" + element.options._pdfDebug);\n        }\n    }\n\n    function setStrokeOptions(element, page) {\n        var stroke = element.stroke && element.stroke();\n        if (!stroke) {\n            return;\n        }\n\n        var color = stroke.color;\n        if (color) {\n            color = parseColor$1(color);\n            if (color == null) {\n                return; // no stroke\n            }\n            page.setStrokeColor(color.r, color.g, color.b);\n            if (color.a != 1) {\n                page.setStrokeOpacity(color.a);\n            }\n        }\n\n        var width = stroke.width;\n        if (width != null) {\n            if (width === 0) {\n                return; // no stroke\n            }\n            page.setLineWidth(width);\n        }\n\n        var dashType = stroke.dashType;\n        if (dashType) {\n            page.setDashPattern(DASH_PATTERNS[dashType], 0);\n        }\n\n        var lineCap = stroke.lineCap;\n        if (lineCap) {\n            page.setLineCap(LINE_CAP[lineCap]);\n        }\n\n        var lineJoin = stroke.lineJoin;\n        if (lineJoin) {\n            page.setLineJoin(LINE_JOIN[lineJoin]);\n        }\n\n        var opacity = stroke.opacity;\n        if (opacity != null) {\n            page.setStrokeOpacity(opacity);\n        }\n    }\n\n    function setFillOptions(element, page) {\n        var fill = element.fill && element.fill();\n        if (!fill) {\n            return;\n        }\n\n        if (fill instanceof drawing.Gradient) {\n            return;\n        }\n\n        var color = fill.color;\n        if (color) {\n            color = parseColor$1(color);\n            if (color == null) {\n                return; // no fill\n            }\n            page.setFillColor(color.r, color.g, color.b);\n            if (color.a != 1) {\n                page.setFillOpacity(color.a);\n            }\n        }\n\n        var opacity = fill.opacity;\n        if (opacity != null) {\n            page.setFillOpacity(opacity);\n        }\n    }\n\n    function setClipping(element, page, pdf) {\n        // XXX: only Path supported at the moment.\n        var clip = element.clip();\n        if (clip) {\n            _drawPath(clip, page, pdf);\n            page.clip();\n            // page.setStrokeColor(Math.random(), Math.random(), Math.random());\n            // page.setLineWidth(1);\n            // page.stroke();\n        }\n    }\n\n    function shouldDraw(thing) {\n        return (thing &&\n                (thing instanceof drawing.Gradient ||\n                 (thing.color && !/^(none|transparent)$/i.test(thing.color) &&\n                  (thing.width == null || thing.width > 0) &&\n                  (thing.opacity == null || thing.opacity > 0))));\n    }\n\n    function maybeGradient(element, page, pdf, stroke) {\n        var fill = element.fill();\n        if (fill instanceof drawing.Gradient) {\n            if (stroke) {\n                page.clipStroke();\n            } else {\n                page.clip();\n            }\n            var isRadial = fill instanceof drawing.RadialGradient;\n            var start, end;\n            if (isRadial) {\n                start = { x: fill.center().x , y: fill.center().y , r: 0 };\n                end   = { x: fill.center().x , y: fill.center().y , r: fill.radius() };\n            } else {\n                start = { x: fill.start().x , y: fill.start().y };\n                end   = { x: fill.end().x   , y: fill.end().y   };\n            }\n\n            var stops = fill.stops.elements().map(function(stop){\n                var offset = stop.offset();\n                if (/%$/.test(offset)) {\n                    offset = parseFloat(offset) / 100;\n                } else {\n                    offset = parseFloat(offset);\n                }\n                var color = parseColor$1(stop.color());\n                color.a *= stop.opacity();\n                return {\n                    offset: offset,\n                    color: color\n                };\n            });\n\n            // Duplicats first and last stop to fix\n            // https://github.com/telerik/kendo-ui-core/issues/1782\n            stops.unshift(stops[0]);\n            stops.push(stops[stops.length - 1]);\n\n            var gradient = {\n                userSpace : fill.userSpace(),\n                type      : isRadial ? \"radial\" : \"linear\",\n                start     : start,\n                end       : end,\n                stops     : stops\n            };\n            var box = element.rawBBox();\n            var tl = box.topLeft(), size = box.getSize();\n            box = {\n                left   : tl.x,\n                top    : tl.y,\n                width  : size.width,\n                height : size.height\n            };\n            page.gradient(gradient, box);\n            return true;\n        }\n    }\n\n    function maybeFillStroke(element, page, pdf) {\n        if (shouldDraw(element.fill()) && shouldDraw(element.stroke())) {\n            if (!maybeGradient(element, page, pdf, true)) {\n                page.fillStroke();\n            }\n        } else if (shouldDraw(element.fill())) {\n            if (!maybeGradient(element, page, pdf, false)) {\n                page.fill();\n            }\n        } else if (shouldDraw(element.stroke())) {\n            page.stroke();\n        } else {\n            // we should not get here; the path should have been\n            // optimized away.  but let's be prepared.\n            page.nop();\n        }\n    }\n\n    function maybeDrawRect(path, page) {\n        var segments = path.segments;\n        if (segments.length == 4 && path.options.closed) {\n            // detect if this path looks like a rectangle parallel to the axis\n            var a = [];\n            for (var i = 0; i < segments.length; ++i) {\n                if (segments[i].controlIn()) { // has curve?\n                    return false;\n                }\n                a[i] = segments[i].anchor();\n            }\n            // it's a rectangle if the y/x/y/x or x/y/x/y coords of\n            // consecutive points are the same.\n            var isRect = (\n                a[0].y == a[1].y && a[1].x == a[2].x && a[2].y == a[3].y && a[3].x == a[0].x\n            ) || (\n                a[0].x == a[1].x && a[1].y == a[2].y && a[2].x == a[3].x && a[3].y == a[0].y\n            );\n            if (isRect) {\n                // this saves a bunch of instructions in PDF:\n                // moveTo, lineTo, lineTo, lineTo, close -> rect.\n                page.rect(a[0].x, a[0].y,\n                          a[2].x - a[0].x /*width*/,\n                          a[2].y - a[0].y /*height*/);\n                return true;\n            }\n        }\n    }\n\n    function _drawPath(element, page, pdf) {\n        var segments = element.segments;\n        if (segments.length === 0) {\n            return;\n        }\n        if (!maybeDrawRect(element, page, pdf)) {\n            for (var prev, i = 0; i < segments.length; ++i) {\n                var seg = segments[i];\n                var anchor = seg.anchor();\n                if (!prev) {\n                    page.moveTo(anchor.x, anchor.y);\n                } else {\n                    var prevOut = prev.controlOut();\n                    var controlIn = seg.controlIn();\n                    if (prevOut && controlIn) {\n                        page.bezier(\n                            prevOut.x   , prevOut.y,\n                            controlIn.x , controlIn.y,\n                            anchor.x    , anchor.y\n                        );\n                    } else {\n                        page.lineTo(anchor.x, anchor.y);\n                    }\n                }\n                prev = seg;\n            }\n            if (element.options.closed) {\n                page.close();\n            }\n        }\n    }\n\n    function drawPath(element, page, pdf) {\n        _drawPath(element, page, pdf);\n        maybeFillStroke(element, page, pdf);\n    }\n\n    function drawMultiPath(element, page, pdf) {\n        var paths = element.paths;\n        for (var i = 0; i < paths.length; ++i) {\n            _drawPath(paths[i], page, pdf);\n        }\n        maybeFillStroke(element, page, pdf);\n    }\n\n    function drawCircle(element, page, pdf) {\n        var g = element.geometry();\n        page.circle(g.center.x, g.center.y, g.radius);\n        maybeFillStroke(element, page, pdf);\n    }\n\n    function drawArc(element, page, pdf) {\n        var points = element.geometry().curvePoints();\n        page.moveTo(points[0].x, points[0].y);\n        for (var i = 1; i < points.length;) {\n            page.bezier(\n                points[i].x, points[i++].y,\n                points[i].x, points[i++].y,\n                points[i].x, points[i++].y\n            );\n        }\n        maybeFillStroke(element, page, pdf);\n    }\n\n    function drawText(element, page) {\n        var style = parseFontDef(element.options.font);\n        var pos = element._position;\n        var mode;\n\n        page.transform(1, 0, 0, -1, pos.x, pos.y + style.fontSize);\n\n        var draw = function (renderMode) {\n            page.beginText();\n            page.setFont(getFontURL(style), style.fontSize);\n            page.setTextRenderingMode(renderMode);\n            page.showText(element.content(), element._pdfRect ? element._pdfRect.width() : null);\n        };\n\n        if (element.fill() && element.stroke()) {\n            mode = TEXT_RENDERING_MODE$1.fillAndStroke;\n            if (element.options.paintOrder === \"stroke\") {\n                draw(TEXT_RENDERING_MODE$1.stroke);\n                mode = TEXT_RENDERING_MODE$1.fill;\n            }\n        } else if (element.fill()) {\n            mode = TEXT_RENDERING_MODE$1.fill;\n        } else if (element.stroke()) {\n            mode = TEXT_RENDERING_MODE$1.stroke;\n        }\n\n        draw(mode);\n        page.endText();\n    }\n\n    function drawGroup(element, page, pdf) {\n        if (element._pdfLink) {\n            page.addLink(element._pdfLink.url, element._pdfLink);\n        }\n        var children = element.children;\n        for (var i = 0; i < children.length; ++i) {\n            drawElement(children[i], page, pdf);\n        }\n    }\n\n    function drawImage$1(element, page) {\n        var url = element.src();\n        if (!url) {\n            return;\n        }\n\n        var rect = element.rect();\n        var tl = rect.getOrigin();\n        var sz = rect.getSize();\n        page.transform(sz.width, 0, 0, -sz.height, tl.x, tl.y + sz.height);\n        page.drawImage(url);\n    }\n\n    function drawRect(element, page, pdf) {\n        var geometry = element.geometry();\n        var ref = geometry.cornerRadius;\n        var rx = ref[0];\n        var ry = ref[1];\n        if (rx === 0 && ry === 0) {\n            page.rect(geometry.origin.x, geometry.origin.y, geometry.size.width, geometry.size.height);\n            maybeFillStroke(element, page, pdf);\n        } else {\n            drawPath(drawing.Path.fromRect(geometry, element.options), page, pdf);\n        }\n    }\n\n    function parseColor$1(value) {\n        var color = kendo.parseColor(value, true);\n        return color ? color.toRGB() : null;\n    }\n\n    function optimize(root) {\n        var clipbox = false;\n        var matrix = kendoGeometry.Matrix.unit();\n        var currentBox = null;\n        var changed;\n        do {\n            changed = false;\n            root = opt(root);\n        } while (root && changed);\n        return { root: root, bbox: currentBox };\n\n        function change(newShape) {\n            changed = true;\n            return newShape;\n        }\n\n        function visible(shape) {\n            return (shape.visible() && shape.opacity() > 0 &&\n                    ( shouldDraw(shape.fill()) ||\n                      shouldDraw(shape.stroke()) ));\n        }\n\n        function optArray(a) {\n            var b = [];\n            for (var i = 0; i < a.length; ++i) {\n                var el = opt(a[i]);\n                if (el != null) {\n                    b.push(el);\n                }\n            }\n            return b;\n        }\n\n        function withClipping(shape, f) {\n            var saveclipbox = clipbox;\n            var savematrix = matrix;\n\n            if (shape.transform()) {\n                matrix = matrix.multiplyCopy(shape.transform().matrix());\n            }\n\n            var clip = shape.clip();\n            if (clip) {\n                clip = clip.bbox();\n                if (clip) {\n                    clip = clip.bbox(matrix);\n                    clipbox = clipbox ? kendoGeometry.Rect.intersect(clipbox, clip) : clip;\n                }\n            }\n\n            try {\n                return f();\n            }\n            finally {\n                clipbox = saveclipbox;\n                matrix = savematrix;\n            }\n        }\n\n        function inClipbox(shape) {\n            if (clipbox == null) {\n                return false;\n            }\n            var box = shape.rawBBox().bbox(matrix);\n            if (clipbox && box) {\n                box = kendoGeometry.Rect.intersect(box, clipbox);\n            }\n            return box;\n        }\n\n        function opt(shape) {\n            return withClipping(shape, function(){\n                if (!(shape instanceof drawing.Group || shape instanceof drawing.MultiPath)) {\n                    var box = inClipbox(shape);\n                    if (!box) {\n                        return change(null);\n                    }\n                    currentBox = currentBox ? kendoGeometry.Rect.union(currentBox, box) : box;\n                }\n                return dispatch({\n                    Path: function(shape) {\n                        if (shape.segments.length === 0 || !visible(shape)) {\n                            return change(null);\n                        }\n                        return shape;\n                    },\n                    MultiPath: function(shape) {\n                        if (!visible(shape)) {\n                            return change(null);\n                        }\n                        var el = new drawing.MultiPath(shape.options);\n                        el.paths = optArray(shape.paths);\n                        if (el.paths.length === 0) {\n                            return change(null);\n                        }\n                        return el;\n                    },\n                    Circle: function(shape) {\n                        if (!visible(shape)) {\n                            return change(null);\n                        }\n                        return shape;\n                    },\n                    Arc: function(shape) {\n                        if (!visible(shape)) {\n                            return change(null);\n                        }\n                        return shape;\n                    },\n                    Text: function(shape) {\n                        if (!/\\S/.test(shape.content()) || !visible(shape)) {\n                            return change(null);\n                        }\n                        return shape;\n                    },\n                    Image: function(shape) {\n                        if (!(shape.visible() && shape.opacity() > 0)) {\n                            return change(null);\n                        }\n                        return shape;\n                    },\n                    Group: function(shape) {\n                        if (!(shape.visible() && shape.opacity() > 0)) {\n                            return change(null);\n                        }\n                        var el = new drawing.Group(shape.options);\n                        el.children = optArray(shape.children);\n                        el._pdfLink = shape._pdfLink;\n                        if (shape !== root && el.children.length === 0 && !shape._pdfLink) {\n                            return change(null);\n                        }\n                        return el;\n                    },\n                    Rect: function(shape) {\n                        if (!visible(shape)) {\n                            return change(null);\n                        }\n                        return shape;\n                    }\n                }, shape);\n            });\n        }\n    }\n\n    function exportPDF(group, options) {\n        var promise = util.createPromise();\n\n        for (var i in options) {\n            if (i == \"margin\" && group.options.pdf && group.options.pdf._ignoreMargin) {\n                // This hackish option is set by the page breaking code in drawDOM.  The idea is\n                // that margin is already taken into account there (that's required to do proper\n                // page breaking) and we don't want to set it again here, as it would double the\n                // top-left margin, and truncate the content on bottom/right.\n                continue;\n            }\n            group.options.set(\"pdf.\" + i, options[i]);\n        }\n\n        toDataURL(group, promise.resolve);\n\n        return promise;\n    }\n\n    // XXX: the duplication is in order to keep exportPDF return a data\n    // URI, which is what previous versions do.  Currently only IE9 does\n    // not support Blob, IMO we should switch to Blob by default\n    // everywhere.\n    function exportPDFToBlob(group, options) {\n        var promise = util.createPromise();\n\n        for (var i in options) {\n            if (i == \"margin\" && group.options.pdf && group.options.pdf._ignoreMargin) {\n                // This hackish option is set by the page breaking code in drawDOM.  The idea is\n                // that margin is already taken into account there (that's required to do proper\n                // page breaking) and we don't want to set it again here, as it would double the\n                // top-left margin, and truncate the content on bottom/right.\n                continue;\n            }\n            group.options.set(\"pdf.\" + i, options[i]);\n        }\n\n        if (window.Blob && !supportBrowser.safari) {\n            toBlob(group, promise.resolve);\n        } else {\n            toDataURL(group, promise.resolve);\n        }\n\n        return promise;\n    }\n\n    kendo.deepExtend(kendo.pdf, {\n        Document: PDFDocument,\n        BinaryStream: BinaryStream,\n        defineFont: defineFont,\n        parseFontDef: parseFontDef,\n        getFontURL: getFontURL,\n        loadFonts: loadFonts,\n        loadImages: loadImages,\n        getPaperOptions: getPaperOptions,\n        clearImageCache: clearImageCache,\n        TEXT_RENDERING_MODE: TEXT_RENDERING_MODE,\n        exportPDF: exportPDF,\n        exportPDFToBlob: exportPDFToBlob,\n        saveAs: saveAs$1,\n        toDataURL: toDataURL,\n        toBlob: toBlob,\n        render: render$1\n    });\n\n    kendo.drawing.exportPDF = kendo.pdf.exportPDF;\n    kendo.drawing.pdf = kendo.pdf;\n\n    })(window.kendo.jQuery);\n\n    (function ($, undefined$1) {\n        \n    kendo.PDFMixin = {\n        extend: function(proto) {\n            proto.events.push(\"pdfExport\");\n            proto.options.pdf = this.options;\n            proto.saveAsPDF = this.saveAsPDF;\n            proto._drawPDF = this._drawPDF;\n            proto._drawPDFShadow = this._drawPDFShadow;\n        },\n        options: {\n            fileName  : \"Export.pdf\",\n            proxyURL  : \"\",\n\n            // paperSize can be an usual name, i.e. \"A4\", or an array of two Number-s specifying the\n            // width/height in points (1pt = 1/72in), or strings including unit, i.e. \"10mm\".  Supported\n            // units are \"mm\", \"cm\", \"in\" and \"pt\".  The default \"auto\" means paper size is determined\n            // by content.\n            paperSize : \"auto\",\n\n            // Export all pages, if applicable\n            allPages: false,\n\n            // True to reverse the paper dimensions if needed such that width is the larger edge.\n            landscape : false,\n\n            // An object containing { left, top, bottom, right } margins with units.\n            margin    : null,\n\n            // Optional information for the PDF Info dictionary; all strings except for the date.\n            title     : null,\n            author    : null,\n            subject   : null,\n            keywords  : null,\n            creator   : \"Kendo UI PDF Generator v.\" + kendo.version,\n\n            // Creation Date; defaults to new Date()\n            date      : null\n        },\n\n        saveAsPDF: function() {\n            var progress = new $.Deferred();\n            var promise = progress.promise();\n            var args = { promise: promise };\n\n            if (this.trigger(\"pdfExport\", args)) {\n                return;\n            }\n\n            var options = this.options.pdf;\n            options.multiPage = options.multiPage || options.allPages;\n\n            this._drawPDF(progress)\n            .then(function(root) {\n                return kendo.drawing.exportPDF(root, options);\n            })\n            .done(function(dataURI) {\n                kendo.saveAs({\n                    dataURI: dataURI,\n                    fileName: options.fileName,\n                    proxyURL: options.proxyURL,\n                    forceProxy: options.forceProxy,\n                    proxyTarget: options.proxyTarget\n                });\n\n                progress.resolve();\n            })\n            .fail(function(err) {\n                progress.reject(err);\n            });\n\n            return promise;\n        },\n\n        _drawPDF: function(progress) {\n            var promise = new $.Deferred();\n\n            kendo.drawing.drawDOM(this.wrapper)\n            .done(function(group) {\n                var args = {\n                    page: group,\n                    pageNumber: 1,\n                    progress: 1,\n                    totalPages: 1\n                };\n\n                progress.notify(args);\n                promise.resolve(args.page);\n            })\n            .fail(function(err) {\n                promise.reject(err);\n            });\n\n            return promise;\n        },\n\n        _drawPDFShadow: function(settings, drawOptions) {\n            settings = settings || {};\n            var wrapper = this.wrapper;\n            var shadow = $(\"<div class='k-pdf-export-shadow'>\");\n\n            // Content will be allowed to take up to 200\" if no width is given.\n            if (settings.width) {\n                shadow.css({\n                    width: settings.width,\n                    overflow: \"visible\"\n                });\n            }\n\n            wrapper.before(shadow);\n            shadow.append(settings.content || wrapper.clone(true, true));\n\n            var defer = $.Deferred();\n\n            /* https://github.com/telerik/kendo/issues/4790 -- We need to\n             * allow a small timeout so that the browser finalizes the\n             * layout of any images here.  Another option would be to pass\n             * forcePageBreak: \"-\" to drawDOM, but that would make it\n             * clone the content as well and look for page breaks;\n             * needless work, so better do it here.\n             */\n            setTimeout(function(){\n                var promise = kendo.drawing.drawDOM(shadow, drawOptions);\n                promise.always(function() {\n                    shadow.remove();\n                }).then(function(){\n                    defer.resolve.apply(defer, arguments);\n                }).fail(function(){\n                    defer.reject.apply(defer, arguments);\n                }).progress(function(){\n                    defer.progress.apply(defer, arguments);\n                });\n            }, 15);\n\n            return defer.promise();\n        }\n    };\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"pdf\",\n        name: \"PDF export\",\n        description: \"PDF Generation framework\",\n        mixin: true,\n        category: \"framework\",\n        depends: [ \"core\", \"drawing\" ]\n    };\n\n}));\n"]}