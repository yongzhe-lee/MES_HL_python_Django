{"version":3,"sources":["raw-js/kendo.expansionpanel.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoexpansionpanel","js","this","$","undefined$1","kendo","window","Widget","ui","keys","extend","encode","htmlEncode","NS","EXPAND","COLLAPSE","COMPLETE","STATEDISABLED","ARIA_DISABLED","ARIA_EXPANDED","ARIA_HIDDEN","EXPANDED","D_NONE","INDICATOR","FOCUSED","headerTemplate","title","subTitle","iconClass","useBareTemplate","ns","elementId","includes","icon","ExpansionPanel","init","element","options","that","headerAttribute","attr","fn","call","_getCollapseIconSelector","_wrapper","_animations","expanded","addClass","wrapper","on","_click","bind","_focus","_blur","_keydown","toggle","notify","events","name","disabled","animation","expand","effects","duration","collapse","height","toggleable","hideExpanderIndicator","expandIconClass","collapseIconClass","headerClass","wrapperClass","header","DOMElement","guid","wrap","parent","template","prepend","_indicator","find","hide","style","cssText","width","contentWrapper","toggleClass","className","css","replace","collapseIconSelector","e","is","stopPropagation","trigger","item","preventDefault","animate","animationSettings","hasCollapseAnimation","reverse","complete","_completeHandler","removeClass","kendoStop","kendoAnimate","key","keyCode","ENTER","SPACEBAR","target","destroy","off","enable","enabled","plugin","jQuery"],"mappings":"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","file":"kendo.expansionpanel.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoexpansionpanel = global.kendoexpansionpanel || {}, global.kendoexpansionpanel.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"expansionpanel\",\n        name: \"ExpansionPanel\",\n        category: \"web\",\n        description: \"The ExpansionPanel provides an expandable details-summary view\",\n        depends: [\"core\", \"icons\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            keys = kendo.keys,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            NS = \".kendoExpansionPanel\",\n            EXPAND = \"expand\",\n            COLLAPSE = \"collapse\",\n            COMPLETE = \"complete\",\n            STATEDISABLED = \"k-disabled\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            EXPANDED = \"k-expanded\",\n            EXPANDER_CONTENT = \"k-expander-content\",\n            EXPANDER_CONTENT_WRAPPER = \"k-expander-content-wrapper\",\n            D_NONE = \"k-d-none\",\n            INDICATOR = \".k-expander-indicator\",\n            FOCUSED = \"k-focus\",\n            CLICK = \"click\",\n            KEYDOWN = \"keydown\",\n            HEIGHT = \"height\",\n\n            headerTemplate = ({ title, subTitle, iconClass, useBareTemplate, ns, elementId }) =>\n                `<div ${!useBareTemplate ? 'class=\"k-expander-header\"' : ''} data-${ns}expander-header role=\"button\" tabindex=\"0\" aria-controls=\"${encode(elementId)}\">` +\n                    (!useBareTemplate ? `<div class=\"k-expander-title\">${encode(title)}</div>` : title) +\n                    '<span class=\"k-spacer\"></span>' +\n                    (!useBareTemplate ? `<div class=\"k-expander-sub-title\">${encode(subTitle)}</div>` : '') +\n                    `<span class=\"k-expander-indicator\">` +\n                        (iconClass && iconClass.includes(\"k-icon\") ? `<span class=\"${encode(iconClass)}\"></span>` : kendo.ui.icon({ icon: iconClass })) +\n                    `</span>` +\n                '</div>';\n\n        var ExpansionPanel = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                var headerAttribute = kendo.attr(\"expander-header\");\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n\n                that._getCollapseIconSelector();\n\n                that._wrapper();\n                that._animations(options);\n\n                that.element.attr(ARIA_HIDDEN, !options.expanded);\n\n                if (!that.options.useBareTemplate) {\n                    that.element.addClass(EXPANDER_CONTENT);\n                }\n\n                that.wrapper\n                    .on(CLICK + NS, '[' + headerAttribute + ']', that._click.bind(that))\n                    .on(\"focusin\" + NS, that._focus.bind(that))\n                    .on(\"focusout\" + NS, that._blur.bind(that))\n                    .on(KEYDOWN + NS, that._keydown.bind(that));\n\n                that.toggle(that.options.expanded, false);\n\n                kendo.notify(that);\n            },\n\n            events: [\n                EXPAND,\n                COLLAPSE,\n                COMPLETE\n            ],\n\n            options: {\n                name: 'ExpansionPanel',\n                disabled: false,\n                expanded: false,\n                animation: {\n                    expand: {\n                        effects: \"expand:vertical\",\n                        duration: 200\n                    },\n                    collapse: { // if collapse animation effects are defined, they will be used instead of expand.reverse\n                        duration: 200\n                    }\n                },\n                height: null,\n                toggleable: true,\n                hideExpanderIndicator: false,\n                expandIconClass: \"chevron-down\",\n                collapseIconClass: \"chevron-up\",\n                title: '',\n                subTitle: '',\n                headerClass: null,\n                wrapperClass: null,\n                useBareTemplate: false\n            },\n\n            _wrapper: function() {\n                var that = this;\n                var element = that.element;\n                var DOMElement = element[0];\n                var wrapper;\n                var header;\n                var elementId = element.attr(\"id\");\n\n                if (!elementId) {\n                    elementId = kendo.guid();\n                    element.attr(\"id\", elementId);\n                }\n\n                wrapper = element.wrap(\"<div class='k-expander\" + (that.options.expanded ? \" \" + EXPANDED : \"\") + \"'></div>\").parent();\n                header = kendo.template(headerTemplate)({\n                    title: that.options.title,\n                    subTitle: that.options.subTitle,\n                    iconClass: that.options.expanded ? that.options.expandIconClass : that.options.collapseIconClass,\n                    useBareTemplate: that.options.useBareTemplate,\n                    ns: kendo.ns,\n                    elementId: elementId + \"_wrapper\"\n                });\n                that.header = $(header);\n                wrapper.prepend(that.header);\n                that._indicator = wrapper.find(INDICATOR + \" span\");\n\n                if (that.options.hideExpanderIndicator) {\n                    wrapper.find(INDICATOR).hide();\n                }\n\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"100%\";\n\n                that.wrapper = wrapper.addClass(that.options.disabled ? STATEDISABLED : '');\n                that.contentWrapper = that.element\n                    .wrap('<div id=\"' + elementId + '_wrapper\"></div>')\n                    .parent()\n                    .addClass(EXPANDER_CONTENT_WRAPPER)\n                    .toggleClass(D_NONE, !that.options.expanded);\n\n                that.header.attr(ARIA_DISABLED, that.options.disabled)\n                            .attr(ARIA_EXPANDED, that.options.expanded);\n\n                if (!that.options.useBareTemplate) {\n                    wrapper.addClass(DOMElement.className);\n                }\n\n                if (that.options.height) {\n                    that.wrapper.css(HEIGHT, that.options.height);\n                }\n\n                if (that.options.headerClass) {\n                    that.header.addClass(that.options.headerClass);\n                }\n\n                if (that.options.wrapperClass) {\n                    that.header.addClass(that.options.wrapperClass);\n                }\n            },\n\n            _animations: function(options) {\n                if (options && (\"animation\" in options) && !options.animation) {\n                    options.animation = { expand: { effects: {} }, collapse: { hide: true, effects: {} } };\n                }\n            },\n\n            _getCollapseIconSelector: function() {\n                const that = this;\n                let collapseIconClass = that.options.collapseIconClass;\n\n                // Due to legacy reasons, some users may have their icons configured as 'k-i-minus' instead of just 'minus'.\n                collapseIconClass = collapseIconClass.replace(\"k-i-\", \"\");\n\n                that.collapseIconSelector = `[class*='-i-${collapseIconClass}']`;\n            },\n\n            _click: function(e) {\n                var that = this;\n                var expanded = that._indicator.is(that.collapseIconSelector);\n                var element = that.element;\n\n                e.stopPropagation();\n\n                if (!that.options.toggleable) {\n                    e.preventDefault();\n                    return;\n                }\n\n                if (!that.trigger( expanded ? COLLAPSE : EXPAND, { item: element[0] })) {\n                    that.toggle();\n                }\n            },\n\n            toggle: function(expand, animate) {\n                var that = this,\n                    animationSettings = that.options.animation,\n                    animation = animationSettings.expand,\n                    hasCollapseAnimation = animationSettings.collapse && \"effects\" in animationSettings.collapse,\n                    collapse = extend({}, animationSettings.expand, animationSettings.collapse),\n                    element = that.element,\n                    wrapper = that.wrapper;\n\n                if (expand !== undefined$1) {\n                    if (animate === false) {\n                        collapse = null;\n                    }\n                } else {\n                    expand = !that._indicator.is(that.collapseIconSelector);\n                }\n\n                if (!hasCollapseAnimation) {\n                    collapse = extend(collapse, { reverse: true });\n                }\n\n                if (!expand) {\n                    animation = extend(collapse, { hide: true });\n\n                    animation.complete = that._completeHandler.bind(that);\n                } else {\n                    animation = extend( { complete: that._completeHandler.bind(that) }, animation );\n                }\n\n                if (expand) {\n                    if (that.options.collapseIconClass.includes(\"k-icon\")) {\n                        that._indicator.removeClass(this.options.expandIconClass);\n                        that._indicator.addClass(this.options.collapseIconClass);\n                    } else {\n                        kendo.ui.icon(that._indicator, { icon: this.options.collapseIconClass });\n                    }\n                    wrapper.addClass(EXPANDED);\n                } else {\n                    if (that.options.expandIconClass.includes(\"k-icon\")) {\n                        that._indicator.removeClass(this.options.collapseIconClass);\n                        that._indicator.addClass(this.options.expandIconClass);\n                    } else {\n                        kendo.ui.icon(that._indicator, { icon: this.options.expandIconClass });\n                    }\n                    wrapper.removeClass(EXPANDED);\n                }\n\n                that.contentWrapper.toggleClass(D_NONE, !expand);\n                element.attr(ARIA_HIDDEN, !expand);\n                that.header.attr(ARIA_EXPANDED, expand);\n\n                that.contentWrapper\n                    .kendoStop(true, true)\n                    .kendoAnimate(animation);\n            },\n\n            _completeHandler: function() {\n                this.trigger(COMPLETE);\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode;\n\n                if ((key == keys.ENTER || key == keys.SPACEBAR) && $(e.target).is(\"[data-expander-header]\")) {\n                    that._click(e);\n                    e.preventDefault();\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n                Widget.fn.destroy.call(that);\n            },\n\n            enable: function(enabled) {\n                this.wrapper.toggleClass(STATEDISABLED, !enabled);\n                this.header.attr(ARIA_DISABLED, !enabled);\n            },\n\n            _blur: function() {\n                var that = this;\n\n                if (that.header) {\n                    that.wrapper.removeClass(FOCUSED);\n                }\n            },\n\n            _focus: function() {\n                var that = this;\n\n                if (that.wrapper) {\n                    that.wrapper.addClass(FOCUSED);\n                }\n            }\n        });\n        ui.plugin(ExpansionPanel);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}